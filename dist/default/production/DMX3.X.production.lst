

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 30 23:17:21 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2
    66                           	psect	text45,local,class=CODE,merge=1,delta=2
    67                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text47,local,class=CODE,merge=1,delta=2
    69                           	psect	text48,local,class=CODE,merge=1,delta=2
    70                           	psect	text49,local,class=CODE,merge=1,delta=2
    71                           	psect	text50,local,class=CODE,merge=1,delta=2
    72                           	psect	text51,local,class=CODE,merge=1,delta=2
    73                           	psect	text52,local,class=CODE,merge=1,delta=2
    74                           	psect	intentry,global,class=CODE,delta=2
    75                           	psect	text54,local,class=CODE,merge=1,delta=2
    76                           	psect	text55,local,class=CODE,merge=1,delta=2
    77                           	psect	text56,local,class=CODE,merge=1,delta=2
    78                           	psect	text57,local,class=CODE,merge=1,delta=2
    79                           	psect	text58,local,class=CODE,merge=1,delta=2
    80                           	psect	text59,local,class=CODE,merge=1,delta=2
    81                           	psect	text60,local,class=CODE,merge=1,delta=2
    82                           	psect	text61,local,class=CODE,merge=1,delta=2
    83                           	psect	text62,local,class=CODE,merge=1,delta=2
    84                           	psect	text63,local,class=CODE,merge=1,delta=2
    85                           	psect	text64,local,class=CODE,merge=1,delta=2
    86                           	psect	text65,local,class=CODE,merge=1,delta=2
    87                           	psect	text66,local,class=CODE,merge=1,delta=2
    88                           	psect	text67,local,class=CODE,merge=1,delta=2
    89                           	psect	text68,local,class=CODE,merge=1,delta=2
    90                           	dabs	1,0xCA0,32
    91                           	dabs	1,0xC20,80
    92                           	dabs	1,0xBA0,80
    93                           	dabs	1,0xB20,80
    94                           	dabs	1,0xAA0,80
    95                           	dabs	1,0xA20,80
    96                           	dabs	1,0x9A0,80
    97                           	dabs	1,0x96F,1
    98                           	dabs	1,0x25EF,0,_input
    99                           	dabs	1,0x7E,2
   100  0000                     
   101                           ; Version 2.05
   102                           ; Generated 20/12/2018 GMT
   103                           ; 
   104                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC16F18446 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  008C                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  008E                     	;# 
   161  008F                     	;# 
   162  0090                     	;# 
   163  0090                     	;# 
   164  0091                     	;# 
   165  0092                     	;# 
   166  0092                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0094                     	;# 
   170  0095                     	;# 
   171  0096                     	;# 
   172  0096                     	;# 
   173  0097                     	;# 
   174  0098                     	;# 
   175  0099                     	;# 
   176  009A                     	;# 
   177  009B                     	;# 
   178  009B                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  009F                     	;# 
   184  010C                     	;# 
   185  010C                     	;# 
   186  010D                     	;# 
   187  010E                     	;# 
   188  010F                     	;# 
   189  010F                     	;# 
   190  0110                     	;# 
   191  0111                     	;# 
   192  0112                     	;# 
   193  0113                     	;# 
   194  0114                     	;# 
   195  0115                     	;# 
   196  0116                     	;# 
   197  0117                     	;# 
   198  0118                     	;# 
   199  0119                     	;# 
   200  0119                     	;# 
   201  0119                     	;# 
   202  011A                     	;# 
   203  011A                     	;# 
   204  011A                     	;# 
   205  011B                     	;# 
   206  011B                     	;# 
   207  011B                     	;# 
   208  011B                     	;# 
   209  011B                     	;# 
   210  011C                     	;# 
   211  011C                     	;# 
   212  011C                     	;# 
   213  011D                     	;# 
   214  011D                     	;# 
   215  011D                     	;# 
   216  011E                     	;# 
   217  011E                     	;# 
   218  011E                     	;# 
   219  011F                     	;# 
   220  011F                     	;# 
   221  011F                     	;# 
   222  011F                     	;# 
   223  011F                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  018E                     	;# 
   227  018F                     	;# 
   228  0190                     	;# 
   229  0191                     	;# 
   230  0192                     	;# 
   231  0196                     	;# 
   232  0197                     	;# 
   233  0198                     	;# 
   234  0199                     	;# 
   235  019A                     	;# 
   236  019B                     	;# 
   237  019C                     	;# 
   238  020C                     	;# 
   239  020D                     	;# 
   240  020E                     	;# 
   241  020E                     	;# 
   242  020F                     	;# 
   243  020F                     	;# 
   244  0210                     	;# 
   245  0210                     	;# 
   246  0211                     	;# 
   247  0211                     	;# 
   248  0212                     	;# 
   249  0213                     	;# 
   250  0214                     	;# 
   251  0214                     	;# 
   252  0215                     	;# 
   253  0215                     	;# 
   254  0216                     	;# 
   255  0216                     	;# 
   256  0217                     	;# 
   257  0217                     	;# 
   258  0218                     	;# 
   259  0219                     	;# 
   260  021A                     	;# 
   261  021A                     	;# 
   262  021B                     	;# 
   263  021B                     	;# 
   264  021C                     	;# 
   265  021C                     	;# 
   266  021D                     	;# 
   267  021D                     	;# 
   268  021E                     	;# 
   269  021F                     	;# 
   270  028C                     	;# 
   271  028C                     	;# 
   272  028D                     	;# 
   273  028D                     	;# 
   274  028E                     	;# 
   275  028F                     	;# 
   276  0290                     	;# 
   277  0291                     	;# 
   278  0292                     	;# 
   279  0292                     	;# 
   280  0293                     	;# 
   281  0293                     	;# 
   282  0294                     	;# 
   283  0295                     	;# 
   284  0296                     	;# 
   285  0297                     	;# 
   286  0298                     	;# 
   287  0298                     	;# 
   288  0299                     	;# 
   289  0299                     	;# 
   290  029A                     	;# 
   291  029B                     	;# 
   292  029C                     	;# 
   293  029D                     	;# 
   294  029F                     	;# 
   295  030C                     	;# 
   296  030C                     	;# 
   297  030D                     	;# 
   298  030E                     	;# 
   299  030F                     	;# 
   300  0310                     	;# 
   301  0310                     	;# 
   302  0311                     	;# 
   303  0312                     	;# 
   304  0313                     	;# 
   305  0314                     	;# 
   306  0314                     	;# 
   307  0315                     	;# 
   308  0316                     	;# 
   309  0317                     	;# 
   310  0318                     	;# 
   311  0318                     	;# 
   312  0319                     	;# 
   313  031A                     	;# 
   314  031B                     	;# 
   315  038C                     	;# 
   316  038C                     	;# 
   317  038D                     	;# 
   318  038E                     	;# 
   319  0390                     	;# 
   320  0390                     	;# 
   321  0391                     	;# 
   322  0392                     	;# 
   323  048C                     	;# 
   324  048C                     	;# 
   325  048D                     	;# 
   326  048E                     	;# 
   327  048F                     	;# 
   328  048F                     	;# 
   329  0490                     	;# 
   330  0491                     	;# 
   331  0492                     	;# 
   332  0492                     	;# 
   333  0493                     	;# 
   334  0494                     	;# 
   335  0495                     	;# 
   336  0495                     	;# 
   337  0496                     	;# 
   338  0497                     	;# 
   339  0498                     	;# 
   340  0499                     	;# 
   341  049A                     	;# 
   342  049B                     	;# 
   343  049C                     	;# 
   344  049D                     	;# 
   345  058C                     	;# 
   346  058C                     	;# 
   347  058D                     	;# 
   348  058E                     	;# 
   349  058F                     	;# 
   350  058F                     	;# 
   351  0590                     	;# 
   352  0591                     	;# 
   353  0592                     	;# 
   354  0593                     	;# 
   355  059C                     	;# 
   356  059C                     	;# 
   357  059D                     	;# 
   358  059D                     	;# 
   359  059E                     	;# 
   360  059F                     	;# 
   361  060C                     	;# 
   362  060C                     	;# 
   363  060D                     	;# 
   364  060D                     	;# 
   365  060E                     	;# 
   366  060F                     	;# 
   367  0610                     	;# 
   368  0611                     	;# 
   369  0612                     	;# 
   370  0613                     	;# 
   371  0614                     	;# 
   372  0616                     	;# 
   373  0616                     	;# 
   374  0617                     	;# 
   375  0617                     	;# 
   376  0618                     	;# 
   377  0619                     	;# 
   378  061A                     	;# 
   379  061B                     	;# 
   380  061C                     	;# 
   381  061D                     	;# 
   382  061E                     	;# 
   383  070C                     	;# 
   384  070D                     	;# 
   385  070E                     	;# 
   386  070F                     	;# 
   387  0710                     	;# 
   388  0711                     	;# 
   389  0712                     	;# 
   390  0713                     	;# 
   391  0714                     	;# 
   392  0716                     	;# 
   393  0717                     	;# 
   394  0718                     	;# 
   395  0719                     	;# 
   396  071A                     	;# 
   397  071B                     	;# 
   398  071C                     	;# 
   399  071D                     	;# 
   400  071E                     	;# 
   401  0796                     	;# 
   402  0797                     	;# 
   403  0798                     	;# 
   404  0799                     	;# 
   405  079A                     	;# 
   406  079B                     	;# 
   407  079C                     	;# 
   408  079D                     	;# 
   409  080C                     	;# 
   410  080D                     	;# 
   411  080E                     	;# 
   412  080F                     	;# 
   413  0810                     	;# 
   414  0811                     	;# 
   415  0812                     	;# 
   416  0813                     	;# 
   417  0814                     	;# 
   418  081A                     	;# 
   419  081A                     	;# 
   420  081B                     	;# 
   421  081C                     	;# 
   422  081C                     	;# 
   423  081D                     	;# 
   424  081E                     	;# 
   425  081F                     	;# 
   426  088C                     	;# 
   427  088D                     	;# 
   428  088E                     	;# 
   429  088F                     	;# 
   430  0890                     	;# 
   431  0891                     	;# 
   432  0892                     	;# 
   433  0893                     	;# 
   434  0895                     	;# 
   435  0896                     	;# 
   436  0897                     	;# 
   437  0898                     	;# 
   438  0899                     	;# 
   439  089A                     	;# 
   440  089B                     	;# 
   441  090C                     	;# 
   442  090E                     	;# 
   443  090F                     	;# 
   444  091F                     	;# 
   445  098F                     	;# 
   446  098F                     	;# 
   447  0990                     	;# 
   448  0991                     	;# 
   449  0992                     	;# 
   450  0993                     	;# 
   451  0994                     	;# 
   452  0995                     	;# 
   453  0996                     	;# 
   454  0997                     	;# 
   455  1E0F                     	;# 
   456  1E10                     	;# 
   457  1E11                     	;# 
   458  1E12                     	;# 
   459  1E13                     	;# 
   460  1E14                     	;# 
   461  1E15                     	;# 
   462  1E16                     	;# 
   463  1E17                     	;# 
   464  1E18                     	;# 
   465  1E19                     	;# 
   466  1E1A                     	;# 
   467  1E1B                     	;# 
   468  1E1C                     	;# 
   469  1E1D                     	;# 
   470  1E1E                     	;# 
   471  1E1F                     	;# 
   472  1E20                     	;# 
   473  1E21                     	;# 
   474  1E22                     	;# 
   475  1E23                     	;# 
   476  1E24                     	;# 
   477  1E25                     	;# 
   478  1E26                     	;# 
   479  1E27                     	;# 
   480  1E28                     	;# 
   481  1E29                     	;# 
   482  1E2A                     	;# 
   483  1E2B                     	;# 
   484  1E2C                     	;# 
   485  1E2D                     	;# 
   486  1E2E                     	;# 
   487  1E2F                     	;# 
   488  1E30                     	;# 
   489  1E31                     	;# 
   490  1E32                     	;# 
   491  1E33                     	;# 
   492  1E34                     	;# 
   493  1E35                     	;# 
   494  1E36                     	;# 
   495  1E37                     	;# 
   496  1E8F                     	;# 
   497  1E90                     	;# 
   498  1E91                     	;# 
   499  1E92                     	;# 
   500  1E93                     	;# 
   501  1E94                     	;# 
   502  1E95                     	;# 
   503  1E96                     	;# 
   504  1E97                     	;# 
   505  1E9C                     	;# 
   506  1E9D                     	;# 
   507  1E9E                     	;# 
   508  1EA1                     	;# 
   509  1EA2                     	;# 
   510  1EA3                     	;# 
   511  1EA4                     	;# 
   512  1EA9                     	;# 
   513  1EAA                     	;# 
   514  1EB1                     	;# 
   515  1EB2                     	;# 
   516  1EB8                     	;# 
   517  1EB9                     	;# 
   518  1EBA                     	;# 
   519  1EBB                     	;# 
   520  1EBC                     	;# 
   521  1EBD                     	;# 
   522  1EBE                     	;# 
   523  1EC3                     	;# 
   524  1EC5                     	;# 
   525  1EC6                     	;# 
   526  1EC7                     	;# 
   527  1EC8                     	;# 
   528  1EC9                     	;# 
   529  1ECA                     	;# 
   530  1ECB                     	;# 
   531  1ECB                     	;# 
   532  1ECB                     	;# 
   533  1ECC                     	;# 
   534  1ECC                     	;# 
   535  1ECC                     	;# 
   536  1F10                     	;# 
   537  1F11                     	;# 
   538  1F12                     	;# 
   539  1F14                     	;# 
   540  1F15                     	;# 
   541  1F1C                     	;# 
   542  1F1D                     	;# 
   543  1F1E                     	;# 
   544  1F1F                     	;# 
   545  1F20                     	;# 
   546  1F21                     	;# 
   547  1F22                     	;# 
   548  1F23                     	;# 
   549  1F24                     	;# 
   550  1F25                     	;# 
   551  1F26                     	;# 
   552  1F27                     	;# 
   553  1F38                     	;# 
   554  1F39                     	;# 
   555  1F3A                     	;# 
   556  1F3B                     	;# 
   557  1F3C                     	;# 
   558  1F3D                     	;# 
   559  1F3E                     	;# 
   560  1F3F                     	;# 
   561  1F43                     	;# 
   562  1F44                     	;# 
   563  1F45                     	;# 
   564  1F46                     	;# 
   565  1F47                     	;# 
   566  1F48                     	;# 
   567  1F49                     	;# 
   568  1F4A                     	;# 
   569  1F4E                     	;# 
   570  1F4F                     	;# 
   571  1F50                     	;# 
   572  1F51                     	;# 
   573  1F52                     	;# 
   574  1F53                     	;# 
   575  1F54                     	;# 
   576  1F55                     	;# 
   577  1FE4                     	;# 
   578  1FE5                     	;# 
   579  1FE6                     	;# 
   580  1FE7                     	;# 
   581  1FE8                     	;# 
   582  1FE8                     	;# 
   583  1FE9                     	;# 
   584  1FEA                     	;# 
   585  1FEB                     	;# 
   586  1FED                     	;# 
   587  1FEE                     	;# 
   588  1FEF                     	;# 
   589  0000                     	;# 
   590  0001                     	;# 
   591  0002                     	;# 
   592  0003                     	;# 
   593  0004                     	;# 
   594  0005                     	;# 
   595  0006                     	;# 
   596  0007                     	;# 
   597  0008                     	;# 
   598  0009                     	;# 
   599  000A                     	;# 
   600  000B                     	;# 
   601  000C                     	;# 
   602  000D                     	;# 
   603  000E                     	;# 
   604  0012                     	;# 
   605  0013                     	;# 
   606  0014                     	;# 
   607  0018                     	;# 
   608  0019                     	;# 
   609  001A                     	;# 
   610  008C                     	;# 
   611  008C                     	;# 
   612  008D                     	;# 
   613  008E                     	;# 
   614  008E                     	;# 
   615  008F                     	;# 
   616  0090                     	;# 
   617  0090                     	;# 
   618  0091                     	;# 
   619  0092                     	;# 
   620  0092                     	;# 
   621  0093                     	;# 
   622  0094                     	;# 
   623  0094                     	;# 
   624  0095                     	;# 
   625  0096                     	;# 
   626  0096                     	;# 
   627  0097                     	;# 
   628  0098                     	;# 
   629  0099                     	;# 
   630  009A                     	;# 
   631  009B                     	;# 
   632  009B                     	;# 
   633  009C                     	;# 
   634  009D                     	;# 
   635  009D                     	;# 
   636  009E                     	;# 
   637  009F                     	;# 
   638  010C                     	;# 
   639  010C                     	;# 
   640  010D                     	;# 
   641  010E                     	;# 
   642  010F                     	;# 
   643  010F                     	;# 
   644  0110                     	;# 
   645  0111                     	;# 
   646  0112                     	;# 
   647  0113                     	;# 
   648  0114                     	;# 
   649  0115                     	;# 
   650  0116                     	;# 
   651  0117                     	;# 
   652  0118                     	;# 
   653  0119                     	;# 
   654  0119                     	;# 
   655  0119                     	;# 
   656  011A                     	;# 
   657  011A                     	;# 
   658  011A                     	;# 
   659  011B                     	;# 
   660  011B                     	;# 
   661  011B                     	;# 
   662  011B                     	;# 
   663  011B                     	;# 
   664  011C                     	;# 
   665  011C                     	;# 
   666  011C                     	;# 
   667  011D                     	;# 
   668  011D                     	;# 
   669  011D                     	;# 
   670  011E                     	;# 
   671  011E                     	;# 
   672  011E                     	;# 
   673  011F                     	;# 
   674  011F                     	;# 
   675  011F                     	;# 
   676  011F                     	;# 
   677  011F                     	;# 
   678  018C                     	;# 
   679  018D                     	;# 
   680  018E                     	;# 
   681  018F                     	;# 
   682  0190                     	;# 
   683  0191                     	;# 
   684  0192                     	;# 
   685  0196                     	;# 
   686  0197                     	;# 
   687  0198                     	;# 
   688  0199                     	;# 
   689  019A                     	;# 
   690  019B                     	;# 
   691  019C                     	;# 
   692  020C                     	;# 
   693  020D                     	;# 
   694  020E                     	;# 
   695  020E                     	;# 
   696  020F                     	;# 
   697  020F                     	;# 
   698  0210                     	;# 
   699  0210                     	;# 
   700  0211                     	;# 
   701  0211                     	;# 
   702  0212                     	;# 
   703  0213                     	;# 
   704  0214                     	;# 
   705  0214                     	;# 
   706  0215                     	;# 
   707  0215                     	;# 
   708  0216                     	;# 
   709  0216                     	;# 
   710  0217                     	;# 
   711  0217                     	;# 
   712  0218                     	;# 
   713  0219                     	;# 
   714  021A                     	;# 
   715  021A                     	;# 
   716  021B                     	;# 
   717  021B                     	;# 
   718  021C                     	;# 
   719  021C                     	;# 
   720  021D                     	;# 
   721  021D                     	;# 
   722  021E                     	;# 
   723  021F                     	;# 
   724  028C                     	;# 
   725  028C                     	;# 
   726  028D                     	;# 
   727  028D                     	;# 
   728  028E                     	;# 
   729  028F                     	;# 
   730  0290                     	;# 
   731  0291                     	;# 
   732  0292                     	;# 
   733  0292                     	;# 
   734  0293                     	;# 
   735  0293                     	;# 
   736  0294                     	;# 
   737  0295                     	;# 
   738  0296                     	;# 
   739  0297                     	;# 
   740  0298                     	;# 
   741  0298                     	;# 
   742  0299                     	;# 
   743  0299                     	;# 
   744  029A                     	;# 
   745  029B                     	;# 
   746  029C                     	;# 
   747  029D                     	;# 
   748  029F                     	;# 
   749  030C                     	;# 
   750  030C                     	;# 
   751  030D                     	;# 
   752  030E                     	;# 
   753  030F                     	;# 
   754  0310                     	;# 
   755  0310                     	;# 
   756  0311                     	;# 
   757  0312                     	;# 
   758  0313                     	;# 
   759  0314                     	;# 
   760  0314                     	;# 
   761  0315                     	;# 
   762  0316                     	;# 
   763  0317                     	;# 
   764  0318                     	;# 
   765  0318                     	;# 
   766  0319                     	;# 
   767  031A                     	;# 
   768  031B                     	;# 
   769  038C                     	;# 
   770  038C                     	;# 
   771  038D                     	;# 
   772  038E                     	;# 
   773  0390                     	;# 
   774  0390                     	;# 
   775  0391                     	;# 
   776  0392                     	;# 
   777  048C                     	;# 
   778  048C                     	;# 
   779  048D                     	;# 
   780  048E                     	;# 
   781  048F                     	;# 
   782  048F                     	;# 
   783  0490                     	;# 
   784  0491                     	;# 
   785  0492                     	;# 
   786  0492                     	;# 
   787  0493                     	;# 
   788  0494                     	;# 
   789  0495                     	;# 
   790  0495                     	;# 
   791  0496                     	;# 
   792  0497                     	;# 
   793  0498                     	;# 
   794  0499                     	;# 
   795  049A                     	;# 
   796  049B                     	;# 
   797  049C                     	;# 
   798  049D                     	;# 
   799  058C                     	;# 
   800  058C                     	;# 
   801  058D                     	;# 
   802  058E                     	;# 
   803  058F                     	;# 
   804  058F                     	;# 
   805  0590                     	;# 
   806  0591                     	;# 
   807  0592                     	;# 
   808  0593                     	;# 
   809  059C                     	;# 
   810  059C                     	;# 
   811  059D                     	;# 
   812  059D                     	;# 
   813  059E                     	;# 
   814  059F                     	;# 
   815  060C                     	;# 
   816  060C                     	;# 
   817  060D                     	;# 
   818  060D                     	;# 
   819  060E                     	;# 
   820  060F                     	;# 
   821  0610                     	;# 
   822  0611                     	;# 
   823  0612                     	;# 
   824  0613                     	;# 
   825  0614                     	;# 
   826  0616                     	;# 
   827  0616                     	;# 
   828  0617                     	;# 
   829  0617                     	;# 
   830  0618                     	;# 
   831  0619                     	;# 
   832  061A                     	;# 
   833  061B                     	;# 
   834  061C                     	;# 
   835  061D                     	;# 
   836  061E                     	;# 
   837  070C                     	;# 
   838  070D                     	;# 
   839  070E                     	;# 
   840  070F                     	;# 
   841  0710                     	;# 
   842  0711                     	;# 
   843  0712                     	;# 
   844  0713                     	;# 
   845  0714                     	;# 
   846  0716                     	;# 
   847  0717                     	;# 
   848  0718                     	;# 
   849  0719                     	;# 
   850  071A                     	;# 
   851  071B                     	;# 
   852  071C                     	;# 
   853  071D                     	;# 
   854  071E                     	;# 
   855  0796                     	;# 
   856  0797                     	;# 
   857  0798                     	;# 
   858  0799                     	;# 
   859  079A                     	;# 
   860  079B                     	;# 
   861  079C                     	;# 
   862  079D                     	;# 
   863  080C                     	;# 
   864  080D                     	;# 
   865  080E                     	;# 
   866  080F                     	;# 
   867  0810                     	;# 
   868  0811                     	;# 
   869  0812                     	;# 
   870  0813                     	;# 
   871  0814                     	;# 
   872  081A                     	;# 
   873  081A                     	;# 
   874  081B                     	;# 
   875  081C                     	;# 
   876  081C                     	;# 
   877  081D                     	;# 
   878  081E                     	;# 
   879  081F                     	;# 
   880  088C                     	;# 
   881  088D                     	;# 
   882  088E                     	;# 
   883  088F                     	;# 
   884  0890                     	;# 
   885  0891                     	;# 
   886  0892                     	;# 
   887  0893                     	;# 
   888  0895                     	;# 
   889  0896                     	;# 
   890  0897                     	;# 
   891  0898                     	;# 
   892  0899                     	;# 
   893  089A                     	;# 
   894  089B                     	;# 
   895  090C                     	;# 
   896  090E                     	;# 
   897  090F                     	;# 
   898  091F                     	;# 
   899  098F                     	;# 
   900  098F                     	;# 
   901  0990                     	;# 
   902  0991                     	;# 
   903  0992                     	;# 
   904  0993                     	;# 
   905  0994                     	;# 
   906  0995                     	;# 
   907  0996                     	;# 
   908  0997                     	;# 
   909  1E0F                     	;# 
   910  1E10                     	;# 
   911  1E11                     	;# 
   912  1E12                     	;# 
   913  1E13                     	;# 
   914  1E14                     	;# 
   915  1E15                     	;# 
   916  1E16                     	;# 
   917  1E17                     	;# 
   918  1E18                     	;# 
   919  1E19                     	;# 
   920  1E1A                     	;# 
   921  1E1B                     	;# 
   922  1E1C                     	;# 
   923  1E1D                     	;# 
   924  1E1E                     	;# 
   925  1E1F                     	;# 
   926  1E20                     	;# 
   927  1E21                     	;# 
   928  1E22                     	;# 
   929  1E23                     	;# 
   930  1E24                     	;# 
   931  1E25                     	;# 
   932  1E26                     	;# 
   933  1E27                     	;# 
   934  1E28                     	;# 
   935  1E29                     	;# 
   936  1E2A                     	;# 
   937  1E2B                     	;# 
   938  1E2C                     	;# 
   939  1E2D                     	;# 
   940  1E2E                     	;# 
   941  1E2F                     	;# 
   942  1E30                     	;# 
   943  1E31                     	;# 
   944  1E32                     	;# 
   945  1E33                     	;# 
   946  1E34                     	;# 
   947  1E35                     	;# 
   948  1E36                     	;# 
   949  1E37                     	;# 
   950  1E8F                     	;# 
   951  1E90                     	;# 
   952  1E91                     	;# 
   953  1E92                     	;# 
   954  1E93                     	;# 
   955  1E94                     	;# 
   956  1E95                     	;# 
   957  1E96                     	;# 
   958  1E97                     	;# 
   959  1E9C                     	;# 
   960  1E9D                     	;# 
   961  1E9E                     	;# 
   962  1EA1                     	;# 
   963  1EA2                     	;# 
   964  1EA3                     	;# 
   965  1EA4                     	;# 
   966  1EA9                     	;# 
   967  1EAA                     	;# 
   968  1EB1                     	;# 
   969  1EB2                     	;# 
   970  1EB8                     	;# 
   971  1EB9                     	;# 
   972  1EBA                     	;# 
   973  1EBB                     	;# 
   974  1EBC                     	;# 
   975  1EBD                     	;# 
   976  1EBE                     	;# 
   977  1EC3                     	;# 
   978  1EC5                     	;# 
   979  1EC6                     	;# 
   980  1EC7                     	;# 
   981  1EC8                     	;# 
   982  1EC9                     	;# 
   983  1ECA                     	;# 
   984  1ECB                     	;# 
   985  1ECB                     	;# 
   986  1ECB                     	;# 
   987  1ECC                     	;# 
   988  1ECC                     	;# 
   989  1ECC                     	;# 
   990  1F10                     	;# 
   991  1F11                     	;# 
   992  1F12                     	;# 
   993  1F14                     	;# 
   994  1F15                     	;# 
   995  1F1C                     	;# 
   996  1F1D                     	;# 
   997  1F1E                     	;# 
   998  1F1F                     	;# 
   999  1F20                     	;# 
  1000  1F21                     	;# 
  1001  1F22                     	;# 
  1002  1F23                     	;# 
  1003  1F24                     	;# 
  1004  1F25                     	;# 
  1005  1F26                     	;# 
  1006  1F27                     	;# 
  1007  1F38                     	;# 
  1008  1F39                     	;# 
  1009  1F3A                     	;# 
  1010  1F3B                     	;# 
  1011  1F3C                     	;# 
  1012  1F3D                     	;# 
  1013  1F3E                     	;# 
  1014  1F3F                     	;# 
  1015  1F43                     	;# 
  1016  1F44                     	;# 
  1017  1F45                     	;# 
  1018  1F46                     	;# 
  1019  1F47                     	;# 
  1020  1F48                     	;# 
  1021  1F49                     	;# 
  1022  1F4A                     	;# 
  1023  1F4E                     	;# 
  1024  1F4F                     	;# 
  1025  1F50                     	;# 
  1026  1F51                     	;# 
  1027  1F52                     	;# 
  1028  1F53                     	;# 
  1029  1F54                     	;# 
  1030  1F55                     	;# 
  1031  1FE4                     	;# 
  1032  1FE5                     	;# 
  1033  1FE6                     	;# 
  1034  1FE7                     	;# 
  1035  1FE8                     	;# 
  1036  1FE8                     	;# 
  1037  1FE9                     	;# 
  1038  1FEA                     	;# 
  1039  1FEB                     	;# 
  1040  1FED                     	;# 
  1041  1FEE                     	;# 
  1042  1FEF                     	;# 
  1043  0000                     	;# 
  1044  0001                     	;# 
  1045  0002                     	;# 
  1046  0003                     	;# 
  1047  0004                     	;# 
  1048  0005                     	;# 
  1049  0006                     	;# 
  1050  0007                     	;# 
  1051  0008                     	;# 
  1052  0009                     	;# 
  1053  000A                     	;# 
  1054  000B                     	;# 
  1055  000C                     	;# 
  1056  000D                     	;# 
  1057  000E                     	;# 
  1058  0012                     	;# 
  1059  0013                     	;# 
  1060  0014                     	;# 
  1061  0018                     	;# 
  1062  0019                     	;# 
  1063  001A                     	;# 
  1064  008C                     	;# 
  1065  008C                     	;# 
  1066  008D                     	;# 
  1067  008E                     	;# 
  1068  008E                     	;# 
  1069  008F                     	;# 
  1070  0090                     	;# 
  1071  0090                     	;# 
  1072  0091                     	;# 
  1073  0092                     	;# 
  1074  0092                     	;# 
  1075  0093                     	;# 
  1076  0094                     	;# 
  1077  0094                     	;# 
  1078  0095                     	;# 
  1079  0096                     	;# 
  1080  0096                     	;# 
  1081  0097                     	;# 
  1082  0098                     	;# 
  1083  0099                     	;# 
  1084  009A                     	;# 
  1085  009B                     	;# 
  1086  009B                     	;# 
  1087  009C                     	;# 
  1088  009D                     	;# 
  1089  009D                     	;# 
  1090  009E                     	;# 
  1091  009F                     	;# 
  1092  010C                     	;# 
  1093  010C                     	;# 
  1094  010D                     	;# 
  1095  010E                     	;# 
  1096  010F                     	;# 
  1097  010F                     	;# 
  1098  0110                     	;# 
  1099  0111                     	;# 
  1100  0112                     	;# 
  1101  0113                     	;# 
  1102  0114                     	;# 
  1103  0115                     	;# 
  1104  0116                     	;# 
  1105  0117                     	;# 
  1106  0118                     	;# 
  1107  0119                     	;# 
  1108  0119                     	;# 
  1109  0119                     	;# 
  1110  011A                     	;# 
  1111  011A                     	;# 
  1112  011A                     	;# 
  1113  011B                     	;# 
  1114  011B                     	;# 
  1115  011B                     	;# 
  1116  011B                     	;# 
  1117  011B                     	;# 
  1118  011C                     	;# 
  1119  011C                     	;# 
  1120  011C                     	;# 
  1121  011D                     	;# 
  1122  011D                     	;# 
  1123  011D                     	;# 
  1124  011E                     	;# 
  1125  011E                     	;# 
  1126  011E                     	;# 
  1127  011F                     	;# 
  1128  011F                     	;# 
  1129  011F                     	;# 
  1130  011F                     	;# 
  1131  011F                     	;# 
  1132  018C                     	;# 
  1133  018D                     	;# 
  1134  018E                     	;# 
  1135  018F                     	;# 
  1136  0190                     	;# 
  1137  0191                     	;# 
  1138  0192                     	;# 
  1139  0196                     	;# 
  1140  0197                     	;# 
  1141  0198                     	;# 
  1142  0199                     	;# 
  1143  019A                     	;# 
  1144  019B                     	;# 
  1145  019C                     	;# 
  1146  020C                     	;# 
  1147  020D                     	;# 
  1148  020E                     	;# 
  1149  020E                     	;# 
  1150  020F                     	;# 
  1151  020F                     	;# 
  1152  0210                     	;# 
  1153  0210                     	;# 
  1154  0211                     	;# 
  1155  0211                     	;# 
  1156  0212                     	;# 
  1157  0213                     	;# 
  1158  0214                     	;# 
  1159  0214                     	;# 
  1160  0215                     	;# 
  1161  0215                     	;# 
  1162  0216                     	;# 
  1163  0216                     	;# 
  1164  0217                     	;# 
  1165  0217                     	;# 
  1166  0218                     	;# 
  1167  0219                     	;# 
  1168  021A                     	;# 
  1169  021A                     	;# 
  1170  021B                     	;# 
  1171  021B                     	;# 
  1172  021C                     	;# 
  1173  021C                     	;# 
  1174  021D                     	;# 
  1175  021D                     	;# 
  1176  021E                     	;# 
  1177  021F                     	;# 
  1178  028C                     	;# 
  1179  028C                     	;# 
  1180  028D                     	;# 
  1181  028D                     	;# 
  1182  028E                     	;# 
  1183  028F                     	;# 
  1184  0290                     	;# 
  1185  0291                     	;# 
  1186  0292                     	;# 
  1187  0292                     	;# 
  1188  0293                     	;# 
  1189  0293                     	;# 
  1190  0294                     	;# 
  1191  0295                     	;# 
  1192  0296                     	;# 
  1193  0297                     	;# 
  1194  0298                     	;# 
  1195  0298                     	;# 
  1196  0299                     	;# 
  1197  0299                     	;# 
  1198  029A                     	;# 
  1199  029B                     	;# 
  1200  029C                     	;# 
  1201  029D                     	;# 
  1202  029F                     	;# 
  1203  030C                     	;# 
  1204  030C                     	;# 
  1205  030D                     	;# 
  1206  030E                     	;# 
  1207  030F                     	;# 
  1208  0310                     	;# 
  1209  0310                     	;# 
  1210  0311                     	;# 
  1211  0312                     	;# 
  1212  0313                     	;# 
  1213  0314                     	;# 
  1214  0314                     	;# 
  1215  0315                     	;# 
  1216  0316                     	;# 
  1217  0317                     	;# 
  1218  0318                     	;# 
  1219  0318                     	;# 
  1220  0319                     	;# 
  1221  031A                     	;# 
  1222  031B                     	;# 
  1223  038C                     	;# 
  1224  038C                     	;# 
  1225  038D                     	;# 
  1226  038E                     	;# 
  1227  0390                     	;# 
  1228  0390                     	;# 
  1229  0391                     	;# 
  1230  0392                     	;# 
  1231  048C                     	;# 
  1232  048C                     	;# 
  1233  048D                     	;# 
  1234  048E                     	;# 
  1235  048F                     	;# 
  1236  048F                     	;# 
  1237  0490                     	;# 
  1238  0491                     	;# 
  1239  0492                     	;# 
  1240  0492                     	;# 
  1241  0493                     	;# 
  1242  0494                     	;# 
  1243  0495                     	;# 
  1244  0495                     	;# 
  1245  0496                     	;# 
  1246  0497                     	;# 
  1247  0498                     	;# 
  1248  0499                     	;# 
  1249  049A                     	;# 
  1250  049B                     	;# 
  1251  049C                     	;# 
  1252  049D                     	;# 
  1253  058C                     	;# 
  1254  058C                     	;# 
  1255  058D                     	;# 
  1256  058E                     	;# 
  1257  058F                     	;# 
  1258  058F                     	;# 
  1259  0590                     	;# 
  1260  0591                     	;# 
  1261  0592                     	;# 
  1262  0593                     	;# 
  1263  059C                     	;# 
  1264  059C                     	;# 
  1265  059D                     	;# 
  1266  059D                     	;# 
  1267  059E                     	;# 
  1268  059F                     	;# 
  1269  060C                     	;# 
  1270  060C                     	;# 
  1271  060D                     	;# 
  1272  060D                     	;# 
  1273  060E                     	;# 
  1274  060F                     	;# 
  1275  0610                     	;# 
  1276  0611                     	;# 
  1277  0612                     	;# 
  1278  0613                     	;# 
  1279  0614                     	;# 
  1280  0616                     	;# 
  1281  0616                     	;# 
  1282  0617                     	;# 
  1283  0617                     	;# 
  1284  0618                     	;# 
  1285  0619                     	;# 
  1286  061A                     	;# 
  1287  061B                     	;# 
  1288  061C                     	;# 
  1289  061D                     	;# 
  1290  061E                     	;# 
  1291  070C                     	;# 
  1292  070D                     	;# 
  1293  070E                     	;# 
  1294  070F                     	;# 
  1295  0710                     	;# 
  1296  0711                     	;# 
  1297  0712                     	;# 
  1298  0713                     	;# 
  1299  0714                     	;# 
  1300  0716                     	;# 
  1301  0717                     	;# 
  1302  0718                     	;# 
  1303  0719                     	;# 
  1304  071A                     	;# 
  1305  071B                     	;# 
  1306  071C                     	;# 
  1307  071D                     	;# 
  1308  071E                     	;# 
  1309  0796                     	;# 
  1310  0797                     	;# 
  1311  0798                     	;# 
  1312  0799                     	;# 
  1313  079A                     	;# 
  1314  079B                     	;# 
  1315  079C                     	;# 
  1316  079D                     	;# 
  1317  080C                     	;# 
  1318  080D                     	;# 
  1319  080E                     	;# 
  1320  080F                     	;# 
  1321  0810                     	;# 
  1322  0811                     	;# 
  1323  0812                     	;# 
  1324  0813                     	;# 
  1325  0814                     	;# 
  1326  081A                     	;# 
  1327  081A                     	;# 
  1328  081B                     	;# 
  1329  081C                     	;# 
  1330  081C                     	;# 
  1331  081D                     	;# 
  1332  081E                     	;# 
  1333  081F                     	;# 
  1334  088C                     	;# 
  1335  088D                     	;# 
  1336  088E                     	;# 
  1337  088F                     	;# 
  1338  0890                     	;# 
  1339  0891                     	;# 
  1340  0892                     	;# 
  1341  0893                     	;# 
  1342  0895                     	;# 
  1343  0896                     	;# 
  1344  0897                     	;# 
  1345  0898                     	;# 
  1346  0899                     	;# 
  1347  089A                     	;# 
  1348  089B                     	;# 
  1349  090C                     	;# 
  1350  090E                     	;# 
  1351  090F                     	;# 
  1352  091F                     	;# 
  1353  098F                     	;# 
  1354  098F                     	;# 
  1355  0990                     	;# 
  1356  0991                     	;# 
  1357  0992                     	;# 
  1358  0993                     	;# 
  1359  0994                     	;# 
  1360  0995                     	;# 
  1361  0996                     	;# 
  1362  0997                     	;# 
  1363  1E0F                     	;# 
  1364  1E10                     	;# 
  1365  1E11                     	;# 
  1366  1E12                     	;# 
  1367  1E13                     	;# 
  1368  1E14                     	;# 
  1369  1E15                     	;# 
  1370  1E16                     	;# 
  1371  1E17                     	;# 
  1372  1E18                     	;# 
  1373  1E19                     	;# 
  1374  1E1A                     	;# 
  1375  1E1B                     	;# 
  1376  1E1C                     	;# 
  1377  1E1D                     	;# 
  1378  1E1E                     	;# 
  1379  1E1F                     	;# 
  1380  1E20                     	;# 
  1381  1E21                     	;# 
  1382  1E22                     	;# 
  1383  1E23                     	;# 
  1384  1E24                     	;# 
  1385  1E25                     	;# 
  1386  1E26                     	;# 
  1387  1E27                     	;# 
  1388  1E28                     	;# 
  1389  1E29                     	;# 
  1390  1E2A                     	;# 
  1391  1E2B                     	;# 
  1392  1E2C                     	;# 
  1393  1E2D                     	;# 
  1394  1E2E                     	;# 
  1395  1E2F                     	;# 
  1396  1E30                     	;# 
  1397  1E31                     	;# 
  1398  1E32                     	;# 
  1399  1E33                     	;# 
  1400  1E34                     	;# 
  1401  1E35                     	;# 
  1402  1E36                     	;# 
  1403  1E37                     	;# 
  1404  1E8F                     	;# 
  1405  1E90                     	;# 
  1406  1E91                     	;# 
  1407  1E92                     	;# 
  1408  1E93                     	;# 
  1409  1E94                     	;# 
  1410  1E95                     	;# 
  1411  1E96                     	;# 
  1412  1E97                     	;# 
  1413  1E9C                     	;# 
  1414  1E9D                     	;# 
  1415  1E9E                     	;# 
  1416  1EA1                     	;# 
  1417  1EA2                     	;# 
  1418  1EA3                     	;# 
  1419  1EA4                     	;# 
  1420  1EA9                     	;# 
  1421  1EAA                     	;# 
  1422  1EB1                     	;# 
  1423  1EB2                     	;# 
  1424  1EB8                     	;# 
  1425  1EB9                     	;# 
  1426  1EBA                     	;# 
  1427  1EBB                     	;# 
  1428  1EBC                     	;# 
  1429  1EBD                     	;# 
  1430  1EBE                     	;# 
  1431  1EC3                     	;# 
  1432  1EC5                     	;# 
  1433  1EC6                     	;# 
  1434  1EC7                     	;# 
  1435  1EC8                     	;# 
  1436  1EC9                     	;# 
  1437  1ECA                     	;# 
  1438  1ECB                     	;# 
  1439  1ECB                     	;# 
  1440  1ECB                     	;# 
  1441  1ECC                     	;# 
  1442  1ECC                     	;# 
  1443  1ECC                     	;# 
  1444  1F10                     	;# 
  1445  1F11                     	;# 
  1446  1F12                     	;# 
  1447  1F14                     	;# 
  1448  1F15                     	;# 
  1449  1F1C                     	;# 
  1450  1F1D                     	;# 
  1451  1F1E                     	;# 
  1452  1F1F                     	;# 
  1453  1F20                     	;# 
  1454  1F21                     	;# 
  1455  1F22                     	;# 
  1456  1F23                     	;# 
  1457  1F24                     	;# 
  1458  1F25                     	;# 
  1459  1F26                     	;# 
  1460  1F27                     	;# 
  1461  1F38                     	;# 
  1462  1F39                     	;# 
  1463  1F3A                     	;# 
  1464  1F3B                     	;# 
  1465  1F3C                     	;# 
  1466  1F3D                     	;# 
  1467  1F3E                     	;# 
  1468  1F3F                     	;# 
  1469  1F43                     	;# 
  1470  1F44                     	;# 
  1471  1F45                     	;# 
  1472  1F46                     	;# 
  1473  1F47                     	;# 
  1474  1F48                     	;# 
  1475  1F49                     	;# 
  1476  1F4A                     	;# 
  1477  1F4E                     	;# 
  1478  1F4F                     	;# 
  1479  1F50                     	;# 
  1480  1F51                     	;# 
  1481  1F52                     	;# 
  1482  1F53                     	;# 
  1483  1F54                     	;# 
  1484  1F55                     	;# 
  1485  1FE4                     	;# 
  1486  1FE5                     	;# 
  1487  1FE6                     	;# 
  1488  1FE7                     	;# 
  1489  1FE8                     	;# 
  1490  1FE8                     	;# 
  1491  1FE9                     	;# 
  1492  1FEA                     	;# 
  1493  1FEB                     	;# 
  1494  1FED                     	;# 
  1495  1FEE                     	;# 
  1496  1FEF                     	;# 
  1497  0000                     	;# 
  1498  0001                     	;# 
  1499  0002                     	;# 
  1500  0003                     	;# 
  1501  0004                     	;# 
  1502  0005                     	;# 
  1503  0006                     	;# 
  1504  0007                     	;# 
  1505  0008                     	;# 
  1506  0009                     	;# 
  1507  000A                     	;# 
  1508  000B                     	;# 
  1509  000C                     	;# 
  1510  000D                     	;# 
  1511  000E                     	;# 
  1512  0012                     	;# 
  1513  0013                     	;# 
  1514  0014                     	;# 
  1515  0018                     	;# 
  1516  0019                     	;# 
  1517  001A                     	;# 
  1518  008C                     	;# 
  1519  008C                     	;# 
  1520  008D                     	;# 
  1521  008E                     	;# 
  1522  008E                     	;# 
  1523  008F                     	;# 
  1524  0090                     	;# 
  1525  0090                     	;# 
  1526  0091                     	;# 
  1527  0092                     	;# 
  1528  0092                     	;# 
  1529  0093                     	;# 
  1530  0094                     	;# 
  1531  0094                     	;# 
  1532  0095                     	;# 
  1533  0096                     	;# 
  1534  0096                     	;# 
  1535  0097                     	;# 
  1536  0098                     	;# 
  1537  0099                     	;# 
  1538  009A                     	;# 
  1539  009B                     	;# 
  1540  009B                     	;# 
  1541  009C                     	;# 
  1542  009D                     	;# 
  1543  009D                     	;# 
  1544  009E                     	;# 
  1545  009F                     	;# 
  1546  010C                     	;# 
  1547  010C                     	;# 
  1548  010D                     	;# 
  1549  010E                     	;# 
  1550  010F                     	;# 
  1551  010F                     	;# 
  1552  0110                     	;# 
  1553  0111                     	;# 
  1554  0112                     	;# 
  1555  0113                     	;# 
  1556  0114                     	;# 
  1557  0115                     	;# 
  1558  0116                     	;# 
  1559  0117                     	;# 
  1560  0118                     	;# 
  1561  0119                     	;# 
  1562  0119                     	;# 
  1563  0119                     	;# 
  1564  011A                     	;# 
  1565  011A                     	;# 
  1566  011A                     	;# 
  1567  011B                     	;# 
  1568  011B                     	;# 
  1569  011B                     	;# 
  1570  011B                     	;# 
  1571  011B                     	;# 
  1572  011C                     	;# 
  1573  011C                     	;# 
  1574  011C                     	;# 
  1575  011D                     	;# 
  1576  011D                     	;# 
  1577  011D                     	;# 
  1578  011E                     	;# 
  1579  011E                     	;# 
  1580  011E                     	;# 
  1581  011F                     	;# 
  1582  011F                     	;# 
  1583  011F                     	;# 
  1584  011F                     	;# 
  1585  011F                     	;# 
  1586  018C                     	;# 
  1587  018D                     	;# 
  1588  018E                     	;# 
  1589  018F                     	;# 
  1590  0190                     	;# 
  1591  0191                     	;# 
  1592  0192                     	;# 
  1593  0196                     	;# 
  1594  0197                     	;# 
  1595  0198                     	;# 
  1596  0199                     	;# 
  1597  019A                     	;# 
  1598  019B                     	;# 
  1599  019C                     	;# 
  1600  020C                     	;# 
  1601  020D                     	;# 
  1602  020E                     	;# 
  1603  020E                     	;# 
  1604  020F                     	;# 
  1605  020F                     	;# 
  1606  0210                     	;# 
  1607  0210                     	;# 
  1608  0211                     	;# 
  1609  0211                     	;# 
  1610  0212                     	;# 
  1611  0213                     	;# 
  1612  0214                     	;# 
  1613  0214                     	;# 
  1614  0215                     	;# 
  1615  0215                     	;# 
  1616  0216                     	;# 
  1617  0216                     	;# 
  1618  0217                     	;# 
  1619  0217                     	;# 
  1620  0218                     	;# 
  1621  0219                     	;# 
  1622  021A                     	;# 
  1623  021A                     	;# 
  1624  021B                     	;# 
  1625  021B                     	;# 
  1626  021C                     	;# 
  1627  021C                     	;# 
  1628  021D                     	;# 
  1629  021D                     	;# 
  1630  021E                     	;# 
  1631  021F                     	;# 
  1632  028C                     	;# 
  1633  028C                     	;# 
  1634  028D                     	;# 
  1635  028D                     	;# 
  1636  028E                     	;# 
  1637  028F                     	;# 
  1638  0290                     	;# 
  1639  0291                     	;# 
  1640  0292                     	;# 
  1641  0292                     	;# 
  1642  0293                     	;# 
  1643  0293                     	;# 
  1644  0294                     	;# 
  1645  0295                     	;# 
  1646  0296                     	;# 
  1647  0297                     	;# 
  1648  0298                     	;# 
  1649  0298                     	;# 
  1650  0299                     	;# 
  1651  0299                     	;# 
  1652  029A                     	;# 
  1653  029B                     	;# 
  1654  029C                     	;# 
  1655  029D                     	;# 
  1656  029F                     	;# 
  1657  030C                     	;# 
  1658  030C                     	;# 
  1659  030D                     	;# 
  1660  030E                     	;# 
  1661  030F                     	;# 
  1662  0310                     	;# 
  1663  0310                     	;# 
  1664  0311                     	;# 
  1665  0312                     	;# 
  1666  0313                     	;# 
  1667  0314                     	;# 
  1668  0314                     	;# 
  1669  0315                     	;# 
  1670  0316                     	;# 
  1671  0317                     	;# 
  1672  0318                     	;# 
  1673  0318                     	;# 
  1674  0319                     	;# 
  1675  031A                     	;# 
  1676  031B                     	;# 
  1677  038C                     	;# 
  1678  038C                     	;# 
  1679  038D                     	;# 
  1680  038E                     	;# 
  1681  0390                     	;# 
  1682  0390                     	;# 
  1683  0391                     	;# 
  1684  0392                     	;# 
  1685  048C                     	;# 
  1686  048C                     	;# 
  1687  048D                     	;# 
  1688  048E                     	;# 
  1689  048F                     	;# 
  1690  048F                     	;# 
  1691  0490                     	;# 
  1692  0491                     	;# 
  1693  0492                     	;# 
  1694  0492                     	;# 
  1695  0493                     	;# 
  1696  0494                     	;# 
  1697  0495                     	;# 
  1698  0495                     	;# 
  1699  0496                     	;# 
  1700  0497                     	;# 
  1701  0498                     	;# 
  1702  0499                     	;# 
  1703  049A                     	;# 
  1704  049B                     	;# 
  1705  049C                     	;# 
  1706  049D                     	;# 
  1707  058C                     	;# 
  1708  058C                     	;# 
  1709  058D                     	;# 
  1710  058E                     	;# 
  1711  058F                     	;# 
  1712  058F                     	;# 
  1713  0590                     	;# 
  1714  0591                     	;# 
  1715  0592                     	;# 
  1716  0593                     	;# 
  1717  059C                     	;# 
  1718  059C                     	;# 
  1719  059D                     	;# 
  1720  059D                     	;# 
  1721  059E                     	;# 
  1722  059F                     	;# 
  1723  060C                     	;# 
  1724  060C                     	;# 
  1725  060D                     	;# 
  1726  060D                     	;# 
  1727  060E                     	;# 
  1728  060F                     	;# 
  1729  0610                     	;# 
  1730  0611                     	;# 
  1731  0612                     	;# 
  1732  0613                     	;# 
  1733  0614                     	;# 
  1734  0616                     	;# 
  1735  0616                     	;# 
  1736  0617                     	;# 
  1737  0617                     	;# 
  1738  0618                     	;# 
  1739  0619                     	;# 
  1740  061A                     	;# 
  1741  061B                     	;# 
  1742  061C                     	;# 
  1743  061D                     	;# 
  1744  061E                     	;# 
  1745  070C                     	;# 
  1746  070D                     	;# 
  1747  070E                     	;# 
  1748  070F                     	;# 
  1749  0710                     	;# 
  1750  0711                     	;# 
  1751  0712                     	;# 
  1752  0713                     	;# 
  1753  0714                     	;# 
  1754  0716                     	;# 
  1755  0717                     	;# 
  1756  0718                     	;# 
  1757  0719                     	;# 
  1758  071A                     	;# 
  1759  071B                     	;# 
  1760  071C                     	;# 
  1761  071D                     	;# 
  1762  071E                     	;# 
  1763  0796                     	;# 
  1764  0797                     	;# 
  1765  0798                     	;# 
  1766  0799                     	;# 
  1767  079A                     	;# 
  1768  079B                     	;# 
  1769  079C                     	;# 
  1770  079D                     	;# 
  1771  080C                     	;# 
  1772  080D                     	;# 
  1773  080E                     	;# 
  1774  080F                     	;# 
  1775  0810                     	;# 
  1776  0811                     	;# 
  1777  0812                     	;# 
  1778  0813                     	;# 
  1779  0814                     	;# 
  1780  081A                     	;# 
  1781  081A                     	;# 
  1782  081B                     	;# 
  1783  081C                     	;# 
  1784  081C                     	;# 
  1785  081D                     	;# 
  1786  081E                     	;# 
  1787  081F                     	;# 
  1788  088C                     	;# 
  1789  088D                     	;# 
  1790  088E                     	;# 
  1791  088F                     	;# 
  1792  0890                     	;# 
  1793  0891                     	;# 
  1794  0892                     	;# 
  1795  0893                     	;# 
  1796  0895                     	;# 
  1797  0896                     	;# 
  1798  0897                     	;# 
  1799  0898                     	;# 
  1800  0899                     	;# 
  1801  089A                     	;# 
  1802  089B                     	;# 
  1803  090C                     	;# 
  1804  090E                     	;# 
  1805  090F                     	;# 
  1806  091F                     	;# 
  1807  098F                     	;# 
  1808  098F                     	;# 
  1809  0990                     	;# 
  1810  0991                     	;# 
  1811  0992                     	;# 
  1812  0993                     	;# 
  1813  0994                     	;# 
  1814  0995                     	;# 
  1815  0996                     	;# 
  1816  0997                     	;# 
  1817  1E0F                     	;# 
  1818  1E10                     	;# 
  1819  1E11                     	;# 
  1820  1E12                     	;# 
  1821  1E13                     	;# 
  1822  1E14                     	;# 
  1823  1E15                     	;# 
  1824  1E16                     	;# 
  1825  1E17                     	;# 
  1826  1E18                     	;# 
  1827  1E19                     	;# 
  1828  1E1A                     	;# 
  1829  1E1B                     	;# 
  1830  1E1C                     	;# 
  1831  1E1D                     	;# 
  1832  1E1E                     	;# 
  1833  1E1F                     	;# 
  1834  1E20                     	;# 
  1835  1E21                     	;# 
  1836  1E22                     	;# 
  1837  1E23                     	;# 
  1838  1E24                     	;# 
  1839  1E25                     	;# 
  1840  1E26                     	;# 
  1841  1E27                     	;# 
  1842  1E28                     	;# 
  1843  1E29                     	;# 
  1844  1E2A                     	;# 
  1845  1E2B                     	;# 
  1846  1E2C                     	;# 
  1847  1E2D                     	;# 
  1848  1E2E                     	;# 
  1849  1E2F                     	;# 
  1850  1E30                     	;# 
  1851  1E31                     	;# 
  1852  1E32                     	;# 
  1853  1E33                     	;# 
  1854  1E34                     	;# 
  1855  1E35                     	;# 
  1856  1E36                     	;# 
  1857  1E37                     	;# 
  1858  1E8F                     	;# 
  1859  1E90                     	;# 
  1860  1E91                     	;# 
  1861  1E92                     	;# 
  1862  1E93                     	;# 
  1863  1E94                     	;# 
  1864  1E95                     	;# 
  1865  1E96                     	;# 
  1866  1E97                     	;# 
  1867  1E9C                     	;# 
  1868  1E9D                     	;# 
  1869  1E9E                     	;# 
  1870  1EA1                     	;# 
  1871  1EA2                     	;# 
  1872  1EA3                     	;# 
  1873  1EA4                     	;# 
  1874  1EA9                     	;# 
  1875  1EAA                     	;# 
  1876  1EB1                     	;# 
  1877  1EB2                     	;# 
  1878  1EB8                     	;# 
  1879  1EB9                     	;# 
  1880  1EBA                     	;# 
  1881  1EBB                     	;# 
  1882  1EBC                     	;# 
  1883  1EBD                     	;# 
  1884  1EBE                     	;# 
  1885  1EC3                     	;# 
  1886  1EC5                     	;# 
  1887  1EC6                     	;# 
  1888  1EC7                     	;# 
  1889  1EC8                     	;# 
  1890  1EC9                     	;# 
  1891  1ECA                     	;# 
  1892  1ECB                     	;# 
  1893  1ECB                     	;# 
  1894  1ECB                     	;# 
  1895  1ECC                     	;# 
  1896  1ECC                     	;# 
  1897  1ECC                     	;# 
  1898  1F10                     	;# 
  1899  1F11                     	;# 
  1900  1F12                     	;# 
  1901  1F14                     	;# 
  1902  1F15                     	;# 
  1903  1F1C                     	;# 
  1904  1F1D                     	;# 
  1905  1F1E                     	;# 
  1906  1F1F                     	;# 
  1907  1F20                     	;# 
  1908  1F21                     	;# 
  1909  1F22                     	;# 
  1910  1F23                     	;# 
  1911  1F24                     	;# 
  1912  1F25                     	;# 
  1913  1F26                     	;# 
  1914  1F27                     	;# 
  1915  1F38                     	;# 
  1916  1F39                     	;# 
  1917  1F3A                     	;# 
  1918  1F3B                     	;# 
  1919  1F3C                     	;# 
  1920  1F3D                     	;# 
  1921  1F3E                     	;# 
  1922  1F3F                     	;# 
  1923  1F43                     	;# 
  1924  1F44                     	;# 
  1925  1F45                     	;# 
  1926  1F46                     	;# 
  1927  1F47                     	;# 
  1928  1F48                     	;# 
  1929  1F49                     	;# 
  1930  1F4A                     	;# 
  1931  1F4E                     	;# 
  1932  1F4F                     	;# 
  1933  1F50                     	;# 
  1934  1F51                     	;# 
  1935  1F52                     	;# 
  1936  1F53                     	;# 
  1937  1F54                     	;# 
  1938  1F55                     	;# 
  1939  1FE4                     	;# 
  1940  1FE5                     	;# 
  1941  1FE6                     	;# 
  1942  1FE7                     	;# 
  1943  1FE8                     	;# 
  1944  1FE8                     	;# 
  1945  1FE9                     	;# 
  1946  1FEA                     	;# 
  1947  1FEB                     	;# 
  1948  1FED                     	;# 
  1949  1FEE                     	;# 
  1950  1FEF                     	;# 
  1951  0000                     	;# 
  1952  0001                     	;# 
  1953  0002                     	;# 
  1954  0003                     	;# 
  1955  0004                     	;# 
  1956  0005                     	;# 
  1957  0006                     	;# 
  1958  0007                     	;# 
  1959  0008                     	;# 
  1960  0009                     	;# 
  1961  000A                     	;# 
  1962  000B                     	;# 
  1963  000C                     	;# 
  1964  000D                     	;# 
  1965  000E                     	;# 
  1966  0012                     	;# 
  1967  0013                     	;# 
  1968  0014                     	;# 
  1969  0018                     	;# 
  1970  0019                     	;# 
  1971  001A                     	;# 
  1972  008C                     	;# 
  1973  008C                     	;# 
  1974  008D                     	;# 
  1975  008E                     	;# 
  1976  008E                     	;# 
  1977  008F                     	;# 
  1978  0090                     	;# 
  1979  0090                     	;# 
  1980  0091                     	;# 
  1981  0092                     	;# 
  1982  0092                     	;# 
  1983  0093                     	;# 
  1984  0094                     	;# 
  1985  0094                     	;# 
  1986  0095                     	;# 
  1987  0096                     	;# 
  1988  0096                     	;# 
  1989  0097                     	;# 
  1990  0098                     	;# 
  1991  0099                     	;# 
  1992  009A                     	;# 
  1993  009B                     	;# 
  1994  009B                     	;# 
  1995  009C                     	;# 
  1996  009D                     	;# 
  1997  009D                     	;# 
  1998  009E                     	;# 
  1999  009F                     	;# 
  2000  010C                     	;# 
  2001  010C                     	;# 
  2002  010D                     	;# 
  2003  010E                     	;# 
  2004  010F                     	;# 
  2005  010F                     	;# 
  2006  0110                     	;# 
  2007  0111                     	;# 
  2008  0112                     	;# 
  2009  0113                     	;# 
  2010  0114                     	;# 
  2011  0115                     	;# 
  2012  0116                     	;# 
  2013  0117                     	;# 
  2014  0118                     	;# 
  2015  0119                     	;# 
  2016  0119                     	;# 
  2017  0119                     	;# 
  2018  011A                     	;# 
  2019  011A                     	;# 
  2020  011A                     	;# 
  2021  011B                     	;# 
  2022  011B                     	;# 
  2023  011B                     	;# 
  2024  011B                     	;# 
  2025  011B                     	;# 
  2026  011C                     	;# 
  2027  011C                     	;# 
  2028  011C                     	;# 
  2029  011D                     	;# 
  2030  011D                     	;# 
  2031  011D                     	;# 
  2032  011E                     	;# 
  2033  011E                     	;# 
  2034  011E                     	;# 
  2035  011F                     	;# 
  2036  011F                     	;# 
  2037  011F                     	;# 
  2038  011F                     	;# 
  2039  011F                     	;# 
  2040  018C                     	;# 
  2041  018D                     	;# 
  2042  018E                     	;# 
  2043  018F                     	;# 
  2044  0190                     	;# 
  2045  0191                     	;# 
  2046  0192                     	;# 
  2047  0196                     	;# 
  2048  0197                     	;# 
  2049  0198                     	;# 
  2050  0199                     	;# 
  2051  019A                     	;# 
  2052  019B                     	;# 
  2053  019C                     	;# 
  2054  020C                     	;# 
  2055  020D                     	;# 
  2056  020E                     	;# 
  2057  020E                     	;# 
  2058  020F                     	;# 
  2059  020F                     	;# 
  2060  0210                     	;# 
  2061  0210                     	;# 
  2062  0211                     	;# 
  2063  0211                     	;# 
  2064  0212                     	;# 
  2065  0213                     	;# 
  2066  0214                     	;# 
  2067  0214                     	;# 
  2068  0215                     	;# 
  2069  0215                     	;# 
  2070  0216                     	;# 
  2071  0216                     	;# 
  2072  0217                     	;# 
  2073  0217                     	;# 
  2074  0218                     	;# 
  2075  0219                     	;# 
  2076  021A                     	;# 
  2077  021A                     	;# 
  2078  021B                     	;# 
  2079  021B                     	;# 
  2080  021C                     	;# 
  2081  021C                     	;# 
  2082  021D                     	;# 
  2083  021D                     	;# 
  2084  021E                     	;# 
  2085  021F                     	;# 
  2086  028C                     	;# 
  2087  028C                     	;# 
  2088  028D                     	;# 
  2089  028D                     	;# 
  2090  028E                     	;# 
  2091  028F                     	;# 
  2092  0290                     	;# 
  2093  0291                     	;# 
  2094  0292                     	;# 
  2095  0292                     	;# 
  2096  0293                     	;# 
  2097  0293                     	;# 
  2098  0294                     	;# 
  2099  0295                     	;# 
  2100  0296                     	;# 
  2101  0297                     	;# 
  2102  0298                     	;# 
  2103  0298                     	;# 
  2104  0299                     	;# 
  2105  0299                     	;# 
  2106  029A                     	;# 
  2107  029B                     	;# 
  2108  029C                     	;# 
  2109  029D                     	;# 
  2110  029F                     	;# 
  2111  030C                     	;# 
  2112  030C                     	;# 
  2113  030D                     	;# 
  2114  030E                     	;# 
  2115  030F                     	;# 
  2116  0310                     	;# 
  2117  0310                     	;# 
  2118  0311                     	;# 
  2119  0312                     	;# 
  2120  0313                     	;# 
  2121  0314                     	;# 
  2122  0314                     	;# 
  2123  0315                     	;# 
  2124  0316                     	;# 
  2125  0317                     	;# 
  2126  0318                     	;# 
  2127  0318                     	;# 
  2128  0319                     	;# 
  2129  031A                     	;# 
  2130  031B                     	;# 
  2131  038C                     	;# 
  2132  038C                     	;# 
  2133  038D                     	;# 
  2134  038E                     	;# 
  2135  0390                     	;# 
  2136  0390                     	;# 
  2137  0391                     	;# 
  2138  0392                     	;# 
  2139  048C                     	;# 
  2140  048C                     	;# 
  2141  048D                     	;# 
  2142  048E                     	;# 
  2143  048F                     	;# 
  2144  048F                     	;# 
  2145  0490                     	;# 
  2146  0491                     	;# 
  2147  0492                     	;# 
  2148  0492                     	;# 
  2149  0493                     	;# 
  2150  0494                     	;# 
  2151  0495                     	;# 
  2152  0495                     	;# 
  2153  0496                     	;# 
  2154  0497                     	;# 
  2155  0498                     	;# 
  2156  0499                     	;# 
  2157  049A                     	;# 
  2158  049B                     	;# 
  2159  049C                     	;# 
  2160  049D                     	;# 
  2161  058C                     	;# 
  2162  058C                     	;# 
  2163  058D                     	;# 
  2164  058E                     	;# 
  2165  058F                     	;# 
  2166  058F                     	;# 
  2167  0590                     	;# 
  2168  0591                     	;# 
  2169  0592                     	;# 
  2170  0593                     	;# 
  2171  059C                     	;# 
  2172  059C                     	;# 
  2173  059D                     	;# 
  2174  059D                     	;# 
  2175  059E                     	;# 
  2176  059F                     	;# 
  2177  060C                     	;# 
  2178  060C                     	;# 
  2179  060D                     	;# 
  2180  060D                     	;# 
  2181  060E                     	;# 
  2182  060F                     	;# 
  2183  0610                     	;# 
  2184  0611                     	;# 
  2185  0612                     	;# 
  2186  0613                     	;# 
  2187  0614                     	;# 
  2188  0616                     	;# 
  2189  0616                     	;# 
  2190  0617                     	;# 
  2191  0617                     	;# 
  2192  0618                     	;# 
  2193  0619                     	;# 
  2194  061A                     	;# 
  2195  061B                     	;# 
  2196  061C                     	;# 
  2197  061D                     	;# 
  2198  061E                     	;# 
  2199  070C                     	;# 
  2200  070D                     	;# 
  2201  070E                     	;# 
  2202  070F                     	;# 
  2203  0710                     	;# 
  2204  0711                     	;# 
  2205  0712                     	;# 
  2206  0713                     	;# 
  2207  0714                     	;# 
  2208  0716                     	;# 
  2209  0717                     	;# 
  2210  0718                     	;# 
  2211  0719                     	;# 
  2212  071A                     	;# 
  2213  071B                     	;# 
  2214  071C                     	;# 
  2215  071D                     	;# 
  2216  071E                     	;# 
  2217  0796                     	;# 
  2218  0797                     	;# 
  2219  0798                     	;# 
  2220  0799                     	;# 
  2221  079A                     	;# 
  2222  079B                     	;# 
  2223  079C                     	;# 
  2224  079D                     	;# 
  2225  080C                     	;# 
  2226  080D                     	;# 
  2227  080E                     	;# 
  2228  080F                     	;# 
  2229  0810                     	;# 
  2230  0811                     	;# 
  2231  0812                     	;# 
  2232  0813                     	;# 
  2233  0814                     	;# 
  2234  081A                     	;# 
  2235  081A                     	;# 
  2236  081B                     	;# 
  2237  081C                     	;# 
  2238  081C                     	;# 
  2239  081D                     	;# 
  2240  081E                     	;# 
  2241  081F                     	;# 
  2242  088C                     	;# 
  2243  088D                     	;# 
  2244  088E                     	;# 
  2245  088F                     	;# 
  2246  0890                     	;# 
  2247  0891                     	;# 
  2248  0892                     	;# 
  2249  0893                     	;# 
  2250  0895                     	;# 
  2251  0896                     	;# 
  2252  0897                     	;# 
  2253  0898                     	;# 
  2254  0899                     	;# 
  2255  089A                     	;# 
  2256  089B                     	;# 
  2257  090C                     	;# 
  2258  090E                     	;# 
  2259  090F                     	;# 
  2260  091F                     	;# 
  2261  098F                     	;# 
  2262  098F                     	;# 
  2263  0990                     	;# 
  2264  0991                     	;# 
  2265  0992                     	;# 
  2266  0993                     	;# 
  2267  0994                     	;# 
  2268  0995                     	;# 
  2269  0996                     	;# 
  2270  0997                     	;# 
  2271  1E0F                     	;# 
  2272  1E10                     	;# 
  2273  1E11                     	;# 
  2274  1E12                     	;# 
  2275  1E13                     	;# 
  2276  1E14                     	;# 
  2277  1E15                     	;# 
  2278  1E16                     	;# 
  2279  1E17                     	;# 
  2280  1E18                     	;# 
  2281  1E19                     	;# 
  2282  1E1A                     	;# 
  2283  1E1B                     	;# 
  2284  1E1C                     	;# 
  2285  1E1D                     	;# 
  2286  1E1E                     	;# 
  2287  1E1F                     	;# 
  2288  1E20                     	;# 
  2289  1E21                     	;# 
  2290  1E22                     	;# 
  2291  1E23                     	;# 
  2292  1E24                     	;# 
  2293  1E25                     	;# 
  2294  1E26                     	;# 
  2295  1E27                     	;# 
  2296  1E28                     	;# 
  2297  1E29                     	;# 
  2298  1E2A                     	;# 
  2299  1E2B                     	;# 
  2300  1E2C                     	;# 
  2301  1E2D                     	;# 
  2302  1E2E                     	;# 
  2303  1E2F                     	;# 
  2304  1E30                     	;# 
  2305  1E31                     	;# 
  2306  1E32                     	;# 
  2307  1E33                     	;# 
  2308  1E34                     	;# 
  2309  1E35                     	;# 
  2310  1E36                     	;# 
  2311  1E37                     	;# 
  2312  1E8F                     	;# 
  2313  1E90                     	;# 
  2314  1E91                     	;# 
  2315  1E92                     	;# 
  2316  1E93                     	;# 
  2317  1E94                     	;# 
  2318  1E95                     	;# 
  2319  1E96                     	;# 
  2320  1E97                     	;# 
  2321  1E9C                     	;# 
  2322  1E9D                     	;# 
  2323  1E9E                     	;# 
  2324  1EA1                     	;# 
  2325  1EA2                     	;# 
  2326  1EA3                     	;# 
  2327  1EA4                     	;# 
  2328  1EA9                     	;# 
  2329  1EAA                     	;# 
  2330  1EB1                     	;# 
  2331  1EB2                     	;# 
  2332  1EB8                     	;# 
  2333  1EB9                     	;# 
  2334  1EBA                     	;# 
  2335  1EBB                     	;# 
  2336  1EBC                     	;# 
  2337  1EBD                     	;# 
  2338  1EBE                     	;# 
  2339  1EC3                     	;# 
  2340  1EC5                     	;# 
  2341  1EC6                     	;# 
  2342  1EC7                     	;# 
  2343  1EC8                     	;# 
  2344  1EC9                     	;# 
  2345  1ECA                     	;# 
  2346  1ECB                     	;# 
  2347  1ECB                     	;# 
  2348  1ECB                     	;# 
  2349  1ECC                     	;# 
  2350  1ECC                     	;# 
  2351  1ECC                     	;# 
  2352  1F10                     	;# 
  2353  1F11                     	;# 
  2354  1F12                     	;# 
  2355  1F14                     	;# 
  2356  1F15                     	;# 
  2357  1F1C                     	;# 
  2358  1F1D                     	;# 
  2359  1F1E                     	;# 
  2360  1F1F                     	;# 
  2361  1F20                     	;# 
  2362  1F21                     	;# 
  2363  1F22                     	;# 
  2364  1F23                     	;# 
  2365  1F24                     	;# 
  2366  1F25                     	;# 
  2367  1F26                     	;# 
  2368  1F27                     	;# 
  2369  1F38                     	;# 
  2370  1F39                     	;# 
  2371  1F3A                     	;# 
  2372  1F3B                     	;# 
  2373  1F3C                     	;# 
  2374  1F3D                     	;# 
  2375  1F3E                     	;# 
  2376  1F3F                     	;# 
  2377  1F43                     	;# 
  2378  1F44                     	;# 
  2379  1F45                     	;# 
  2380  1F46                     	;# 
  2381  1F47                     	;# 
  2382  1F48                     	;# 
  2383  1F49                     	;# 
  2384  1F4A                     	;# 
  2385  1F4E                     	;# 
  2386  1F4F                     	;# 
  2387  1F50                     	;# 
  2388  1F51                     	;# 
  2389  1F52                     	;# 
  2390  1F53                     	;# 
  2391  1F54                     	;# 
  2392  1F55                     	;# 
  2393  1FE4                     	;# 
  2394  1FE5                     	;# 
  2395  1FE6                     	;# 
  2396  1FE7                     	;# 
  2397  1FE8                     	;# 
  2398  1FE8                     	;# 
  2399  1FE9                     	;# 
  2400  1FEA                     	;# 
  2401  1FEB                     	;# 
  2402  1FED                     	;# 
  2403  1FEE                     	;# 
  2404  1FEF                     	;# 
  2405  0000                     	;# 
  2406  0001                     	;# 
  2407  0002                     	;# 
  2408  0003                     	;# 
  2409  0004                     	;# 
  2410  0005                     	;# 
  2411  0006                     	;# 
  2412  0007                     	;# 
  2413  0008                     	;# 
  2414  0009                     	;# 
  2415  000A                     	;# 
  2416  000B                     	;# 
  2417  000C                     	;# 
  2418  000D                     	;# 
  2419  000E                     	;# 
  2420  0012                     	;# 
  2421  0013                     	;# 
  2422  0014                     	;# 
  2423  0018                     	;# 
  2424  0019                     	;# 
  2425  001A                     	;# 
  2426  008C                     	;# 
  2427  008C                     	;# 
  2428  008D                     	;# 
  2429  008E                     	;# 
  2430  008E                     	;# 
  2431  008F                     	;# 
  2432  0090                     	;# 
  2433  0090                     	;# 
  2434  0091                     	;# 
  2435  0092                     	;# 
  2436  0092                     	;# 
  2437  0093                     	;# 
  2438  0094                     	;# 
  2439  0094                     	;# 
  2440  0095                     	;# 
  2441  0096                     	;# 
  2442  0096                     	;# 
  2443  0097                     	;# 
  2444  0098                     	;# 
  2445  0099                     	;# 
  2446  009A                     	;# 
  2447  009B                     	;# 
  2448  009B                     	;# 
  2449  009C                     	;# 
  2450  009D                     	;# 
  2451  009D                     	;# 
  2452  009E                     	;# 
  2453  009F                     	;# 
  2454  010C                     	;# 
  2455  010C                     	;# 
  2456  010D                     	;# 
  2457  010E                     	;# 
  2458  010F                     	;# 
  2459  010F                     	;# 
  2460  0110                     	;# 
  2461  0111                     	;# 
  2462  0112                     	;# 
  2463  0113                     	;# 
  2464  0114                     	;# 
  2465  0115                     	;# 
  2466  0116                     	;# 
  2467  0117                     	;# 
  2468  0118                     	;# 
  2469  0119                     	;# 
  2470  0119                     	;# 
  2471  0119                     	;# 
  2472  011A                     	;# 
  2473  011A                     	;# 
  2474  011A                     	;# 
  2475  011B                     	;# 
  2476  011B                     	;# 
  2477  011B                     	;# 
  2478  011B                     	;# 
  2479  011B                     	;# 
  2480  011C                     	;# 
  2481  011C                     	;# 
  2482  011C                     	;# 
  2483  011D                     	;# 
  2484  011D                     	;# 
  2485  011D                     	;# 
  2486  011E                     	;# 
  2487  011E                     	;# 
  2488  011E                     	;# 
  2489  011F                     	;# 
  2490  011F                     	;# 
  2491  011F                     	;# 
  2492  011F                     	;# 
  2493  011F                     	;# 
  2494  018C                     	;# 
  2495  018D                     	;# 
  2496  018E                     	;# 
  2497  018F                     	;# 
  2498  0190                     	;# 
  2499  0191                     	;# 
  2500  0192                     	;# 
  2501  0196                     	;# 
  2502  0197                     	;# 
  2503  0198                     	;# 
  2504  0199                     	;# 
  2505  019A                     	;# 
  2506  019B                     	;# 
  2507  019C                     	;# 
  2508  020C                     	;# 
  2509  020D                     	;# 
  2510  020E                     	;# 
  2511  020E                     	;# 
  2512  020F                     	;# 
  2513  020F                     	;# 
  2514  0210                     	;# 
  2515  0210                     	;# 
  2516  0211                     	;# 
  2517  0211                     	;# 
  2518  0212                     	;# 
  2519  0213                     	;# 
  2520  0214                     	;# 
  2521  0214                     	;# 
  2522  0215                     	;# 
  2523  0215                     	;# 
  2524  0216                     	;# 
  2525  0216                     	;# 
  2526  0217                     	;# 
  2527  0217                     	;# 
  2528  0218                     	;# 
  2529  0219                     	;# 
  2530  021A                     	;# 
  2531  021A                     	;# 
  2532  021B                     	;# 
  2533  021B                     	;# 
  2534  021C                     	;# 
  2535  021C                     	;# 
  2536  021D                     	;# 
  2537  021D                     	;# 
  2538  021E                     	;# 
  2539  021F                     	;# 
  2540  028C                     	;# 
  2541  028C                     	;# 
  2542  028D                     	;# 
  2543  028D                     	;# 
  2544  028E                     	;# 
  2545  028F                     	;# 
  2546  0290                     	;# 
  2547  0291                     	;# 
  2548  0292                     	;# 
  2549  0292                     	;# 
  2550  0293                     	;# 
  2551  0293                     	;# 
  2552  0294                     	;# 
  2553  0295                     	;# 
  2554  0296                     	;# 
  2555  0297                     	;# 
  2556  0298                     	;# 
  2557  0298                     	;# 
  2558  0299                     	;# 
  2559  0299                     	;# 
  2560  029A                     	;# 
  2561  029B                     	;# 
  2562  029C                     	;# 
  2563  029D                     	;# 
  2564  029F                     	;# 
  2565  030C                     	;# 
  2566  030C                     	;# 
  2567  030D                     	;# 
  2568  030E                     	;# 
  2569  030F                     	;# 
  2570  0310                     	;# 
  2571  0310                     	;# 
  2572  0311                     	;# 
  2573  0312                     	;# 
  2574  0313                     	;# 
  2575  0314                     	;# 
  2576  0314                     	;# 
  2577  0315                     	;# 
  2578  0316                     	;# 
  2579  0317                     	;# 
  2580  0318                     	;# 
  2581  0318                     	;# 
  2582  0319                     	;# 
  2583  031A                     	;# 
  2584  031B                     	;# 
  2585  038C                     	;# 
  2586  038C                     	;# 
  2587  038D                     	;# 
  2588  038E                     	;# 
  2589  0390                     	;# 
  2590  0390                     	;# 
  2591  0391                     	;# 
  2592  0392                     	;# 
  2593  048C                     	;# 
  2594  048C                     	;# 
  2595  048D                     	;# 
  2596  048E                     	;# 
  2597  048F                     	;# 
  2598  048F                     	;# 
  2599  0490                     	;# 
  2600  0491                     	;# 
  2601  0492                     	;# 
  2602  0492                     	;# 
  2603  0493                     	;# 
  2604  0494                     	;# 
  2605  0495                     	;# 
  2606  0495                     	;# 
  2607  0496                     	;# 
  2608  0497                     	;# 
  2609  0498                     	;# 
  2610  0499                     	;# 
  2611  049A                     	;# 
  2612  049B                     	;# 
  2613  049C                     	;# 
  2614  049D                     	;# 
  2615  058C                     	;# 
  2616  058C                     	;# 
  2617  058D                     	;# 
  2618  058E                     	;# 
  2619  058F                     	;# 
  2620  058F                     	;# 
  2621  0590                     	;# 
  2622  0591                     	;# 
  2623  0592                     	;# 
  2624  0593                     	;# 
  2625  059C                     	;# 
  2626  059C                     	;# 
  2627  059D                     	;# 
  2628  059D                     	;# 
  2629  059E                     	;# 
  2630  059F                     	;# 
  2631  060C                     	;# 
  2632  060C                     	;# 
  2633  060D                     	;# 
  2634  060D                     	;# 
  2635  060E                     	;# 
  2636  060F                     	;# 
  2637  0610                     	;# 
  2638  0611                     	;# 
  2639  0612                     	;# 
  2640  0613                     	;# 
  2641  0614                     	;# 
  2642  0616                     	;# 
  2643  0616                     	;# 
  2644  0617                     	;# 
  2645  0617                     	;# 
  2646  0618                     	;# 
  2647  0619                     	;# 
  2648  061A                     	;# 
  2649  061B                     	;# 
  2650  061C                     	;# 
  2651  061D                     	;# 
  2652  061E                     	;# 
  2653  070C                     	;# 
  2654  070D                     	;# 
  2655  070E                     	;# 
  2656  070F                     	;# 
  2657  0710                     	;# 
  2658  0711                     	;# 
  2659  0712                     	;# 
  2660  0713                     	;# 
  2661  0714                     	;# 
  2662  0716                     	;# 
  2663  0717                     	;# 
  2664  0718                     	;# 
  2665  0719                     	;# 
  2666  071A                     	;# 
  2667  071B                     	;# 
  2668  071C                     	;# 
  2669  071D                     	;# 
  2670  071E                     	;# 
  2671  0796                     	;# 
  2672  0797                     	;# 
  2673  0798                     	;# 
  2674  0799                     	;# 
  2675  079A                     	;# 
  2676  079B                     	;# 
  2677  079C                     	;# 
  2678  079D                     	;# 
  2679  080C                     	;# 
  2680  080D                     	;# 
  2681  080E                     	;# 
  2682  080F                     	;# 
  2683  0810                     	;# 
  2684  0811                     	;# 
  2685  0812                     	;# 
  2686  0813                     	;# 
  2687  0814                     	;# 
  2688  081A                     	;# 
  2689  081A                     	;# 
  2690  081B                     	;# 
  2691  081C                     	;# 
  2692  081C                     	;# 
  2693  081D                     	;# 
  2694  081E                     	;# 
  2695  081F                     	;# 
  2696  088C                     	;# 
  2697  088D                     	;# 
  2698  088E                     	;# 
  2699  088F                     	;# 
  2700  0890                     	;# 
  2701  0891                     	;# 
  2702  0892                     	;# 
  2703  0893                     	;# 
  2704  0895                     	;# 
  2705  0896                     	;# 
  2706  0897                     	;# 
  2707  0898                     	;# 
  2708  0899                     	;# 
  2709  089A                     	;# 
  2710  089B                     	;# 
  2711  090C                     	;# 
  2712  090E                     	;# 
  2713  090F                     	;# 
  2714  091F                     	;# 
  2715  098F                     	;# 
  2716  098F                     	;# 
  2717  0990                     	;# 
  2718  0991                     	;# 
  2719  0992                     	;# 
  2720  0993                     	;# 
  2721  0994                     	;# 
  2722  0995                     	;# 
  2723  0996                     	;# 
  2724  0997                     	;# 
  2725  1E0F                     	;# 
  2726  1E10                     	;# 
  2727  1E11                     	;# 
  2728  1E12                     	;# 
  2729  1E13                     	;# 
  2730  1E14                     	;# 
  2731  1E15                     	;# 
  2732  1E16                     	;# 
  2733  1E17                     	;# 
  2734  1E18                     	;# 
  2735  1E19                     	;# 
  2736  1E1A                     	;# 
  2737  1E1B                     	;# 
  2738  1E1C                     	;# 
  2739  1E1D                     	;# 
  2740  1E1E                     	;# 
  2741  1E1F                     	;# 
  2742  1E20                     	;# 
  2743  1E21                     	;# 
  2744  1E22                     	;# 
  2745  1E23                     	;# 
  2746  1E24                     	;# 
  2747  1E25                     	;# 
  2748  1E26                     	;# 
  2749  1E27                     	;# 
  2750  1E28                     	;# 
  2751  1E29                     	;# 
  2752  1E2A                     	;# 
  2753  1E2B                     	;# 
  2754  1E2C                     	;# 
  2755  1E2D                     	;# 
  2756  1E2E                     	;# 
  2757  1E2F                     	;# 
  2758  1E30                     	;# 
  2759  1E31                     	;# 
  2760  1E32                     	;# 
  2761  1E33                     	;# 
  2762  1E34                     	;# 
  2763  1E35                     	;# 
  2764  1E36                     	;# 
  2765  1E37                     	;# 
  2766  1E8F                     	;# 
  2767  1E90                     	;# 
  2768  1E91                     	;# 
  2769  1E92                     	;# 
  2770  1E93                     	;# 
  2771  1E94                     	;# 
  2772  1E95                     	;# 
  2773  1E96                     	;# 
  2774  1E97                     	;# 
  2775  1E9C                     	;# 
  2776  1E9D                     	;# 
  2777  1E9E                     	;# 
  2778  1EA1                     	;# 
  2779  1EA2                     	;# 
  2780  1EA3                     	;# 
  2781  1EA4                     	;# 
  2782  1EA9                     	;# 
  2783  1EAA                     	;# 
  2784  1EB1                     	;# 
  2785  1EB2                     	;# 
  2786  1EB8                     	;# 
  2787  1EB9                     	;# 
  2788  1EBA                     	;# 
  2789  1EBB                     	;# 
  2790  1EBC                     	;# 
  2791  1EBD                     	;# 
  2792  1EBE                     	;# 
  2793  1EC3                     	;# 
  2794  1EC5                     	;# 
  2795  1EC6                     	;# 
  2796  1EC7                     	;# 
  2797  1EC8                     	;# 
  2798  1EC9                     	;# 
  2799  1ECA                     	;# 
  2800  1ECB                     	;# 
  2801  1ECB                     	;# 
  2802  1ECB                     	;# 
  2803  1ECC                     	;# 
  2804  1ECC                     	;# 
  2805  1ECC                     	;# 
  2806  1F10                     	;# 
  2807  1F11                     	;# 
  2808  1F12                     	;# 
  2809  1F14                     	;# 
  2810  1F15                     	;# 
  2811  1F1C                     	;# 
  2812  1F1D                     	;# 
  2813  1F1E                     	;# 
  2814  1F1F                     	;# 
  2815  1F20                     	;# 
  2816  1F21                     	;# 
  2817  1F22                     	;# 
  2818  1F23                     	;# 
  2819  1F24                     	;# 
  2820  1F25                     	;# 
  2821  1F26                     	;# 
  2822  1F27                     	;# 
  2823  1F38                     	;# 
  2824  1F39                     	;# 
  2825  1F3A                     	;# 
  2826  1F3B                     	;# 
  2827  1F3C                     	;# 
  2828  1F3D                     	;# 
  2829  1F3E                     	;# 
  2830  1F3F                     	;# 
  2831  1F43                     	;# 
  2832  1F44                     	;# 
  2833  1F45                     	;# 
  2834  1F46                     	;# 
  2835  1F47                     	;# 
  2836  1F48                     	;# 
  2837  1F49                     	;# 
  2838  1F4A                     	;# 
  2839  1F4E                     	;# 
  2840  1F4F                     	;# 
  2841  1F50                     	;# 
  2842  1F51                     	;# 
  2843  1F52                     	;# 
  2844  1F53                     	;# 
  2845  1F54                     	;# 
  2846  1F55                     	;# 
  2847  1FE4                     	;# 
  2848  1FE5                     	;# 
  2849  1FE6                     	;# 
  2850  1FE7                     	;# 
  2851  1FE8                     	;# 
  2852  1FE8                     	;# 
  2853  1FE9                     	;# 
  2854  1FEA                     	;# 
  2855  1FEB                     	;# 
  2856  1FED                     	;# 
  2857  1FEE                     	;# 
  2858  1FEF                     	;# 
  2859  0000                     	;# 
  2860  0001                     	;# 
  2861  0002                     	;# 
  2862  0003                     	;# 
  2863  0004                     	;# 
  2864  0005                     	;# 
  2865  0006                     	;# 
  2866  0007                     	;# 
  2867  0008                     	;# 
  2868  0009                     	;# 
  2869  000A                     	;# 
  2870  000B                     	;# 
  2871  000C                     	;# 
  2872  000D                     	;# 
  2873  000E                     	;# 
  2874  0012                     	;# 
  2875  0013                     	;# 
  2876  0014                     	;# 
  2877  0018                     	;# 
  2878  0019                     	;# 
  2879  001A                     	;# 
  2880  008C                     	;# 
  2881  008C                     	;# 
  2882  008D                     	;# 
  2883  008E                     	;# 
  2884  008E                     	;# 
  2885  008F                     	;# 
  2886  0090                     	;# 
  2887  0090                     	;# 
  2888  0091                     	;# 
  2889  0092                     	;# 
  2890  0092                     	;# 
  2891  0093                     	;# 
  2892  0094                     	;# 
  2893  0094                     	;# 
  2894  0095                     	;# 
  2895  0096                     	;# 
  2896  0096                     	;# 
  2897  0097                     	;# 
  2898  0098                     	;# 
  2899  0099                     	;# 
  2900  009A                     	;# 
  2901  009B                     	;# 
  2902  009B                     	;# 
  2903  009C                     	;# 
  2904  009D                     	;# 
  2905  009D                     	;# 
  2906  009E                     	;# 
  2907  009F                     	;# 
  2908  010C                     	;# 
  2909  010C                     	;# 
  2910  010D                     	;# 
  2911  010E                     	;# 
  2912  010F                     	;# 
  2913  010F                     	;# 
  2914  0110                     	;# 
  2915  0111                     	;# 
  2916  0112                     	;# 
  2917  0113                     	;# 
  2918  0114                     	;# 
  2919  0115                     	;# 
  2920  0116                     	;# 
  2921  0117                     	;# 
  2922  0118                     	;# 
  2923  0119                     	;# 
  2924  0119                     	;# 
  2925  0119                     	;# 
  2926  011A                     	;# 
  2927  011A                     	;# 
  2928  011A                     	;# 
  2929  011B                     	;# 
  2930  011B                     	;# 
  2931  011B                     	;# 
  2932  011B                     	;# 
  2933  011B                     	;# 
  2934  011C                     	;# 
  2935  011C                     	;# 
  2936  011C                     	;# 
  2937  011D                     	;# 
  2938  011D                     	;# 
  2939  011D                     	;# 
  2940  011E                     	;# 
  2941  011E                     	;# 
  2942  011E                     	;# 
  2943  011F                     	;# 
  2944  011F                     	;# 
  2945  011F                     	;# 
  2946  011F                     	;# 
  2947  011F                     	;# 
  2948  018C                     	;# 
  2949  018D                     	;# 
  2950  018E                     	;# 
  2951  018F                     	;# 
  2952  0190                     	;# 
  2953  0191                     	;# 
  2954  0192                     	;# 
  2955  0196                     	;# 
  2956  0197                     	;# 
  2957  0198                     	;# 
  2958  0199                     	;# 
  2959  019A                     	;# 
  2960  019B                     	;# 
  2961  019C                     	;# 
  2962  020C                     	;# 
  2963  020D                     	;# 
  2964  020E                     	;# 
  2965  020E                     	;# 
  2966  020F                     	;# 
  2967  020F                     	;# 
  2968  0210                     	;# 
  2969  0210                     	;# 
  2970  0211                     	;# 
  2971  0211                     	;# 
  2972  0212                     	;# 
  2973  0213                     	;# 
  2974  0214                     	;# 
  2975  0214                     	;# 
  2976  0215                     	;# 
  2977  0215                     	;# 
  2978  0216                     	;# 
  2979  0216                     	;# 
  2980  0217                     	;# 
  2981  0217                     	;# 
  2982  0218                     	;# 
  2983  0219                     	;# 
  2984  021A                     	;# 
  2985  021A                     	;# 
  2986  021B                     	;# 
  2987  021B                     	;# 
  2988  021C                     	;# 
  2989  021C                     	;# 
  2990  021D                     	;# 
  2991  021D                     	;# 
  2992  021E                     	;# 
  2993  021F                     	;# 
  2994  028C                     	;# 
  2995  028C                     	;# 
  2996  028D                     	;# 
  2997  028D                     	;# 
  2998  028E                     	;# 
  2999  028F                     	;# 
  3000  0290                     	;# 
  3001  0291                     	;# 
  3002  0292                     	;# 
  3003  0292                     	;# 
  3004  0293                     	;# 
  3005  0293                     	;# 
  3006  0294                     	;# 
  3007  0295                     	;# 
  3008  0296                     	;# 
  3009  0297                     	;# 
  3010  0298                     	;# 
  3011  0298                     	;# 
  3012  0299                     	;# 
  3013  0299                     	;# 
  3014  029A                     	;# 
  3015  029B                     	;# 
  3016  029C                     	;# 
  3017  029D                     	;# 
  3018  029F                     	;# 
  3019  030C                     	;# 
  3020  030C                     	;# 
  3021  030D                     	;# 
  3022  030E                     	;# 
  3023  030F                     	;# 
  3024  0310                     	;# 
  3025  0310                     	;# 
  3026  0311                     	;# 
  3027  0312                     	;# 
  3028  0313                     	;# 
  3029  0314                     	;# 
  3030  0314                     	;# 
  3031  0315                     	;# 
  3032  0316                     	;# 
  3033  0317                     	;# 
  3034  0318                     	;# 
  3035  0318                     	;# 
  3036  0319                     	;# 
  3037  031A                     	;# 
  3038  031B                     	;# 
  3039  038C                     	;# 
  3040  038C                     	;# 
  3041  038D                     	;# 
  3042  038E                     	;# 
  3043  0390                     	;# 
  3044  0390                     	;# 
  3045  0391                     	;# 
  3046  0392                     	;# 
  3047  048C                     	;# 
  3048  048C                     	;# 
  3049  048D                     	;# 
  3050  048E                     	;# 
  3051  048F                     	;# 
  3052  048F                     	;# 
  3053  0490                     	;# 
  3054  0491                     	;# 
  3055  0492                     	;# 
  3056  0492                     	;# 
  3057  0493                     	;# 
  3058  0494                     	;# 
  3059  0495                     	;# 
  3060  0495                     	;# 
  3061  0496                     	;# 
  3062  0497                     	;# 
  3063  0498                     	;# 
  3064  0499                     	;# 
  3065  049A                     	;# 
  3066  049B                     	;# 
  3067  049C                     	;# 
  3068  049D                     	;# 
  3069  058C                     	;# 
  3070  058C                     	;# 
  3071  058D                     	;# 
  3072  058E                     	;# 
  3073  058F                     	;# 
  3074  058F                     	;# 
  3075  0590                     	;# 
  3076  0591                     	;# 
  3077  0592                     	;# 
  3078  0593                     	;# 
  3079  059C                     	;# 
  3080  059C                     	;# 
  3081  059D                     	;# 
  3082  059D                     	;# 
  3083  059E                     	;# 
  3084  059F                     	;# 
  3085  060C                     	;# 
  3086  060C                     	;# 
  3087  060D                     	;# 
  3088  060D                     	;# 
  3089  060E                     	;# 
  3090  060F                     	;# 
  3091  0610                     	;# 
  3092  0611                     	;# 
  3093  0612                     	;# 
  3094  0613                     	;# 
  3095  0614                     	;# 
  3096  0616                     	;# 
  3097  0616                     	;# 
  3098  0617                     	;# 
  3099  0617                     	;# 
  3100  0618                     	;# 
  3101  0619                     	;# 
  3102  061A                     	;# 
  3103  061B                     	;# 
  3104  061C                     	;# 
  3105  061D                     	;# 
  3106  061E                     	;# 
  3107  070C                     	;# 
  3108  070D                     	;# 
  3109  070E                     	;# 
  3110  070F                     	;# 
  3111  0710                     	;# 
  3112  0711                     	;# 
  3113  0712                     	;# 
  3114  0713                     	;# 
  3115  0714                     	;# 
  3116  0716                     	;# 
  3117  0717                     	;# 
  3118  0718                     	;# 
  3119  0719                     	;# 
  3120  071A                     	;# 
  3121  071B                     	;# 
  3122  071C                     	;# 
  3123  071D                     	;# 
  3124  071E                     	;# 
  3125  0796                     	;# 
  3126  0797                     	;# 
  3127  0798                     	;# 
  3128  0799                     	;# 
  3129  079A                     	;# 
  3130  079B                     	;# 
  3131  079C                     	;# 
  3132  079D                     	;# 
  3133  080C                     	;# 
  3134  080D                     	;# 
  3135  080E                     	;# 
  3136  080F                     	;# 
  3137  0810                     	;# 
  3138  0811                     	;# 
  3139  0812                     	;# 
  3140  0813                     	;# 
  3141  0814                     	;# 
  3142  081A                     	;# 
  3143  081A                     	;# 
  3144  081B                     	;# 
  3145  081C                     	;# 
  3146  081C                     	;# 
  3147  081D                     	;# 
  3148  081E                     	;# 
  3149  081F                     	;# 
  3150  088C                     	;# 
  3151  088D                     	;# 
  3152  088E                     	;# 
  3153  088F                     	;# 
  3154  0890                     	;# 
  3155  0891                     	;# 
  3156  0892                     	;# 
  3157  0893                     	;# 
  3158  0895                     	;# 
  3159  0896                     	;# 
  3160  0897                     	;# 
  3161  0898                     	;# 
  3162  0899                     	;# 
  3163  089A                     	;# 
  3164  089B                     	;# 
  3165  090C                     	;# 
  3166  090E                     	;# 
  3167  090F                     	;# 
  3168  091F                     	;# 
  3169  098F                     	;# 
  3170  098F                     	;# 
  3171  0990                     	;# 
  3172  0991                     	;# 
  3173  0992                     	;# 
  3174  0993                     	;# 
  3175  0994                     	;# 
  3176  0995                     	;# 
  3177  0996                     	;# 
  3178  0997                     	;# 
  3179  1E0F                     	;# 
  3180  1E10                     	;# 
  3181  1E11                     	;# 
  3182  1E12                     	;# 
  3183  1E13                     	;# 
  3184  1E14                     	;# 
  3185  1E15                     	;# 
  3186  1E16                     	;# 
  3187  1E17                     	;# 
  3188  1E18                     	;# 
  3189  1E19                     	;# 
  3190  1E1A                     	;# 
  3191  1E1B                     	;# 
  3192  1E1C                     	;# 
  3193  1E1D                     	;# 
  3194  1E1E                     	;# 
  3195  1E1F                     	;# 
  3196  1E20                     	;# 
  3197  1E21                     	;# 
  3198  1E22                     	;# 
  3199  1E23                     	;# 
  3200  1E24                     	;# 
  3201  1E25                     	;# 
  3202  1E26                     	;# 
  3203  1E27                     	;# 
  3204  1E28                     	;# 
  3205  1E29                     	;# 
  3206  1E2A                     	;# 
  3207  1E2B                     	;# 
  3208  1E2C                     	;# 
  3209  1E2D                     	;# 
  3210  1E2E                     	;# 
  3211  1E2F                     	;# 
  3212  1E30                     	;# 
  3213  1E31                     	;# 
  3214  1E32                     	;# 
  3215  1E33                     	;# 
  3216  1E34                     	;# 
  3217  1E35                     	;# 
  3218  1E36                     	;# 
  3219  1E37                     	;# 
  3220  1E8F                     	;# 
  3221  1E90                     	;# 
  3222  1E91                     	;# 
  3223  1E92                     	;# 
  3224  1E93                     	;# 
  3225  1E94                     	;# 
  3226  1E95                     	;# 
  3227  1E96                     	;# 
  3228  1E97                     	;# 
  3229  1E9C                     	;# 
  3230  1E9D                     	;# 
  3231  1E9E                     	;# 
  3232  1EA1                     	;# 
  3233  1EA2                     	;# 
  3234  1EA3                     	;# 
  3235  1EA4                     	;# 
  3236  1EA9                     	;# 
  3237  1EAA                     	;# 
  3238  1EB1                     	;# 
  3239  1EB2                     	;# 
  3240  1EB8                     	;# 
  3241  1EB9                     	;# 
  3242  1EBA                     	;# 
  3243  1EBB                     	;# 
  3244  1EBC                     	;# 
  3245  1EBD                     	;# 
  3246  1EBE                     	;# 
  3247  1EC3                     	;# 
  3248  1EC5                     	;# 
  3249  1EC6                     	;# 
  3250  1EC7                     	;# 
  3251  1EC8                     	;# 
  3252  1EC9                     	;# 
  3253  1ECA                     	;# 
  3254  1ECB                     	;# 
  3255  1ECB                     	;# 
  3256  1ECB                     	;# 
  3257  1ECC                     	;# 
  3258  1ECC                     	;# 
  3259  1ECC                     	;# 
  3260  1F10                     	;# 
  3261  1F11                     	;# 
  3262  1F12                     	;# 
  3263  1F14                     	;# 
  3264  1F15                     	;# 
  3265  1F1C                     	;# 
  3266  1F1D                     	;# 
  3267  1F1E                     	;# 
  3268  1F1F                     	;# 
  3269  1F20                     	;# 
  3270  1F21                     	;# 
  3271  1F22                     	;# 
  3272  1F23                     	;# 
  3273  1F24                     	;# 
  3274  1F25                     	;# 
  3275  1F26                     	;# 
  3276  1F27                     	;# 
  3277  1F38                     	;# 
  3278  1F39                     	;# 
  3279  1F3A                     	;# 
  3280  1F3B                     	;# 
  3281  1F3C                     	;# 
  3282  1F3D                     	;# 
  3283  1F3E                     	;# 
  3284  1F3F                     	;# 
  3285  1F43                     	;# 
  3286  1F44                     	;# 
  3287  1F45                     	;# 
  3288  1F46                     	;# 
  3289  1F47                     	;# 
  3290  1F48                     	;# 
  3291  1F49                     	;# 
  3292  1F4A                     	;# 
  3293  1F4E                     	;# 
  3294  1F4F                     	;# 
  3295  1F50                     	;# 
  3296  1F51                     	;# 
  3297  1F52                     	;# 
  3298  1F53                     	;# 
  3299  1F54                     	;# 
  3300  1F55                     	;# 
  3301  1FE4                     	;# 
  3302  1FE5                     	;# 
  3303  1FE6                     	;# 
  3304  1FE7                     	;# 
  3305  1FE8                     	;# 
  3306  1FE8                     	;# 
  3307  1FE9                     	;# 
  3308  1FEA                     	;# 
  3309  1FEB                     	;# 
  3310  1FED                     	;# 
  3311  1FEE                     	;# 
  3312  1FEF                     	;# 
  3313  0000                     	;# 
  3314  0001                     	;# 
  3315  0002                     	;# 
  3316  0003                     	;# 
  3317  0004                     	;# 
  3318  0005                     	;# 
  3319  0006                     	;# 
  3320  0007                     	;# 
  3321  0008                     	;# 
  3322  0009                     	;# 
  3323  000A                     	;# 
  3324  000B                     	;# 
  3325  000C                     	;# 
  3326  000D                     	;# 
  3327  000E                     	;# 
  3328  0012                     	;# 
  3329  0013                     	;# 
  3330  0014                     	;# 
  3331  0018                     	;# 
  3332  0019                     	;# 
  3333  001A                     	;# 
  3334  008C                     	;# 
  3335  008C                     	;# 
  3336  008D                     	;# 
  3337  008E                     	;# 
  3338  008E                     	;# 
  3339  008F                     	;# 
  3340  0090                     	;# 
  3341  0090                     	;# 
  3342  0091                     	;# 
  3343  0092                     	;# 
  3344  0092                     	;# 
  3345  0093                     	;# 
  3346  0094                     	;# 
  3347  0094                     	;# 
  3348  0095                     	;# 
  3349  0096                     	;# 
  3350  0096                     	;# 
  3351  0097                     	;# 
  3352  0098                     	;# 
  3353  0099                     	;# 
  3354  009A                     	;# 
  3355  009B                     	;# 
  3356  009B                     	;# 
  3357  009C                     	;# 
  3358  009D                     	;# 
  3359  009D                     	;# 
  3360  009E                     	;# 
  3361  009F                     	;# 
  3362  010C                     	;# 
  3363  010C                     	;# 
  3364  010D                     	;# 
  3365  010E                     	;# 
  3366  010F                     	;# 
  3367  010F                     	;# 
  3368  0110                     	;# 
  3369  0111                     	;# 
  3370  0112                     	;# 
  3371  0113                     	;# 
  3372  0114                     	;# 
  3373  0115                     	;# 
  3374  0116                     	;# 
  3375  0117                     	;# 
  3376  0118                     	;# 
  3377  0119                     	;# 
  3378  0119                     	;# 
  3379  0119                     	;# 
  3380  011A                     	;# 
  3381  011A                     	;# 
  3382  011A                     	;# 
  3383  011B                     	;# 
  3384  011B                     	;# 
  3385  011B                     	;# 
  3386  011B                     	;# 
  3387  011B                     	;# 
  3388  011C                     	;# 
  3389  011C                     	;# 
  3390  011C                     	;# 
  3391  011D                     	;# 
  3392  011D                     	;# 
  3393  011D                     	;# 
  3394  011E                     	;# 
  3395  011E                     	;# 
  3396  011E                     	;# 
  3397  011F                     	;# 
  3398  011F                     	;# 
  3399  011F                     	;# 
  3400  011F                     	;# 
  3401  011F                     	;# 
  3402  018C                     	;# 
  3403  018D                     	;# 
  3404  018E                     	;# 
  3405  018F                     	;# 
  3406  0190                     	;# 
  3407  0191                     	;# 
  3408  0192                     	;# 
  3409  0196                     	;# 
  3410  0197                     	;# 
  3411  0198                     	;# 
  3412  0199                     	;# 
  3413  019A                     	;# 
  3414  019B                     	;# 
  3415  019C                     	;# 
  3416  020C                     	;# 
  3417  020D                     	;# 
  3418  020E                     	;# 
  3419  020E                     	;# 
  3420  020F                     	;# 
  3421  020F                     	;# 
  3422  0210                     	;# 
  3423  0210                     	;# 
  3424  0211                     	;# 
  3425  0211                     	;# 
  3426  0212                     	;# 
  3427  0213                     	;# 
  3428  0214                     	;# 
  3429  0214                     	;# 
  3430  0215                     	;# 
  3431  0215                     	;# 
  3432  0216                     	;# 
  3433  0216                     	;# 
  3434  0217                     	;# 
  3435  0217                     	;# 
  3436  0218                     	;# 
  3437  0219                     	;# 
  3438  021A                     	;# 
  3439  021A                     	;# 
  3440  021B                     	;# 
  3441  021B                     	;# 
  3442  021C                     	;# 
  3443  021C                     	;# 
  3444  021D                     	;# 
  3445  021D                     	;# 
  3446  021E                     	;# 
  3447  021F                     	;# 
  3448  028C                     	;# 
  3449  028C                     	;# 
  3450  028D                     	;# 
  3451  028D                     	;# 
  3452  028E                     	;# 
  3453  028F                     	;# 
  3454  0290                     	;# 
  3455  0291                     	;# 
  3456  0292                     	;# 
  3457  0292                     	;# 
  3458  0293                     	;# 
  3459  0293                     	;# 
  3460  0294                     	;# 
  3461  0295                     	;# 
  3462  0296                     	;# 
  3463  0297                     	;# 
  3464  0298                     	;# 
  3465  0298                     	;# 
  3466  0299                     	;# 
  3467  0299                     	;# 
  3468  029A                     	;# 
  3469  029B                     	;# 
  3470  029C                     	;# 
  3471  029D                     	;# 
  3472  029F                     	;# 
  3473  030C                     	;# 
  3474  030C                     	;# 
  3475  030D                     	;# 
  3476  030E                     	;# 
  3477  030F                     	;# 
  3478  0310                     	;# 
  3479  0310                     	;# 
  3480  0311                     	;# 
  3481  0312                     	;# 
  3482  0313                     	;# 
  3483  0314                     	;# 
  3484  0314                     	;# 
  3485  0315                     	;# 
  3486  0316                     	;# 
  3487  0317                     	;# 
  3488  0318                     	;# 
  3489  0318                     	;# 
  3490  0319                     	;# 
  3491  031A                     	;# 
  3492  031B                     	;# 
  3493  038C                     	;# 
  3494  038C                     	;# 
  3495  038D                     	;# 
  3496  038E                     	;# 
  3497  0390                     	;# 
  3498  0390                     	;# 
  3499  0391                     	;# 
  3500  0392                     	;# 
  3501  048C                     	;# 
  3502  048C                     	;# 
  3503  048D                     	;# 
  3504  048E                     	;# 
  3505  048F                     	;# 
  3506  048F                     	;# 
  3507  0490                     	;# 
  3508  0491                     	;# 
  3509  0492                     	;# 
  3510  0492                     	;# 
  3511  0493                     	;# 
  3512  0494                     	;# 
  3513  0495                     	;# 
  3514  0495                     	;# 
  3515  0496                     	;# 
  3516  0497                     	;# 
  3517  0498                     	;# 
  3518  0499                     	;# 
  3519  049A                     	;# 
  3520  049B                     	;# 
  3521  049C                     	;# 
  3522  049D                     	;# 
  3523  058C                     	;# 
  3524  058C                     	;# 
  3525  058D                     	;# 
  3526  058E                     	;# 
  3527  058F                     	;# 
  3528  058F                     	;# 
  3529  0590                     	;# 
  3530  0591                     	;# 
  3531  0592                     	;# 
  3532  0593                     	;# 
  3533  059C                     	;# 
  3534  059C                     	;# 
  3535  059D                     	;# 
  3536  059D                     	;# 
  3537  059E                     	;# 
  3538  059F                     	;# 
  3539  060C                     	;# 
  3540  060C                     	;# 
  3541  060D                     	;# 
  3542  060D                     	;# 
  3543  060E                     	;# 
  3544  060F                     	;# 
  3545  0610                     	;# 
  3546  0611                     	;# 
  3547  0612                     	;# 
  3548  0613                     	;# 
  3549  0614                     	;# 
  3550  0616                     	;# 
  3551  0616                     	;# 
  3552  0617                     	;# 
  3553  0617                     	;# 
  3554  0618                     	;# 
  3555  0619                     	;# 
  3556  061A                     	;# 
  3557  061B                     	;# 
  3558  061C                     	;# 
  3559  061D                     	;# 
  3560  061E                     	;# 
  3561  070C                     	;# 
  3562  070D                     	;# 
  3563  070E                     	;# 
  3564  070F                     	;# 
  3565  0710                     	;# 
  3566  0711                     	;# 
  3567  0712                     	;# 
  3568  0713                     	;# 
  3569  0714                     	;# 
  3570  0716                     	;# 
  3571  0717                     	;# 
  3572  0718                     	;# 
  3573  0719                     	;# 
  3574  071A                     	;# 
  3575  071B                     	;# 
  3576  071C                     	;# 
  3577  071D                     	;# 
  3578  071E                     	;# 
  3579  0796                     	;# 
  3580  0797                     	;# 
  3581  0798                     	;# 
  3582  0799                     	;# 
  3583  079A                     	;# 
  3584  079B                     	;# 
  3585  079C                     	;# 
  3586  079D                     	;# 
  3587  080C                     	;# 
  3588  080D                     	;# 
  3589  080E                     	;# 
  3590  080F                     	;# 
  3591  0810                     	;# 
  3592  0811                     	;# 
  3593  0812                     	;# 
  3594  0813                     	;# 
  3595  0814                     	;# 
  3596  081A                     	;# 
  3597  081A                     	;# 
  3598  081B                     	;# 
  3599  081C                     	;# 
  3600  081C                     	;# 
  3601  081D                     	;# 
  3602  081E                     	;# 
  3603  081F                     	;# 
  3604  088C                     	;# 
  3605  088D                     	;# 
  3606  088E                     	;# 
  3607  088F                     	;# 
  3608  0890                     	;# 
  3609  0891                     	;# 
  3610  0892                     	;# 
  3611  0893                     	;# 
  3612  0895                     	;# 
  3613  0896                     	;# 
  3614  0897                     	;# 
  3615  0898                     	;# 
  3616  0899                     	;# 
  3617  089A                     	;# 
  3618  089B                     	;# 
  3619  090C                     	;# 
  3620  090E                     	;# 
  3621  090F                     	;# 
  3622  091F                     	;# 
  3623  098F                     	;# 
  3624  098F                     	;# 
  3625  0990                     	;# 
  3626  0991                     	;# 
  3627  0992                     	;# 
  3628  0993                     	;# 
  3629  0994                     	;# 
  3630  0995                     	;# 
  3631  0996                     	;# 
  3632  0997                     	;# 
  3633  1E0F                     	;# 
  3634  1E10                     	;# 
  3635  1E11                     	;# 
  3636  1E12                     	;# 
  3637  1E13                     	;# 
  3638  1E14                     	;# 
  3639  1E15                     	;# 
  3640  1E16                     	;# 
  3641  1E17                     	;# 
  3642  1E18                     	;# 
  3643  1E19                     	;# 
  3644  1E1A                     	;# 
  3645  1E1B                     	;# 
  3646  1E1C                     	;# 
  3647  1E1D                     	;# 
  3648  1E1E                     	;# 
  3649  1E1F                     	;# 
  3650  1E20                     	;# 
  3651  1E21                     	;# 
  3652  1E22                     	;# 
  3653  1E23                     	;# 
  3654  1E24                     	;# 
  3655  1E25                     	;# 
  3656  1E26                     	;# 
  3657  1E27                     	;# 
  3658  1E28                     	;# 
  3659  1E29                     	;# 
  3660  1E2A                     	;# 
  3661  1E2B                     	;# 
  3662  1E2C                     	;# 
  3663  1E2D                     	;# 
  3664  1E2E                     	;# 
  3665  1E2F                     	;# 
  3666  1E30                     	;# 
  3667  1E31                     	;# 
  3668  1E32                     	;# 
  3669  1E33                     	;# 
  3670  1E34                     	;# 
  3671  1E35                     	;# 
  3672  1E36                     	;# 
  3673  1E37                     	;# 
  3674  1E8F                     	;# 
  3675  1E90                     	;# 
  3676  1E91                     	;# 
  3677  1E92                     	;# 
  3678  1E93                     	;# 
  3679  1E94                     	;# 
  3680  1E95                     	;# 
  3681  1E96                     	;# 
  3682  1E97                     	;# 
  3683  1E9C                     	;# 
  3684  1E9D                     	;# 
  3685  1E9E                     	;# 
  3686  1EA1                     	;# 
  3687  1EA2                     	;# 
  3688  1EA3                     	;# 
  3689  1EA4                     	;# 
  3690  1EA9                     	;# 
  3691  1EAA                     	;# 
  3692  1EB1                     	;# 
  3693  1EB2                     	;# 
  3694  1EB8                     	;# 
  3695  1EB9                     	;# 
  3696  1EBA                     	;# 
  3697  1EBB                     	;# 
  3698  1EBC                     	;# 
  3699  1EBD                     	;# 
  3700  1EBE                     	;# 
  3701  1EC3                     	;# 
  3702  1EC5                     	;# 
  3703  1EC6                     	;# 
  3704  1EC7                     	;# 
  3705  1EC8                     	;# 
  3706  1EC9                     	;# 
  3707  1ECA                     	;# 
  3708  1ECB                     	;# 
  3709  1ECB                     	;# 
  3710  1ECB                     	;# 
  3711  1ECC                     	;# 
  3712  1ECC                     	;# 
  3713  1ECC                     	;# 
  3714  1F10                     	;# 
  3715  1F11                     	;# 
  3716  1F12                     	;# 
  3717  1F14                     	;# 
  3718  1F15                     	;# 
  3719  1F1C                     	;# 
  3720  1F1D                     	;# 
  3721  1F1E                     	;# 
  3722  1F1F                     	;# 
  3723  1F20                     	;# 
  3724  1F21                     	;# 
  3725  1F22                     	;# 
  3726  1F23                     	;# 
  3727  1F24                     	;# 
  3728  1F25                     	;# 
  3729  1F26                     	;# 
  3730  1F27                     	;# 
  3731  1F38                     	;# 
  3732  1F39                     	;# 
  3733  1F3A                     	;# 
  3734  1F3B                     	;# 
  3735  1F3C                     	;# 
  3736  1F3D                     	;# 
  3737  1F3E                     	;# 
  3738  1F3F                     	;# 
  3739  1F43                     	;# 
  3740  1F44                     	;# 
  3741  1F45                     	;# 
  3742  1F46                     	;# 
  3743  1F47                     	;# 
  3744  1F48                     	;# 
  3745  1F49                     	;# 
  3746  1F4A                     	;# 
  3747  1F4E                     	;# 
  3748  1F4F                     	;# 
  3749  1F50                     	;# 
  3750  1F51                     	;# 
  3751  1F52                     	;# 
  3752  1F53                     	;# 
  3753  1F54                     	;# 
  3754  1F55                     	;# 
  3755  1FE4                     	;# 
  3756  1FE5                     	;# 
  3757  1FE6                     	;# 
  3758  1FE7                     	;# 
  3759  1FE8                     	;# 
  3760  1FE8                     	;# 
  3761  1FE9                     	;# 
  3762  1FEA                     	;# 
  3763  1FEB                     	;# 
  3764  1FED                     	;# 
  3765  1FEE                     	;# 
  3766  1FEF                     	;# 
  3767  0000                     	;# 
  3768  0001                     	;# 
  3769  0002                     	;# 
  3770  0003                     	;# 
  3771  0004                     	;# 
  3772  0005                     	;# 
  3773  0006                     	;# 
  3774  0007                     	;# 
  3775  0008                     	;# 
  3776  0009                     	;# 
  3777  000A                     	;# 
  3778  000B                     	;# 
  3779  000C                     	;# 
  3780  000D                     	;# 
  3781  000E                     	;# 
  3782  0012                     	;# 
  3783  0013                     	;# 
  3784  0014                     	;# 
  3785  0018                     	;# 
  3786  0019                     	;# 
  3787  001A                     	;# 
  3788  008C                     	;# 
  3789  008C                     	;# 
  3790  008D                     	;# 
  3791  008E                     	;# 
  3792  008E                     	;# 
  3793  008F                     	;# 
  3794  0090                     	;# 
  3795  0090                     	;# 
  3796  0091                     	;# 
  3797  0092                     	;# 
  3798  0092                     	;# 
  3799  0093                     	;# 
  3800  0094                     	;# 
  3801  0094                     	;# 
  3802  0095                     	;# 
  3803  0096                     	;# 
  3804  0096                     	;# 
  3805  0097                     	;# 
  3806  0098                     	;# 
  3807  0099                     	;# 
  3808  009A                     	;# 
  3809  009B                     	;# 
  3810  009B                     	;# 
  3811  009C                     	;# 
  3812  009D                     	;# 
  3813  009D                     	;# 
  3814  009E                     	;# 
  3815  009F                     	;# 
  3816  010C                     	;# 
  3817  010C                     	;# 
  3818  010D                     	;# 
  3819  010E                     	;# 
  3820  010F                     	;# 
  3821  010F                     	;# 
  3822  0110                     	;# 
  3823  0111                     	;# 
  3824  0112                     	;# 
  3825  0113                     	;# 
  3826  0114                     	;# 
  3827  0115                     	;# 
  3828  0116                     	;# 
  3829  0117                     	;# 
  3830  0118                     	;# 
  3831  0119                     	;# 
  3832  0119                     	;# 
  3833  0119                     	;# 
  3834  011A                     	;# 
  3835  011A                     	;# 
  3836  011A                     	;# 
  3837  011B                     	;# 
  3838  011B                     	;# 
  3839  011B                     	;# 
  3840  011B                     	;# 
  3841  011B                     	;# 
  3842  011C                     	;# 
  3843  011C                     	;# 
  3844  011C                     	;# 
  3845  011D                     	;# 
  3846  011D                     	;# 
  3847  011D                     	;# 
  3848  011E                     	;# 
  3849  011E                     	;# 
  3850  011E                     	;# 
  3851  011F                     	;# 
  3852  011F                     	;# 
  3853  011F                     	;# 
  3854  011F                     	;# 
  3855  011F                     	;# 
  3856  018C                     	;# 
  3857  018D                     	;# 
  3858  018E                     	;# 
  3859  018F                     	;# 
  3860  0190                     	;# 
  3861  0191                     	;# 
  3862  0192                     	;# 
  3863  0196                     	;# 
  3864  0197                     	;# 
  3865  0198                     	;# 
  3866  0199                     	;# 
  3867  019A                     	;# 
  3868  019B                     	;# 
  3869  019C                     	;# 
  3870  020C                     	;# 
  3871  020D                     	;# 
  3872  020E                     	;# 
  3873  020E                     	;# 
  3874  020F                     	;# 
  3875  020F                     	;# 
  3876  0210                     	;# 
  3877  0210                     	;# 
  3878  0211                     	;# 
  3879  0211                     	;# 
  3880  0212                     	;# 
  3881  0213                     	;# 
  3882  0214                     	;# 
  3883  0214                     	;# 
  3884  0215                     	;# 
  3885  0215                     	;# 
  3886  0216                     	;# 
  3887  0216                     	;# 
  3888  0217                     	;# 
  3889  0217                     	;# 
  3890  0218                     	;# 
  3891  0219                     	;# 
  3892  021A                     	;# 
  3893  021A                     	;# 
  3894  021B                     	;# 
  3895  021B                     	;# 
  3896  021C                     	;# 
  3897  021C                     	;# 
  3898  021D                     	;# 
  3899  021D                     	;# 
  3900  021E                     	;# 
  3901  021F                     	;# 
  3902  028C                     	;# 
  3903  028C                     	;# 
  3904  028D                     	;# 
  3905  028D                     	;# 
  3906  028E                     	;# 
  3907  028F                     	;# 
  3908  0290                     	;# 
  3909  0291                     	;# 
  3910  0292                     	;# 
  3911  0292                     	;# 
  3912  0293                     	;# 
  3913  0293                     	;# 
  3914  0294                     	;# 
  3915  0295                     	;# 
  3916  0296                     	;# 
  3917  0297                     	;# 
  3918  0298                     	;# 
  3919  0298                     	;# 
  3920  0299                     	;# 
  3921  0299                     	;# 
  3922  029A                     	;# 
  3923  029B                     	;# 
  3924  029C                     	;# 
  3925  029D                     	;# 
  3926  029F                     	;# 
  3927  030C                     	;# 
  3928  030C                     	;# 
  3929  030D                     	;# 
  3930  030E                     	;# 
  3931  030F                     	;# 
  3932  0310                     	;# 
  3933  0310                     	;# 
  3934  0311                     	;# 
  3935  0312                     	;# 
  3936  0313                     	;# 
  3937  0314                     	;# 
  3938  0314                     	;# 
  3939  0315                     	;# 
  3940  0316                     	;# 
  3941  0317                     	;# 
  3942  0318                     	;# 
  3943  0318                     	;# 
  3944  0319                     	;# 
  3945  031A                     	;# 
  3946  031B                     	;# 
  3947  038C                     	;# 
  3948  038C                     	;# 
  3949  038D                     	;# 
  3950  038E                     	;# 
  3951  0390                     	;# 
  3952  0390                     	;# 
  3953  0391                     	;# 
  3954  0392                     	;# 
  3955  048C                     	;# 
  3956  048C                     	;# 
  3957  048D                     	;# 
  3958  048E                     	;# 
  3959  048F                     	;# 
  3960  048F                     	;# 
  3961  0490                     	;# 
  3962  0491                     	;# 
  3963  0492                     	;# 
  3964  0492                     	;# 
  3965  0493                     	;# 
  3966  0494                     	;# 
  3967  0495                     	;# 
  3968  0495                     	;# 
  3969  0496                     	;# 
  3970  0497                     	;# 
  3971  0498                     	;# 
  3972  0499                     	;# 
  3973  049A                     	;# 
  3974  049B                     	;# 
  3975  049C                     	;# 
  3976  049D                     	;# 
  3977  058C                     	;# 
  3978  058C                     	;# 
  3979  058D                     	;# 
  3980  058E                     	;# 
  3981  058F                     	;# 
  3982  058F                     	;# 
  3983  0590                     	;# 
  3984  0591                     	;# 
  3985  0592                     	;# 
  3986  0593                     	;# 
  3987  059C                     	;# 
  3988  059C                     	;# 
  3989  059D                     	;# 
  3990  059D                     	;# 
  3991  059E                     	;# 
  3992  059F                     	;# 
  3993  060C                     	;# 
  3994  060C                     	;# 
  3995  060D                     	;# 
  3996  060D                     	;# 
  3997  060E                     	;# 
  3998  060F                     	;# 
  3999  0610                     	;# 
  4000  0611                     	;# 
  4001  0612                     	;# 
  4002  0613                     	;# 
  4003  0614                     	;# 
  4004  0616                     	;# 
  4005  0616                     	;# 
  4006  0617                     	;# 
  4007  0617                     	;# 
  4008  0618                     	;# 
  4009  0619                     	;# 
  4010  061A                     	;# 
  4011  061B                     	;# 
  4012  061C                     	;# 
  4013  061D                     	;# 
  4014  061E                     	;# 
  4015  070C                     	;# 
  4016  070D                     	;# 
  4017  070E                     	;# 
  4018  070F                     	;# 
  4019  0710                     	;# 
  4020  0711                     	;# 
  4021  0712                     	;# 
  4022  0713                     	;# 
  4023  0714                     	;# 
  4024  0716                     	;# 
  4025  0717                     	;# 
  4026  0718                     	;# 
  4027  0719                     	;# 
  4028  071A                     	;# 
  4029  071B                     	;# 
  4030  071C                     	;# 
  4031  071D                     	;# 
  4032  071E                     	;# 
  4033  0796                     	;# 
  4034  0797                     	;# 
  4035  0798                     	;# 
  4036  0799                     	;# 
  4037  079A                     	;# 
  4038  079B                     	;# 
  4039  079C                     	;# 
  4040  079D                     	;# 
  4041  080C                     	;# 
  4042  080D                     	;# 
  4043  080E                     	;# 
  4044  080F                     	;# 
  4045  0810                     	;# 
  4046  0811                     	;# 
  4047  0812                     	;# 
  4048  0813                     	;# 
  4049  0814                     	;# 
  4050  081A                     	;# 
  4051  081A                     	;# 
  4052  081B                     	;# 
  4053  081C                     	;# 
  4054  081C                     	;# 
  4055  081D                     	;# 
  4056  081E                     	;# 
  4057  081F                     	;# 
  4058  088C                     	;# 
  4059  088D                     	;# 
  4060  088E                     	;# 
  4061  088F                     	;# 
  4062  0890                     	;# 
  4063  0891                     	;# 
  4064  0892                     	;# 
  4065  0893                     	;# 
  4066  0895                     	;# 
  4067  0896                     	;# 
  4068  0897                     	;# 
  4069  0898                     	;# 
  4070  0899                     	;# 
  4071  089A                     	;# 
  4072  089B                     	;# 
  4073  090C                     	;# 
  4074  090E                     	;# 
  4075  090F                     	;# 
  4076  091F                     	;# 
  4077  098F                     	;# 
  4078  098F                     	;# 
  4079  0990                     	;# 
  4080  0991                     	;# 
  4081  0992                     	;# 
  4082  0993                     	;# 
  4083  0994                     	;# 
  4084  0995                     	;# 
  4085  0996                     	;# 
  4086  0997                     	;# 
  4087  1E0F                     	;# 
  4088  1E10                     	;# 
  4089  1E11                     	;# 
  4090  1E12                     	;# 
  4091  1E13                     	;# 
  4092  1E14                     	;# 
  4093  1E15                     	;# 
  4094  1E16                     	;# 
  4095  1E17                     	;# 
  4096  1E18                     	;# 
  4097  1E19                     	;# 
  4098  1E1A                     	;# 
  4099  1E1B                     	;# 
  4100  1E1C                     	;# 
  4101  1E1D                     	;# 
  4102  1E1E                     	;# 
  4103  1E1F                     	;# 
  4104  1E20                     	;# 
  4105  1E21                     	;# 
  4106  1E22                     	;# 
  4107  1E23                     	;# 
  4108  1E24                     	;# 
  4109  1E25                     	;# 
  4110  1E26                     	;# 
  4111  1E27                     	;# 
  4112  1E28                     	;# 
  4113  1E29                     	;# 
  4114  1E2A                     	;# 
  4115  1E2B                     	;# 
  4116  1E2C                     	;# 
  4117  1E2D                     	;# 
  4118  1E2E                     	;# 
  4119  1E2F                     	;# 
  4120  1E30                     	;# 
  4121  1E31                     	;# 
  4122  1E32                     	;# 
  4123  1E33                     	;# 
  4124  1E34                     	;# 
  4125  1E35                     	;# 
  4126  1E36                     	;# 
  4127  1E37                     	;# 
  4128  1E8F                     	;# 
  4129  1E90                     	;# 
  4130  1E91                     	;# 
  4131  1E92                     	;# 
  4132  1E93                     	;# 
  4133  1E94                     	;# 
  4134  1E95                     	;# 
  4135  1E96                     	;# 
  4136  1E97                     	;# 
  4137  1E9C                     	;# 
  4138  1E9D                     	;# 
  4139  1E9E                     	;# 
  4140  1EA1                     	;# 
  4141  1EA2                     	;# 
  4142  1EA3                     	;# 
  4143  1EA4                     	;# 
  4144  1EA9                     	;# 
  4145  1EAA                     	;# 
  4146  1EB1                     	;# 
  4147  1EB2                     	;# 
  4148  1EB8                     	;# 
  4149  1EB9                     	;# 
  4150  1EBA                     	;# 
  4151  1EBB                     	;# 
  4152  1EBC                     	;# 
  4153  1EBD                     	;# 
  4154  1EBE                     	;# 
  4155  1EC3                     	;# 
  4156  1EC5                     	;# 
  4157  1EC6                     	;# 
  4158  1EC7                     	;# 
  4159  1EC8                     	;# 
  4160  1EC9                     	;# 
  4161  1ECA                     	;# 
  4162  1ECB                     	;# 
  4163  1ECB                     	;# 
  4164  1ECB                     	;# 
  4165  1ECC                     	;# 
  4166  1ECC                     	;# 
  4167  1ECC                     	;# 
  4168  1F10                     	;# 
  4169  1F11                     	;# 
  4170  1F12                     	;# 
  4171  1F14                     	;# 
  4172  1F15                     	;# 
  4173  1F1C                     	;# 
  4174  1F1D                     	;# 
  4175  1F1E                     	;# 
  4176  1F1F                     	;# 
  4177  1F20                     	;# 
  4178  1F21                     	;# 
  4179  1F22                     	;# 
  4180  1F23                     	;# 
  4181  1F24                     	;# 
  4182  1F25                     	;# 
  4183  1F26                     	;# 
  4184  1F27                     	;# 
  4185  1F38                     	;# 
  4186  1F39                     	;# 
  4187  1F3A                     	;# 
  4188  1F3B                     	;# 
  4189  1F3C                     	;# 
  4190  1F3D                     	;# 
  4191  1F3E                     	;# 
  4192  1F3F                     	;# 
  4193  1F43                     	;# 
  4194  1F44                     	;# 
  4195  1F45                     	;# 
  4196  1F46                     	;# 
  4197  1F47                     	;# 
  4198  1F48                     	;# 
  4199  1F49                     	;# 
  4200  1F4A                     	;# 
  4201  1F4E                     	;# 
  4202  1F4F                     	;# 
  4203  1F50                     	;# 
  4204  1F51                     	;# 
  4205  1F52                     	;# 
  4206  1F53                     	;# 
  4207  1F54                     	;# 
  4208  1F55                     	;# 
  4209  1FE4                     	;# 
  4210  1FE5                     	;# 
  4211  1FE6                     	;# 
  4212  1FE7                     	;# 
  4213  1FE8                     	;# 
  4214  1FE8                     	;# 
  4215  1FE9                     	;# 
  4216  1FEA                     	;# 
  4217  1FEB                     	;# 
  4218  1FED                     	;# 
  4219  1FEE                     	;# 
  4220  1FEF                     	;# 
  4221  0000                     	;# 
  4222  0001                     	;# 
  4223  0002                     	;# 
  4224  0003                     	;# 
  4225  0004                     	;# 
  4226  0005                     	;# 
  4227  0006                     	;# 
  4228  0007                     	;# 
  4229  0008                     	;# 
  4230  0009                     	;# 
  4231  000A                     	;# 
  4232  000B                     	;# 
  4233  000C                     	;# 
  4234  000D                     	;# 
  4235  000E                     	;# 
  4236  0012                     	;# 
  4237  0013                     	;# 
  4238  0014                     	;# 
  4239  0018                     	;# 
  4240  0019                     	;# 
  4241  001A                     	;# 
  4242  008C                     	;# 
  4243  008C                     	;# 
  4244  008D                     	;# 
  4245  008E                     	;# 
  4246  008E                     	;# 
  4247  008F                     	;# 
  4248  0090                     	;# 
  4249  0090                     	;# 
  4250  0091                     	;# 
  4251  0092                     	;# 
  4252  0092                     	;# 
  4253  0093                     	;# 
  4254  0094                     	;# 
  4255  0094                     	;# 
  4256  0095                     	;# 
  4257  0096                     	;# 
  4258  0096                     	;# 
  4259  0097                     	;# 
  4260  0098                     	;# 
  4261  0099                     	;# 
  4262  009A                     	;# 
  4263  009B                     	;# 
  4264  009B                     	;# 
  4265  009C                     	;# 
  4266  009D                     	;# 
  4267  009D                     	;# 
  4268  009E                     	;# 
  4269  009F                     	;# 
  4270  010C                     	;# 
  4271  010C                     	;# 
  4272  010D                     	;# 
  4273  010E                     	;# 
  4274  010F                     	;# 
  4275  010F                     	;# 
  4276  0110                     	;# 
  4277  0111                     	;# 
  4278  0112                     	;# 
  4279  0113                     	;# 
  4280  0114                     	;# 
  4281  0115                     	;# 
  4282  0116                     	;# 
  4283  0117                     	;# 
  4284  0118                     	;# 
  4285  0119                     	;# 
  4286  0119                     	;# 
  4287  0119                     	;# 
  4288  011A                     	;# 
  4289  011A                     	;# 
  4290  011A                     	;# 
  4291  011B                     	;# 
  4292  011B                     	;# 
  4293  011B                     	;# 
  4294  011B                     	;# 
  4295  011B                     	;# 
  4296  011C                     	;# 
  4297  011C                     	;# 
  4298  011C                     	;# 
  4299  011D                     	;# 
  4300  011D                     	;# 
  4301  011D                     	;# 
  4302  011E                     	;# 
  4303  011E                     	;# 
  4304  011E                     	;# 
  4305  011F                     	;# 
  4306  011F                     	;# 
  4307  011F                     	;# 
  4308  011F                     	;# 
  4309  011F                     	;# 
  4310  018C                     	;# 
  4311  018D                     	;# 
  4312  018E                     	;# 
  4313  018F                     	;# 
  4314  0190                     	;# 
  4315  0191                     	;# 
  4316  0192                     	;# 
  4317  0196                     	;# 
  4318  0197                     	;# 
  4319  0198                     	;# 
  4320  0199                     	;# 
  4321  019A                     	;# 
  4322  019B                     	;# 
  4323  019C                     	;# 
  4324  020C                     	;# 
  4325  020D                     	;# 
  4326  020E                     	;# 
  4327  020E                     	;# 
  4328  020F                     	;# 
  4329  020F                     	;# 
  4330  0210                     	;# 
  4331  0210                     	;# 
  4332  0211                     	;# 
  4333  0211                     	;# 
  4334  0212                     	;# 
  4335  0213                     	;# 
  4336  0214                     	;# 
  4337  0214                     	;# 
  4338  0215                     	;# 
  4339  0215                     	;# 
  4340  0216                     	;# 
  4341  0216                     	;# 
  4342  0217                     	;# 
  4343  0217                     	;# 
  4344  0218                     	;# 
  4345  0219                     	;# 
  4346  021A                     	;# 
  4347  021A                     	;# 
  4348  021B                     	;# 
  4349  021B                     	;# 
  4350  021C                     	;# 
  4351  021C                     	;# 
  4352  021D                     	;# 
  4353  021D                     	;# 
  4354  021E                     	;# 
  4355  021F                     	;# 
  4356  028C                     	;# 
  4357  028C                     	;# 
  4358  028D                     	;# 
  4359  028D                     	;# 
  4360  028E                     	;# 
  4361  028F                     	;# 
  4362  0290                     	;# 
  4363  0291                     	;# 
  4364  0292                     	;# 
  4365  0292                     	;# 
  4366  0293                     	;# 
  4367  0293                     	;# 
  4368  0294                     	;# 
  4369  0295                     	;# 
  4370  0296                     	;# 
  4371  0297                     	;# 
  4372  0298                     	;# 
  4373  0298                     	;# 
  4374  0299                     	;# 
  4375  0299                     	;# 
  4376  029A                     	;# 
  4377  029B                     	;# 
  4378  029C                     	;# 
  4379  029D                     	;# 
  4380  029F                     	;# 
  4381  030C                     	;# 
  4382  030C                     	;# 
  4383  030D                     	;# 
  4384  030E                     	;# 
  4385  030F                     	;# 
  4386  0310                     	;# 
  4387  0310                     	;# 
  4388  0311                     	;# 
  4389  0312                     	;# 
  4390  0313                     	;# 
  4391  0314                     	;# 
  4392  0314                     	;# 
  4393  0315                     	;# 
  4394  0316                     	;# 
  4395  0317                     	;# 
  4396  0318                     	;# 
  4397  0318                     	;# 
  4398  0319                     	;# 
  4399  031A                     	;# 
  4400  031B                     	;# 
  4401  038C                     	;# 
  4402  038C                     	;# 
  4403  038D                     	;# 
  4404  038E                     	;# 
  4405  0390                     	;# 
  4406  0390                     	;# 
  4407  0391                     	;# 
  4408  0392                     	;# 
  4409  048C                     	;# 
  4410  048C                     	;# 
  4411  048D                     	;# 
  4412  048E                     	;# 
  4413  048F                     	;# 
  4414  048F                     	;# 
  4415  0490                     	;# 
  4416  0491                     	;# 
  4417  0492                     	;# 
  4418  0492                     	;# 
  4419  0493                     	;# 
  4420  0494                     	;# 
  4421  0495                     	;# 
  4422  0495                     	;# 
  4423  0496                     	;# 
  4424  0497                     	;# 
  4425  0498                     	;# 
  4426  0499                     	;# 
  4427  049A                     	;# 
  4428  049B                     	;# 
  4429  049C                     	;# 
  4430  049D                     	;# 
  4431  058C                     	;# 
  4432  058C                     	;# 
  4433  058D                     	;# 
  4434  058E                     	;# 
  4435  058F                     	;# 
  4436  058F                     	;# 
  4437  0590                     	;# 
  4438  0591                     	;# 
  4439  0592                     	;# 
  4440  0593                     	;# 
  4441  059C                     	;# 
  4442  059C                     	;# 
  4443  059D                     	;# 
  4444  059D                     	;# 
  4445  059E                     	;# 
  4446  059F                     	;# 
  4447  060C                     	;# 
  4448  060C                     	;# 
  4449  060D                     	;# 
  4450  060D                     	;# 
  4451  060E                     	;# 
  4452  060F                     	;# 
  4453  0610                     	;# 
  4454  0611                     	;# 
  4455  0612                     	;# 
  4456  0613                     	;# 
  4457  0614                     	;# 
  4458  0616                     	;# 
  4459  0616                     	;# 
  4460  0617                     	;# 
  4461  0617                     	;# 
  4462  0618                     	;# 
  4463  0619                     	;# 
  4464  061A                     	;# 
  4465  061B                     	;# 
  4466  061C                     	;# 
  4467  061D                     	;# 
  4468  061E                     	;# 
  4469  070C                     	;# 
  4470  070D                     	;# 
  4471  070E                     	;# 
  4472  070F                     	;# 
  4473  0710                     	;# 
  4474  0711                     	;# 
  4475  0712                     	;# 
  4476  0713                     	;# 
  4477  0714                     	;# 
  4478  0716                     	;# 
  4479  0717                     	;# 
  4480  0718                     	;# 
  4481  0719                     	;# 
  4482  071A                     	;# 
  4483  071B                     	;# 
  4484  071C                     	;# 
  4485  071D                     	;# 
  4486  071E                     	;# 
  4487  0796                     	;# 
  4488  0797                     	;# 
  4489  0798                     	;# 
  4490  0799                     	;# 
  4491  079A                     	;# 
  4492  079B                     	;# 
  4493  079C                     	;# 
  4494  079D                     	;# 
  4495  080C                     	;# 
  4496  080D                     	;# 
  4497  080E                     	;# 
  4498  080F                     	;# 
  4499  0810                     	;# 
  4500  0811                     	;# 
  4501  0812                     	;# 
  4502  0813                     	;# 
  4503  0814                     	;# 
  4504  081A                     	;# 
  4505  081A                     	;# 
  4506  081B                     	;# 
  4507  081C                     	;# 
  4508  081C                     	;# 
  4509  081D                     	;# 
  4510  081E                     	;# 
  4511  081F                     	;# 
  4512  088C                     	;# 
  4513  088D                     	;# 
  4514  088E                     	;# 
  4515  088F                     	;# 
  4516  0890                     	;# 
  4517  0891                     	;# 
  4518  0892                     	;# 
  4519  0893                     	;# 
  4520  0895                     	;# 
  4521  0896                     	;# 
  4522  0897                     	;# 
  4523  0898                     	;# 
  4524  0899                     	;# 
  4525  089A                     	;# 
  4526  089B                     	;# 
  4527  090C                     	;# 
  4528  090E                     	;# 
  4529  090F                     	;# 
  4530  091F                     	;# 
  4531  098F                     	;# 
  4532  098F                     	;# 
  4533  0990                     	;# 
  4534  0991                     	;# 
  4535  0992                     	;# 
  4536  0993                     	;# 
  4537  0994                     	;# 
  4538  0995                     	;# 
  4539  0996                     	;# 
  4540  0997                     	;# 
  4541  1E0F                     	;# 
  4542  1E10                     	;# 
  4543  1E11                     	;# 
  4544  1E12                     	;# 
  4545  1E13                     	;# 
  4546  1E14                     	;# 
  4547  1E15                     	;# 
  4548  1E16                     	;# 
  4549  1E17                     	;# 
  4550  1E18                     	;# 
  4551  1E19                     	;# 
  4552  1E1A                     	;# 
  4553  1E1B                     	;# 
  4554  1E1C                     	;# 
  4555  1E1D                     	;# 
  4556  1E1E                     	;# 
  4557  1E1F                     	;# 
  4558  1E20                     	;# 
  4559  1E21                     	;# 
  4560  1E22                     	;# 
  4561  1E23                     	;# 
  4562  1E24                     	;# 
  4563  1E25                     	;# 
  4564  1E26                     	;# 
  4565  1E27                     	;# 
  4566  1E28                     	;# 
  4567  1E29                     	;# 
  4568  1E2A                     	;# 
  4569  1E2B                     	;# 
  4570  1E2C                     	;# 
  4571  1E2D                     	;# 
  4572  1E2E                     	;# 
  4573  1E2F                     	;# 
  4574  1E30                     	;# 
  4575  1E31                     	;# 
  4576  1E32                     	;# 
  4577  1E33                     	;# 
  4578  1E34                     	;# 
  4579  1E35                     	;# 
  4580  1E36                     	;# 
  4581  1E37                     	;# 
  4582  1E8F                     	;# 
  4583  1E90                     	;# 
  4584  1E91                     	;# 
  4585  1E92                     	;# 
  4586  1E93                     	;# 
  4587  1E94                     	;# 
  4588  1E95                     	;# 
  4589  1E96                     	;# 
  4590  1E97                     	;# 
  4591  1E9C                     	;# 
  4592  1E9D                     	;# 
  4593  1E9E                     	;# 
  4594  1EA1                     	;# 
  4595  1EA2                     	;# 
  4596  1EA3                     	;# 
  4597  1EA4                     	;# 
  4598  1EA9                     	;# 
  4599  1EAA                     	;# 
  4600  1EB1                     	;# 
  4601  1EB2                     	;# 
  4602  1EB8                     	;# 
  4603  1EB9                     	;# 
  4604  1EBA                     	;# 
  4605  1EBB                     	;# 
  4606  1EBC                     	;# 
  4607  1EBD                     	;# 
  4608  1EBE                     	;# 
  4609  1EC3                     	;# 
  4610  1EC5                     	;# 
  4611  1EC6                     	;# 
  4612  1EC7                     	;# 
  4613  1EC8                     	;# 
  4614  1EC9                     	;# 
  4615  1ECA                     	;# 
  4616  1ECB                     	;# 
  4617  1ECB                     	;# 
  4618  1ECB                     	;# 
  4619  1ECC                     	;# 
  4620  1ECC                     	;# 
  4621  1ECC                     	;# 
  4622  1F10                     	;# 
  4623  1F11                     	;# 
  4624  1F12                     	;# 
  4625  1F14                     	;# 
  4626  1F15                     	;# 
  4627  1F1C                     	;# 
  4628  1F1D                     	;# 
  4629  1F1E                     	;# 
  4630  1F1F                     	;# 
  4631  1F20                     	;# 
  4632  1F21                     	;# 
  4633  1F22                     	;# 
  4634  1F23                     	;# 
  4635  1F24                     	;# 
  4636  1F25                     	;# 
  4637  1F26                     	;# 
  4638  1F27                     	;# 
  4639  1F38                     	;# 
  4640  1F39                     	;# 
  4641  1F3A                     	;# 
  4642  1F3B                     	;# 
  4643  1F3C                     	;# 
  4644  1F3D                     	;# 
  4645  1F3E                     	;# 
  4646  1F3F                     	;# 
  4647  1F43                     	;# 
  4648  1F44                     	;# 
  4649  1F45                     	;# 
  4650  1F46                     	;# 
  4651  1F47                     	;# 
  4652  1F48                     	;# 
  4653  1F49                     	;# 
  4654  1F4A                     	;# 
  4655  1F4E                     	;# 
  4656  1F4F                     	;# 
  4657  1F50                     	;# 
  4658  1F51                     	;# 
  4659  1F52                     	;# 
  4660  1F53                     	;# 
  4661  1F54                     	;# 
  4662  1F55                     	;# 
  4663  1FE4                     	;# 
  4664  1FE5                     	;# 
  4665  1FE6                     	;# 
  4666  1FE7                     	;# 
  4667  1FE8                     	;# 
  4668  1FE8                     	;# 
  4669  1FE9                     	;# 
  4670  1FEA                     	;# 
  4671  1FEB                     	;# 
  4672  1FED                     	;# 
  4673  1FEE                     	;# 
  4674  1FEF                     	;# 
  4675  0000                     	;# 
  4676  0001                     	;# 
  4677  0002                     	;# 
  4678  0003                     	;# 
  4679  0004                     	;# 
  4680  0005                     	;# 
  4681  0006                     	;# 
  4682  0007                     	;# 
  4683  0008                     	;# 
  4684  0009                     	;# 
  4685  000A                     	;# 
  4686  000B                     	;# 
  4687  000C                     	;# 
  4688  000D                     	;# 
  4689  000E                     	;# 
  4690  0012                     	;# 
  4691  0013                     	;# 
  4692  0014                     	;# 
  4693  0018                     	;# 
  4694  0019                     	;# 
  4695  001A                     	;# 
  4696  008C                     	;# 
  4697  008C                     	;# 
  4698  008D                     	;# 
  4699  008E                     	;# 
  4700  008E                     	;# 
  4701  008F                     	;# 
  4702  0090                     	;# 
  4703  0090                     	;# 
  4704  0091                     	;# 
  4705  0092                     	;# 
  4706  0092                     	;# 
  4707  0093                     	;# 
  4708  0094                     	;# 
  4709  0094                     	;# 
  4710  0095                     	;# 
  4711  0096                     	;# 
  4712  0096                     	;# 
  4713  0097                     	;# 
  4714  0098                     	;# 
  4715  0099                     	;# 
  4716  009A                     	;# 
  4717  009B                     	;# 
  4718  009B                     	;# 
  4719  009C                     	;# 
  4720  009D                     	;# 
  4721  009D                     	;# 
  4722  009E                     	;# 
  4723  009F                     	;# 
  4724  010C                     	;# 
  4725  010C                     	;# 
  4726  010D                     	;# 
  4727  010E                     	;# 
  4728  010F                     	;# 
  4729  010F                     	;# 
  4730  0110                     	;# 
  4731  0111                     	;# 
  4732  0112                     	;# 
  4733  0113                     	;# 
  4734  0114                     	;# 
  4735  0115                     	;# 
  4736  0116                     	;# 
  4737  0117                     	;# 
  4738  0118                     	;# 
  4739  0119                     	;# 
  4740  0119                     	;# 
  4741  0119                     	;# 
  4742  011A                     	;# 
  4743  011A                     	;# 
  4744  011A                     	;# 
  4745  011B                     	;# 
  4746  011B                     	;# 
  4747  011B                     	;# 
  4748  011B                     	;# 
  4749  011B                     	;# 
  4750  011C                     	;# 
  4751  011C                     	;# 
  4752  011C                     	;# 
  4753  011D                     	;# 
  4754  011D                     	;# 
  4755  011D                     	;# 
  4756  011E                     	;# 
  4757  011E                     	;# 
  4758  011E                     	;# 
  4759  011F                     	;# 
  4760  011F                     	;# 
  4761  011F                     	;# 
  4762  011F                     	;# 
  4763  011F                     	;# 
  4764  018C                     	;# 
  4765  018D                     	;# 
  4766  018E                     	;# 
  4767  018F                     	;# 
  4768  0190                     	;# 
  4769  0191                     	;# 
  4770  0192                     	;# 
  4771  0196                     	;# 
  4772  0197                     	;# 
  4773  0198                     	;# 
  4774  0199                     	;# 
  4775  019A                     	;# 
  4776  019B                     	;# 
  4777  019C                     	;# 
  4778  020C                     	;# 
  4779  020D                     	;# 
  4780  020E                     	;# 
  4781  020E                     	;# 
  4782  020F                     	;# 
  4783  020F                     	;# 
  4784  0210                     	;# 
  4785  0210                     	;# 
  4786  0211                     	;# 
  4787  0211                     	;# 
  4788  0212                     	;# 
  4789  0213                     	;# 
  4790  0214                     	;# 
  4791  0214                     	;# 
  4792  0215                     	;# 
  4793  0215                     	;# 
  4794  0216                     	;# 
  4795  0216                     	;# 
  4796  0217                     	;# 
  4797  0217                     	;# 
  4798  0218                     	;# 
  4799  0219                     	;# 
  4800  021A                     	;# 
  4801  021A                     	;# 
  4802  021B                     	;# 
  4803  021B                     	;# 
  4804  021C                     	;# 
  4805  021C                     	;# 
  4806  021D                     	;# 
  4807  021D                     	;# 
  4808  021E                     	;# 
  4809  021F                     	;# 
  4810  028C                     	;# 
  4811  028C                     	;# 
  4812  028D                     	;# 
  4813  028D                     	;# 
  4814  028E                     	;# 
  4815  028F                     	;# 
  4816  0290                     	;# 
  4817  0291                     	;# 
  4818  0292                     	;# 
  4819  0292                     	;# 
  4820  0293                     	;# 
  4821  0293                     	;# 
  4822  0294                     	;# 
  4823  0295                     	;# 
  4824  0296                     	;# 
  4825  0297                     	;# 
  4826  0298                     	;# 
  4827  0298                     	;# 
  4828  0299                     	;# 
  4829  0299                     	;# 
  4830  029A                     	;# 
  4831  029B                     	;# 
  4832  029C                     	;# 
  4833  029D                     	;# 
  4834  029F                     	;# 
  4835  030C                     	;# 
  4836  030C                     	;# 
  4837  030D                     	;# 
  4838  030E                     	;# 
  4839  030F                     	;# 
  4840  0310                     	;# 
  4841  0310                     	;# 
  4842  0311                     	;# 
  4843  0312                     	;# 
  4844  0313                     	;# 
  4845  0314                     	;# 
  4846  0314                     	;# 
  4847  0315                     	;# 
  4848  0316                     	;# 
  4849  0317                     	;# 
  4850  0318                     	;# 
  4851  0318                     	;# 
  4852  0319                     	;# 
  4853  031A                     	;# 
  4854  031B                     	;# 
  4855  038C                     	;# 
  4856  038C                     	;# 
  4857  038D                     	;# 
  4858  038E                     	;# 
  4859  0390                     	;# 
  4860  0390                     	;# 
  4861  0391                     	;# 
  4862  0392                     	;# 
  4863  048C                     	;# 
  4864  048C                     	;# 
  4865  048D                     	;# 
  4866  048E                     	;# 
  4867  048F                     	;# 
  4868  048F                     	;# 
  4869  0490                     	;# 
  4870  0491                     	;# 
  4871  0492                     	;# 
  4872  0492                     	;# 
  4873  0493                     	;# 
  4874  0494                     	;# 
  4875  0495                     	;# 
  4876  0495                     	;# 
  4877  0496                     	;# 
  4878  0497                     	;# 
  4879  0498                     	;# 
  4880  0499                     	;# 
  4881  049A                     	;# 
  4882  049B                     	;# 
  4883  049C                     	;# 
  4884  049D                     	;# 
  4885  058C                     	;# 
  4886  058C                     	;# 
  4887  058D                     	;# 
  4888  058E                     	;# 
  4889  058F                     	;# 
  4890  058F                     	;# 
  4891  0590                     	;# 
  4892  0591                     	;# 
  4893  0592                     	;# 
  4894  0593                     	;# 
  4895  059C                     	;# 
  4896  059C                     	;# 
  4897  059D                     	;# 
  4898  059D                     	;# 
  4899  059E                     	;# 
  4900  059F                     	;# 
  4901  060C                     	;# 
  4902  060C                     	;# 
  4903  060D                     	;# 
  4904  060D                     	;# 
  4905  060E                     	;# 
  4906  060F                     	;# 
  4907  0610                     	;# 
  4908  0611                     	;# 
  4909  0612                     	;# 
  4910  0613                     	;# 
  4911  0614                     	;# 
  4912  0616                     	;# 
  4913  0616                     	;# 
  4914  0617                     	;# 
  4915  0617                     	;# 
  4916  0618                     	;# 
  4917  0619                     	;# 
  4918  061A                     	;# 
  4919  061B                     	;# 
  4920  061C                     	;# 
  4921  061D                     	;# 
  4922  061E                     	;# 
  4923  070C                     	;# 
  4924  070D                     	;# 
  4925  070E                     	;# 
  4926  070F                     	;# 
  4927  0710                     	;# 
  4928  0711                     	;# 
  4929  0712                     	;# 
  4930  0713                     	;# 
  4931  0714                     	;# 
  4932  0716                     	;# 
  4933  0717                     	;# 
  4934  0718                     	;# 
  4935  0719                     	;# 
  4936  071A                     	;# 
  4937  071B                     	;# 
  4938  071C                     	;# 
  4939  071D                     	;# 
  4940  071E                     	;# 
  4941  0796                     	;# 
  4942  0797                     	;# 
  4943  0798                     	;# 
  4944  0799                     	;# 
  4945  079A                     	;# 
  4946  079B                     	;# 
  4947  079C                     	;# 
  4948  079D                     	;# 
  4949  080C                     	;# 
  4950  080D                     	;# 
  4951  080E                     	;# 
  4952  080F                     	;# 
  4953  0810                     	;# 
  4954  0811                     	;# 
  4955  0812                     	;# 
  4956  0813                     	;# 
  4957  0814                     	;# 
  4958  081A                     	;# 
  4959  081A                     	;# 
  4960  081B                     	;# 
  4961  081C                     	;# 
  4962  081C                     	;# 
  4963  081D                     	;# 
  4964  081E                     	;# 
  4965  081F                     	;# 
  4966  088C                     	;# 
  4967  088D                     	;# 
  4968  088E                     	;# 
  4969  088F                     	;# 
  4970  0890                     	;# 
  4971  0891                     	;# 
  4972  0892                     	;# 
  4973  0893                     	;# 
  4974  0895                     	;# 
  4975  0896                     	;# 
  4976  0897                     	;# 
  4977  0898                     	;# 
  4978  0899                     	;# 
  4979  089A                     	;# 
  4980  089B                     	;# 
  4981  090C                     	;# 
  4982  090E                     	;# 
  4983  090F                     	;# 
  4984  091F                     	;# 
  4985  098F                     	;# 
  4986  098F                     	;# 
  4987  0990                     	;# 
  4988  0991                     	;# 
  4989  0992                     	;# 
  4990  0993                     	;# 
  4991  0994                     	;# 
  4992  0995                     	;# 
  4993  0996                     	;# 
  4994  0997                     	;# 
  4995  1E0F                     	;# 
  4996  1E10                     	;# 
  4997  1E11                     	;# 
  4998  1E12                     	;# 
  4999  1E13                     	;# 
  5000  1E14                     	;# 
  5001  1E15                     	;# 
  5002  1E16                     	;# 
  5003  1E17                     	;# 
  5004  1E18                     	;# 
  5005  1E19                     	;# 
  5006  1E1A                     	;# 
  5007  1E1B                     	;# 
  5008  1E1C                     	;# 
  5009  1E1D                     	;# 
  5010  1E1E                     	;# 
  5011  1E1F                     	;# 
  5012  1E20                     	;# 
  5013  1E21                     	;# 
  5014  1E22                     	;# 
  5015  1E23                     	;# 
  5016  1E24                     	;# 
  5017  1E25                     	;# 
  5018  1E26                     	;# 
  5019  1E27                     	;# 
  5020  1E28                     	;# 
  5021  1E29                     	;# 
  5022  1E2A                     	;# 
  5023  1E2B                     	;# 
  5024  1E2C                     	;# 
  5025  1E2D                     	;# 
  5026  1E2E                     	;# 
  5027  1E2F                     	;# 
  5028  1E30                     	;# 
  5029  1E31                     	;# 
  5030  1E32                     	;# 
  5031  1E33                     	;# 
  5032  1E34                     	;# 
  5033  1E35                     	;# 
  5034  1E36                     	;# 
  5035  1E37                     	;# 
  5036  1E8F                     	;# 
  5037  1E90                     	;# 
  5038  1E91                     	;# 
  5039  1E92                     	;# 
  5040  1E93                     	;# 
  5041  1E94                     	;# 
  5042  1E95                     	;# 
  5043  1E96                     	;# 
  5044  1E97                     	;# 
  5045  1E9C                     	;# 
  5046  1E9D                     	;# 
  5047  1E9E                     	;# 
  5048  1EA1                     	;# 
  5049  1EA2                     	;# 
  5050  1EA3                     	;# 
  5051  1EA4                     	;# 
  5052  1EA9                     	;# 
  5053  1EAA                     	;# 
  5054  1EB1                     	;# 
  5055  1EB2                     	;# 
  5056  1EB8                     	;# 
  5057  1EB9                     	;# 
  5058  1EBA                     	;# 
  5059  1EBB                     	;# 
  5060  1EBC                     	;# 
  5061  1EBD                     	;# 
  5062  1EBE                     	;# 
  5063  1EC3                     	;# 
  5064  1EC5                     	;# 
  5065  1EC6                     	;# 
  5066  1EC7                     	;# 
  5067  1EC8                     	;# 
  5068  1EC9                     	;# 
  5069  1ECA                     	;# 
  5070  1ECB                     	;# 
  5071  1ECB                     	;# 
  5072  1ECB                     	;# 
  5073  1ECC                     	;# 
  5074  1ECC                     	;# 
  5075  1ECC                     	;# 
  5076  1F10                     	;# 
  5077  1F11                     	;# 
  5078  1F12                     	;# 
  5079  1F14                     	;# 
  5080  1F15                     	;# 
  5081  1F1C                     	;# 
  5082  1F1D                     	;# 
  5083  1F1E                     	;# 
  5084  1F1F                     	;# 
  5085  1F20                     	;# 
  5086  1F21                     	;# 
  5087  1F22                     	;# 
  5088  1F23                     	;# 
  5089  1F24                     	;# 
  5090  1F25                     	;# 
  5091  1F26                     	;# 
  5092  1F27                     	;# 
  5093  1F38                     	;# 
  5094  1F39                     	;# 
  5095  1F3A                     	;# 
  5096  1F3B                     	;# 
  5097  1F3C                     	;# 
  5098  1F3D                     	;# 
  5099  1F3E                     	;# 
  5100  1F3F                     	;# 
  5101  1F43                     	;# 
  5102  1F44                     	;# 
  5103  1F45                     	;# 
  5104  1F46                     	;# 
  5105  1F47                     	;# 
  5106  1F48                     	;# 
  5107  1F49                     	;# 
  5108  1F4A                     	;# 
  5109  1F4E                     	;# 
  5110  1F4F                     	;# 
  5111  1F50                     	;# 
  5112  1F51                     	;# 
  5113  1F52                     	;# 
  5114  1F53                     	;# 
  5115  1F54                     	;# 
  5116  1F55                     	;# 
  5117  1FE4                     	;# 
  5118  1FE5                     	;# 
  5119  1FE6                     	;# 
  5120  1FE7                     	;# 
  5121  1FE8                     	;# 
  5122  1FE8                     	;# 
  5123  1FE9                     	;# 
  5124  1FEA                     	;# 
  5125  1FEB                     	;# 
  5126  1FED                     	;# 
  5127  1FEE                     	;# 
  5128  1FEF                     	;# 
  5129  0000                     	;# 
  5130  0001                     	;# 
  5131  0002                     	;# 
  5132  0003                     	;# 
  5133  0004                     	;# 
  5134  0005                     	;# 
  5135  0006                     	;# 
  5136  0007                     	;# 
  5137  0008                     	;# 
  5138  0009                     	;# 
  5139  000A                     	;# 
  5140  000B                     	;# 
  5141  000C                     	;# 
  5142  000D                     	;# 
  5143  000E                     	;# 
  5144  0012                     	;# 
  5145  0013                     	;# 
  5146  0014                     	;# 
  5147  0018                     	;# 
  5148  0019                     	;# 
  5149  001A                     	;# 
  5150  008C                     	;# 
  5151  008C                     	;# 
  5152  008D                     	;# 
  5153  008E                     	;# 
  5154  008E                     	;# 
  5155  008F                     	;# 
  5156  0090                     	;# 
  5157  0090                     	;# 
  5158  0091                     	;# 
  5159  0092                     	;# 
  5160  0092                     	;# 
  5161  0093                     	;# 
  5162  0094                     	;# 
  5163  0094                     	;# 
  5164  0095                     	;# 
  5165  0096                     	;# 
  5166  0096                     	;# 
  5167  0097                     	;# 
  5168  0098                     	;# 
  5169  0099                     	;# 
  5170  009A                     	;# 
  5171  009B                     	;# 
  5172  009B                     	;# 
  5173  009C                     	;# 
  5174  009D                     	;# 
  5175  009D                     	;# 
  5176  009E                     	;# 
  5177  009F                     	;# 
  5178  010C                     	;# 
  5179  010C                     	;# 
  5180  010D                     	;# 
  5181  010E                     	;# 
  5182  010F                     	;# 
  5183  010F                     	;# 
  5184  0110                     	;# 
  5185  0111                     	;# 
  5186  0112                     	;# 
  5187  0113                     	;# 
  5188  0114                     	;# 
  5189  0115                     	;# 
  5190  0116                     	;# 
  5191  0117                     	;# 
  5192  0118                     	;# 
  5193  0119                     	;# 
  5194  0119                     	;# 
  5195  0119                     	;# 
  5196  011A                     	;# 
  5197  011A                     	;# 
  5198  011A                     	;# 
  5199  011B                     	;# 
  5200  011B                     	;# 
  5201  011B                     	;# 
  5202  011B                     	;# 
  5203  011B                     	;# 
  5204  011C                     	;# 
  5205  011C                     	;# 
  5206  011C                     	;# 
  5207  011D                     	;# 
  5208  011D                     	;# 
  5209  011D                     	;# 
  5210  011E                     	;# 
  5211  011E                     	;# 
  5212  011E                     	;# 
  5213  011F                     	;# 
  5214  011F                     	;# 
  5215  011F                     	;# 
  5216  011F                     	;# 
  5217  011F                     	;# 
  5218  018C                     	;# 
  5219  018D                     	;# 
  5220  018E                     	;# 
  5221  018F                     	;# 
  5222  0190                     	;# 
  5223  0191                     	;# 
  5224  0192                     	;# 
  5225  0196                     	;# 
  5226  0197                     	;# 
  5227  0198                     	;# 
  5228  0199                     	;# 
  5229  019A                     	;# 
  5230  019B                     	;# 
  5231  019C                     	;# 
  5232  020C                     	;# 
  5233  020D                     	;# 
  5234  020E                     	;# 
  5235  020E                     	;# 
  5236  020F                     	;# 
  5237  020F                     	;# 
  5238  0210                     	;# 
  5239  0210                     	;# 
  5240  0211                     	;# 
  5241  0211                     	;# 
  5242  0212                     	;# 
  5243  0213                     	;# 
  5244  0214                     	;# 
  5245  0214                     	;# 
  5246  0215                     	;# 
  5247  0215                     	;# 
  5248  0216                     	;# 
  5249  0216                     	;# 
  5250  0217                     	;# 
  5251  0217                     	;# 
  5252  0218                     	;# 
  5253  0219                     	;# 
  5254  021A                     	;# 
  5255  021A                     	;# 
  5256  021B                     	;# 
  5257  021B                     	;# 
  5258  021C                     	;# 
  5259  021C                     	;# 
  5260  021D                     	;# 
  5261  021D                     	;# 
  5262  021E                     	;# 
  5263  021F                     	;# 
  5264  028C                     	;# 
  5265  028C                     	;# 
  5266  028D                     	;# 
  5267  028D                     	;# 
  5268  028E                     	;# 
  5269  028F                     	;# 
  5270  0290                     	;# 
  5271  0291                     	;# 
  5272  0292                     	;# 
  5273  0292                     	;# 
  5274  0293                     	;# 
  5275  0293                     	;# 
  5276  0294                     	;# 
  5277  0295                     	;# 
  5278  0296                     	;# 
  5279  0297                     	;# 
  5280  0298                     	;# 
  5281  0298                     	;# 
  5282  0299                     	;# 
  5283  0299                     	;# 
  5284  029A                     	;# 
  5285  029B                     	;# 
  5286  029C                     	;# 
  5287  029D                     	;# 
  5288  029F                     	;# 
  5289  030C                     	;# 
  5290  030C                     	;# 
  5291  030D                     	;# 
  5292  030E                     	;# 
  5293  030F                     	;# 
  5294  0310                     	;# 
  5295  0310                     	;# 
  5296  0311                     	;# 
  5297  0312                     	;# 
  5298  0313                     	;# 
  5299  0314                     	;# 
  5300  0314                     	;# 
  5301  0315                     	;# 
  5302  0316                     	;# 
  5303  0317                     	;# 
  5304  0318                     	;# 
  5305  0318                     	;# 
  5306  0319                     	;# 
  5307  031A                     	;# 
  5308  031B                     	;# 
  5309  038C                     	;# 
  5310  038C                     	;# 
  5311  038D                     	;# 
  5312  038E                     	;# 
  5313  0390                     	;# 
  5314  0390                     	;# 
  5315  0391                     	;# 
  5316  0392                     	;# 
  5317  048C                     	;# 
  5318  048C                     	;# 
  5319  048D                     	;# 
  5320  048E                     	;# 
  5321  048F                     	;# 
  5322  048F                     	;# 
  5323  0490                     	;# 
  5324  0491                     	;# 
  5325  0492                     	;# 
  5326  0492                     	;# 
  5327  0493                     	;# 
  5328  0494                     	;# 
  5329  0495                     	;# 
  5330  0495                     	;# 
  5331  0496                     	;# 
  5332  0497                     	;# 
  5333  0498                     	;# 
  5334  0499                     	;# 
  5335  049A                     	;# 
  5336  049B                     	;# 
  5337  049C                     	;# 
  5338  049D                     	;# 
  5339  058C                     	;# 
  5340  058C                     	;# 
  5341  058D                     	;# 
  5342  058E                     	;# 
  5343  058F                     	;# 
  5344  058F                     	;# 
  5345  0590                     	;# 
  5346  0591                     	;# 
  5347  0592                     	;# 
  5348  0593                     	;# 
  5349  059C                     	;# 
  5350  059C                     	;# 
  5351  059D                     	;# 
  5352  059D                     	;# 
  5353  059E                     	;# 
  5354  059F                     	;# 
  5355  060C                     	;# 
  5356  060C                     	;# 
  5357  060D                     	;# 
  5358  060D                     	;# 
  5359  060E                     	;# 
  5360  060F                     	;# 
  5361  0610                     	;# 
  5362  0611                     	;# 
  5363  0612                     	;# 
  5364  0613                     	;# 
  5365  0614                     	;# 
  5366  0616                     	;# 
  5367  0616                     	;# 
  5368  0617                     	;# 
  5369  0617                     	;# 
  5370  0618                     	;# 
  5371  0619                     	;# 
  5372  061A                     	;# 
  5373  061B                     	;# 
  5374  061C                     	;# 
  5375  061D                     	;# 
  5376  061E                     	;# 
  5377  070C                     	;# 
  5378  070D                     	;# 
  5379  070E                     	;# 
  5380  070F                     	;# 
  5381  0710                     	;# 
  5382  0711                     	;# 
  5383  0712                     	;# 
  5384  0713                     	;# 
  5385  0714                     	;# 
  5386  0716                     	;# 
  5387  0717                     	;# 
  5388  0718                     	;# 
  5389  0719                     	;# 
  5390  071A                     	;# 
  5391  071B                     	;# 
  5392  071C                     	;# 
  5393  071D                     	;# 
  5394  071E                     	;# 
  5395  0796                     	;# 
  5396  0797                     	;# 
  5397  0798                     	;# 
  5398  0799                     	;# 
  5399  079A                     	;# 
  5400  079B                     	;# 
  5401  079C                     	;# 
  5402  079D                     	;# 
  5403  080C                     	;# 
  5404  080D                     	;# 
  5405  080E                     	;# 
  5406  080F                     	;# 
  5407  0810                     	;# 
  5408  0811                     	;# 
  5409  0812                     	;# 
  5410  0813                     	;# 
  5411  0814                     	;# 
  5412  081A                     	;# 
  5413  081A                     	;# 
  5414  081B                     	;# 
  5415  081C                     	;# 
  5416  081C                     	;# 
  5417  081D                     	;# 
  5418  081E                     	;# 
  5419  081F                     	;# 
  5420  088C                     	;# 
  5421  088D                     	;# 
  5422  088E                     	;# 
  5423  088F                     	;# 
  5424  0890                     	;# 
  5425  0891                     	;# 
  5426  0892                     	;# 
  5427  0893                     	;# 
  5428  0895                     	;# 
  5429  0896                     	;# 
  5430  0897                     	;# 
  5431  0898                     	;# 
  5432  0899                     	;# 
  5433  089A                     	;# 
  5434  089B                     	;# 
  5435  090C                     	;# 
  5436  090E                     	;# 
  5437  090F                     	;# 
  5438  091F                     	;# 
  5439  098F                     	;# 
  5440  098F                     	;# 
  5441  0990                     	;# 
  5442  0991                     	;# 
  5443  0992                     	;# 
  5444  0993                     	;# 
  5445  0994                     	;# 
  5446  0995                     	;# 
  5447  0996                     	;# 
  5448  0997                     	;# 
  5449  1E0F                     	;# 
  5450  1E10                     	;# 
  5451  1E11                     	;# 
  5452  1E12                     	;# 
  5453  1E13                     	;# 
  5454  1E14                     	;# 
  5455  1E15                     	;# 
  5456  1E16                     	;# 
  5457  1E17                     	;# 
  5458  1E18                     	;# 
  5459  1E19                     	;# 
  5460  1E1A                     	;# 
  5461  1E1B                     	;# 
  5462  1E1C                     	;# 
  5463  1E1D                     	;# 
  5464  1E1E                     	;# 
  5465  1E1F                     	;# 
  5466  1E20                     	;# 
  5467  1E21                     	;# 
  5468  1E22                     	;# 
  5469  1E23                     	;# 
  5470  1E24                     	;# 
  5471  1E25                     	;# 
  5472  1E26                     	;# 
  5473  1E27                     	;# 
  5474  1E28                     	;# 
  5475  1E29                     	;# 
  5476  1E2A                     	;# 
  5477  1E2B                     	;# 
  5478  1E2C                     	;# 
  5479  1E2D                     	;# 
  5480  1E2E                     	;# 
  5481  1E2F                     	;# 
  5482  1E30                     	;# 
  5483  1E31                     	;# 
  5484  1E32                     	;# 
  5485  1E33                     	;# 
  5486  1E34                     	;# 
  5487  1E35                     	;# 
  5488  1E36                     	;# 
  5489  1E37                     	;# 
  5490  1E8F                     	;# 
  5491  1E90                     	;# 
  5492  1E91                     	;# 
  5493  1E92                     	;# 
  5494  1E93                     	;# 
  5495  1E94                     	;# 
  5496  1E95                     	;# 
  5497  1E96                     	;# 
  5498  1E97                     	;# 
  5499  1E9C                     	;# 
  5500  1E9D                     	;# 
  5501  1E9E                     	;# 
  5502  1EA1                     	;# 
  5503  1EA2                     	;# 
  5504  1EA3                     	;# 
  5505  1EA4                     	;# 
  5506  1EA9                     	;# 
  5507  1EAA                     	;# 
  5508  1EB1                     	;# 
  5509  1EB2                     	;# 
  5510  1EB8                     	;# 
  5511  1EB9                     	;# 
  5512  1EBA                     	;# 
  5513  1EBB                     	;# 
  5514  1EBC                     	;# 
  5515  1EBD                     	;# 
  5516  1EBE                     	;# 
  5517  1EC3                     	;# 
  5518  1EC5                     	;# 
  5519  1EC6                     	;# 
  5520  1EC7                     	;# 
  5521  1EC8                     	;# 
  5522  1EC9                     	;# 
  5523  1ECA                     	;# 
  5524  1ECB                     	;# 
  5525  1ECB                     	;# 
  5526  1ECB                     	;# 
  5527  1ECC                     	;# 
  5528  1ECC                     	;# 
  5529  1ECC                     	;# 
  5530  1F10                     	;# 
  5531  1F11                     	;# 
  5532  1F12                     	;# 
  5533  1F14                     	;# 
  5534  1F15                     	;# 
  5535  1F1C                     	;# 
  5536  1F1D                     	;# 
  5537  1F1E                     	;# 
  5538  1F1F                     	;# 
  5539  1F20                     	;# 
  5540  1F21                     	;# 
  5541  1F22                     	;# 
  5542  1F23                     	;# 
  5543  1F24                     	;# 
  5544  1F25                     	;# 
  5545  1F26                     	;# 
  5546  1F27                     	;# 
  5547  1F38                     	;# 
  5548  1F39                     	;# 
  5549  1F3A                     	;# 
  5550  1F3B                     	;# 
  5551  1F3C                     	;# 
  5552  1F3D                     	;# 
  5553  1F3E                     	;# 
  5554  1F3F                     	;# 
  5555  1F43                     	;# 
  5556  1F44                     	;# 
  5557  1F45                     	;# 
  5558  1F46                     	;# 
  5559  1F47                     	;# 
  5560  1F48                     	;# 
  5561  1F49                     	;# 
  5562  1F4A                     	;# 
  5563  1F4E                     	;# 
  5564  1F4F                     	;# 
  5565  1F50                     	;# 
  5566  1F51                     	;# 
  5567  1F52                     	;# 
  5568  1F53                     	;# 
  5569  1F54                     	;# 
  5570  1F55                     	;# 
  5571  1FE4                     	;# 
  5572  1FE5                     	;# 
  5573  1FE6                     	;# 
  5574  1FE7                     	;# 
  5575  1FE8                     	;# 
  5576  1FE8                     	;# 
  5577  1FE9                     	;# 
  5578  1FEA                     	;# 
  5579  1FEB                     	;# 
  5580  1FED                     	;# 
  5581  1FEE                     	;# 
  5582  1FEF                     	;# 
  5583  0000                     	;# 
  5584  0001                     	;# 
  5585  0002                     	;# 
  5586  0003                     	;# 
  5587  0004                     	;# 
  5588  0005                     	;# 
  5589  0006                     	;# 
  5590  0007                     	;# 
  5591  0008                     	;# 
  5592  0009                     	;# 
  5593  000A                     	;# 
  5594  000B                     	;# 
  5595  000C                     	;# 
  5596  000D                     	;# 
  5597  000E                     	;# 
  5598  0012                     	;# 
  5599  0013                     	;# 
  5600  0014                     	;# 
  5601  0018                     	;# 
  5602  0019                     	;# 
  5603  001A                     	;# 
  5604  008C                     	;# 
  5605  008C                     	;# 
  5606  008D                     	;# 
  5607  008E                     	;# 
  5608  008E                     	;# 
  5609  008F                     	;# 
  5610  0090                     	;# 
  5611  0090                     	;# 
  5612  0091                     	;# 
  5613  0092                     	;# 
  5614  0092                     	;# 
  5615  0093                     	;# 
  5616  0094                     	;# 
  5617  0094                     	;# 
  5618  0095                     	;# 
  5619  0096                     	;# 
  5620  0096                     	;# 
  5621  0097                     	;# 
  5622  0098                     	;# 
  5623  0099                     	;# 
  5624  009A                     	;# 
  5625  009B                     	;# 
  5626  009B                     	;# 
  5627  009C                     	;# 
  5628  009D                     	;# 
  5629  009D                     	;# 
  5630  009E                     	;# 
  5631  009F                     	;# 
  5632  010C                     	;# 
  5633  010C                     	;# 
  5634  010D                     	;# 
  5635  010E                     	;# 
  5636  010F                     	;# 
  5637  010F                     	;# 
  5638  0110                     	;# 
  5639  0111                     	;# 
  5640  0112                     	;# 
  5641  0113                     	;# 
  5642  0114                     	;# 
  5643  0115                     	;# 
  5644  0116                     	;# 
  5645  0117                     	;# 
  5646  0118                     	;# 
  5647  0119                     	;# 
  5648  0119                     	;# 
  5649  0119                     	;# 
  5650  011A                     	;# 
  5651  011A                     	;# 
  5652  011A                     	;# 
  5653  011B                     	;# 
  5654  011B                     	;# 
  5655  011B                     	;# 
  5656  011B                     	;# 
  5657  011B                     	;# 
  5658  011C                     	;# 
  5659  011C                     	;# 
  5660  011C                     	;# 
  5661  011D                     	;# 
  5662  011D                     	;# 
  5663  011D                     	;# 
  5664  011E                     	;# 
  5665  011E                     	;# 
  5666  011E                     	;# 
  5667  011F                     	;# 
  5668  011F                     	;# 
  5669  011F                     	;# 
  5670  011F                     	;# 
  5671  011F                     	;# 
  5672  018C                     	;# 
  5673  018D                     	;# 
  5674  018E                     	;# 
  5675  018F                     	;# 
  5676  0190                     	;# 
  5677  0191                     	;# 
  5678  0192                     	;# 
  5679  0196                     	;# 
  5680  0197                     	;# 
  5681  0198                     	;# 
  5682  0199                     	;# 
  5683  019A                     	;# 
  5684  019B                     	;# 
  5685  019C                     	;# 
  5686  020C                     	;# 
  5687  020D                     	;# 
  5688  020E                     	;# 
  5689  020E                     	;# 
  5690  020F                     	;# 
  5691  020F                     	;# 
  5692  0210                     	;# 
  5693  0210                     	;# 
  5694  0211                     	;# 
  5695  0211                     	;# 
  5696  0212                     	;# 
  5697  0213                     	;# 
  5698  0214                     	;# 
  5699  0214                     	;# 
  5700  0215                     	;# 
  5701  0215                     	;# 
  5702  0216                     	;# 
  5703  0216                     	;# 
  5704  0217                     	;# 
  5705  0217                     	;# 
  5706  0218                     	;# 
  5707  0219                     	;# 
  5708  021A                     	;# 
  5709  021A                     	;# 
  5710  021B                     	;# 
  5711  021B                     	;# 
  5712  021C                     	;# 
  5713  021C                     	;# 
  5714  021D                     	;# 
  5715  021D                     	;# 
  5716  021E                     	;# 
  5717  021F                     	;# 
  5718  028C                     	;# 
  5719  028C                     	;# 
  5720  028D                     	;# 
  5721  028D                     	;# 
  5722  028E                     	;# 
  5723  028F                     	;# 
  5724  0290                     	;# 
  5725  0291                     	;# 
  5726  0292                     	;# 
  5727  0292                     	;# 
  5728  0293                     	;# 
  5729  0293                     	;# 
  5730  0294                     	;# 
  5731  0295                     	;# 
  5732  0296                     	;# 
  5733  0297                     	;# 
  5734  0298                     	;# 
  5735  0298                     	;# 
  5736  0299                     	;# 
  5737  0299                     	;# 
  5738  029A                     	;# 
  5739  029B                     	;# 
  5740  029C                     	;# 
  5741  029D                     	;# 
  5742  029F                     	;# 
  5743  030C                     	;# 
  5744  030C                     	;# 
  5745  030D                     	;# 
  5746  030E                     	;# 
  5747  030F                     	;# 
  5748  0310                     	;# 
  5749  0310                     	;# 
  5750  0311                     	;# 
  5751  0312                     	;# 
  5752  0313                     	;# 
  5753  0314                     	;# 
  5754  0314                     	;# 
  5755  0315                     	;# 
  5756  0316                     	;# 
  5757  0317                     	;# 
  5758  0318                     	;# 
  5759  0318                     	;# 
  5760  0319                     	;# 
  5761  031A                     	;# 
  5762  031B                     	;# 
  5763  038C                     	;# 
  5764  038C                     	;# 
  5765  038D                     	;# 
  5766  038E                     	;# 
  5767  0390                     	;# 
  5768  0390                     	;# 
  5769  0391                     	;# 
  5770  0392                     	;# 
  5771  048C                     	;# 
  5772  048C                     	;# 
  5773  048D                     	;# 
  5774  048E                     	;# 
  5775  048F                     	;# 
  5776  048F                     	;# 
  5777  0490                     	;# 
  5778  0491                     	;# 
  5779  0492                     	;# 
  5780  0492                     	;# 
  5781  0493                     	;# 
  5782  0494                     	;# 
  5783  0495                     	;# 
  5784  0495                     	;# 
  5785  0496                     	;# 
  5786  0497                     	;# 
  5787  0498                     	;# 
  5788  0499                     	;# 
  5789  049A                     	;# 
  5790  049B                     	;# 
  5791  049C                     	;# 
  5792  049D                     	;# 
  5793  058C                     	;# 
  5794  058C                     	;# 
  5795  058D                     	;# 
  5796  058E                     	;# 
  5797  058F                     	;# 
  5798  058F                     	;# 
  5799  0590                     	;# 
  5800  0591                     	;# 
  5801  0592                     	;# 
  5802  0593                     	;# 
  5803  059C                     	;# 
  5804  059C                     	;# 
  5805  059D                     	;# 
  5806  059D                     	;# 
  5807  059E                     	;# 
  5808  059F                     	;# 
  5809  060C                     	;# 
  5810  060C                     	;# 
  5811  060D                     	;# 
  5812  060D                     	;# 
  5813  060E                     	;# 
  5814  060F                     	;# 
  5815  0610                     	;# 
  5816  0611                     	;# 
  5817  0612                     	;# 
  5818  0613                     	;# 
  5819  0614                     	;# 
  5820  0616                     	;# 
  5821  0616                     	;# 
  5822  0617                     	;# 
  5823  0617                     	;# 
  5824  0618                     	;# 
  5825  0619                     	;# 
  5826  061A                     	;# 
  5827  061B                     	;# 
  5828  061C                     	;# 
  5829  061D                     	;# 
  5830  061E                     	;# 
  5831  070C                     	;# 
  5832  070D                     	;# 
  5833  070E                     	;# 
  5834  070F                     	;# 
  5835  0710                     	;# 
  5836  0711                     	;# 
  5837  0712                     	;# 
  5838  0713                     	;# 
  5839  0714                     	;# 
  5840  0716                     	;# 
  5841  0717                     	;# 
  5842  0718                     	;# 
  5843  0719                     	;# 
  5844  071A                     	;# 
  5845  071B                     	;# 
  5846  071C                     	;# 
  5847  071D                     	;# 
  5848  071E                     	;# 
  5849  0796                     	;# 
  5850  0797                     	;# 
  5851  0798                     	;# 
  5852  0799                     	;# 
  5853  079A                     	;# 
  5854  079B                     	;# 
  5855  079C                     	;# 
  5856  079D                     	;# 
  5857  080C                     	;# 
  5858  080D                     	;# 
  5859  080E                     	;# 
  5860  080F                     	;# 
  5861  0810                     	;# 
  5862  0811                     	;# 
  5863  0812                     	;# 
  5864  0813                     	;# 
  5865  0814                     	;# 
  5866  081A                     	;# 
  5867  081A                     	;# 
  5868  081B                     	;# 
  5869  081C                     	;# 
  5870  081C                     	;# 
  5871  081D                     	;# 
  5872  081E                     	;# 
  5873  081F                     	;# 
  5874  088C                     	;# 
  5875  088D                     	;# 
  5876  088E                     	;# 
  5877  088F                     	;# 
  5878  0890                     	;# 
  5879  0891                     	;# 
  5880  0892                     	;# 
  5881  0893                     	;# 
  5882  0895                     	;# 
  5883  0896                     	;# 
  5884  0897                     	;# 
  5885  0898                     	;# 
  5886  0899                     	;# 
  5887  089A                     	;# 
  5888  089B                     	;# 
  5889  090C                     	;# 
  5890  090E                     	;# 
  5891  090F                     	;# 
  5892  091F                     	;# 
  5893  098F                     	;# 
  5894  098F                     	;# 
  5895  0990                     	;# 
  5896  0991                     	;# 
  5897  0992                     	;# 
  5898  0993                     	;# 
  5899  0994                     	;# 
  5900  0995                     	;# 
  5901  0996                     	;# 
  5902  0997                     	;# 
  5903  1E0F                     	;# 
  5904  1E10                     	;# 
  5905  1E11                     	;# 
  5906  1E12                     	;# 
  5907  1E13                     	;# 
  5908  1E14                     	;# 
  5909  1E15                     	;# 
  5910  1E16                     	;# 
  5911  1E17                     	;# 
  5912  1E18                     	;# 
  5913  1E19                     	;# 
  5914  1E1A                     	;# 
  5915  1E1B                     	;# 
  5916  1E1C                     	;# 
  5917  1E1D                     	;# 
  5918  1E1E                     	;# 
  5919  1E1F                     	;# 
  5920  1E20                     	;# 
  5921  1E21                     	;# 
  5922  1E22                     	;# 
  5923  1E23                     	;# 
  5924  1E24                     	;# 
  5925  1E25                     	;# 
  5926  1E26                     	;# 
  5927  1E27                     	;# 
  5928  1E28                     	;# 
  5929  1E29                     	;# 
  5930  1E2A                     	;# 
  5931  1E2B                     	;# 
  5932  1E2C                     	;# 
  5933  1E2D                     	;# 
  5934  1E2E                     	;# 
  5935  1E2F                     	;# 
  5936  1E30                     	;# 
  5937  1E31                     	;# 
  5938  1E32                     	;# 
  5939  1E33                     	;# 
  5940  1E34                     	;# 
  5941  1E35                     	;# 
  5942  1E36                     	;# 
  5943  1E37                     	;# 
  5944  1E8F                     	;# 
  5945  1E90                     	;# 
  5946  1E91                     	;# 
  5947  1E92                     	;# 
  5948  1E93                     	;# 
  5949  1E94                     	;# 
  5950  1E95                     	;# 
  5951  1E96                     	;# 
  5952  1E97                     	;# 
  5953  1E9C                     	;# 
  5954  1E9D                     	;# 
  5955  1E9E                     	;# 
  5956  1EA1                     	;# 
  5957  1EA2                     	;# 
  5958  1EA3                     	;# 
  5959  1EA4                     	;# 
  5960  1EA9                     	;# 
  5961  1EAA                     	;# 
  5962  1EB1                     	;# 
  5963  1EB2                     	;# 
  5964  1EB8                     	;# 
  5965  1EB9                     	;# 
  5966  1EBA                     	;# 
  5967  1EBB                     	;# 
  5968  1EBC                     	;# 
  5969  1EBD                     	;# 
  5970  1EBE                     	;# 
  5971  1EC3                     	;# 
  5972  1EC5                     	;# 
  5973  1EC6                     	;# 
  5974  1EC7                     	;# 
  5975  1EC8                     	;# 
  5976  1EC9                     	;# 
  5977  1ECA                     	;# 
  5978  1ECB                     	;# 
  5979  1ECB                     	;# 
  5980  1ECB                     	;# 
  5981  1ECC                     	;# 
  5982  1ECC                     	;# 
  5983  1ECC                     	;# 
  5984  1F10                     	;# 
  5985  1F11                     	;# 
  5986  1F12                     	;# 
  5987  1F14                     	;# 
  5988  1F15                     	;# 
  5989  1F1C                     	;# 
  5990  1F1D                     	;# 
  5991  1F1E                     	;# 
  5992  1F1F                     	;# 
  5993  1F20                     	;# 
  5994  1F21                     	;# 
  5995  1F22                     	;# 
  5996  1F23                     	;# 
  5997  1F24                     	;# 
  5998  1F25                     	;# 
  5999  1F26                     	;# 
  6000  1F27                     	;# 
  6001  1F38                     	;# 
  6002  1F39                     	;# 
  6003  1F3A                     	;# 
  6004  1F3B                     	;# 
  6005  1F3C                     	;# 
  6006  1F3D                     	;# 
  6007  1F3E                     	;# 
  6008  1F3F                     	;# 
  6009  1F43                     	;# 
  6010  1F44                     	;# 
  6011  1F45                     	;# 
  6012  1F46                     	;# 
  6013  1F47                     	;# 
  6014  1F48                     	;# 
  6015  1F49                     	;# 
  6016  1F4A                     	;# 
  6017  1F4E                     	;# 
  6018  1F4F                     	;# 
  6019  1F50                     	;# 
  6020  1F51                     	;# 
  6021  1F52                     	;# 
  6022  1F53                     	;# 
  6023  1F54                     	;# 
  6024  1F55                     	;# 
  6025  1FE4                     	;# 
  6026  1FE5                     	;# 
  6027  1FE6                     	;# 
  6028  1FE7                     	;# 
  6029  1FE8                     	;# 
  6030  1FE8                     	;# 
  6031  1FE9                     	;# 
  6032  1FEA                     	;# 
  6033  1FEB                     	;# 
  6034  1FED                     	;# 
  6035  1FEE                     	;# 
  6036  1FEF                     	;# 
  6037  0000                     	;# 
  6038  0001                     	;# 
  6039  0002                     	;# 
  6040  0003                     	;# 
  6041  0004                     	;# 
  6042  0005                     	;# 
  6043  0006                     	;# 
  6044  0007                     	;# 
  6045  0008                     	;# 
  6046  0009                     	;# 
  6047  000A                     	;# 
  6048  000B                     	;# 
  6049  000C                     	;# 
  6050  000D                     	;# 
  6051  000E                     	;# 
  6052  0012                     	;# 
  6053  0013                     	;# 
  6054  0014                     	;# 
  6055  0018                     	;# 
  6056  0019                     	;# 
  6057  001A                     	;# 
  6058  008C                     	;# 
  6059  008C                     	;# 
  6060  008D                     	;# 
  6061  008E                     	;# 
  6062  008E                     	;# 
  6063  008F                     	;# 
  6064  0090                     	;# 
  6065  0090                     	;# 
  6066  0091                     	;# 
  6067  0092                     	;# 
  6068  0092                     	;# 
  6069  0093                     	;# 
  6070  0094                     	;# 
  6071  0094                     	;# 
  6072  0095                     	;# 
  6073  0096                     	;# 
  6074  0096                     	;# 
  6075  0097                     	;# 
  6076  0098                     	;# 
  6077  0099                     	;# 
  6078  009A                     	;# 
  6079  009B                     	;# 
  6080  009B                     	;# 
  6081  009C                     	;# 
  6082  009D                     	;# 
  6083  009D                     	;# 
  6084  009E                     	;# 
  6085  009F                     	;# 
  6086  010C                     	;# 
  6087  010C                     	;# 
  6088  010D                     	;# 
  6089  010E                     	;# 
  6090  010F                     	;# 
  6091  010F                     	;# 
  6092  0110                     	;# 
  6093  0111                     	;# 
  6094  0112                     	;# 
  6095  0113                     	;# 
  6096  0114                     	;# 
  6097  0115                     	;# 
  6098  0116                     	;# 
  6099  0117                     	;# 
  6100  0118                     	;# 
  6101  0119                     	;# 
  6102  0119                     	;# 
  6103  0119                     	;# 
  6104  011A                     	;# 
  6105  011A                     	;# 
  6106  011A                     	;# 
  6107  011B                     	;# 
  6108  011B                     	;# 
  6109  011B                     	;# 
  6110  011B                     	;# 
  6111  011B                     	;# 
  6112  011C                     	;# 
  6113  011C                     	;# 
  6114  011C                     	;# 
  6115  011D                     	;# 
  6116  011D                     	;# 
  6117  011D                     	;# 
  6118  011E                     	;# 
  6119  011E                     	;# 
  6120  011E                     	;# 
  6121  011F                     	;# 
  6122  011F                     	;# 
  6123  011F                     	;# 
  6124  011F                     	;# 
  6125  011F                     	;# 
  6126  018C                     	;# 
  6127  018D                     	;# 
  6128  018E                     	;# 
  6129  018F                     	;# 
  6130  0190                     	;# 
  6131  0191                     	;# 
  6132  0192                     	;# 
  6133  0196                     	;# 
  6134  0197                     	;# 
  6135  0198                     	;# 
  6136  0199                     	;# 
  6137  019A                     	;# 
  6138  019B                     	;# 
  6139  019C                     	;# 
  6140  020C                     	;# 
  6141  020D                     	;# 
  6142  020E                     	;# 
  6143  020E                     	;# 
  6144  020F                     	;# 
  6145  020F                     	;# 
  6146  0210                     	;# 
  6147  0210                     	;# 
  6148  0211                     	;# 
  6149  0211                     	;# 
  6150  0212                     	;# 
  6151  0213                     	;# 
  6152  0214                     	;# 
  6153  0214                     	;# 
  6154  0215                     	;# 
  6155  0215                     	;# 
  6156  0216                     	;# 
  6157  0216                     	;# 
  6158  0217                     	;# 
  6159  0217                     	;# 
  6160  0218                     	;# 
  6161  0219                     	;# 
  6162  021A                     	;# 
  6163  021A                     	;# 
  6164  021B                     	;# 
  6165  021B                     	;# 
  6166  021C                     	;# 
  6167  021C                     	;# 
  6168  021D                     	;# 
  6169  021D                     	;# 
  6170  021E                     	;# 
  6171  021F                     	;# 
  6172  028C                     	;# 
  6173  028C                     	;# 
  6174  028D                     	;# 
  6175  028D                     	;# 
  6176  028E                     	;# 
  6177  028F                     	;# 
  6178  0290                     	;# 
  6179  0291                     	;# 
  6180  0292                     	;# 
  6181  0292                     	;# 
  6182  0293                     	;# 
  6183  0293                     	;# 
  6184  0294                     	;# 
  6185  0295                     	;# 
  6186  0296                     	;# 
  6187  0297                     	;# 
  6188  0298                     	;# 
  6189  0298                     	;# 
  6190  0299                     	;# 
  6191  0299                     	;# 
  6192  029A                     	;# 
  6193  029B                     	;# 
  6194  029C                     	;# 
  6195  029D                     	;# 
  6196  029F                     	;# 
  6197  030C                     	;# 
  6198  030C                     	;# 
  6199  030D                     	;# 
  6200  030E                     	;# 
  6201  030F                     	;# 
  6202  0310                     	;# 
  6203  0310                     	;# 
  6204  0311                     	;# 
  6205  0312                     	;# 
  6206  0313                     	;# 
  6207  0314                     	;# 
  6208  0314                     	;# 
  6209  0315                     	;# 
  6210  0316                     	;# 
  6211  0317                     	;# 
  6212  0318                     	;# 
  6213  0318                     	;# 
  6214  0319                     	;# 
  6215  031A                     	;# 
  6216  031B                     	;# 
  6217  038C                     	;# 
  6218  038C                     	;# 
  6219  038D                     	;# 
  6220  038E                     	;# 
  6221  0390                     	;# 
  6222  0390                     	;# 
  6223  0391                     	;# 
  6224  0392                     	;# 
  6225  048C                     	;# 
  6226  048C                     	;# 
  6227  048D                     	;# 
  6228  048E                     	;# 
  6229  048F                     	;# 
  6230  048F                     	;# 
  6231  0490                     	;# 
  6232  0491                     	;# 
  6233  0492                     	;# 
  6234  0492                     	;# 
  6235  0493                     	;# 
  6236  0494                     	;# 
  6237  0495                     	;# 
  6238  0495                     	;# 
  6239  0496                     	;# 
  6240  0497                     	;# 
  6241  0498                     	;# 
  6242  0499                     	;# 
  6243  049A                     	;# 
  6244  049B                     	;# 
  6245  049C                     	;# 
  6246  049D                     	;# 
  6247  058C                     	;# 
  6248  058C                     	;# 
  6249  058D                     	;# 
  6250  058E                     	;# 
  6251  058F                     	;# 
  6252  058F                     	;# 
  6253  0590                     	;# 
  6254  0591                     	;# 
  6255  0592                     	;# 
  6256  0593                     	;# 
  6257  059C                     	;# 
  6258  059C                     	;# 
  6259  059D                     	;# 
  6260  059D                     	;# 
  6261  059E                     	;# 
  6262  059F                     	;# 
  6263  060C                     	;# 
  6264  060C                     	;# 
  6265  060D                     	;# 
  6266  060D                     	;# 
  6267  060E                     	;# 
  6268  060F                     	;# 
  6269  0610                     	;# 
  6270  0611                     	;# 
  6271  0612                     	;# 
  6272  0613                     	;# 
  6273  0614                     	;# 
  6274  0616                     	;# 
  6275  0616                     	;# 
  6276  0617                     	;# 
  6277  0617                     	;# 
  6278  0618                     	;# 
  6279  0619                     	;# 
  6280  061A                     	;# 
  6281  061B                     	;# 
  6282  061C                     	;# 
  6283  061D                     	;# 
  6284  061E                     	;# 
  6285  070C                     	;# 
  6286  070D                     	;# 
  6287  070E                     	;# 
  6288  070F                     	;# 
  6289  0710                     	;# 
  6290  0711                     	;# 
  6291  0712                     	;# 
  6292  0713                     	;# 
  6293  0714                     	;# 
  6294  0716                     	;# 
  6295  0717                     	;# 
  6296  0718                     	;# 
  6297  0719                     	;# 
  6298  071A                     	;# 
  6299  071B                     	;# 
  6300  071C                     	;# 
  6301  071D                     	;# 
  6302  071E                     	;# 
  6303  0796                     	;# 
  6304  0797                     	;# 
  6305  0798                     	;# 
  6306  0799                     	;# 
  6307  079A                     	;# 
  6308  079B                     	;# 
  6309  079C                     	;# 
  6310  079D                     	;# 
  6311  080C                     	;# 
  6312  080D                     	;# 
  6313  080E                     	;# 
  6314  080F                     	;# 
  6315  0810                     	;# 
  6316  0811                     	;# 
  6317  0812                     	;# 
  6318  0813                     	;# 
  6319  0814                     	;# 
  6320  081A                     	;# 
  6321  081A                     	;# 
  6322  081B                     	;# 
  6323  081C                     	;# 
  6324  081C                     	;# 
  6325  081D                     	;# 
  6326  081E                     	;# 
  6327  081F                     	;# 
  6328  088C                     	;# 
  6329  088D                     	;# 
  6330  088E                     	;# 
  6331  088F                     	;# 
  6332  0890                     	;# 
  6333  0891                     	;# 
  6334  0892                     	;# 
  6335  0893                     	;# 
  6336  0895                     	;# 
  6337  0896                     	;# 
  6338  0897                     	;# 
  6339  0898                     	;# 
  6340  0899                     	;# 
  6341  089A                     	;# 
  6342  089B                     	;# 
  6343  090C                     	;# 
  6344  090E                     	;# 
  6345  090F                     	;# 
  6346  091F                     	;# 
  6347  098F                     	;# 
  6348  098F                     	;# 
  6349  0990                     	;# 
  6350  0991                     	;# 
  6351  0992                     	;# 
  6352  0993                     	;# 
  6353  0994                     	;# 
  6354  0995                     	;# 
  6355  0996                     	;# 
  6356  0997                     	;# 
  6357  1E0F                     	;# 
  6358  1E10                     	;# 
  6359  1E11                     	;# 
  6360  1E12                     	;# 
  6361  1E13                     	;# 
  6362  1E14                     	;# 
  6363  1E15                     	;# 
  6364  1E16                     	;# 
  6365  1E17                     	;# 
  6366  1E18                     	;# 
  6367  1E19                     	;# 
  6368  1E1A                     	;# 
  6369  1E1B                     	;# 
  6370  1E1C                     	;# 
  6371  1E1D                     	;# 
  6372  1E1E                     	;# 
  6373  1E1F                     	;# 
  6374  1E20                     	;# 
  6375  1E21                     	;# 
  6376  1E22                     	;# 
  6377  1E23                     	;# 
  6378  1E24                     	;# 
  6379  1E25                     	;# 
  6380  1E26                     	;# 
  6381  1E27                     	;# 
  6382  1E28                     	;# 
  6383  1E29                     	;# 
  6384  1E2A                     	;# 
  6385  1E2B                     	;# 
  6386  1E2C                     	;# 
  6387  1E2D                     	;# 
  6388  1E2E                     	;# 
  6389  1E2F                     	;# 
  6390  1E30                     	;# 
  6391  1E31                     	;# 
  6392  1E32                     	;# 
  6393  1E33                     	;# 
  6394  1E34                     	;# 
  6395  1E35                     	;# 
  6396  1E36                     	;# 
  6397  1E37                     	;# 
  6398  1E8F                     	;# 
  6399  1E90                     	;# 
  6400  1E91                     	;# 
  6401  1E92                     	;# 
  6402  1E93                     	;# 
  6403  1E94                     	;# 
  6404  1E95                     	;# 
  6405  1E96                     	;# 
  6406  1E97                     	;# 
  6407  1E9C                     	;# 
  6408  1E9D                     	;# 
  6409  1E9E                     	;# 
  6410  1EA1                     	;# 
  6411  1EA2                     	;# 
  6412  1EA3                     	;# 
  6413  1EA4                     	;# 
  6414  1EA9                     	;# 
  6415  1EAA                     	;# 
  6416  1EB1                     	;# 
  6417  1EB2                     	;# 
  6418  1EB8                     	;# 
  6419  1EB9                     	;# 
  6420  1EBA                     	;# 
  6421  1EBB                     	;# 
  6422  1EBC                     	;# 
  6423  1EBD                     	;# 
  6424  1EBE                     	;# 
  6425  1EC3                     	;# 
  6426  1EC5                     	;# 
  6427  1EC6                     	;# 
  6428  1EC7                     	;# 
  6429  1EC8                     	;# 
  6430  1EC9                     	;# 
  6431  1ECA                     	;# 
  6432  1ECB                     	;# 
  6433  1ECB                     	;# 
  6434  1ECB                     	;# 
  6435  1ECC                     	;# 
  6436  1ECC                     	;# 
  6437  1ECC                     	;# 
  6438  1F10                     	;# 
  6439  1F11                     	;# 
  6440  1F12                     	;# 
  6441  1F14                     	;# 
  6442  1F15                     	;# 
  6443  1F1C                     	;# 
  6444  1F1D                     	;# 
  6445  1F1E                     	;# 
  6446  1F1F                     	;# 
  6447  1F20                     	;# 
  6448  1F21                     	;# 
  6449  1F22                     	;# 
  6450  1F23                     	;# 
  6451  1F24                     	;# 
  6452  1F25                     	;# 
  6453  1F26                     	;# 
  6454  1F27                     	;# 
  6455  1F38                     	;# 
  6456  1F39                     	;# 
  6457  1F3A                     	;# 
  6458  1F3B                     	;# 
  6459  1F3C                     	;# 
  6460  1F3D                     	;# 
  6461  1F3E                     	;# 
  6462  1F3F                     	;# 
  6463  1F43                     	;# 
  6464  1F44                     	;# 
  6465  1F45                     	;# 
  6466  1F46                     	;# 
  6467  1F47                     	;# 
  6468  1F48                     	;# 
  6469  1F49                     	;# 
  6470  1F4A                     	;# 
  6471  1F4E                     	;# 
  6472  1F4F                     	;# 
  6473  1F50                     	;# 
  6474  1F51                     	;# 
  6475  1F52                     	;# 
  6476  1F53                     	;# 
  6477  1F54                     	;# 
  6478  1F55                     	;# 
  6479  1FE4                     	;# 
  6480  1FE5                     	;# 
  6481  1FE6                     	;# 
  6482  1FE7                     	;# 
  6483  1FE8                     	;# 
  6484  1FE8                     	;# 
  6485  1FE9                     	;# 
  6486  1FEA                     	;# 
  6487  1FEB                     	;# 
  6488  1FED                     	;# 
  6489  1FEE                     	;# 
  6490  1FEF                     	;_input
  6491                           
  6492                           	psect	idataBANK1
  6493  13D1                     __pidataBANK1:	
  6494                           
  6495                           ;initializer for _R
  6496  13D1  34FF               	retlw	255
  6497  13D2  3400               	retlw	0
  6498                           
  6499                           ;initializer for _threshold
  6500  13D3  3490               	retlw	144
  6501  13D4  3406               	retlw	6
  6502                           
  6503                           ;initializer for _address
  6504  13D5  3401               	retlw	1
  6505  13D6  3400               	retlw	0
  6506                           
  6507                           ;initializer for _dmx_mode
  6508  13D7  3401               	retlw	1
  6509                           
  6510                           	psect	idataBANK2
  6511  13CB                     __pidataBANK2:	
  6512                           
  6513                           ;initializer for _animationSpeed
  6514  13CB  3401               	retlw	1
  6515  13CC  3400               	retlw	0
  6516                           
  6517                           ;initializer for _W
  6518  13CD  3480               	retlw	128
  6519  13CE  3400               	retlw	0
  6520                           
  6521                           ;initializer for _delay
  6522  13CF  340A               	retlw	10
  6523  13D0  3400               	retlw	0
  6524                           
  6525                           	psect	stringtext1
  6526  1000                     __pstringtext1:	
  6527  1000                     TM1650_setDigit@charTable:	
  6528  1000  3400               	retlw	0
  6529  1001  3482               	retlw	130
  6530  1002  3421               	retlw	33
  6531  1003  3400               	retlw	0
  6532  1004  3400               	retlw	0
  6533  1005  3400               	retlw	0
  6534  1006  3400               	retlw	0
  6535  1007  3402               	retlw	2
  6536  1008  3439               	retlw	57
  6537  1009  340F               	retlw	15
  6538  100A  3400               	retlw	0
  6539  100B  3400               	retlw	0
  6540  100C  3400               	retlw	0
  6541  100D  3440               	retlw	64
  6542  100E  3480               	retlw	128
  6543  100F  3400               	retlw	0
  6544  1010  343F               	retlw	63
  6545  1011  3406               	retlw	6
  6546  1012  345B               	retlw	91
  6547  1013  344F               	retlw	79
  6548  1014  3466               	retlw	102
  6549  1015  346D               	retlw	109
  6550  1016  347D               	retlw	125
  6551  1017  3407               	retlw	7
  6552  1018  347F               	retlw	127
  6553  1019  346F               	retlw	111
  6554  101A  3400               	retlw	0
  6555  101B  3400               	retlw	0
  6556  101C  3400               	retlw	0
  6557  101D  3448               	retlw	72
  6558  101E  3400               	retlw	0
  6559  101F  3453               	retlw	83
  6560  1020  3400               	retlw	0
  6561  1021  3477               	retlw	119
  6562  1022  347C               	retlw	124
  6563  1023  3439               	retlw	57
  6564  1024  345E               	retlw	94
  6565  1025  3479               	retlw	121
  6566  1026  3471               	retlw	113
  6567  1027  346F               	retlw	111
  6568  1028  3476               	retlw	118
  6569  1029  3406               	retlw	6
  6570  102A  341E               	retlw	30
  6571  102B  3400               	retlw	0
  6572  102C  3438               	retlw	56
  6573  102D  3400               	retlw	0
  6574  102E  3454               	retlw	84
  6575  102F  343F               	retlw	63
  6576  1030  3473               	retlw	115
  6577  1031  3467               	retlw	103
  6578  1032  3450               	retlw	80
  6579  1033  346D               	retlw	109
  6580  1034  3478               	retlw	120
  6581  1035  343E               	retlw	62
  6582  1036  3400               	retlw	0
  6583  1037  3400               	retlw	0
  6584  1038  3400               	retlw	0
  6585  1039  346E               	retlw	110
  6586  103A  3400               	retlw	0
  6587  103B  3439               	retlw	57
  6588  103C  3400               	retlw	0
  6589  103D  340F               	retlw	15
  6590  103E  3400               	retlw	0
  6591  103F  3408               	retlw	8
  6592  1040  3463               	retlw	99
  6593  1041  345F               	retlw	95
  6594  1042  347C               	retlw	124
  6595  1043  3458               	retlw	88
  6596  1044  345E               	retlw	94
  6597  1045  347B               	retlw	123
  6598  1046  3471               	retlw	113
  6599  1047  346F               	retlw	111
  6600  1048  3474               	retlw	116
  6601  1049  3402               	retlw	2
  6602  104A  341E               	retlw	30
  6603  104B  3400               	retlw	0
  6604  104C  3406               	retlw	6
  6605  104D  3400               	retlw	0
  6606  104E  3454               	retlw	84
  6607  104F  345C               	retlw	92
  6608  1050  3473               	retlw	115
  6609  1051  3467               	retlw	103
  6610  1052  3450               	retlw	80
  6611  1053  346D               	retlw	109
  6612  1054  3478               	retlw	120
  6613  1055  341C               	retlw	28
  6614  1056  3400               	retlw	0
  6615  1057  3400               	retlw	0
  6616  1058  3400               	retlw	0
  6617  1059  346E               	retlw	110
  6618  105A  3400               	retlw	0
  6619  105B  3439               	retlw	57
  6620  105C  3430               	retlw	48
  6621  105D  340F               	retlw	15
  6622  105E  3400               	retlw	0
  6623  105F  3400               	retlw	0
  6624  1060                     __end_ofTM1650_setDigit@charTable:	
  6625                           
  6626                           	psect	nvBANK1
  6627  00EC                     __pnvBANK1:	
  6628  00EC                     _eusart1TxBufferRemaining:	
  6629  00EC                     	ds	1
  6630                           
  6631                           	psect	nvBANK2
  6632  014A                     __pnvBANK2:	
  6633  014A                     _ADCC_ADTI_InterruptHandler:	
  6634  014A                     	ds	2
  6635  014C                     _EUSART1_ErrorHandler:	
  6636  014C                     	ds	2
  6637  014E                     _EUSART1_OverrunErrorHandler:	
  6638  014E                     	ds	2
  6639  0150                     _EUSART1_FramingErrorHandler:	
  6640  0150                     	ds	2
  6641  0152                     _EUSART1_RxDefaultInterruptHandler:	
  6642  0152                     	ds	2
  6643  0154                     _EUSART1_TxDefaultInterruptHandler:	
  6644  0154                     	ds	2
  6645  0014                     _TRISC	set	20
  6646  0013                     _TRISB	set	19
  6647  0012                     _TRISA	set	18
  6648  001A                     _LATC	set	26
  6649  0019                     _LATB	set	25
  6650  0018                     _LATA	set	24
  6651  000B                     _INTCONbits	set	11
  6652  000C                     _PORTA	set	12
  6653  000E                     _PORTC	set	14
  6654  00A4                     _TRISC4	set	164
  6655  00A3                     _TRISC3	set	163
  6656  00A6                     _TRISC6	set	166
  6657  00A7                     _TRISC7	set	167
  6658  009C                     _TRISB4	set	156
  6659  00D5                     _LATC5	set	213
  6660  00A5                     _TRISC5	set	165
  6661  0090                     _ADERRL	set	144
  6662  0091                     _ADERRH	set	145
  6663  009B                     _ADPREVL	set	155
  6664  009C                     _ADPREVH	set	156
  6665  0094                     _ADFLTRL	set	148
  6666  0095                     _ADFLTRH	set	149
  6667  0096                     _ADACCL	set	150
  6668  0097                     _ADACCH	set	151
  6669  0099                     _ADCNT	set	153
  6670  009D                     _ADRESL	set	157
  6671  009E                     _ADRESH	set	158
  6672  009F                     _ADPCH	set	159
  6673  009A                     _ADRPT	set	154
  6674  0098                     _ADACCU	set	152
  6675  0093                     _ADSTPTH	set	147
  6676  0092                     _ADSTPTL	set	146
  6677  008F                     _ADUTHH	set	143
  6678  008E                     _ADUTHL	set	142
  6679  008D                     _ADLTHH	set	141
  6680  008C                     _ADLTHL	set	140
  6681  011B                     _SP1BRG	set	283
  6682  011F                     _BAUD1CONbits	set	287
  6683  0112                     _ADCON1bits	set	274
  6684  0115                     _ADSTATbits	set	277
  6685  0113                     _ADCON2bits	set	275
  6686  0114                     _ADCON3bits	set	276
  6687  0111                     _ADCON0bits	set	273
  6688  0111                     _ADCON0	set	273
  6689  0118                     _ADCLK	set	280
  6690  0117                     _ADACT	set	279
  6691  0116                     _ADREF	set	278
  6692  0115                     _ADSTAT	set	277
  6693  0114                     _ADCON3	set	276
  6694  0113                     _ADCON2	set	275
  6695  0112                     _ADCON1	set	274
  6696  0110                     _ADPREH	set	272
  6697  010F                     _ADPREL	set	271
  6698  010E                     _ADCAP	set	270
  6699  010D                     _ADACQH	set	269
  6700  010C                     _ADACQL	set	268
  6701  0119                     _RC1REG	set	281
  6702  011D                     _RC1STAbits	set	285
  6703  011A                     _TX1REG	set	282
  6704  011E                     _TX1STAbits	set	286
  6705  011C                     _SP1BRGH	set	284
  6706  011B                     _SP1BRGL	set	283
  6707  011E                     _TX1STA	set	286
  6708  011D                     _RC1STA	set	285
  6709  011F                     _BAUD1CON	set	287
  6710  018C                     _SSP1BUF	set	396
  6711  0191                     _SSP1CON2bits	set	401
  6712  0190                     _SSP1CON1bits	set	400
  6713  018D                     _SSP1ADD	set	397
  6714  0192                     _SSP1CON3	set	402
  6715  0190                     _SSP1CON1	set	400
  6716  018F                     _SSP1STAT	set	399
  6717  028E                     _T2CONbits	set	654
  6718  0290                     _T2CLKCON	set	656
  6719  0318                     _CCPR4L	set	792
  6720  0319                     _CCPR4H	set	793
  6721  0314                     _CCPR3L	set	788
  6722  0315                     _CCPR3H	set	789
  6723  0310                     _CCPR2L	set	784
  6724  0311                     _CCPR2H	set	785
  6725  030C                     _CCPR1L	set	780
  6726  030D                     _CCPR1H	set	781
  6727  031A                     _CCP4CONbits	set	794
  6728  0316                     _CCP3CONbits	set	790
  6729  0312                     _CCP2CONbits	set	786
  6730  030E                     _CCP1CONbits	set	782
  6731  059E                     _T0CON0bits	set	1438
  6732  059D                     _TMR0H	set	1437
  6733  059F                     _T0CON1bits	set	1439
  6734  0716                     _PIE0bits	set	1814
  6735  070D                     _PIR1bits	set	1805
  6736  0717                     _PIE1bits	set	1815
  6737  070C                     _PIR0bits	set	1804
  6738  070F                     _PIR3bits	set	1807
  6739  0719                     _PIE3bits	set	1817
  6740  079D                     _PMD7	set	1949
  6741  079C                     _PMD6	set	1948
  6742  079B                     _PMD5	set	1947
  6743  079A                     _PMD4	set	1946
  6744  0799                     _PMD3	set	1945
  6745  0798                     _PMD2	set	1944
  6746  0797                     _PMD1	set	1943
  6747  0796                     _PMD0	set	1942
  6748  0892                     _OSCTUNE	set	2194
  6749  0893                     _OSCFRQ	set	2195
  6750  0891                     _OSCEN	set	2193
  6751  088F                     _OSCCON3	set	2191
  6752  088D                     _OSCCON1	set	2189
  6753  1ECB                     _RX1PPS	set	7883
  6754  1ECB                     _RX1DTPPS	set	7883
  6755  1EC6                     _SSP1DATPPS	set	7878
  6756  1EC5                     _SSP1CLKPPS	set	7877
  6757  1F24                     _RC4PPS	set	7972
  6758  1F23                     _RC3PPS	set	7971
  6759  1F26                     _RC6PPS	set	7974
  6760  1F27                     _RC7PPS	set	7975
  6761  1F15                     _RA5PPS	set	7957
  6762  1F1E                     _RB6PPS	set	7966
  6763  1F14                     _RA4PPS	set	7956
  6764  1F51                     _SLRCONC	set	8017
  6765  1F46                     _SLRCONB	set	8006
  6766  1F3B                     _SLRCONA	set	7995
  6767  1F50                     _ODCONC	set	8016
  6768  1F45                     _ODCONB	set	8005
  6769  1F3A                     _ODCONA	set	7994
  6770  1F4F                     _WPUC	set	8015
  6771  1F39                     _WPUA	set	7993
  6772  1F44                     _WPUB	set	8004
  6773  1F38                     _ANSELA	set	7992
  6774  1F43                     _ANSELB	set	8003
  6775  1F4E                     _ANSELC	set	8014
  6776                           
  6777                           ; #config settings
  6778  0000                     
  6779                           	psect	cinit
  6780  0046                     start_initialization:	
  6781  0046                     __initialization:		;BIGRAM
  6782                           
  6783                           ; Initialize objects allocated to BANK1
  6784  0046  30D1               	movlw	low __pidataBANK1
  6785  0047  0084               	movwf	4
  6786  0048  3093               	movlw	(high __pidataBANK1)| (0+128)
  6787  0049  0085               	movwf	5
  6788  004A  30E5               	movlw	low __pdataBANK1
  6789  004B  0086               	movwf	6
  6790  004C  3000               	movlw	high __pdataBANK1
  6791  004D  0087               	movwf	7
  6792  004E  3000               	movlw	0
  6793  004F  00FF               	movwf	btemp+1
  6794  0050  3007               	movlw	7
  6795  0051  3194  2464  3180   	fcall	init_ram
  6796                           
  6797                           ; Initialize objects allocated to BANK2
  6798  0054  30CB               	movlw	low __pidataBANK2
  6799  0055  0084               	movwf	4
  6800  0056  3093               	movlw	(high __pidataBANK2)| (0+128)
  6801  0057  0085               	movwf	5
  6802  0058  3056               	movlw	low __pdataBANK2
  6803  0059  0086               	movwf	6
  6804  005A  3001               	movlw	high __pdataBANK2
  6805  005B  0087               	movwf	7
  6806  005C  3000               	movlw	0
  6807  005D  00FF               	movwf	btemp+1
  6808  005E  3006               	movlw	6
  6809  005F  3194  2464  3180   	fcall	init_ram
  6810                           
  6811                           ; Clear objects allocated to BIGRAM
  6812  0062  30EF               	movlw	low (0+9711)
  6813  0063  0084               	movwf	4
  6814  0064  3025               	movlw	high (0+9711)
  6815  0065  0085               	movwf	5
  6816  0066  3001               	movlw	1
  6817  0067  00FE               	movwf	btemp
  6818  0068  3002               	movlw	2
  6819  0069  00FF               	movwf	btemp+1
  6820  006A  3194  2458  3180   	fcall	clear_ram0
  6821                           
  6822                           ; Clear objects allocated to COMMON
  6823  006D  01F0               	clrf	__pbssCOMMON& (0+127)
  6824  006E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  6825  006F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  6826  0070  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  6827  0071  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  6828  0072  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  6829                           
  6830                           ; Clear objects allocated to BANK1
  6831  0073  30A0               	movlw	low __pbssBANK1
  6832  0074  0084               	movwf	4
  6833  0075  3000               	movlw	high __pbssBANK1
  6834  0076  0085               	movwf	5
  6835  0077  302D               	movlw	45
  6836  0078  00FE               	movwf	btemp
  6837  0079  3000               	movlw	0
  6838  007A  00FF               	movwf	btemp+1
  6839  007B  3194  2458  3180   	fcall	clear_ram0
  6840                           
  6841                           ; Clear objects allocated to BANK2
  6842  007E  3020               	movlw	low __pbssBANK2
  6843  007F  0084               	movwf	4
  6844  0080  3001               	movlw	high __pbssBANK2
  6845  0081  0085               	movwf	5
  6846  0082  302A               	movlw	42
  6847  0083  00FE               	movwf	btemp
  6848  0084  3000               	movlw	0
  6849  0085  00FF               	movwf	btemp+1
  6850  0086  3194  2458  3180   	fcall	clear_ram0
  6851                           
  6852                           ; Clear objects allocated to BANK3
  6853  0089  30A0               	movlw	low __pbssBANK3
  6854  008A  0084               	movwf	4
  6855  008B  3001               	movlw	high __pbssBANK3
  6856  008C  0085               	movwf	5
  6857  008D  3020               	movlw	32
  6858  008E  00FE               	movwf	btemp
  6859  008F  3000               	movlw	0
  6860  0090  00FF               	movwf	btemp+1
  6861  0091  3194  2458         	fcall	clear_ram0
  6862  0093                     end_of_initialization:	
  6863                           ;End of C runtime variable initialization code
  6864                           
  6865  0093                     __end_of__initialization:	
  6866  0093  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6867  0094  0140               	movlb	0
  6868  0095  3197  2F7C         	ljmp	_main	;jump to C main() function
  6869                           
  6870                           	psect	bssCOMMON
  6871  0070                     __pbssCOMMON:	
  6872  0070                     _eusart1RxTail:	
  6873  0070                     	ds	1
  6874  0071                     _eusart1RxHead:	
  6875  0071                     	ds	1
  6876  0072                     _eusart1TxTail:	
  6877  0072                     	ds	1
  6878  0073                     _eusart1TxHead:	
  6879  0073                     	ds	1
  6880  0074                     I2C1_ISR@i2c_address:	
  6881  0074                     	ds	2
  6882                           
  6883                           	psect	bssBANK1
  6884  00A0                     __pbssBANK1:	
  6885  00A0                     _i2c1_object:	
  6886  00A0                     	ds	5
  6887  00A5                     _ani1_state:	
  6888  00A5                     	ds	2
  6889  00A7                     _B:	
  6890  00A7                     	ds	2
  6891  00A9                     _G:	
  6892  00A9                     	ds	2
  6893  00AB                     _point:	
  6894  00AB                     	ds	2
  6895  00AD                     _lastBeat:	
  6896  00AD                     	ds	2
  6897  00AF                     _lastActiveTime:	
  6898  00AF                     	ds	2
  6899  00B1                     _count:	
  6900  00B1                     	ds	2
  6901  00B3                     _color:	
  6902  00B3                     	ds	2
  6903  00B5                     _ClockCurrentTime:	
  6904  00B5                     	ds	2
  6905  00B7                     _dmx_lastActiveTime:	
  6906  00B7                     	ds	2
  6907  00B9                     _lastDetected:	
  6908  00B9                     	ds	1
  6909  00BA                     _thresholdExceeded:	
  6910  00BA                     	ds	1
  6911  00BB                     _detected:	
  6912  00BB                     	ds	1
  6913  00BC                     _menu:	
  6914  00BC                     	ds	1
  6915  00BD                     _enter:	
  6916  00BD                     	ds	1
  6917  00BE                     _down:	
  6918  00BE                     	ds	1
  6919  00BF                     _up:	
  6920  00BF                     	ds	1
  6921  00C0                     _displayState:	
  6922  00C0                     	ds	1
  6923  00C1                     I2C1_ISR@i2c_10bit_address_restart:	
  6924  00C1                     	ds	1
  6925  00C2                     I2C1_ISR@i2c_bytes_left:	
  6926  00C2                     	ds	1
  6927  00C3                     I2C1_ISR@pi2c_buf_ptr:	
  6928  00C3                     	ds	1
  6929  00C4                     _p_i2c1_current:	
  6930  00C4                     	ds	1
  6931  00C5                     _p_i2c1_trb_current:	
  6932  00C5                     	ds	1
  6933  00C6                     _i2c1_trb_count:	
  6934  00C6                     	ds	1
  6935  00C7                     _i2c1_state:	
  6936  00C7                     	ds	1
  6937  00C8                     _eusart1RxLastError:	
  6938  00C8                     	ds	1
  6939  00C9                     _eusart1RxCount:	
  6940  00C9                     	ds	1
  6941  00CA                     _i2c1_tr_queue:	
  6942  00CA                     	ds	3
  6943                           
  6944                           	psect	dataBANK1
  6945  00E5                     __pdataBANK1:	
  6946  00E5                     _R:	
  6947  00E5                     	ds	2
  6948  00E7                     _threshold:	
  6949  00E7                     	ds	2
  6950  00E9                     _address:	
  6951  00E9                     	ds	2
  6952  00EB                     _dmx_mode:	
  6953  00EB                     	ds	1
  6954                           
  6955                           	psect	bssBANK2
  6956  0120                     __pbssBANK2:	
  6957  0120                     _eusart1RxStatusBuffer:	
  6958  0120                     	ds	8
  6959  0128                     _eusart1RxBuffer:	
  6960  0128                     	ds	8
  6961  0130                     _eusart1TxBuffer:	
  6962  0130                     	ds	8
  6963  0138                     dmx@lastTime:	
  6964  0138                     	ds	2
  6965  013A                     _thresholdCount:	
  6966  013A                     	ds	2
  6967  013C                     _lastRun:	
  6968  013C                     	ds	2
  6969  013E                     _bpm:	
  6970  013E                     	ds	2
  6971  0140                     _lastTime:	
  6972  0140                     	ds	2
  6973  0142                     I2C1_MasterRead@trBlock:	
  6974  0142                     	ds	4
  6975  0146                     I2C1_MasterWrite@trBlock:	
  6976  0146                     	ds	4
  6977                           
  6978                           	psect	dataBANK2
  6979  0156                     __pdataBANK2:	
  6980  0156                     _animationSpeed:	
  6981  0156                     	ds	2
  6982  0158                     _W:	
  6983  0158                     	ds	2
  6984  015A                     _delay:	
  6985  015A                     	ds	2
  6986                           
  6987                           	psect	bssBANK3
  6988  01A0                     __pbssBANK3:	
  6989  01A0                     _buttons:	
  6990  01A0                     	ds	32
  6991                           
  6992                           	psect	inittext
  6993  1464                     init_ram:	
  6994  1464  00FE               	movwf	126
  6995  1465                     initloop:	
  6996  1465  0012               	moviw fsr0++
  6997  1466  001E               	movwi fsr1++
  6998  1467  3001               	movlw	1
  6999  1468  02FE               	subwf	126,f
  7000  1469  3000               	movlw	0
  7001  146A  3BFF               	subwfb	127,f
  7002  146B  087F               	movf	127,w
  7003  146C  047E               	iorwf	126,w
  7004  146D  1903               	btfsc	3,2
  7005  146E  3400               	retlw	0
  7006  146F  2C65               	goto	initloop
  7007                           
  7008                           	psect	clrtext
  7009  1458                     clear_ram0:	
  7010                           ;	Called with FSR0 containing the base address, and
  7011                           ;	btemp/btemp+1 has the size to clear
  7012                           
  7013  1458  0064               	clrwdt	;clear the watchdog before getting into this loop
  7014  1459                     clrloop0:	
  7015  1459  0180               	clrf	0	;clear RAM location pointed to by FSR
  7016  145A  3101               	addfsr 0,1
  7017  145B  3001               	movlw	1
  7018  145C  02FE               	subwf	126,f
  7019  145D  3000               	movlw	0
  7020  145E  3BFF               	subwfb	127,f
  7021  145F  087F               	movf	127,w
  7022  1460  047E               	iorwf	126,w
  7023  1461  1903               	btfsc	3,2
  7024  1462  3400               	retlw	0	;all done for this memory range, return
  7025  1463  2C59               	goto	clrloop0	;have we reached the end yet?
  7026                           
  7027                           	psect	cstackBANK1
  7028  00CD                     __pcstackBANK1:	
  7029  00CD                     ??_LED_setColor:	
  7030                           
  7031                           ; 1 bytes @ 0x0
  7032  00CD                     	ds	5
  7033  00D2                     LED_setColor@R:	
  7034                           
  7035                           ; 1 bytes @ 0x5
  7036  00D2                     	ds	1
  7037  00D3                     ??_animation1:	
  7038                           
  7039                           ; 1 bytes @ 0x6
  7040  00D3                     	ds	3
  7041  00D6                     ??_DMX_Task:	
  7042                           
  7043                           ; 1 bytes @ 0x9
  7044  00D6                     	ds	11
  7045  00E1                     DMX_Task@time:	
  7046                           
  7047                           ; 2 bytes @ 0x14
  7048  00E1                     	ds	2
  7049  00E3                     ??_main:	
  7050                           
  7051                           ; 1 bytes @ 0x16
  7052  00E3                     	ds	2
  7053                           
  7054                           	psect	cstackCOMMON
  7055  0076                     __pcstackCOMMON:	
  7056  0076                     ?_EUSART1_Receive_ISR:	
  7057  0076                     ?_EUSART1_Transmit_ISR:	
  7058                           ; 1 bytes @ 0x0
  7059                           
  7060  0076                     ??_EUSART1_Transmit_ISR:	
  7061                           ; 1 bytes @ 0x0
  7062                           
  7063  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  7064                           ; 1 bytes @ 0x0
  7065                           
  7066  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  7067                           ; 1 bytes @ 0x0
  7068                           
  7069  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  7070                           ; 1 bytes @ 0x0
  7071                           
  7072  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  7073                           ; 1 bytes @ 0x0
  7074                           
  7075  0076                     ?_EUSART1_DefaultErrorHandler:	
  7076                           ; 1 bytes @ 0x0
  7077                           
  7078  0076                     ?_EUSART1_RxDataHandler:	
  7079                           ; 1 bytes @ 0x0
  7080                           
  7081  0076                     ??_EUSART1_RxDataHandler:	
  7082                           ; 1 bytes @ 0x0
  7083                           
  7084  0076                     ?_I2C1_BusCollisionISR:	
  7085                           ; 1 bytes @ 0x0
  7086                           
  7087  0076                     ??_I2C1_BusCollisionISR:	
  7088                           ; 1 bytes @ 0x0
  7089                           
  7090  0076                     ?_I2C1_ISR:	
  7091                           ; 1 bytes @ 0x0
  7092                           
  7093  0076                     ?_ADCC_ThresholdISR:	
  7094                           ; 1 bytes @ 0x0
  7095                           
  7096  0076                     ??_ADCC_ThresholdISR:	
  7097                           ; 1 bytes @ 0x0
  7098                           
  7099  0076                     ?_PMD_Initialize:	
  7100                           ; 1 bytes @ 0x0
  7101                           
  7102  0076                     ?_PIN_MANAGER_Initialize:	
  7103                           ; 1 bytes @ 0x0
  7104                           
  7105  0076                     ?_OSCILLATOR_Initialize:	
  7106                           ; 1 bytes @ 0x0
  7107                           
  7108  0076                     ?_I2C1_Initialize:	
  7109                           ; 1 bytes @ 0x0
  7110                           
  7111  0076                     ?_ADCC_Initialize:	
  7112                           ; 1 bytes @ 0x0
  7113                           
  7114  0076                     ?_I2C1_Stop:	
  7115                           ; 1 bytes @ 0x0
  7116                           
  7117  0076                     ??_I2C1_Stop:	
  7118                           ; 1 bytes @ 0x0
  7119                           
  7120  0076                     ?_I2C1_FunctionComplete:	
  7121                           ; 1 bytes @ 0x0
  7122                           
  7123  0076                     ??_I2C1_FunctionComplete:	
  7124                           ; 1 bytes @ 0x0
  7125                           
  7126  0076                     ?_ADCC_DefaultInterruptHandler:	
  7127                           ; 1 bytes @ 0x0
  7128                           
  7129  0076                     ??_ADCC_DefaultInterruptHandler:	
  7130                           ; 1 bytes @ 0x0
  7131                           
  7132  0076                     ?_TM1650_init:	
  7133                           ; 1 bytes @ 0x0
  7134                           
  7135  0076                     ?_CLOCK_init:	
  7136                           ; 1 bytes @ 0x0
  7137                           
  7138  0076                     ?_BUTTONS_init:	
  7139                           ; 1 bytes @ 0x0
  7140                           
  7141  0076                     ?_CONTROLLER_init:	
  7142                           ; 1 bytes @ 0x0
  7143                           
  7144  0076                     ?_DMX_init:	
  7145                           ; 1 bytes @ 0x0
  7146                           
  7147  0076                     ?_LED_init:	
  7148                           ; 1 bytes @ 0x0
  7149                           
  7150  0076                     ?_BEAT_init:	
  7151                           ; 1 bytes @ 0x0
  7152                           
  7153  0076                     ?_BUTTONS_task:	
  7154                           ; 1 bytes @ 0x0
  7155                           
  7156  0076                     ?_CONTROLLER_task:	
  7157                           ; 1 bytes @ 0x0
  7158                           
  7159  0076                     ?_BEAT_task:	
  7160                           ; 1 bytes @ 0x0
  7161                           
  7162  0076                     ?_DMX_Task:	
  7163                           ; 1 bytes @ 0x0
  7164                           
  7165  0076                     ?_TM1650_enable:	
  7166                           ; 1 bytes @ 0x0
  7167                           
  7168  0076                     ?_DMX_Mode:	
  7169                           ; 1 bytes @ 0x0
  7170                           
  7171  0076                     ?_animation1:	
  7172                           ; 1 bytes @ 0x0
  7173                           
  7174  0076                     ?_EUSART1_Initialize:	
  7175                           ; 1 bytes @ 0x0
  7176                           
  7177  0076                     ?_INTERRUPT_InterruptManager:	
  7178                           ; 1 bytes @ 0x0
  7179                           
  7180  0076                     ?_SYSTEM_Initialize:	
  7181                           ; 1 bytes @ 0x0
  7182                           
  7183  0076                     ?_I2C1_WaitForLastPacketToComplete:	
  7184                           ; 1 bytes @ 0x0
  7185                           
  7186  0076                     ?_ADCC_StartConversion:	
  7187                           ; 1 bytes @ 0x0
  7188                           
  7189  0076                     ?_main:	
  7190                           ; 1 bytes @ 0x0
  7191                           
  7192  0076                     ?_TM1650_isEnabled:	
  7193                           ; 1 bytes @ 0x0
  7194                           
  7195  0076                     ?_BUTTONS_isClicked:	
  7196                           ; 1 bytes @ 0x0
  7197                           
  7198  0076                     ?_BUTTONS_isHeld:	
  7199                           ; 1 bytes @ 0x0
  7200                           
  7201  0076                     ?_address_inc:	
  7202                           ; 1 bytes @ 0x0
  7203                           
  7204  0076                     ?_address_dec:	
  7205                           ; 1 bytes @ 0x0
  7206                           
  7207  0076                     ?_adcThresholdHandler:	
  7208                           ; 1 bytes @ 0x0
  7209                           
  7210  0076                     ??_adcThresholdHandler:	
  7211                           ; 1 bytes @ 0x0
  7212                           
  7213  0076                     ?_BEAT_detected:	
  7214                           ; 1 bytes @ 0x0
  7215                           
  7216  0076                     ?_handler:	
  7217                           ; 1 bytes @ 0x0
  7218                           
  7219  0076                     ??_handler:	
  7220                           ; 1 bytes @ 0x0
  7221                           
  7222  0076                     ?i1_CLOCK_getTime:	
  7223                           ; 1 bytes @ 0x0
  7224                           
  7225                           
  7226                           ; 2 bytes @ 0x0
  7227  0076                     	ds	1
  7228  0077                     ??_EUSART1_Receive_ISR:	
  7229  0077                     ??_EUSART1_DefaultErrorHandler:	
  7230                           ; 1 bytes @ 0x1
  7231                           
  7232  0077                     I2C1_Stop@completion_code:	
  7233                           ; 1 bytes @ 0x1
  7234                           
  7235                           
  7236                           ; 1 bytes @ 0x1
  7237  0077                     	ds	1
  7238  0078                     ??_I2C1_ISR:	
  7239  0078                     ??i1_CLOCK_getTime:	
  7240                           ; 1 bytes @ 0x2
  7241                           
  7242                           
  7243                           ; 1 bytes @ 0x2
  7244  0078                     	ds	2
  7245  007A                     handler@dataIn:	
  7246                           
  7247                           ; 1 bytes @ 0x4
  7248  007A                     	ds	2
  7249  007C                     ??_INTERRUPT_InterruptManager:	
  7250                           
  7251                           	psect	cstackBANK0
  7252  0020                     __pcstackBANK0:	
  7253                           ; 1 bytes @ 0x6
  7254                           
  7255  0020                     ?_EUSART1_SetRxInterruptHandler:	
  7256  0020                     ?_EUSART1_SetTxInterruptHandler:	
  7257                           ; 1 bytes @ 0x0
  7258                           
  7259  0020                     ?_EUSART1_SetFramingErrorHandler:	
  7260                           ; 1 bytes @ 0x0
  7261                           
  7262  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  7263                           ; 1 bytes @ 0x0
  7264                           
  7265  0020                     ?_EUSART1_SetErrorHandler:	
  7266                           ; 1 bytes @ 0x0
  7267                           
  7268  0020                     ??_PMD_Initialize:	
  7269                           ; 1 bytes @ 0x0
  7270                           
  7271  0020                     ??_PIN_MANAGER_Initialize:	
  7272                           ; 1 bytes @ 0x0
  7273                           
  7274  0020                     ??_OSCILLATOR_Initialize:	
  7275                           ; 1 bytes @ 0x0
  7276                           
  7277  0020                     ??_I2C1_Initialize:	
  7278                           ; 1 bytes @ 0x0
  7279                           
  7280  0020                     ?_I2C1_MasterWriteTRBBuild:	
  7281                           ; 1 bytes @ 0x0
  7282                           
  7283  0020                     ?_I2C1_MasterTRBInsert:	
  7284                           ; 1 bytes @ 0x0
  7285                           
  7286  0020                     ?_ADCC_SetADTIInterruptHandler:	
  7287                           ; 1 bytes @ 0x0
  7288                           
  7289  0020                     ??_CLOCK_init:	
  7290                           ; 1 bytes @ 0x0
  7291                           
  7292  0020                     ??_LED_init:	
  7293                           ; 1 bytes @ 0x0
  7294                           
  7295  0020                     ??_DMX_Mode:	
  7296                           ; 1 bytes @ 0x0
  7297                           
  7298  0020                     ??_I2C1_WaitForLastPacketToComplete:	
  7299                           ; 1 bytes @ 0x0
  7300                           
  7301  0020                     ??_ADCC_StartConversion:	
  7302                           ; 1 bytes @ 0x0
  7303                           
  7304  0020                     ?_ADCC_SetUpperThreshold:	
  7305                           ; 1 bytes @ 0x0
  7306                           
  7307  0020                     ??_TM1650_isEnabled:	
  7308                           ; 1 bytes @ 0x0
  7309                           
  7310  0020                     ?_init:	
  7311                           ; 1 bytes @ 0x0
  7312                           
  7313  0020                     ??_BUTTONS_isClicked:	
  7314                           ; 1 bytes @ 0x0
  7315                           
  7316  0020                     ??_BUTTONS_isHeld:	
  7317                           ; 1 bytes @ 0x0
  7318                           
  7319  0020                     ??_BEAT_detected:	
  7320                           ; 1 bytes @ 0x0
  7321                           
  7322  0020                     ?_CLOCK_getTime:	
  7323                           ; 1 bytes @ 0x0
  7324                           
  7325  0020                     ?__Umul8_16:	
  7326                           ; 2 bytes @ 0x0
  7327                           
  7328  0020                     ?___lwmod:	
  7329                           ; 2 bytes @ 0x0
  7330                           
  7331  0020                     ?___xxtofl:	
  7332                           ; 2 bytes @ 0x0
  7333                           
  7334  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  7335                           ; 4 bytes @ 0x0
  7336                           
  7337  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  7338                           ; 1 bytes @ 0x0
  7339                           
  7340  0020                     ADCC_StartConversion@channel:	
  7341                           ; 1 bytes @ 0x0
  7342                           
  7343  0020                     BUTTONS_isClicked@button:	
  7344                           ; 1 bytes @ 0x0
  7345                           
  7346  0020                     BUTTONS_isHeld@button:	
  7347                           ; 1 bytes @ 0x0
  7348                           
  7349  0020                     __Umul8_16@multiplicand:	
  7350                           ; 1 bytes @ 0x0
  7351                           
  7352  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7353                           ; 1 bytes @ 0x0
  7354                           
  7355  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7356                           ; 2 bytes @ 0x0
  7357                           
  7358  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  7359                           ; 2 bytes @ 0x0
  7360                           
  7361  0020                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  7362                           ; 2 bytes @ 0x0
  7363                           
  7364  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7365                           ; 2 bytes @ 0x0
  7366                           
  7367  0020                     ADCC_SetUpperThreshold@upperThreshold:	
  7368                           ; 2 bytes @ 0x0
  7369                           
  7370  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
  7371                           ; 2 bytes @ 0x0
  7372                           
  7373  0020                     init@port:	
  7374                           ; 2 bytes @ 0x0
  7375                           
  7376  0020                     ___lwmod@divisor:	
  7377                           ; 2 bytes @ 0x0
  7378                           
  7379  0020                     ___xxtofl@val:	
  7380                           ; 2 bytes @ 0x0
  7381                           
  7382                           
  7383                           ; 4 bytes @ 0x0
  7384  0020                     	ds	1
  7385  0021                     I2C1_MasterTRBInsert@pflag:	
  7386  0021                     I2C1_MasterWriteTRBBuild@length:	
  7387                           ; 1 bytes @ 0x1
  7388                           
  7389                           
  7390                           ; 1 bytes @ 0x1
  7391  0021                     	ds	1
  7392  0022                     ??_EUSART1_SetRxInterruptHandler:	
  7393  0022                     ??_EUSART1_SetTxInterruptHandler:	
  7394                           ; 1 bytes @ 0x2
  7395                           
  7396  0022                     ??_EUSART1_SetFramingErrorHandler:	
  7397                           ; 1 bytes @ 0x2
  7398                           
  7399  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  7400                           ; 1 bytes @ 0x2
  7401                           
  7402  0022                     ??_EUSART1_SetErrorHandler:	
  7403                           ; 1 bytes @ 0x2
  7404                           
  7405  0022                     ??_CLOCK_getTime:	
  7406                           ; 1 bytes @ 0x2
  7407                           
  7408  0022                     ??_ADCC_Initialize:	
  7409                           ; 1 bytes @ 0x2
  7410                           
  7411  0022                     ??_I2C1_MasterTRBInsert:	
  7412                           ; 1 bytes @ 0x2
  7413                           
  7414  0022                     ??_ADCC_SetADTIInterruptHandler:	
  7415                           ; 1 bytes @ 0x2
  7416                           
  7417  0022                     ??_DMX_init:	
  7418                           ; 1 bytes @ 0x2
  7419                           
  7420  0022                     ??_BEAT_init:	
  7421                           ; 1 bytes @ 0x2
  7422                           
  7423  0022                     ??_BUTTONS_task:	
  7424                           ; 1 bytes @ 0x2
  7425                           
  7426  0022                     ??__Umul8_16:	
  7427                           ; 1 bytes @ 0x2
  7428                           
  7429  0022                     ??_EUSART1_Initialize:	
  7430                           ; 1 bytes @ 0x2
  7431                           
  7432  0022                     ??_ADCC_SetUpperThreshold:	
  7433                           ; 1 bytes @ 0x2
  7434                           
  7435  0022                     init@pin:	
  7436                           ; 1 bytes @ 0x2
  7437                           
  7438  0022                     I2C1_MasterWriteTRBBuild@address:	
  7439                           ; 1 bytes @ 0x2
  7440                           
  7441  0022                     ___lwmod@dividend:	
  7442                           ; 2 bytes @ 0x2
  7443                           
  7444                           
  7445                           ; 2 bytes @ 0x2
  7446  0022                     	ds	1
  7447  0023                     ??_SYSTEM_Initialize:	
  7448  0023                     ??_init:	
  7449                           ; 1 bytes @ 0x3
  7450                           
  7451  0023                     I2C1_MasterTRBInsert@count:	
  7452                           ; 1 bytes @ 0x3
  7453                           
  7454                           
  7455                           ; 1 bytes @ 0x3
  7456  0023                     	ds	1
  7457  0024                     ??_I2C1_MasterWriteTRBBuild:	
  7458  0024                     ??___lwmod:	
  7459                           ; 1 bytes @ 0x4
  7460                           
  7461  0024                     ??___xxtofl:	
  7462                           ; 1 bytes @ 0x4
  7463                           
  7464  0024                     init@btn:	
  7465                           ; 1 bytes @ 0x4
  7466                           
  7467  0024                     __Umul8_16@product:	
  7468                           ; 1 bytes @ 0x4
  7469                           
  7470                           
  7471                           ; 2 bytes @ 0x4
  7472  0024                     	ds	1
  7473  0025                     ??_BUTTONS_init:	
  7474  0025                     BUTTONS_task@i:	
  7475                           ; 1 bytes @ 0x5
  7476                           
  7477  0025                     ___lwmod@counter:	
  7478                           ; 1 bytes @ 0x5
  7479                           
  7480                           
  7481                           ; 1 bytes @ 0x5
  7482  0025                     	ds	1
  7483  0026                     ?___lwdiv:	
  7484  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  7485                           ; 2 bytes @ 0x6
  7486                           
  7487  0026                     BUTTONS_task@time:	
  7488                           ; 1 bytes @ 0x6
  7489                           
  7490  0026                     ___lwdiv@divisor:	
  7491                           ; 2 bytes @ 0x6
  7492                           
  7493  0026                     __Umul8_16@word_mpld:	
  7494                           ; 2 bytes @ 0x6
  7495                           
  7496                           
  7497                           ; 2 bytes @ 0x6
  7498  0026                     	ds	1
  7499  0027                     ?_I2C1_MasterWrite:	
  7500  0027                     I2C1_MasterWrite@length:	
  7501                           ; 1 bytes @ 0x7
  7502                           
  7503                           
  7504                           ; 1 bytes @ 0x7
  7505  0027                     	ds	1
  7506  0028                     BUTTONS_task@btn:	
  7507  0028                     ___xxtofl@sign:	
  7508                           ; 1 bytes @ 0x8
  7509                           
  7510  0028                     __Umul8_16@multiplier:	
  7511                           ; 1 bytes @ 0x8
  7512                           
  7513  0028                     I2C1_MasterWrite@address:	
  7514                           ; 1 bytes @ 0x8
  7515                           
  7516  0028                     ___lwdiv@dividend:	
  7517                           ; 2 bytes @ 0x8
  7518                           
  7519                           
  7520                           ; 2 bytes @ 0x8
  7521  0028                     	ds	1
  7522  0029                     ___xxtofl@exp:	
  7523                           
  7524                           ; 1 bytes @ 0x9
  7525  0029                     	ds	1
  7526  002A                     ??___lwdiv:	
  7527  002A                     I2C1_MasterWrite@pflag:	
  7528                           ; 1 bytes @ 0xA
  7529                           
  7530  002A                     ___xxtofl@arg:	
  7531                           ; 1 bytes @ 0xA
  7532                           
  7533                           
  7534                           ; 4 bytes @ 0xA
  7535  002A                     	ds	1
  7536  002B                     ??_I2C1_MasterWrite:	
  7537  002B                     ___lwdiv@quotient:	
  7538                           ; 1 bytes @ 0xB
  7539                           
  7540                           
  7541                           ; 2 bytes @ 0xB
  7542  002B                     	ds	2
  7543  002D                     I2C1_MasterWrite@pdata:	
  7544  002D                     ___lwdiv@counter:	
  7545                           ; 1 bytes @ 0xD
  7546                           
  7547                           
  7548                           ; 1 bytes @ 0xD
  7549  002D                     	ds	1
  7550  002E                     ??_BEAT_task:	
  7551  002E                     ?_writeData:	
  7552                           ; 1 bytes @ 0xE
  7553                           
  7554  002E                     ?___fldiv:	
  7555                           ; 1 bytes @ 0xE
  7556                           
  7557  002E                     writeData@data:	
  7558                           ; 4 bytes @ 0xE
  7559                           
  7560  002E                     ___fldiv@a:	
  7561                           ; 1 bytes @ 0xE
  7562                           
  7563                           
  7564                           ; 4 bytes @ 0xE
  7565  002E                     	ds	1
  7566  002F                     ??_writeData:	
  7567                           
  7568                           ; 1 bytes @ 0xF
  7569  002F                     	ds	1
  7570  0030                     BEAT_task@offset:	
  7571                           
  7572                           ; 2 bytes @ 0x10
  7573  0030                     	ds	2
  7574  0032                     writeData@address:	
  7575  0032                     ___fldiv@b:	
  7576                           ; 1 bytes @ 0x12
  7577                           
  7578                           
  7579                           ; 4 bytes @ 0x12
  7580  0032                     	ds	1
  7581  0033                     writeData@dataToSend:	
  7582                           
  7583                           ; 1 bytes @ 0x13
  7584  0033                     	ds	1
  7585  0034                     writeData@status:	
  7586                           
  7587                           ; 1 bytes @ 0x14
  7588  0034                     	ds	1
  7589  0035                     ??_TM1650_enable:	
  7590  0035                     ?_TM1650_setDigit:	
  7591                           ; 1 bytes @ 0x15
  7592                           
  7593  0035                     TM1650_setDigit@num:	
  7594                           ; 1 bytes @ 0x15
  7595                           
  7596  0035                     TM1650_enable@enable:	
  7597                           ; 1 bytes @ 0x15
  7598                           
  7599                           
  7600                           ; 1 bytes @ 0x15
  7601  0035                     	ds	1
  7602  0036                     ??_TM1650_init:	
  7603  0036                     ??___fldiv:	
  7604                           ; 1 bytes @ 0x16
  7605                           
  7606  0036                     TM1650_setDigit@dp:	
  7607                           ; 1 bytes @ 0x16
  7608                           
  7609                           
  7610                           ; 1 bytes @ 0x16
  7611  0036                     	ds	1
  7612  0037                     ??_TM1650_setDigit:	
  7613                           
  7614                           ; 1 bytes @ 0x17
  7615  0037                     	ds	2
  7616  0039                     TM1650_setDigit@digit:	
  7617                           
  7618                           ; 1 bytes @ 0x19
  7619  0039                     	ds	1
  7620  003A                     TM1650_setDigit@data:	
  7621                           
  7622                           ; 1 bytes @ 0x1A
  7623  003A                     	ds	1
  7624  003B                     ?_TM1650_fastPrintNum:	
  7625  003B                     TM1650_fastPrintNum@num:	
  7626                           ; 1 bytes @ 0x1B
  7627                           
  7628  003B                     ___fldiv@rem:	
  7629                           ; 2 bytes @ 0x1B
  7630                           
  7631                           
  7632                           ; 4 bytes @ 0x1B
  7633  003B                     	ds	2
  7634  003D                     ??_TM1650_fastPrintNum:	
  7635                           
  7636                           ; 1 bytes @ 0x1D
  7637  003D                     	ds	1
  7638  003E                     _TM1650_fastPrintNum$2887:	
  7639                           
  7640                           ; 2 bytes @ 0x1E
  7641  003E                     	ds	1
  7642  003F                     ___fldiv@sign:	
  7643                           
  7644                           ; 1 bytes @ 0x1F
  7645  003F                     	ds	1
  7646  0040                     ___fldiv@new_exp:	
  7647  0040                     _TM1650_fastPrintNum$2886:	
  7648                           ; 2 bytes @ 0x20
  7649                           
  7650                           
  7651                           ; 2 bytes @ 0x20
  7652  0040                     	ds	2
  7653  0042                     TM1650_fastPrintNum@array:	
  7654  0042                     ___fldiv@grs:	
  7655                           ; 4 bytes @ 0x22
  7656                           
  7657                           
  7658                           ; 4 bytes @ 0x22
  7659  0042                     	ds	4
  7660  0046                     ___fldiv@bexp:	
  7661  0046                     _TM1650_fastPrintNum$2885:	
  7662                           ; 1 bytes @ 0x26
  7663                           
  7664                           
  7665                           ; 2 bytes @ 0x26
  7666  0046                     	ds	1
  7667  0047                     ___fldiv@aexp:	
  7668                           
  7669                           ; 1 bytes @ 0x27
  7670  0047                     	ds	1
  7671  0048                     ??_CONTROLLER_init:	
  7672  0048                     ??_CONTROLLER_task:	
  7673                           ; 1 bytes @ 0x28
  7674                           
  7675  0048                     ??_address_inc:	
  7676                           ; 1 bytes @ 0x28
  7677                           
  7678  0048                     ??_address_dec:	
  7679                           ; 1 bytes @ 0x28
  7680                           
  7681  0048                     ?___flmul:	
  7682                           ; 1 bytes @ 0x28
  7683                           
  7684  0048                     ___flmul@b:	
  7685                           ; 4 bytes @ 0x28
  7686                           
  7687                           
  7688                           ; 4 bytes @ 0x28
  7689  0048                     	ds	2
  7690  004A                     CONTROLLER_task@active:	
  7691                           
  7692                           ; 1 bytes @ 0x2A
  7693  004A                     	ds	2
  7694  004C                     ___flmul@a:	
  7695                           
  7696                           ; 4 bytes @ 0x2C
  7697  004C                     	ds	4
  7698  0050                     ??___flmul:	
  7699                           
  7700                           ; 1 bytes @ 0x30
  7701  0050                     	ds	5
  7702  0055                     ___flmul@sign:	
  7703                           
  7704                           ; 1 bytes @ 0x35
  7705  0055                     	ds	1
  7706  0056                     ___flmul@aexp:	
  7707                           
  7708                           ; 1 bytes @ 0x36
  7709  0056                     	ds	1
  7710  0057                     ___flmul@grs:	
  7711                           
  7712                           ; 4 bytes @ 0x37
  7713  0057                     	ds	4
  7714  005B                     ___flmul@bexp:	
  7715                           
  7716                           ; 1 bytes @ 0x3B
  7717  005B                     	ds	1
  7718  005C                     ___flmul@prod:	
  7719                           
  7720                           ; 4 bytes @ 0x3C
  7721  005C                     	ds	4
  7722  0060                     ___flmul@temp:	
  7723                           
  7724                           ; 2 bytes @ 0x40
  7725  0060                     	ds	2
  7726  0062                     ?___fltol:	
  7727  0062                     ___fltol@f1:	
  7728                           ; 4 bytes @ 0x42
  7729                           
  7730                           
  7731                           ; 4 bytes @ 0x42
  7732  0062                     	ds	4
  7733  0066                     ??___fltol:	
  7734                           
  7735                           ; 1 bytes @ 0x46
  7736  0066                     	ds	5
  7737  006B                     ___fltol@sign1:	
  7738                           
  7739                           ; 1 bytes @ 0x4B
  7740  006B                     	ds	1
  7741  006C                     ___fltol@exp1:	
  7742                           
  7743                           ; 1 bytes @ 0x4C
  7744  006C                     	ds	1
  7745  006D                     ?_LED_setColor:	
  7746  006D                     LED_setColor@G:	
  7747                           ; 1 bytes @ 0x4D
  7748                           
  7749                           
  7750                           ; 1 bytes @ 0x4D
  7751  006D                     	ds	1
  7752  006E                     LED_setColor@B:	
  7753                           
  7754                           ; 1 bytes @ 0x4E
  7755  006E                     	ds	1
  7756  006F                     LED_setColor@W:	
  7757                           
  7758                           ; 1 bytes @ 0x4F
  7759  006F                     	ds	1
  7760                           
  7761                           	psect	maintext
  7762  177C                     __pmaintext:	
  7763 ;;
  7764 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7765 ;;
  7766 ;; *************** function _main *****************
  7767 ;; Defined at:
  7768 ;;		line 55 in file "main.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;		None
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;  lastTime        2    0        unsigned short 
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  1    wreg      void 
  7775 ;; Registers used:
  7776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7777 ;; Tracked objects:
  7778 ;;		On entry : B3F/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7783 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7784 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7785 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7786 ;;Total ram usage:        4 bytes
  7787 ;; Hardware stack levels required when called:   12
  7788 ;; This function calls:
  7789 ;;		_BEAT_init
  7790 ;;		_BEAT_task
  7791 ;;		_BUTTONS_init
  7792 ;;		_BUTTONS_task
  7793 ;;		_CLOCK_init
  7794 ;;		_CONTROLLER_init
  7795 ;;		_CONTROLLER_task
  7796 ;;		_DMX_Task
  7797 ;;		_DMX_init
  7798 ;;		_LED_init
  7799 ;;		_SYSTEM_Initialize
  7800 ;;		_TM1650_fastPrintNum
  7801 ;;		_TM1650_init
  7802 ;; This function is called by:
  7803 ;;		Startup code after reset
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           
  7808                           ;psect for function _main
  7809  177C                     _main:	
  7810                           
  7811                           ;main.c: 57:     SYSTEM_Initialize();
  7812                           
  7813                           ;incstack = 0
  7814                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7815  177C  3194  24BC  3197   	fcall	_SYSTEM_Initialize
  7816                           
  7817                           ;main.c: 58:     _delay((unsigned long)((50)*(32000000/4000.0)));
  7818  177F  3003               	movlw	3
  7819  1780  0141               	movlb	1	; select bank1
  7820  1781  00E4               	movwf	(??_main^(0+128)+1)
  7821  1782  3008               	movlw	8
  7822  1783  00E3               	movwf	??_main^(0+128)
  7823  1784  3077               	movlw	119
  7824  1785                     u5497:	
  7825  1785  0B89               	decfsz	9,f
  7826  1786  2F85               	goto	u5497
  7827  1787  0BE3               	decfsz	??_main^(0+128),f
  7828  1788  2F85               	goto	u5497
  7829  1789  0BE4               	decfsz	(??_main^(0+128)+1),f
  7830  178A  2F85               	goto	u5497
  7831                           
  7832                           ;main.c: 59:     TM1650_init();
  7833  178B  3193  23C5  3197   	fcall	_TM1650_init
  7834                           
  7835                           ;main.c: 60:     CLOCK_init();
  7836  178E  3194  249B  3197   	fcall	_CLOCK_init
  7837                           
  7838                           ;main.c: 61:     BUTTONS_init();
  7839  1791  3188  205F  3197   	fcall	_BUTTONS_init
  7840                           
  7841                           ;main.c: 62:     CONTROLLER_init();
  7842  1794  3194  244D  3197   	fcall	_CONTROLLER_init
  7843                           
  7844                           ;main.c: 63:     DMX_init();
  7845  1797  3194  248C  3197   	fcall	_DMX_init
  7846                           
  7847                           ;main.c: 65:     LED_init();
  7848  179A  3197  2746  3197   	fcall	_LED_init
  7849                           
  7850                           ;main.c: 66:     BEAT_init();
  7851  179D  3194  24CE  3197   	fcall	_BEAT_init
  7852                           
  7853                           ;main.c: 67:     TRISC5 = 0;
  7854  17A0  0140               	movlb	0	; select bank0
  7855  17A1  1294               	bcf	20,5	;volatile
  7856                           
  7857                           ;main.c: 68:     LATC5 = 0;
  7858  17A2  129A               	bcf	26,5	;volatile
  7859  17A3                     l5833:	
  7860                           
  7861                           ;main.c: 73:     {;main.c: 74:         BUTTONS_task();
  7862  17A3  318A  22F9  3197   	fcall	_BUTTONS_task
  7863                           
  7864                           ;main.c: 75:         CONTROLLER_task();
  7865  17A6  3188  20FC  3197   	fcall	_CONTROLLER_task
  7866                           
  7867                           ;main.c: 76:         BEAT_task();
  7868  17A9  3187  2708  3197   	fcall	_BEAT_task
  7869                           
  7870                           ;main.c: 77:         DMX_Task();
  7871  17AC  318D  2543  3197   	fcall	_DMX_Task
  7872                           
  7873                           ;main.c: 78:         TM1650_fastPrintNum(address);
  7874  17AF  0141               	movlb	1	; select bank1
  7875  17B0  086A               	movf	(_address+1)^(0+128),w
  7876  17B1  0140               	movlb	0	; select bank0
  7877  17B2  00BC               	movwf	TM1650_fastPrintNum@num+1
  7878  17B3  0141               	movlb	1	; select bank1
  7879  17B4  0869               	movf	_address^(0+128),w
  7880  17B5  0140               	movlb	0	; select bank0
  7881  17B6  00BB               	movwf	TM1650_fastPrintNum@num
  7882  17B7  3180  2097  3197   	fcall	_TM1650_fastPrintNum
  7883  17BA  2FA3               	goto	l5833
  7884  17BB                     __end_of_main:	
  7885                           
  7886                           	psect	text1
  7887  13C5                     __ptext1:	
  7888 ;; *************** function _TM1650_init *****************
  7889 ;; Defined at:
  7890 ;;		line 12 in file "tm1650.c"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;		None
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;		None
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  1    wreg      void 
  7897 ;; Registers used:
  7898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7908 ;;Total ram usage:        0 bytes
  7909 ;; Hardware stack levels used:    1
  7910 ;; Hardware stack levels required when called:    9
  7911 ;; This function calls:
  7912 ;;		_TM1650_enable
  7913 ;; This function is called by:
  7914 ;;		_main
  7915 ;; This function uses a non-reentrant model
  7916 ;;
  7917                           
  7918                           
  7919                           ;psect for function _TM1650_init
  7920  13C5                     _TM1650_init:	
  7921                           
  7922                           ;tm1650.c: 13:     (INTCONbits.GIE = 1);
  7923                           
  7924                           ;incstack = 0
  7925                           ; Regs used in _TM1650_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7926  13C5  178B               	bsf	11,7	;volatile
  7927                           
  7928                           ;tm1650.c: 14:     (INTCONbits.PEIE = 1);
  7929  13C6  170B               	bsf	11,6	;volatile
  7930                           
  7931                           ;tm1650.c: 16:     TM1650_enable(1);
  7932  13C7  3001               	movlw	1
  7933  13C8  3195  2515         	fcall	_TM1650_enable
  7934  13CA  0008               	return
  7935  13CB                     __end_of_TM1650_init:	
  7936                           
  7937                           	psect	text2
  7938  14BC                     __ptext2:	
  7939 ;; *************** function _SYSTEM_Initialize *****************
  7940 ;; Defined at:
  7941 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;		None
  7944 ;; Auto vars:     Size  Location     Type
  7945 ;;		None
  7946 ;; Return value:  Size  Location     Type
  7947 ;;                  1    wreg      void 
  7948 ;; Registers used:
  7949 ;;		wreg, status,2, status,0, pclath, cstack
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7959 ;;Total ram usage:        0 bytes
  7960 ;; Hardware stack levels used:    1
  7961 ;; Hardware stack levels required when called:    6
  7962 ;; This function calls:
  7963 ;;		_ADCC_Initialize
  7964 ;;		_EUSART1_Initialize
  7965 ;;		_I2C1_Initialize
  7966 ;;		_OSCILLATOR_Initialize
  7967 ;;		_PIN_MANAGER_Initialize
  7968 ;;		_PMD_Initialize
  7969 ;; This function is called by:
  7970 ;;		_main
  7971 ;; This function uses a non-reentrant model
  7972 ;;
  7973                           
  7974                           
  7975                           ;psect for function _SYSTEM_Initialize
  7976  14BC                     _SYSTEM_Initialize:	
  7977                           
  7978                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  7979                           
  7980                           ;incstack = 0
  7981                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7982  14BC  3194  2443  3194   	fcall	_PMD_Initialize
  7983                           
  7984                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7985  14BF  3196  2679  3194   	fcall	_PIN_MANAGER_Initialize
  7986                           
  7987                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7988  14C2  3194  243A  3194   	fcall	_OSCILLATOR_Initialize
  7989                           
  7990                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
  7991  14C5  3195  255E  3194   	fcall	_I2C1_Initialize
  7992                           
  7993                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  7994  14C8  3195  25FC  3194   	fcall	_ADCC_Initialize
  7995                           
  7996                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
  7997  14CB  3197  27BB         	fcall	_EUSART1_Initialize
  7998  14CD  0008               	return
  7999  14CE                     __end_of_SYSTEM_Initialize:	
  8000                           
  8001                           	psect	text3
  8002  1443                     __ptext3:	
  8003 ;; *************** function _PMD_Initialize *****************
  8004 ;; Defined at:
  8005 ;;		line 74 in file "mcc_generated_files/mcc.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;		None
  8008 ;; Auto vars:     Size  Location     Type
  8009 ;;		None
  8010 ;; Return value:  Size  Location     Type
  8011 ;;                  1    wreg      void 
  8012 ;; Registers used:
  8013 ;;		status,2
  8014 ;; Tracked objects:
  8015 ;;		On entry : 0/0
  8016 ;;		On exit  : 0/0
  8017 ;;		Unchanged: 0/0
  8018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8023 ;;Total ram usage:        0 bytes
  8024 ;; Hardware stack levels used:    1
  8025 ;; Hardware stack levels required when called:    4
  8026 ;; This function calls:
  8027 ;;		Nothing
  8028 ;; This function is called by:
  8029 ;;		_SYSTEM_Initialize
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033                           
  8034                           ;psect for function _PMD_Initialize
  8035  1443                     _PMD_Initialize:	
  8036                           
  8037                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  8038                           
  8039                           ;incstack = 0
  8040                           ; Regs used in _PMD_Initialize: [status,2]
  8041  1443  014F               	movlb	15	; select bank15
  8042  1444  0196               	clrf	22	;volatile
  8043                           
  8044                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  8045  1445  0197               	clrf	23	;volatile
  8046                           
  8047                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  8048  1446  0198               	clrf	24	;volatile
  8049                           
  8050                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  8051  1447  0199               	clrf	25	;volatile
  8052                           
  8053                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  8054  1448  019A               	clrf	26	;volatile
  8055                           
  8056                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  8057  1449  019B               	clrf	27	;volatile
  8058                           
  8059                           ;mcc_generated_files/mcc.c: 89:     PMD6 = 0x00;
  8060  144A  019C               	clrf	28	;volatile
  8061                           
  8062                           ;mcc_generated_files/mcc.c: 91:     PMD7 = 0x00;
  8063  144B  019D               	clrf	29	;volatile
  8064  144C  0008               	return
  8065  144D                     __end_of_PMD_Initialize:	
  8066                           
  8067                           	psect	text4
  8068  1679                     __ptext4:	
  8069 ;; *************** function _PIN_MANAGER_Initialize *****************
  8070 ;; Defined at:
  8071 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;		None
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;		None
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  1    wreg      void 
  8078 ;; Registers used:
  8079 ;;		wreg, status,2
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8089 ;;Total ram usage:        0 bytes
  8090 ;; Hardware stack levels used:    1
  8091 ;; Hardware stack levels required when called:    4
  8092 ;; This function calls:
  8093 ;;		Nothing
  8094 ;; This function is called by:
  8095 ;;		_SYSTEM_Initialize
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           
  8099                           
  8100                           ;psect for function _PIN_MANAGER_Initialize
  8101  1679                     _PIN_MANAGER_Initialize:	
  8102                           
  8103                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8104                           
  8105                           ;incstack = 0
  8106                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8107  1679  0140               	movlb	0	; select bank0
  8108  167A  0198               	clrf	24	;volatile
  8109                           
  8110                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8111  167B  0199               	clrf	25	;volatile
  8112                           
  8113                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8114  167C  019A               	clrf	26	;volatile
  8115                           
  8116                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  8117  167D  303F               	movlw	63
  8118  167E  0092               	movwf	18	;volatile
  8119                           
  8120                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xB0;
  8121  167F  30B0               	movlw	176
  8122  1680  0093               	movwf	19	;volatile
  8123                           
  8124                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  8125  1681  30FF               	movlw	255
  8126  1682  0094               	movwf	20	;volatile
  8127                           
  8128                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xF8;
  8129  1683  30F8               	movlw	248
  8130  1684  017E               	movlb	62	; select bank62
  8131  1685  00CE               	movwf	78	;volatile
  8132                           
  8133                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
  8134  1686  30E0               	movlw	224
  8135  1687  00C3               	movwf	67	;volatile
  8136                           
  8137                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x03;
  8138  1688  3003               	movlw	3
  8139  1689  00B8               	movwf	56	;volatile
  8140                           
  8141                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8142  168A  01C4               	clrf	68	;volatile
  8143                           
  8144                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x04;
  8145  168B  3004               	movlw	4
  8146  168C  00B9               	movwf	57	;volatile
  8147                           
  8148                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x07;
  8149  168D  3007               	movlw	7
  8150  168E  00CF               	movwf	79	;volatile
  8151                           
  8152                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  8153  168F  01BA               	clrf	58	;volatile
  8154                           
  8155                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  8156  1690  01C5               	clrf	69	;volatile
  8157                           
  8158                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  8159  1691  01D0               	clrf	80	;volatile
  8160                           
  8161                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  8162  1692  3037               	movlw	55
  8163  1693  00BB               	movwf	59	;volatile
  8164                           
  8165                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  8166  1694  30F0               	movlw	240
  8167  1695  00C6               	movwf	70	;volatile
  8168                           
  8169                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  8170  1696  30FF               	movlw	255
  8171  1697  00D1               	movwf	81	;volatile
  8172                           
  8173                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
  8174  1698  3005               	movlw	5
  8175  1699  017D               	movlb	61	; select bank61
  8176  169A  00C5               	movwf	69	;volatile
  8177                           
  8178                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
  8179  169B  3014               	movlw	20
  8180  169C  017E               	movlb	62	; select bank62
  8181  169D  0094               	movwf	20	;volatile
  8182                           
  8183                           ;mcc_generated_files/pin_manager.c: 108:     RB6PPS = 0x0F;
  8184  169E  300F               	movlw	15
  8185  169F  009E               	movwf	30	;volatile
  8186                           
  8187                           ;mcc_generated_files/pin_manager.c: 109:     RA5PPS = 0x13;
  8188  16A0  3013               	movlw	19
  8189  16A1  0095               	movwf	21	;volatile
  8190                           
  8191                           ;mcc_generated_files/pin_manager.c: 110:     SSP1DATPPS = 0x04;
  8192  16A2  3004               	movlw	4
  8193  16A3  017D               	movlb	61	; select bank61
  8194  16A4  00C6               	movwf	70	;volatile
  8195                           
  8196                           ;mcc_generated_files/pin_manager.c: 111:     RX1DTPPS = 0x0C;
  8197  16A5  300C               	movlw	12
  8198  16A6  00CB               	movwf	75	;volatile
  8199  16A7  0008               	return
  8200  16A8                     __end_of_PIN_MANAGER_Initialize:	
  8201                           
  8202                           	psect	text5
  8203  143A                     __ptext5:	
  8204 ;; *************** function _OSCILLATOR_Initialize *****************
  8205 ;; Defined at:
  8206 ;;		line 60 in file "mcc_generated_files/mcc.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;		None
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;		None
  8211 ;; Return value:  Size  Location     Type
  8212 ;;                  1    wreg      void 
  8213 ;; Registers used:
  8214 ;;		wreg, status,2
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8224 ;;Total ram usage:        0 bytes
  8225 ;; Hardware stack levels used:    1
  8226 ;; Hardware stack levels required when called:    4
  8227 ;; This function calls:
  8228 ;;		Nothing
  8229 ;; This function is called by:
  8230 ;;		_SYSTEM_Initialize
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           
  8235                           ;psect for function _OSCILLATOR_Initialize
  8236  143A                     _OSCILLATOR_Initialize:	
  8237                           
  8238                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  8239                           
  8240                           ;incstack = 0
  8241                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8242  143A  3060               	movlw	96
  8243  143B  0151               	movlb	17	; select bank17
  8244  143C  008D               	movwf	13	;volatile
  8245                           
  8246                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  8247  143D  018F               	clrf	15	;volatile
  8248                           
  8249                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  8250  143E  0191               	clrf	17	;volatile
  8251                           
  8252                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  8253  143F  3006               	movlw	6
  8254  1440  0093               	movwf	19	;volatile
  8255                           
  8256                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  8257  1441  0192               	clrf	18	;volatile
  8258  1442  0008               	return
  8259  1443                     __end_of_OSCILLATOR_Initialize:	
  8260                           
  8261                           	psect	text6
  8262  155E                     __ptext6:	
  8263 ;; *************** function _I2C1_Initialize *****************
  8264 ;; Defined at:
  8265 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;		None
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1    wreg      void 
  8272 ;; Registers used:
  8273 ;;		wreg, status,2
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8281 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8282 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8283 ;;Total ram usage:        1 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:    4
  8286 ;; This function calls:
  8287 ;;		Nothing
  8288 ;; This function is called by:
  8289 ;;		_SYSTEM_Initialize
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           
  8294                           ;psect for function _I2C1_Initialize
  8295  155E                     _I2C1_Initialize:	
  8296                           
  8297                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
  8298                           
  8299                           ;incstack = 0
  8300                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  8301  155E  30CA               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  8302  155F  0140               	movlb	0	; select bank0
  8303  1560  00A0               	movwf	??_I2C1_Initialize
  8304  1561  0820               	movf	??_I2C1_Initialize,w
  8305  1562  0141               	movlb	1	; select bank1
  8306  1563  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
  8307                           
  8308                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
  8309  1564  30CA               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  8310  1565  0140               	movlb	0	; select bank0
  8311  1566  00A0               	movwf	??_I2C1_Initialize
  8312  1567  0820               	movf	??_I2C1_Initialize,w
  8313  1568  0141               	movlb	1	; select bank1
  8314  1569  00A0               	movwf	_i2c1_object^(0+128)
  8315                           
  8316                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
  8317  156A  14A2               	bsf	(_i2c1_object^(0+128)+2),1
  8318                           
  8319                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
  8320  156B  1022               	bcf	(_i2c1_object^(0+128)+2),0
  8321                           
  8322                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
  8323  156C  01A4               	clrf	(_i2c1_object^(0+128)+4)
  8324                           
  8325                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
  8326  156D  0143               	movlb	3	; select bank3
  8327  156E  018F               	clrf	15	;volatile
  8328                           
  8329                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
  8330  156F  3028               	movlw	40
  8331  1570  0090               	movwf	16	;volatile
  8332                           
  8333                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
  8334  1571  0192               	clrf	18	;volatile
  8335                           
  8336                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x4F;
  8337  1572  304F               	movlw	79
  8338  1573  008D               	movwf	13	;volatile
  8339                           
  8340                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
  8341  1574  014E               	movlb	14	; select bank14
  8342  1575  100F               	bcf	15,0	;volatile
  8343                           
  8344                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
  8345  1576  108F               	bcf	15,1	;volatile
  8346                           
  8347                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
  8348  1577  1419               	bsf	25,0	;volatile
  8349                           
  8350                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
  8351  1578  1499               	bsf	25,1	;volatile
  8352  1579  0008               	return
  8353  157A                     __end_of_I2C1_Initialize:	
  8354                           
  8355                           	psect	text7
  8356  17BB                     __ptext7:	
  8357 ;; *************** function _EUSART1_Initialize *****************
  8358 ;; Defined at:
  8359 ;;		line 85 in file "mcc_generated_files/eusart1.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;		None
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;		None
  8364 ;; Return value:  Size  Location     Type
  8365 ;;                  1    wreg      void 
  8366 ;; Registers used:
  8367 ;;		wreg, status,2, status,0, pclath, cstack
  8368 ;; Tracked objects:
  8369 ;;		On entry : 0/0
  8370 ;;		On exit  : 0/0
  8371 ;;		Unchanged: 0/0
  8372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8375 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8376 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8377 ;;Total ram usage:        1 bytes
  8378 ;; Hardware stack levels used:    1
  8379 ;; Hardware stack levels required when called:    5
  8380 ;; This function calls:
  8381 ;;		_EUSART1_SetErrorHandler
  8382 ;;		_EUSART1_SetFramingErrorHandler
  8383 ;;		_EUSART1_SetOverrunErrorHandler
  8384 ;;		_EUSART1_SetRxInterruptHandler
  8385 ;;		_EUSART1_SetTxInterruptHandler
  8386 ;; This function is called by:
  8387 ;;		_SYSTEM_Initialize
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           
  8391                           
  8392                           ;psect for function _EUSART1_Initialize
  8393  17BB                     _EUSART1_Initialize:	
  8394                           
  8395                           ;mcc_generated_files/eusart1.c: 88:     PIE3bits.RC1IE = 0;
  8396                           
  8397                           ;incstack = 0
  8398                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8399  17BB  014E               	movlb	14	; select bank14
  8400  17BC  1299               	bcf	25,5	;volatile
  8401                           
  8402                           ;mcc_generated_files/eusart1.c: 89:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  8403  17BD  30A8               	movlw	low _EUSART1_Receive_ISR
  8404  17BE  0140               	movlb	0	; select bank0
  8405  17BF  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8406  17C0  3016               	movlw	high _EUSART1_Receive_ISR
  8407  17C1  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8408  17C2  3194  240D  3197   	fcall	_EUSART1_SetRxInterruptHandler
  8409                           
  8410                           ;mcc_generated_files/eusart1.c: 90:     PIE3bits.TX1IE = 0;
  8411  17C5  014E               	movlb	14	; select bank14
  8412  17C6  1219               	bcf	25,4	;volatile
  8413                           
  8414                           ;mcc_generated_files/eusart1.c: 91:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  8415  17C7  307A               	movlw	low _EUSART1_Transmit_ISR
  8416  17C8  0140               	movlb	0	; select bank0
  8417  17C9  00A0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  8418  17CA  3015               	movlw	high _EUSART1_Transmit_ISR
  8419  17CB  00A1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  8420  17CC  3194  2431  3197   	fcall	_EUSART1_SetTxInterruptHandler
  8421                           
  8422                           ;mcc_generated_files/eusart1.c: 95:     BAUD1CON = 0x08;
  8423  17CF  3008               	movlw	8
  8424  17D0  0142               	movlb	2	; select bank2
  8425  17D1  009F               	movwf	31	;volatile
  8426                           
  8427                           ;mcc_generated_files/eusart1.c: 98:     RC1STA = 0x90;
  8428  17D2  3090               	movlw	144
  8429  17D3  009D               	movwf	29	;volatile
  8430                           
  8431                           ;mcc_generated_files/eusart1.c: 101:     TX1STA = 0x04;
  8432  17D4  3004               	movlw	4
  8433  17D5  009E               	movwf	30	;volatile
  8434                           
  8435                           ;mcc_generated_files/eusart1.c: 104:     SP1BRGL = 0x1F;
  8436  17D6  301F               	movlw	31
  8437  17D7  009B               	movwf	27	;volatile
  8438                           
  8439                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGH = 0x00;
  8440  17D8  019C               	clrf	28	;volatile
  8441                           
  8442                           ;mcc_generated_files/eusart1.c: 110:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  8443  17D9  3003               	movlw	low _EUSART1_DefaultFramingErrorHandler
  8444  17DA  0140               	movlb	0	; select bank0
  8445  17DB  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  8446  17DC  3000               	movlw	high _EUSART1_DefaultFramingErrorHandler
  8447  17DD  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  8448  17DE  3194  241F  3197   	fcall	_EUSART1_SetFramingErrorHandler
  8449                           
  8450                           ;mcc_generated_files/eusart1.c: 111:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  8451  17E1  30B6               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  8452  17E2  0140               	movlb	0	; select bank0
  8453  17E3  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  8454  17E4  3013               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  8455  17E5  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  8456  17E6  3194  2428  3197   	fcall	_EUSART1_SetOverrunErrorHandler
  8457                           
  8458                           ;mcc_generated_files/eusart1.c: 112:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  8459  17E9  30A9               	movlw	low _EUSART1_DefaultErrorHandler
  8460  17EA  0140               	movlb	0	; select bank0
  8461  17EB  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  8462  17EC  3013               	movlw	high _EUSART1_DefaultErrorHandler
  8463  17ED  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  8464  17EE  3194  2416         	fcall	_EUSART1_SetErrorHandler
  8465                           
  8466                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxLastError.status = 0;
  8467  17F0  0141               	movlb	1	; select bank1
  8468  17F1  01C8               	clrf	_eusart1RxLastError^(0+128)	;volatile
  8469                           
  8470                           ;mcc_generated_files/eusart1.c: 117:     eusart1TxHead = 0;
  8471  17F2  01F3               	clrf	_eusart1TxHead	;volatile
  8472                           
  8473                           ;mcc_generated_files/eusart1.c: 118:     eusart1TxTail = 0;
  8474  17F3  01F2               	clrf	_eusart1TxTail	;volatile
  8475                           
  8476                           ;mcc_generated_files/eusart1.c: 119:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  8477  17F4  3008               	movlw	8
  8478  17F5  0140               	movlb	0	; select bank0
  8479  17F6  00A2               	movwf	??_EUSART1_Initialize
  8480  17F7  0822               	movf	??_EUSART1_Initialize,w
  8481  17F8  0141               	movlb	1	; select bank1
  8482  17F9  00EC               	movwf	_eusart1TxBufferRemaining^(0+128)	;volatile
  8483                           
  8484                           ;mcc_generated_files/eusart1.c: 121:     eusart1RxHead = 0;
  8485  17FA  01F1               	clrf	_eusart1RxHead	;volatile
  8486                           
  8487                           ;mcc_generated_files/eusart1.c: 122:     eusart1RxTail = 0;
  8488  17FB  01F0               	clrf	_eusart1RxTail	;volatile
  8489                           
  8490                           ;mcc_generated_files/eusart1.c: 123:     eusart1RxCount = 0;
  8491  17FC  01C9               	clrf	_eusart1RxCount^(0+128)	;volatile
  8492                           
  8493                           ;mcc_generated_files/eusart1.c: 126:     PIE3bits.RC1IE = 1;
  8494  17FD  014E               	movlb	14	; select bank14
  8495  17FE  1699               	bsf	25,5	;volatile
  8496  17FF  0008               	return
  8497  1800                     __end_of_EUSART1_Initialize:	
  8498                           
  8499                           	psect	text8
  8500  1431                     __ptext8:	
  8501 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  8502 ;; Defined at:
  8503 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  8504 ;; Parameters:    Size  Location     Type
  8505 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8506 ;;		 -> EUSART1_Transmit_ISR(1), 
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;		None
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  1    wreg      void 
  8511 ;; Registers used:
  8512 ;;		wreg
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8518 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8521 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8522 ;;Total ram usage:        2 bytes
  8523 ;; Hardware stack levels used:    1
  8524 ;; Hardware stack levels required when called:    4
  8525 ;; This function calls:
  8526 ;;		Nothing
  8527 ;; This function is called by:
  8528 ;;		_EUSART1_Initialize
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           
  8532                           
  8533                           ;psect for function _EUSART1_SetTxInterruptHandler
  8534  1431                     _EUSART1_SetTxInterruptHandler:	
  8535                           
  8536                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8537                           
  8538                           ;incstack = 0
  8539                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  8540  1431  0140               	movlb	0	; select bank0
  8541  1432  0821               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  8542  1433  0142               	movlb	2	; select bank2
  8543  1434  00D5               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
  8544  1435  0140               	movlb	0	; select bank0
  8545  1436  0820               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  8546  1437  0142               	movlb	2	; select bank2
  8547  1438  00D4               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
  8548  1439  0008               	return
  8549  143A                     __end_of_EUSART1_SetTxInterruptHandler:	
  8550                           
  8551                           	psect	text9
  8552  1428                     __ptext9:	
  8553 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8554 ;; Defined at:
  8555 ;;		line 265 in file "mcc_generated_files/eusart1.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8558 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8559 ;; Auto vars:     Size  Location     Type
  8560 ;;		None
  8561 ;; Return value:  Size  Location     Type
  8562 ;;                  1    wreg      void 
  8563 ;; Registers used:
  8564 ;;		wreg
  8565 ;; Tracked objects:
  8566 ;;		On entry : 0/0
  8567 ;;		On exit  : 0/0
  8568 ;;		Unchanged: 0/0
  8569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8570 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8573 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8574 ;;Total ram usage:        2 bytes
  8575 ;; Hardware stack levels used:    1
  8576 ;; Hardware stack levels required when called:    4
  8577 ;; This function calls:
  8578 ;;		Nothing
  8579 ;; This function is called by:
  8580 ;;		_EUSART1_Initialize
  8581 ;; This function uses a non-reentrant model
  8582 ;;
  8583                           
  8584                           
  8585                           ;psect for function _EUSART1_SetOverrunErrorHandler
  8586  1428                     _EUSART1_SetOverrunErrorHandler:	
  8587                           
  8588                           ;mcc_generated_files/eusart1.c: 266:     EUSART1_OverrunErrorHandler = interruptHandler;
  8589                           
  8590                           ;incstack = 0
  8591                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  8592  1428  0140               	movlb	0	; select bank0
  8593  1429  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  8594  142A  0142               	movlb	2	; select bank2
  8595  142B  00CF               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
  8596  142C  0140               	movlb	0	; select bank0
  8597  142D  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  8598  142E  0142               	movlb	2	; select bank2
  8599  142F  00CE               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
  8600  1430  0008               	return
  8601  1431                     __end_of_EUSART1_SetOverrunErrorHandler:	
  8602                           
  8603                           	psect	text10
  8604  141F                     __ptext10:	
  8605 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8606 ;; Defined at:
  8607 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  8608 ;; Parameters:    Size  Location     Type
  8609 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8610 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8611 ;; Auto vars:     Size  Location     Type
  8612 ;;		None
  8613 ;; Return value:  Size  Location     Type
  8614 ;;                  1    wreg      void 
  8615 ;; Registers used:
  8616 ;;		wreg
  8617 ;; Tracked objects:
  8618 ;;		On entry : 0/0
  8619 ;;		On exit  : 0/0
  8620 ;;		Unchanged: 0/0
  8621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8622 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8625 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8626 ;;Total ram usage:        2 bytes
  8627 ;; Hardware stack levels used:    1
  8628 ;; Hardware stack levels required when called:    4
  8629 ;; This function calls:
  8630 ;;		Nothing
  8631 ;; This function is called by:
  8632 ;;		_EUSART1_Initialize
  8633 ;; This function uses a non-reentrant model
  8634 ;;
  8635                           
  8636                           
  8637                           ;psect for function _EUSART1_SetFramingErrorHandler
  8638  141F                     _EUSART1_SetFramingErrorHandler:	
  8639                           
  8640                           ;mcc_generated_files/eusart1.c: 262:     EUSART1_FramingErrorHandler = interruptHandler;
  8641                           
  8642                           ;incstack = 0
  8643                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  8644  141F  0140               	movlb	0	; select bank0
  8645  1420  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  8646  1421  0142               	movlb	2	; select bank2
  8647  1422  00D1               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
  8648  1423  0140               	movlb	0	; select bank0
  8649  1424  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  8650  1425  0142               	movlb	2	; select bank2
  8651  1426  00D0               	movwf	_EUSART1_FramingErrorHandler^(0+256)
  8652  1427  0008               	return
  8653  1428                     __end_of_EUSART1_SetFramingErrorHandler:	
  8654                           
  8655                           	psect	text11
  8656  1416                     __ptext11:	
  8657 ;; *************** function _EUSART1_SetErrorHandler *****************
  8658 ;; Defined at:
  8659 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  8660 ;; Parameters:    Size  Location     Type
  8661 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8662 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  8663 ;; Auto vars:     Size  Location     Type
  8664 ;;		None
  8665 ;; Return value:  Size  Location     Type
  8666 ;;                  1    wreg      void 
  8667 ;; Registers used:
  8668 ;;		wreg
  8669 ;; Tracked objects:
  8670 ;;		On entry : 0/0
  8671 ;;		On exit  : 0/0
  8672 ;;		Unchanged: 0/0
  8673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8674 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8677 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8678 ;;Total ram usage:        2 bytes
  8679 ;; Hardware stack levels used:    1
  8680 ;; Hardware stack levels required when called:    4
  8681 ;; This function calls:
  8682 ;;		Nothing
  8683 ;; This function is called by:
  8684 ;;		_EUSART1_Initialize
  8685 ;; This function uses a non-reentrant model
  8686 ;;
  8687                           
  8688                           
  8689                           ;psect for function _EUSART1_SetErrorHandler
  8690  1416                     _EUSART1_SetErrorHandler:	
  8691                           
  8692                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_ErrorHandler = interruptHandler;
  8693                           
  8694                           ;incstack = 0
  8695                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  8696  1416  0140               	movlb	0	; select bank0
  8697  1417  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  8698  1418  0142               	movlb	2	; select bank2
  8699  1419  00CD               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
  8700  141A  0140               	movlb	0	; select bank0
  8701  141B  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  8702  141C  0142               	movlb	2	; select bank2
  8703  141D  00CC               	movwf	_EUSART1_ErrorHandler^(0+256)
  8704  141E  0008               	return
  8705  141F                     __end_of_EUSART1_SetErrorHandler:	
  8706                           
  8707                           	psect	text12
  8708  15FC                     __ptext12:	
  8709 ;; *************** function _ADCC_Initialize *****************
  8710 ;; Defined at:
  8711 ;;		line 64 in file "mcc_generated_files/adcc.c"
  8712 ;; Parameters:    Size  Location     Type
  8713 ;;		None
  8714 ;; Auto vars:     Size  Location     Type
  8715 ;;		None
  8716 ;; Return value:  Size  Location     Type
  8717 ;;                  1    wreg      void 
  8718 ;; Registers used:
  8719 ;;		wreg, status,2, status,0, pclath, cstack
  8720 ;; Tracked objects:
  8721 ;;		On entry : 0/0
  8722 ;;		On exit  : 0/0
  8723 ;;		Unchanged: 0/0
  8724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8729 ;;Total ram usage:        0 bytes
  8730 ;; Hardware stack levels used:    1
  8731 ;; Hardware stack levels required when called:    5
  8732 ;; This function calls:
  8733 ;;		_ADCC_SetADTIInterruptHandler
  8734 ;; This function is called by:
  8735 ;;		_SYSTEM_Initialize
  8736 ;; This function uses a non-reentrant model
  8737 ;;
  8738                           
  8739                           
  8740                           ;psect for function _ADCC_Initialize
  8741  15FC                     _ADCC_Initialize:	
  8742                           
  8743                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
  8744                           
  8745                           ;incstack = 0
  8746                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8747  15FC  0141               	movlb	1	; select bank1
  8748  15FD  018C               	clrf	12	;volatile
  8749                           
  8750                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
  8751  15FE  018D               	clrf	13	;volatile
  8752                           
  8753                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
  8754  15FF  018E               	clrf	14	;volatile
  8755                           
  8756                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
  8757  1600  018F               	clrf	15	;volatile
  8758                           
  8759                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
  8760  1601  0192               	clrf	18	;volatile
  8761                           
  8762                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
  8763  1602  0193               	clrf	19	;volatile
  8764                           
  8765                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
  8766  1603  0198               	clrf	24	;volatile
  8767                           
  8768                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
  8769  1604  019A               	clrf	26	;volatile
  8770                           
  8771                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
  8772  1605  019F               	clrf	31	;volatile
  8773                           
  8774                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
  8775  1606  0142               	movlb	2	; select bank2
  8776  1607  018C               	clrf	12	;volatile
  8777                           
  8778                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
  8779  1608  018D               	clrf	13	;volatile
  8780                           
  8781                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
  8782  1609  018E               	clrf	14	;volatile
  8783                           
  8784                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
  8785  160A  018F               	clrf	15	;volatile
  8786                           
  8787                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
  8788  160B  0190               	clrf	16	;volatile
  8789                           
  8790                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
  8791  160C  0192               	clrf	18	;volatile
  8792                           
  8793                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
  8794  160D  3054               	movlw	84
  8795  160E  0093               	movwf	19	;volatile
  8796                           
  8797                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
  8798  160F  3056               	movlw	86
  8799  1610  0094               	movwf	20	;volatile
  8800                           
  8801                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
  8802  1611  0195               	clrf	21	;volatile
  8803                           
  8804                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
  8805  1612  0196               	clrf	22	;volatile
  8806                           
  8807                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
  8808  1613  0197               	clrf	23	;volatile
  8809                           
  8810                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
  8811  1614  0198               	clrf	24	;volatile
  8812                           
  8813                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
  8814  1615  30D4               	movlw	212
  8815  1616  0091               	movwf	17	;volatile
  8816                           
  8817                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
  8818  1617  014E               	movlb	14	; select bank14
  8819  1618  108D               	bcf	13,1	;volatile
  8820                           
  8821                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
  8822  1619  1497               	bsf	23,1	;volatile
  8823                           
  8824                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  8825  161A  3002               	movlw	low _ADCC_DefaultInterruptHandler
  8826  161B  0140               	movlb	0	; select bank0
  8827  161C  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
  8828  161D  3000               	movlw	high _ADCC_DefaultInterruptHandler
  8829  161E  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
  8830  161F  3193  23E0         	fcall	_ADCC_SetADTIInterruptHandler
  8831  1621  0008               	return
  8832  1622                     __end_of_ADCC_Initialize:	
  8833                           
  8834                           	psect	text13
  8835  1746                     __ptext13:	
  8836 ;; *************** function _LED_init *****************
  8837 ;; Defined at:
  8838 ;;		line 80 in file "dmx.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;		None
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;		None
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  1    wreg      void 
  8845 ;; Registers used:
  8846 ;;		wreg, status,2, status,0
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8856 ;;Total ram usage:        0 bytes
  8857 ;; Hardware stack levels used:    1
  8858 ;; Hardware stack levels required when called:    4
  8859 ;; This function calls:
  8860 ;;		Nothing
  8861 ;; This function is called by:
  8862 ;;		_main
  8863 ;; This function uses a non-reentrant model
  8864 ;;
  8865                           
  8866                           
  8867                           ;psect for function _LED_init
  8868  1746                     _LED_init:	
  8869                           
  8870                           ;dmx.c: 81:     CCP1CONbits.MODE = 0b1100;
  8871                           
  8872                           ;incstack = 0
  8873                           ; Regs used in _LED_init: [wreg+status,2+status,0]
  8874  1746  0146               	movlb	6	; select bank6
  8875  1747  080E               	movf	14,w	;volatile
  8876  1748  39F0               	andlw	-16
  8877  1749  380C               	iorlw	12
  8878  174A  008E               	movwf	14	;volatile
  8879                           
  8880                           ;dmx.c: 82:     CCP2CONbits.MODE = 0b1100;
  8881  174B  0812               	movf	18,w	;volatile
  8882  174C  39F0               	andlw	-16
  8883  174D  380C               	iorlw	12
  8884  174E  0092               	movwf	18	;volatile
  8885                           
  8886                           ;dmx.c: 83:     CCP3CONbits.MODE = 0b1100;
  8887  174F  0816               	movf	22,w	;volatile
  8888  1750  39F0               	andlw	-16
  8889  1751  380C               	iorlw	12
  8890  1752  0096               	movwf	22	;volatile
  8891                           
  8892                           ;dmx.c: 84:     CCP4CONbits.MODE = 0b1100;
  8893  1753  081A               	movf	26,w	;volatile
  8894  1754  39F0               	andlw	-16
  8895  1755  380C               	iorlw	12
  8896  1756  009A               	movwf	26	;volatile
  8897                           
  8898                           ;dmx.c: 86:     CCP1CONbits.CCP1EN = 1;
  8899  1757  178E               	bsf	14,7	;volatile
  8900                           
  8901                           ;dmx.c: 87:     CCP2CONbits.CCP2EN = 1;
  8902  1758  1792               	bsf	18,7	;volatile
  8903                           
  8904                           ;dmx.c: 88:     CCP3CONbits.CCP3EN = 1;
  8905  1759  1796               	bsf	22,7	;volatile
  8906                           
  8907                           ;dmx.c: 89:     CCP4CONbits.CCP4EN = 1;
  8908  175A  179A               	bsf	26,7	;volatile
  8909                           
  8910                           ;dmx.c: 90:     T2CLKCON = 0x01;
  8911  175B  3001               	movlw	1
  8912  175C  0145               	movlb	5	; select bank5
  8913  175D  0090               	movwf	16	;volatile
  8914                           
  8915                           ;dmx.c: 92:     TRISC7 = 0;
  8916  175E  0140               	movlb	0	; select bank0
  8917  175F  1394               	bcf	20,7	;volatile
  8918                           
  8919                           ;dmx.c: 93:     TRISC6 = 0;
  8920  1760  1314               	bcf	20,6	;volatile
  8921                           
  8922                           ;dmx.c: 94:     TRISC3 = 0;
  8923  1761  1194               	bcf	20,3	;volatile
  8924                           
  8925                           ;dmx.c: 95:     TRISC4 = 0;
  8926  1762  1214               	bcf	20,4	;volatile
  8927                           
  8928                           ;dmx.c: 97:     RC7PPS = 0x09;
  8929  1763  3009               	movlw	9
  8930  1764  017E               	movlb	62	; select bank62
  8931  1765  00A7               	movwf	39	;volatile
  8932                           
  8933                           ;dmx.c: 98:     RC6PPS = 0x0A;
  8934  1766  300A               	movlw	10
  8935  1767  00A6               	movwf	38	;volatile
  8936                           
  8937                           ;dmx.c: 99:     RC3PPS = 0x0B;
  8938  1768  300B               	movlw	11
  8939  1769  00A3               	movwf	35	;volatile
  8940                           
  8941                           ;dmx.c: 100:     RC4PPS = 0x0C;
  8942  176A  300C               	movlw	12
  8943  176B  00A4               	movwf	36	;volatile
  8944                           
  8945                           ;dmx.c: 102:     CCPR1H = 0x00;
  8946  176C  0146               	movlb	6	; select bank6
  8947  176D  018D               	clrf	13	;volatile
  8948                           
  8949                           ;dmx.c: 103:     CCPR1L = 0x04;
  8950  176E  3004               	movlw	4
  8951  176F  008C               	movwf	12	;volatile
  8952                           
  8953                           ;dmx.c: 104:     CCPR2H = 0x00;
  8954  1770  0191               	clrf	17	;volatile
  8955                           
  8956                           ;dmx.c: 105:     CCPR2L = 0x04;
  8957  1771  3004               	movlw	4
  8958  1772  0090               	movwf	16	;volatile
  8959                           
  8960                           ;dmx.c: 106:     CCPR3H = 0x00;
  8961  1773  0195               	clrf	21	;volatile
  8962                           
  8963                           ;dmx.c: 107:     CCPR3L = 0x04;
  8964  1774  3004               	movlw	4
  8965  1775  0094               	movwf	20	;volatile
  8966                           
  8967                           ;dmx.c: 108:     CCPR4H = 0x00;
  8968  1776  0199               	clrf	25	;volatile
  8969                           
  8970                           ;dmx.c: 109:     CCPR4L = 0x04;
  8971  1777  3004               	movlw	4
  8972  1778  0098               	movwf	24	;volatile
  8973                           
  8974                           ;dmx.c: 110:     T2CONbits.ON = 1;
  8975  1779  0145               	movlb	5	; select bank5
  8976  177A  178E               	bsf	14,7	;volatile
  8977  177B  0008               	return
  8978  177C                     __end_of_LED_init:	
  8979                           
  8980                           	psect	text14
  8981  148C                     __ptext14:	
  8982 ;; *************** function _DMX_init *****************
  8983 ;; Defined at:
  8984 ;;		line 46 in file "dmx.c"
  8985 ;; Parameters:    Size  Location     Type
  8986 ;;		None
  8987 ;; Auto vars:     Size  Location     Type
  8988 ;;		None
  8989 ;; Return value:  Size  Location     Type
  8990 ;;                  1    wreg      void 
  8991 ;; Registers used:
  8992 ;;		wreg, status,2, status,0, pclath, cstack
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/0
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9002 ;;Total ram usage:        0 bytes
  9003 ;; Hardware stack levels used:    1
  9004 ;; Hardware stack levels required when called:    5
  9005 ;; This function calls:
  9006 ;;		_EUSART1_SetRxInterruptHandler
  9007 ;; This function is called by:
  9008 ;;		_main
  9009 ;; This function uses a non-reentrant model
  9010 ;;
  9011                           
  9012                           
  9013                           ;psect for function _DMX_init
  9014  148C                     _DMX_init:	
  9015                           
  9016                           ;dmx.c: 47:     EUSART1_SetRxInterruptHandler(handler);
  9017                           
  9018                           ;incstack = 0
  9019                           ; Regs used in _DMX_init: [wreg+status,2+status,0+pclath+cstack]
  9020  148C  30DC               	movlw	low _handler
  9021  148D  0140               	movlb	0	; select bank0
  9022  148E  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  9023  148F  3016               	movlw	high _handler
  9024  1490  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  9025  1491  3194  240D         	fcall	_EUSART1_SetRxInterruptHandler
  9026                           
  9027                           ;dmx.c: 48:     TRISB4 = 1;
  9028  1493  0140               	movlb	0	; select bank0
  9029  1494  1613               	bsf	19,4	;volatile
  9030                           
  9031                           ;dmx.c: 49:     ANSELB = 0x00;
  9032  1495  017E               	movlb	62	; select bank62
  9033  1496  01C3               	clrf	67	;volatile
  9034                           
  9035                           ;dmx.c: 51:     point = 0;
  9036  1497  0141               	movlb	1	; select bank1
  9037  1498  01AB               	clrf	_point^(0+128)
  9038  1499  01AC               	clrf	(_point+1)^(0+128)
  9039  149A  0008               	return
  9040  149B                     __end_of_DMX_init:	
  9041                           
  9042                           	psect	text15
  9043  140D                     __ptext15:	
  9044 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  9045 ;; Defined at:
  9046 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  9047 ;; Parameters:    Size  Location     Type
  9048 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9049 ;;		 -> handler(1), EUSART1_Receive_ISR(1), 
  9050 ;; Auto vars:     Size  Location     Type
  9051 ;;		None
  9052 ;; Return value:  Size  Location     Type
  9053 ;;                  1    wreg      void 
  9054 ;; Registers used:
  9055 ;;		wreg
  9056 ;; Tracked objects:
  9057 ;;		On entry : 0/0
  9058 ;;		On exit  : 0/0
  9059 ;;		Unchanged: 0/0
  9060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9061 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9064 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9065 ;;Total ram usage:        2 bytes
  9066 ;; Hardware stack levels used:    1
  9067 ;; Hardware stack levels required when called:    4
  9068 ;; This function calls:
  9069 ;;		Nothing
  9070 ;; This function is called by:
  9071 ;;		_EUSART1_Initialize
  9072 ;;		_DMX_init
  9073 ;; This function uses a non-reentrant model
  9074 ;;
  9075                           
  9076                           
  9077                           ;psect for function _EUSART1_SetRxInterruptHandler
  9078  140D                     _EUSART1_SetRxInterruptHandler:	
  9079                           
  9080                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9081                           
  9082                           ;incstack = 0
  9083                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  9084  140D  0140               	movlb	0	; select bank0
  9085  140E  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  9086  140F  0142               	movlb	2	; select bank2
  9087  1410  00D3               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
  9088  1411  0140               	movlb	0	; select bank0
  9089  1412  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  9090  1413  0142               	movlb	2	; select bank2
  9091  1414  00D2               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
  9092  1415  0008               	return
  9093  1416                     __end_of_EUSART1_SetRxInterruptHandler:	
  9094                           
  9095                           	psect	text16
  9096  0D43                     __ptext16:	
  9097 ;; *************** function _DMX_Task *****************
  9098 ;; Defined at:
  9099 ;;		line 136 in file "dmx.c"
  9100 ;; Parameters:    Size  Location     Type
  9101 ;;		None
  9102 ;; Auto vars:     Size  Location     Type
  9103 ;;  time            2   20[BANK1 ] unsigned short 
  9104 ;; Return value:  Size  Location     Type
  9105 ;;                  1    wreg      void 
  9106 ;; Registers used:
  9107 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9108 ;; Tracked objects:
  9109 ;;		On entry : 0/0
  9110 ;;		On exit  : 0/0
  9111 ;;		Unchanged: 0/0
  9112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9114 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9115 ;;      Temps:          0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9116 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9117 ;;Total ram usage:       13 bytes
  9118 ;; Hardware stack levels used:    1
  9119 ;; Hardware stack levels required when called:    8
  9120 ;; This function calls:
  9121 ;;		_BEAT_detected
  9122 ;;		_CLOCK_getTime
  9123 ;;		_DMX_Mode
  9124 ;;		_LED_setColor
  9125 ;;		_animation1
  9126 ;; This function is called by:
  9127 ;;		_main
  9128 ;; This function uses a non-reentrant model
  9129 ;;
  9130                           
  9131                           
  9132                           ;psect for function _DMX_Task
  9133  0D43                     _DMX_Task:	
  9134                           
  9135                           ;dmx.c: 144:     if(CLOCK_getTime() - dmx_lastActiveTime >= 50){
  9136                           
  9137                           ;incstack = 0
  9138                           ; Regs used in _DMX_Task: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9139  0D43  3193  23FB  318D   	fcall	_CLOCK_getTime
  9140  0D46  0141               	movlb	1	; select bank1
  9141  0D47  0837               	movf	_dmx_lastActiveTime^(0+128),w
  9142  0D48  0140               	movlb	0	; select bank0
  9143  0D49  0220               	subwf	?_CLOCK_getTime,w
  9144  0D4A  0141               	movlb	1	; select bank1
  9145  0D4B  00D6               	movwf	??_DMX_Task^(0+128)
  9146  0D4C  0838               	movf	(_dmx_lastActiveTime+1)^(0+128),w
  9147  0D4D  0140               	movlb	0	; select bank0
  9148  0D4E  3B21               	subwfb	?_CLOCK_getTime+1,w
  9149  0D4F  0141               	movlb	1	; select bank1
  9150  0D50  00D7               	movwf	(??_DMX_Task+1)^(0+128)
  9151  0D51  3000               	movlw	0
  9152  0D52  0257               	subwf	(??_DMX_Task+1)^(0+128),w
  9153  0D53  3032               	movlw	50
  9154  0D54  1903               	skipnz
  9155  0D55  0256               	subwf	??_DMX_Task^(0+128),w
  9156  0D56  1C03               	skipc
  9157  0D57  2D5A               	goto	l1087
  9158                           
  9159                           ;dmx.c: 145:         dmx_mode = 0;
  9160  0D58  01EB               	clrf	_dmx_mode^(0+128)
  9161                           
  9162                           ;dmx.c: 146:     }else{
  9163  0D59  2D5C               	goto	l5735
  9164  0D5A                     l1087:	
  9165                           
  9166                           ;dmx.c: 147:         dmx_mode = 1;
  9167  0D5A  01EB               	clrf	_dmx_mode^(0+128)
  9168  0D5B  0AEB               	incf	_dmx_mode^(0+128),f
  9169  0D5C                     l5735:	
  9170                           
  9171                           ;dmx.c: 150:     if(DMX_Mode()){
  9172  0D5C  3193  23D8  318D   	fcall	_DMX_Mode
  9173  0D5F  3A00               	xorlw	0
  9174  0D60  1903               	skipnz
  9175  0D61  2DA1               	goto	l5739
  9176                           
  9177                           ;dmx.c: 151:         LED_setColor(input[address],input[address+1],input[address+2],input
      +                          [address+3]);
  9178  0D62  30F0               	movlw	240
  9179  0D63  0141               	movlb	1	; select bank1
  9180  0D64  00D6               	movwf	??_DMX_Task^(0+128)
  9181  0D65  3025               	movlw	37
  9182  0D66  00D7               	movwf	(??_DMX_Task^(0+128)+1)
  9183  0D67  0869               	movf	_address^(0+128),w
  9184  0D68  0756               	addwf	??_DMX_Task^(0+128),w
  9185  0D69  0086               	movwf	6
  9186  0D6A  086A               	movf	(_address+1)^(0+128),w
  9187  0D6B  3D57               	addwfc	(??_DMX_Task+1)^(0+128),w
  9188  0D6C  0087               	movwf	7
  9189  0D6D  0801               	movf	1,w
  9190  0D6E  00D8               	movwf	(??_DMX_Task+2)^(0+128)
  9191  0D6F  0858               	movf	(??_DMX_Task+2)^(0+128),w
  9192  0D70  0140               	movlb	0	; select bank0
  9193  0D71  00ED               	movwf	LED_setColor@G
  9194  0D72  30F1               	movlw	241
  9195  0D73  0141               	movlb	1	; select bank1
  9196  0D74  00D9               	movwf	(??_DMX_Task+3)^(0+128)
  9197  0D75  3025               	movlw	37
  9198  0D76  00DA               	movwf	((??_DMX_Task+3)^(0+128)+1)
  9199  0D77  0869               	movf	_address^(0+128),w
  9200  0D78  0759               	addwf	(??_DMX_Task+3)^(0+128),w
  9201  0D79  0086               	movwf	6
  9202  0D7A  086A               	movf	(_address+1)^(0+128),w
  9203  0D7B  3D5A               	addwfc	(??_DMX_Task+4)^(0+128),w
  9204  0D7C  0087               	movwf	7
  9205  0D7D  0801               	movf	1,w
  9206  0D7E  00DB               	movwf	(??_DMX_Task+5)^(0+128)
  9207  0D7F  085B               	movf	(??_DMX_Task+5)^(0+128),w
  9208  0D80  0140               	movlb	0	; select bank0
  9209  0D81  00EE               	movwf	LED_setColor@B
  9210  0D82  30F2               	movlw	242
  9211  0D83  0141               	movlb	1	; select bank1
  9212  0D84  00DC               	movwf	(??_DMX_Task+6)^(0+128)
  9213  0D85  3025               	movlw	37
  9214  0D86  00DD               	movwf	((??_DMX_Task+6)^(0+128)+1)
  9215  0D87  0869               	movf	_address^(0+128),w
  9216  0D88  075C               	addwf	(??_DMX_Task+6)^(0+128),w
  9217  0D89  0086               	movwf	6
  9218  0D8A  086A               	movf	(_address+1)^(0+128),w
  9219  0D8B  3D5D               	addwfc	(??_DMX_Task+7)^(0+128),w
  9220  0D8C  0087               	movwf	7
  9221  0D8D  0801               	movf	1,w
  9222  0D8E  00DE               	movwf	(??_DMX_Task+8)^(0+128)
  9223  0D8F  085E               	movf	(??_DMX_Task+8)^(0+128),w
  9224  0D90  0140               	movlb	0	; select bank0
  9225  0D91  00EF               	movwf	LED_setColor@W
  9226  0D92  30EF               	movlw	239
  9227  0D93  0141               	movlb	1	; select bank1
  9228  0D94  00DF               	movwf	(??_DMX_Task+9)^(0+128)
  9229  0D95  3025               	movlw	37
  9230  0D96  00E0               	movwf	((??_DMX_Task+9)^(0+128)+1)
  9231  0D97  0869               	movf	_address^(0+128),w
  9232  0D98  075F               	addwf	(??_DMX_Task+9)^(0+128),w
  9233  0D99  0086               	movwf	6
  9234  0D9A  086A               	movf	(_address+1)^(0+128),w
  9235  0D9B  3D60               	addwfc	(??_DMX_Task+10)^(0+128),w
  9236  0D9C  0087               	movwf	7
  9237  0D9D  0801               	movf	1,w
  9238  0D9E  318E  269A         	fcall	_LED_setColor
  9239                           
  9240                           ;dmx.c: 152:     }else{
  9241  0DA0  0008               	return
  9242  0DA1                     l5739:	
  9243                           
  9244                           ;dmx.c: 153:         if(address == 1){
  9245  0DA1  0141               	movlb	1	; select bank1
  9246  0DA2  0369               	decf	_address^(0+128),w
  9247  0DA3  046A               	iorwf	(_address+1)^(0+128),w
  9248  0DA4  1D03               	btfss	3,2
  9249  0DA5  2E37               	goto	l5781
  9250                           
  9251                           ;dmx.c: 154:             time_t time = CLOCK_getTime();
  9252  0DA6  3193  23FB  318D   	fcall	_CLOCK_getTime
  9253  0DA9  0140               	movlb	0	; select bank0
  9254  0DAA  0821               	movf	?_CLOCK_getTime+1,w
  9255  0DAB  0141               	movlb	1	; select bank1
  9256  0DAC  00E2               	movwf	(DMX_Task@time+1)^(0+128)
  9257  0DAD  0140               	movlb	0	; select bank0
  9258  0DAE  0820               	movf	?_CLOCK_getTime,w
  9259  0DAF  0141               	movlb	1	; select bank1
  9260  0DB0  00E1               	movwf	DMX_Task@time^(0+128)
  9261                           
  9262                           ;dmx.c: 156:             if (time - lastTime > 100)
  9263  0DB1  0142               	movlb	2	; select bank2
  9264  0DB2  0838               	movf	dmx@lastTime^(0+256),w
  9265  0DB3  0141               	movlb	1	; select bank1
  9266  0DB4  0261               	subwf	DMX_Task@time^(0+128),w
  9267  0DB5  00D6               	movwf	??_DMX_Task^(0+128)
  9268  0DB6  0142               	movlb	2	; select bank2
  9269  0DB7  0839               	movf	(dmx@lastTime+1)^(0+256),w
  9270  0DB8  0141               	movlb	1	; select bank1
  9271  0DB9  3B62               	subwfb	(DMX_Task@time+1)^(0+128),w
  9272  0DBA  00D7               	movwf	(??_DMX_Task+1)^(0+128)
  9273  0DBB  3000               	movlw	0
  9274  0DBC  0257               	subwf	(??_DMX_Task+1)^(0+128),w
  9275  0DBD  3065               	movlw	101
  9276  0DBE  1903               	skipnz
  9277  0DBF  0256               	subwf	??_DMX_Task^(0+128),w
  9278  0DC0  1803               	btfsc	3,0
  9279  0DC1  0008               	return
  9280                           
  9281                           ;dmx.c: 158:             lastTime = time;
  9282                           
  9283                           ;dmx.c: 157:                 return;
  9284  0DC2  0862               	movf	(DMX_Task@time+1)^(0+128),w
  9285  0DC3  0142               	movlb	2	; select bank2
  9286  0DC4  00B9               	movwf	(dmx@lastTime+1)^(0+256)
  9287  0DC5  0141               	movlb	1	; select bank1
  9288  0DC6  0861               	movf	DMX_Task@time^(0+128),w
  9289  0DC7  0142               	movlb	2	; select bank2
  9290  0DC8  00B8               	movwf	dmx@lastTime^(0+256)
  9291                           
  9292                           ;dmx.c: 159:             if(color == 0 && BEAT_detected()){
  9293  0DC9  0141               	movlb	1	; select bank1
  9294  0DCA  0833               	movf	_color^(0+128),w
  9295  0DCB  0434               	iorwf	(_color+1)^(0+128),w
  9296  0DCC  1D03               	btfss	3,2
  9297  0DCD  2DE1               	goto	l5757
  9298  0DCE  3194  2404  318D   	fcall	_BEAT_detected
  9299  0DD1  3A00               	xorlw	0
  9300  0DD2  1903               	skipnz
  9301  0DD3  2DE1               	goto	l5757
  9302                           
  9303                           ;dmx.c: 160:                 LED_setColor(127,0,0,0);
  9304  0DD4  0140               	movlb	0	; select bank0
  9305  0DD5  01ED               	clrf	LED_setColor@G
  9306  0DD6  01EE               	clrf	LED_setColor@B
  9307  0DD7  01EF               	clrf	LED_setColor@W
  9308  0DD8  307F               	movlw	127
  9309  0DD9  318E  269A         	fcall	_LED_setColor
  9310                           
  9311                           ;dmx.c: 161:                 color = 1;
  9312  0DDB  3001               	movlw	1
  9313  0DDC  0141               	movlb	1	; select bank1
  9314  0DDD  00B3               	movwf	_color^(0+128)
  9315  0DDE  3000               	movlw	0
  9316  0DDF  00B4               	movwf	(_color^(0+128)+1)
  9317                           
  9318                           ;dmx.c: 162:             }
  9319  0DE0  0008               	return
  9320  0DE1                     l5757:	
  9321  0DE1  0141               	movlb	1	; select bank1
  9322  0DE2  0333               	decf	_color^(0+128),w
  9323  0DE3  0434               	iorwf	(_color+1)^(0+128),w
  9324  0DE4  1D03               	btfss	3,2
  9325  0DE5  2DFD               	goto	l5765
  9326  0DE6  3194  2404  318D   	fcall	_BEAT_detected
  9327  0DE9  3A00               	xorlw	0
  9328  0DEA  1903               	skipnz
  9329  0DEB  2DFD               	goto	l5765
  9330                           
  9331                           ;dmx.c: 164:                 LED_setColor(0,127,0,0);
  9332  0DEC  307F               	movlw	127
  9333  0DED  0141               	movlb	1	; select bank1
  9334  0DEE  00D6               	movwf	??_DMX_Task^(0+128)
  9335  0DEF  0856               	movf	??_DMX_Task^(0+128),w
  9336  0DF0  0140               	movlb	0	; select bank0
  9337  0DF1  00ED               	movwf	LED_setColor@G
  9338  0DF2  01EE               	clrf	LED_setColor@B
  9339  0DF3  01EF               	clrf	LED_setColor@W
  9340  0DF4  3000               	movlw	0
  9341  0DF5  318E  269A         	fcall	_LED_setColor
  9342                           
  9343                           ;dmx.c: 165:                 color = 2;
  9344  0DF7  3002               	movlw	2
  9345  0DF8  0141               	movlb	1	; select bank1
  9346  0DF9  00B3               	movwf	_color^(0+128)
  9347  0DFA  3000               	movlw	0
  9348  0DFB  00B4               	movwf	(_color^(0+128)+1)
  9349                           
  9350                           ;dmx.c: 166:             }
  9351  0DFC  0008               	return
  9352  0DFD                     l5765:	
  9353  0DFD  3002               	movlw	2
  9354  0DFE  0141               	movlb	1	; select bank1
  9355  0DFF  0633               	xorwf	_color^(0+128),w
  9356  0E00  0434               	iorwf	(_color+1)^(0+128),w
  9357  0E01  1D03               	btfss	3,2
  9358  0E02  2E1B               	goto	l5773
  9359  0E03  3194  2404  318D   	fcall	_BEAT_detected
  9360  0E06  3A00               	xorlw	0
  9361  0E07  1903               	skipnz
  9362  0E08  2E1B               	goto	l5773
  9363                           
  9364                           ;dmx.c: 168:                 LED_setColor(0,0,127,0);
  9365  0E09  0140               	movlb	0	; select bank0
  9366  0E0A  01ED               	clrf	LED_setColor@G
  9367  0E0B  307F               	movlw	127
  9368  0E0C  0141               	movlb	1	; select bank1
  9369  0E0D  00D6               	movwf	??_DMX_Task^(0+128)
  9370  0E0E  0856               	movf	??_DMX_Task^(0+128),w
  9371  0E0F  0140               	movlb	0	; select bank0
  9372  0E10  00EE               	movwf	LED_setColor@B
  9373  0E11  01EF               	clrf	LED_setColor@W
  9374  0E12  3000               	movlw	0
  9375  0E13  318E  269A         	fcall	_LED_setColor
  9376                           
  9377                           ;dmx.c: 169:                 color = 3;
  9378  0E15  3003               	movlw	3
  9379  0E16  0141               	movlb	1	; select bank1
  9380  0E17  00B3               	movwf	_color^(0+128)
  9381  0E18  3000               	movlw	0
  9382  0E19  00B4               	movwf	(_color^(0+128)+1)
  9383                           
  9384                           ;dmx.c: 170:             }
  9385  0E1A  0008               	return
  9386  0E1B                     l5773:	
  9387  0E1B  3003               	movlw	3
  9388  0E1C  0141               	movlb	1	; select bank1
  9389  0E1D  0633               	xorwf	_color^(0+128),w
  9390  0E1E  0434               	iorwf	(_color+1)^(0+128),w
  9391  0E1F  1D03               	btfss	3,2
  9392  0E20  0008               	return
  9393  0E21  3194  2404  318D   	fcall	_BEAT_detected
  9394  0E24  3A00               	xorlw	0
  9395  0E25  1903               	skipnz
  9396  0E26  0008               	return
  9397                           
  9398                           ;dmx.c: 172:                 LED_setColor(0,0,0,127);
  9399  0E27  0140               	movlb	0	; select bank0
  9400  0E28  01ED               	clrf	LED_setColor@G
  9401  0E29  01EE               	clrf	LED_setColor@B
  9402  0E2A  307F               	movlw	127
  9403  0E2B  0141               	movlb	1	; select bank1
  9404  0E2C  00D6               	movwf	??_DMX_Task^(0+128)
  9405  0E2D  0856               	movf	??_DMX_Task^(0+128),w
  9406  0E2E  0140               	movlb	0	; select bank0
  9407  0E2F  00EF               	movwf	LED_setColor@W
  9408  0E30  3000               	movlw	0
  9409  0E31  318E  269A         	fcall	_LED_setColor
  9410                           
  9411                           ;dmx.c: 173:                 color = 0;
  9412  0E33  0141               	movlb	1	; select bank1
  9413  0E34  01B3               	clrf	_color^(0+128)
  9414  0E35  01B4               	clrf	(_color+1)^(0+128)
  9415  0E36  0008               	return
  9416  0E37                     l5781:	
  9417  0E37  3002               	movlw	2
  9418  0E38  0669               	xorwf	_address^(0+128),w
  9419  0E39  046A               	iorwf	(_address+1)^(0+128),w
  9420  0E3A  1D03               	btfss	3,2
  9421  0E3B  2E51               	goto	l5785
  9422                           
  9423                           ;dmx.c: 176:             LED_setColor(127,127,127,127);
  9424  0E3C  307F               	movlw	127
  9425  0E3D  00D6               	movwf	??_DMX_Task^(0+128)
  9426  0E3E  0856               	movf	??_DMX_Task^(0+128),w
  9427  0E3F  0140               	movlb	0	; select bank0
  9428  0E40  00ED               	movwf	LED_setColor@G
  9429  0E41  307F               	movlw	127
  9430  0E42  0141               	movlb	1	; select bank1
  9431  0E43  00D7               	movwf	(??_DMX_Task+1)^(0+128)
  9432  0E44  0857               	movf	(??_DMX_Task+1)^(0+128),w
  9433  0E45  0140               	movlb	0	; select bank0
  9434  0E46  00EE               	movwf	LED_setColor@B
  9435  0E47  307F               	movlw	127
  9436  0E48  0141               	movlb	1	; select bank1
  9437  0E49  00D8               	movwf	(??_DMX_Task+2)^(0+128)
  9438  0E4A  0858               	movf	(??_DMX_Task+2)^(0+128),w
  9439  0E4B  0140               	movlb	0	; select bank0
  9440  0E4C  00EF               	movwf	LED_setColor@W
  9441  0E4D  307F               	movlw	127
  9442  0E4E  318E  269A         	fcall	_LED_setColor
  9443                           
  9444                           ;dmx.c: 177:         }else if(address == 3){
  9445  0E50  0008               	return
  9446  0E51                     l5785:	
  9447  0E51  3003               	movlw	3
  9448  0E52  0669               	xorwf	_address^(0+128),w
  9449  0E53  046A               	iorwf	(_address+1)^(0+128),w
  9450  0E54  1D03               	btfss	3,2
  9451  0E55  2E5E               	goto	l5789
  9452                           
  9453                           ;dmx.c: 178:             LED_setColor(127,0,0,0);
  9454  0E56  0140               	movlb	0	; select bank0
  9455  0E57  01ED               	clrf	LED_setColor@G
  9456  0E58  01EE               	clrf	LED_setColor@B
  9457  0E59  01EF               	clrf	LED_setColor@W
  9458  0E5A  307F               	movlw	127
  9459  0E5B  318E  269A         	fcall	_LED_setColor
  9460                           
  9461                           ;dmx.c: 179:         }else if(address == 4){
  9462  0E5D  0008               	return
  9463  0E5E                     l5789:	
  9464  0E5E  3004               	movlw	4
  9465  0E5F  0669               	xorwf	_address^(0+128),w
  9466  0E60  046A               	iorwf	(_address+1)^(0+128),w
  9467  0E61  1D03               	btfss	3,2
  9468  0E62  2E6E               	goto	l5793
  9469                           
  9470                           ;dmx.c: 180:             LED_setColor(0,127,0,0);
  9471  0E63  307F               	movlw	127
  9472  0E64  00D6               	movwf	??_DMX_Task^(0+128)
  9473  0E65  0856               	movf	??_DMX_Task^(0+128),w
  9474  0E66  0140               	movlb	0	; select bank0
  9475  0E67  00ED               	movwf	LED_setColor@G
  9476  0E68  01EE               	clrf	LED_setColor@B
  9477  0E69  01EF               	clrf	LED_setColor@W
  9478  0E6A  3000               	movlw	0
  9479  0E6B  318E  269A         	fcall	_LED_setColor
  9480                           
  9481                           ;dmx.c: 181:         }else if(address == 5){
  9482  0E6D  0008               	return
  9483  0E6E                     l5793:	
  9484  0E6E  3005               	movlw	5
  9485  0E6F  0669               	xorwf	_address^(0+128),w
  9486  0E70  046A               	iorwf	(_address+1)^(0+128),w
  9487  0E71  1D03               	btfss	3,2
  9488  0E72  2E80               	goto	l5797
  9489                           
  9490                           ;dmx.c: 182:             LED_setColor(0,0,127,0);
  9491  0E73  0140               	movlb	0	; select bank0
  9492  0E74  01ED               	clrf	LED_setColor@G
  9493  0E75  307F               	movlw	127
  9494  0E76  0141               	movlb	1	; select bank1
  9495  0E77  00D6               	movwf	??_DMX_Task^(0+128)
  9496  0E78  0856               	movf	??_DMX_Task^(0+128),w
  9497  0E79  0140               	movlb	0	; select bank0
  9498  0E7A  00EE               	movwf	LED_setColor@B
  9499  0E7B  01EF               	clrf	LED_setColor@W
  9500  0E7C  3000               	movlw	0
  9501  0E7D  318E  269A         	fcall	_LED_setColor
  9502                           
  9503                           ;dmx.c: 183:         }else if(address == 6){
  9504  0E7F  0008               	return
  9505  0E80                     l5797:	
  9506  0E80  3006               	movlw	6
  9507  0E81  0669               	xorwf	_address^(0+128),w
  9508  0E82  046A               	iorwf	(_address+1)^(0+128),w
  9509  0E83  1D03               	btfss	3,2
  9510  0E84  2E92               	goto	l5801
  9511                           
  9512                           ;dmx.c: 184:             LED_setColor(0,0,0,127);
  9513  0E85  0140               	movlb	0	; select bank0
  9514  0E86  01ED               	clrf	LED_setColor@G
  9515  0E87  01EE               	clrf	LED_setColor@B
  9516  0E88  307F               	movlw	127
  9517  0E89  0141               	movlb	1	; select bank1
  9518  0E8A  00D6               	movwf	??_DMX_Task^(0+128)
  9519  0E8B  0856               	movf	??_DMX_Task^(0+128),w
  9520  0E8C  0140               	movlb	0	; select bank0
  9521  0E8D  00EF               	movwf	LED_setColor@W
  9522  0E8E  3000               	movlw	0
  9523  0E8F  318E  269A         	fcall	_LED_setColor
  9524                           
  9525                           ;dmx.c: 185:         }else if(address == 7){
  9526  0E91  0008               	return
  9527  0E92                     l5801:	
  9528  0E92  3007               	movlw	7
  9529  0E93  0669               	xorwf	_address^(0+128),w
  9530  0E94  046A               	iorwf	(_address+1)^(0+128),w
  9531  0E95  1D03               	btfss	3,2
  9532  0E96  0008               	return
  9533                           
  9534                           ;dmx.c: 186:             animation1();
  9535  0E97  318A  225D         	fcall	_animation1
  9536  0E99  0008               	return
  9537  0E9A                     __end_of_DMX_Task:	
  9538                           
  9539                           	psect	text17
  9540  0A5D                     __ptext17:	
  9541 ;; *************** function _animation1 *****************
  9542 ;; Defined at:
  9543 ;;		line 200 in file "dmx.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;		None
  9546 ;; Auto vars:     Size  Location     Type
  9547 ;;		None
  9548 ;; Return value:  Size  Location     Type
  9549 ;;                  1    wreg      void 
  9550 ;; Registers used:
  9551 ;;		wreg, status,2, status,0, pclath, cstack
  9552 ;; Tracked objects:
  9553 ;;		On entry : 0/0
  9554 ;;		On exit  : 0/0
  9555 ;;		Unchanged: 0/0
  9556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9559 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9560 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9561 ;;Total ram usage:        3 bytes
  9562 ;; Hardware stack levels used:    1
  9563 ;; Hardware stack levels required when called:    7
  9564 ;; This function calls:
  9565 ;;		_LED_setColor
  9566 ;; This function is called by:
  9567 ;;		_DMX_Task
  9568 ;; This function uses a non-reentrant model
  9569 ;;
  9570                           
  9571                           
  9572                           ;psect for function _animation1
  9573  0A5D                     _animation1:	
  9574                           
  9575                           ;dmx.c: 201:     if(ani1_state == 0){
  9576                           
  9577                           ;incstack = 0
  9578                           ; Regs used in _animation1: [wreg+status,2+status,0+pclath+cstack]
  9579  0A5D  0141               	movlb	1	; select bank1
  9580  0A5E  0825               	movf	_ani1_state^(0+128),w
  9581  0A5F  0426               	iorwf	(_ani1_state+1)^(0+128),w
  9582  0A60  1D03               	btfss	3,2
  9583  0A61  2A92               	goto	l5485
  9584                           
  9585                           ;dmx.c: 202:         R-=animationSpeed; B+=animationSpeed;
  9586  0A62  30FF               	movlw	255
  9587  0A63  07E5               	addwf	_R^(0+128),f
  9588  0A64  30FF               	movlw	255
  9589  0A65  3DE6               	addwfc	(_R+1)^(0+128),f
  9590  0A66  3001               	movlw	1
  9591  0A67  07A7               	addwf	_B^(0+128),f
  9592  0A68  3000               	movlw	0
  9593  0A69  3DA8               	addwfc	(_B+1)^(0+128),f
  9594                           
  9595                           ;dmx.c: 203:         LED_setColor(R, G, B, W);
  9596  0A6A  0829               	movf	_G^(0+128),w
  9597  0A6B  00D3               	movwf	??_animation1^(0+128)
  9598  0A6C  0853               	movf	??_animation1^(0+128),w
  9599  0A6D  0140               	movlb	0	; select bank0
  9600  0A6E  00ED               	movwf	LED_setColor@G
  9601  0A6F  0141               	movlb	1	; select bank1
  9602  0A70  0827               	movf	_B^(0+128),w
  9603  0A71  00D4               	movwf	(??_animation1+1)^(0+128)
  9604  0A72  0854               	movf	(??_animation1+1)^(0+128),w
  9605  0A73  0140               	movlb	0	; select bank0
  9606  0A74  00EE               	movwf	LED_setColor@B
  9607  0A75  3080               	movlw	128
  9608  0A76  0141               	movlb	1	; select bank1
  9609  0A77  00D5               	movwf	(??_animation1+2)^(0+128)
  9610  0A78  0855               	movf	(??_animation1+2)^(0+128),w
  9611  0A79  0140               	movlb	0	; select bank0
  9612  0A7A  00EF               	movwf	LED_setColor@W
  9613  0A7B  0141               	movlb	1	; select bank1
  9614  0A7C  0865               	movf	_R^(0+128),w
  9615  0A7D  318E  269A  318A   	fcall	_LED_setColor
  9616                           
  9617                           ;dmx.c: 204:         if(R <= 0){
  9618  0A80  0141               	movlb	1	; select bank1
  9619  0A81  0866               	movf	(_R+1)^(0+128),w
  9620  0A82  3A80               	xorlw	128
  9621  0A83  00D3               	movwf	??_animation1^(0+128)
  9622  0A84  3080               	movlw	128
  9623  0A85  0253               	subwf	??_animation1^(0+128),w
  9624  0A86  1D03               	skipz
  9625  0A87  2A8A               	goto	u4945
  9626  0A88  3001               	movlw	1
  9627  0A89  0265               	subwf	_R^(0+128),w
  9628  0A8A                     u4945:	
  9629  0A8A  1803               	skipnc
  9630  0A8B  0008               	return
  9631                           
  9632                           ;dmx.c: 205:             ani1_state = 1;
  9633  0A8C  3001               	movlw	1
  9634  0A8D  0141               	movlb	1	; select bank1
  9635  0A8E  00A5               	movwf	_ani1_state^(0+128)
  9636  0A8F  3000               	movlw	0
  9637  0A90  00A6               	movwf	(_ani1_state^(0+128)+1)
  9638  0A91  0008               	return
  9639  0A92                     l5485:	
  9640  0A92  0325               	decf	_ani1_state^(0+128),w
  9641  0A93  0426               	iorwf	(_ani1_state+1)^(0+128),w
  9642  0A94  1D03               	btfss	3,2
  9643  0A95  2AC6               	goto	l5495
  9644                           
  9645                           ;dmx.c: 208:         B-=animationSpeed; G+=animationSpeed;
  9646  0A96  30FF               	movlw	255
  9647  0A97  07A7               	addwf	_B^(0+128),f
  9648  0A98  30FF               	movlw	255
  9649  0A99  3DA8               	addwfc	(_B+1)^(0+128),f
  9650  0A9A  3001               	movlw	1
  9651  0A9B  07A9               	addwf	_G^(0+128),f
  9652  0A9C  3000               	movlw	0
  9653  0A9D  3DAA               	addwfc	(_G+1)^(0+128),f
  9654                           
  9655                           ;dmx.c: 209:         LED_setColor(R, G, B, W);
  9656  0A9E  0829               	movf	_G^(0+128),w
  9657  0A9F  00D3               	movwf	??_animation1^(0+128)
  9658  0AA0  0853               	movf	??_animation1^(0+128),w
  9659  0AA1  0140               	movlb	0	; select bank0
  9660  0AA2  00ED               	movwf	LED_setColor@G
  9661  0AA3  0141               	movlb	1	; select bank1
  9662  0AA4  0827               	movf	_B^(0+128),w
  9663  0AA5  00D4               	movwf	(??_animation1+1)^(0+128)
  9664  0AA6  0854               	movf	(??_animation1+1)^(0+128),w
  9665  0AA7  0140               	movlb	0	; select bank0
  9666  0AA8  00EE               	movwf	LED_setColor@B
  9667  0AA9  3080               	movlw	128
  9668  0AAA  0141               	movlb	1	; select bank1
  9669  0AAB  00D5               	movwf	(??_animation1+2)^(0+128)
  9670  0AAC  0855               	movf	(??_animation1+2)^(0+128),w
  9671  0AAD  0140               	movlb	0	; select bank0
  9672  0AAE  00EF               	movwf	LED_setColor@W
  9673  0AAF  0141               	movlb	1	; select bank1
  9674  0AB0  0865               	movf	_R^(0+128),w
  9675  0AB1  318E  269A  318A   	fcall	_LED_setColor
  9676                           
  9677                           ;dmx.c: 210:         if(B <= 0){
  9678  0AB4  0141               	movlb	1	; select bank1
  9679  0AB5  0828               	movf	(_B+1)^(0+128),w
  9680  0AB6  3A80               	xorlw	128
  9681  0AB7  00D3               	movwf	??_animation1^(0+128)
  9682  0AB8  3080               	movlw	128
  9683  0AB9  0253               	subwf	??_animation1^(0+128),w
  9684  0ABA  1D03               	skipz
  9685  0ABB  2ABE               	goto	u4965
  9686  0ABC  3001               	movlw	1
  9687  0ABD  0227               	subwf	_B^(0+128),w
  9688  0ABE                     u4965:	
  9689  0ABE  1803               	skipnc
  9690  0ABF  0008               	return
  9691                           
  9692                           ;dmx.c: 211:             ani1_state = 2;
  9693  0AC0  3002               	movlw	2
  9694  0AC1  0141               	movlb	1	; select bank1
  9695  0AC2  00A5               	movwf	_ani1_state^(0+128)
  9696  0AC3  3000               	movlw	0
  9697  0AC4  00A6               	movwf	(_ani1_state^(0+128)+1)
  9698  0AC5  0008               	return
  9699  0AC6                     l5495:	
  9700  0AC6  3002               	movlw	2
  9701  0AC7  0625               	xorwf	_ani1_state^(0+128),w
  9702  0AC8  0426               	iorwf	(_ani1_state+1)^(0+128),w
  9703  0AC9  1D03               	btfss	3,2
  9704  0ACA  0008               	return
  9705                           
  9706                           ;dmx.c: 214:         G-=animationSpeed; R+=animationSpeed;
  9707  0ACB  30FF               	movlw	255
  9708  0ACC  07A9               	addwf	_G^(0+128),f
  9709  0ACD  30FF               	movlw	255
  9710  0ACE  3DAA               	addwfc	(_G+1)^(0+128),f
  9711  0ACF  3001               	movlw	1
  9712  0AD0  07E5               	addwf	_R^(0+128),f
  9713  0AD1  3000               	movlw	0
  9714  0AD2  3DE6               	addwfc	(_R+1)^(0+128),f
  9715                           
  9716                           ;dmx.c: 215:         LED_setColor(R, G, B, W);
  9717  0AD3  0829               	movf	_G^(0+128),w
  9718  0AD4  00D3               	movwf	??_animation1^(0+128)
  9719  0AD5  0853               	movf	??_animation1^(0+128),w
  9720  0AD6  0140               	movlb	0	; select bank0
  9721  0AD7  00ED               	movwf	LED_setColor@G
  9722  0AD8  0141               	movlb	1	; select bank1
  9723  0AD9  0827               	movf	_B^(0+128),w
  9724  0ADA  00D4               	movwf	(??_animation1+1)^(0+128)
  9725  0ADB  0854               	movf	(??_animation1+1)^(0+128),w
  9726  0ADC  0140               	movlb	0	; select bank0
  9727  0ADD  00EE               	movwf	LED_setColor@B
  9728  0ADE  3080               	movlw	128
  9729  0ADF  0141               	movlb	1	; select bank1
  9730  0AE0  00D5               	movwf	(??_animation1+2)^(0+128)
  9731  0AE1  0855               	movf	(??_animation1+2)^(0+128),w
  9732  0AE2  0140               	movlb	0	; select bank0
  9733  0AE3  00EF               	movwf	LED_setColor@W
  9734  0AE4  0141               	movlb	1	; select bank1
  9735  0AE5  0865               	movf	_R^(0+128),w
  9736  0AE6  318E  269A  318A   	fcall	_LED_setColor
  9737                           
  9738                           ;dmx.c: 216:         if(G <= 0){
  9739  0AE9  0141               	movlb	1	; select bank1
  9740  0AEA  082A               	movf	(_G+1)^(0+128),w
  9741  0AEB  3A80               	xorlw	128
  9742  0AEC  00D3               	movwf	??_animation1^(0+128)
  9743  0AED  3080               	movlw	128
  9744  0AEE  0253               	subwf	??_animation1^(0+128),w
  9745  0AEF  1D03               	skipz
  9746  0AF0  2AF3               	goto	u4985
  9747  0AF1  3001               	movlw	1
  9748  0AF2  0229               	subwf	_G^(0+128),w
  9749  0AF3                     u4985:	
  9750  0AF3  1803               	skipnc
  9751  0AF4  0008               	return
  9752                           
  9753                           ;dmx.c: 217:             ani1_state = 0;
  9754  0AF5  0141               	movlb	1	; select bank1
  9755  0AF6  01A5               	clrf	_ani1_state^(0+128)
  9756  0AF7  01A6               	clrf	(_ani1_state+1)^(0+128)
  9757  0AF8  0008               	return
  9758  0AF9                     __end_of_animation1:	
  9759                           
  9760                           	psect	text18
  9761  0E9A                     __ptext18:	
  9762 ;; *************** function _LED_setColor *****************
  9763 ;; Defined at:
  9764 ;;		line 113 in file "dmx.c"
  9765 ;; Parameters:    Size  Location     Type
  9766 ;;  R               1    wreg     unsigned char 
  9767 ;;  G               1   77[BANK0 ] unsigned char 
  9768 ;;  B               1   78[BANK0 ] unsigned char 
  9769 ;;  W               1   79[BANK0 ] unsigned char 
  9770 ;; Auto vars:     Size  Location     Type
  9771 ;;  R               1    5[BANK1 ] unsigned char 
  9772 ;; Return value:  Size  Location     Type
  9773 ;;                  1    wreg      void 
  9774 ;; Registers used:
  9775 ;;		wreg, status,2, status,0, pclath, cstack
  9776 ;; Tracked objects:
  9777 ;;		On entry : 0/0
  9778 ;;		On exit  : 0/0
  9779 ;;		Unchanged: 0/0
  9780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9781 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9782 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9783 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9784 ;;      Totals:         0       3       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9785 ;;Total ram usage:        9 bytes
  9786 ;; Hardware stack levels used:    1
  9787 ;; Hardware stack levels required when called:    6
  9788 ;; This function calls:
  9789 ;;		___fldiv
  9790 ;;		___flmul
  9791 ;;		___fltol
  9792 ;;		___xxtofl
  9793 ;; This function is called by:
  9794 ;;		_DMX_Task
  9795 ;;		_animation1
  9796 ;; This function uses a non-reentrant model
  9797 ;;
  9798                           
  9799                           
  9800                           ;psect for function _LED_setColor
  9801  0E9A                     _LED_setColor:	
  9802                           
  9803                           ;incstack = 0
  9804                           ; Regs used in _LED_setColor: [wreg+status,2+status,0+pclath+cstack]
  9805                           ;LED_setColor@R stored from wreg
  9806  0E9A  0141               	movlb	1	; select bank1
  9807  0E9B  00D2               	movwf	LED_setColor@R^(0+128)
  9808                           
  9809                           ;dmx.c: 115:     R = ((float)R/2048)*(4000000/(122 * 32));
  9810  0E9C  0852               	movf	LED_setColor@R^(0+128),w
  9811  0E9D  00CD               	movwf	??_LED_setColor^(0+128)
  9812  0E9E  01CE               	clrf	(??_LED_setColor^(0+128)+1)
  9813  0E9F  01CF               	clrf	(??_LED_setColor^(0+128)+2)
  9814  0EA0  01D0               	clrf	(??_LED_setColor^(0+128)+3)
  9815  0EA1  0850               	movf	(??_LED_setColor+3)^(0+128),w
  9816  0EA2  0140               	movlb	0	; select bank0
  9817  0EA3  00A3               	movwf	___xxtofl@val+3
  9818  0EA4  0141               	movlb	1	; select bank1
  9819  0EA5  084F               	movf	(??_LED_setColor+2)^(0+128),w
  9820  0EA6  0140               	movlb	0	; select bank0
  9821  0EA7  00A2               	movwf	___xxtofl@val+2
  9822  0EA8  0141               	movlb	1	; select bank1
  9823  0EA9  084E               	movf	(??_LED_setColor+1)^(0+128),w
  9824  0EAA  0140               	movlb	0	; select bank0
  9825  0EAB  00A1               	movwf	___xxtofl@val+1
  9826  0EAC  0141               	movlb	1	; select bank1
  9827  0EAD  084D               	movf	??_LED_setColor^(0+128),w
  9828  0EAE  0140               	movlb	0	; select bank0
  9829  0EAF  00A0               	movwf	___xxtofl@val
  9830  0EB0  3000               	movlw	0
  9831  0EB1  3189  21C7  318E   	fcall	___xxtofl
  9832  0EB4  0140               	movlb	0	; select bank0
  9833  0EB5  0823               	movf	?___xxtofl+3,w
  9834  0EB6  00B5               	movwf	___fldiv@b+3
  9835  0EB7  0822               	movf	?___xxtofl+2,w
  9836  0EB8  00B4               	movwf	___fldiv@b+2
  9837  0EB9  0821               	movf	?___xxtofl+1,w
  9838  0EBA  00B3               	movwf	___fldiv@b+1
  9839  0EBB  0820               	movf	?___xxtofl,w
  9840  0EBC  00B2               	movwf	___fldiv@b
  9841  0EBD  3045               	movlw	69
  9842  0EBE  00B1               	movwf	___fldiv@a+3
  9843  0EBF  3000               	movlw	0
  9844  0EC0  00B0               	movwf	___fldiv@a+2
  9845  0EC1  3000               	movlw	0
  9846  0EC2  00AF               	movwf	___fldiv@a+1
  9847  0EC3  3000               	movlw	0
  9848  0EC4  00AE               	movwf	___fldiv@a
  9849  0EC5  3185  258E  318E   	fcall	___fldiv
  9850  0EC8  0140               	movlb	0	; select bank0
  9851  0EC9  0831               	movf	?___fldiv+3,w
  9852  0ECA  00CF               	movwf	___flmul@a+3
  9853  0ECB  0830               	movf	?___fldiv+2,w
  9854  0ECC  00CE               	movwf	___flmul@a+2
  9855  0ECD  082F               	movf	?___fldiv+1,w
  9856  0ECE  00CD               	movwf	___flmul@a+1
  9857  0ECF  082E               	movf	?___fldiv,w
  9858  0ED0  00CC               	movwf	___flmul@a
  9859  0ED1  3044               	movlw	68
  9860  0ED2  00CB               	movwf	___flmul@b+3
  9861  0ED3  3080               	movlw	128
  9862  0ED4  00CA               	movwf	___flmul@b+2
  9863  0ED5  3000               	movlw	0
  9864  0ED6  00C9               	movwf	___flmul@b+1
  9865  0ED7  3000               	movlw	0
  9866  0ED8  00C8               	movwf	___flmul@b
  9867  0ED9  3183  2362  318E   	fcall	___flmul
  9868  0EDC  0140               	movlb	0	; select bank0
  9869  0EDD  084B               	movf	?___flmul+3,w
  9870  0EDE  00E5               	movwf	___fltol@f1+3
  9871  0EDF  084A               	movf	?___flmul+2,w
  9872  0EE0  00E4               	movwf	___fltol@f1+2
  9873  0EE1  0849               	movf	?___flmul+1,w
  9874  0EE2  00E3               	movwf	___fltol@f1+1
  9875  0EE3  0848               	movf	?___flmul,w
  9876  0EE4  00E2               	movwf	___fltol@f1
  9877  0EE5  3189  2161  318E   	fcall	___fltol
  9878  0EE8  0140               	movlb	0	; select bank0
  9879  0EE9  0862               	movf	?___fltol,w
  9880  0EEA  0141               	movlb	1	; select bank1
  9881  0EEB  00D1               	movwf	(??_LED_setColor+4)^(0+128)
  9882  0EEC  0851               	movf	(??_LED_setColor+4)^(0+128),w
  9883  0EED  00D2               	movwf	LED_setColor@R^(0+128)
  9884                           
  9885                           ;dmx.c: 116:     G = ((float)G/2048)*(4000000/(122 * 32));
  9886  0EEE  0140               	movlb	0	; select bank0
  9887  0EEF  086D               	movf	LED_setColor@G,w
  9888  0EF0  0141               	movlb	1	; select bank1
  9889  0EF1  00CD               	movwf	??_LED_setColor^(0+128)
  9890  0EF2  01CE               	clrf	(??_LED_setColor^(0+128)+1)
  9891  0EF3  01CF               	clrf	(??_LED_setColor^(0+128)+2)
  9892  0EF4  01D0               	clrf	(??_LED_setColor^(0+128)+3)
  9893  0EF5  0850               	movf	(??_LED_setColor+3)^(0+128),w
  9894  0EF6  0140               	movlb	0	; select bank0
  9895  0EF7  00A3               	movwf	___xxtofl@val+3
  9896  0EF8  0141               	movlb	1	; select bank1
  9897  0EF9  084F               	movf	(??_LED_setColor+2)^(0+128),w
  9898  0EFA  0140               	movlb	0	; select bank0
  9899  0EFB  00A2               	movwf	___xxtofl@val+2
  9900  0EFC  0141               	movlb	1	; select bank1
  9901  0EFD  084E               	movf	(??_LED_setColor+1)^(0+128),w
  9902  0EFE  0140               	movlb	0	; select bank0
  9903  0EFF  00A1               	movwf	___xxtofl@val+1
  9904  0F00  0141               	movlb	1	; select bank1
  9905  0F01  084D               	movf	??_LED_setColor^(0+128),w
  9906  0F02  0140               	movlb	0	; select bank0
  9907  0F03  00A0               	movwf	___xxtofl@val
  9908  0F04  3000               	movlw	0
  9909  0F05  3189  21C7  318E   	fcall	___xxtofl
  9910  0F08  0140               	movlb	0	; select bank0
  9911  0F09  0823               	movf	?___xxtofl+3,w
  9912  0F0A  00B5               	movwf	___fldiv@b+3
  9913  0F0B  0822               	movf	?___xxtofl+2,w
  9914  0F0C  00B4               	movwf	___fldiv@b+2
  9915  0F0D  0821               	movf	?___xxtofl+1,w
  9916  0F0E  00B3               	movwf	___fldiv@b+1
  9917  0F0F  0820               	movf	?___xxtofl,w
  9918  0F10  00B2               	movwf	___fldiv@b
  9919  0F11  3045               	movlw	69
  9920  0F12  00B1               	movwf	___fldiv@a+3
  9921  0F13  3000               	movlw	0
  9922  0F14  00B0               	movwf	___fldiv@a+2
  9923  0F15  3000               	movlw	0
  9924  0F16  00AF               	movwf	___fldiv@a+1
  9925  0F17  3000               	movlw	0
  9926  0F18  00AE               	movwf	___fldiv@a
  9927  0F19  3185  258E  318E   	fcall	___fldiv
  9928  0F1C  0140               	movlb	0	; select bank0
  9929  0F1D  0831               	movf	?___fldiv+3,w
  9930  0F1E  00CF               	movwf	___flmul@a+3
  9931  0F1F  0830               	movf	?___fldiv+2,w
  9932  0F20  00CE               	movwf	___flmul@a+2
  9933  0F21  082F               	movf	?___fldiv+1,w
  9934  0F22  00CD               	movwf	___flmul@a+1
  9935  0F23  082E               	movf	?___fldiv,w
  9936  0F24  00CC               	movwf	___flmul@a
  9937  0F25  3044               	movlw	68
  9938  0F26  00CB               	movwf	___flmul@b+3
  9939  0F27  3080               	movlw	128
  9940  0F28  00CA               	movwf	___flmul@b+2
  9941  0F29  3000               	movlw	0
  9942  0F2A  00C9               	movwf	___flmul@b+1
  9943  0F2B  3000               	movlw	0
  9944  0F2C  00C8               	movwf	___flmul@b
  9945  0F2D  3183  2362  318E   	fcall	___flmul
  9946  0F30  0140               	movlb	0	; select bank0
  9947  0F31  084B               	movf	?___flmul+3,w
  9948  0F32  00E5               	movwf	___fltol@f1+3
  9949  0F33  084A               	movf	?___flmul+2,w
  9950  0F34  00E4               	movwf	___fltol@f1+2
  9951  0F35  0849               	movf	?___flmul+1,w
  9952  0F36  00E3               	movwf	___fltol@f1+1
  9953  0F37  0848               	movf	?___flmul,w
  9954  0F38  00E2               	movwf	___fltol@f1
  9955  0F39  3189  2161  318E   	fcall	___fltol
  9956  0F3C  0140               	movlb	0	; select bank0
  9957  0F3D  0862               	movf	?___fltol,w
  9958  0F3E  0141               	movlb	1	; select bank1
  9959  0F3F  00D1               	movwf	(??_LED_setColor+4)^(0+128)
  9960  0F40  0851               	movf	(??_LED_setColor+4)^(0+128),w
  9961  0F41  0140               	movlb	0	; select bank0
  9962  0F42  00ED               	movwf	LED_setColor@G
  9963                           
  9964                           ;dmx.c: 117:     B = ((float)B/2048)*(4000000/(122 * 32));
  9965  0F43  086E               	movf	LED_setColor@B,w
  9966  0F44  0141               	movlb	1	; select bank1
  9967  0F45  00CD               	movwf	??_LED_setColor^(0+128)
  9968  0F46  01CE               	clrf	(??_LED_setColor^(0+128)+1)
  9969  0F47  01CF               	clrf	(??_LED_setColor^(0+128)+2)
  9970  0F48  01D0               	clrf	(??_LED_setColor^(0+128)+3)
  9971  0F49  0850               	movf	(??_LED_setColor+3)^(0+128),w
  9972  0F4A  0140               	movlb	0	; select bank0
  9973  0F4B  00A3               	movwf	___xxtofl@val+3
  9974  0F4C  0141               	movlb	1	; select bank1
  9975  0F4D  084F               	movf	(??_LED_setColor+2)^(0+128),w
  9976  0F4E  0140               	movlb	0	; select bank0
  9977  0F4F  00A2               	movwf	___xxtofl@val+2
  9978  0F50  0141               	movlb	1	; select bank1
  9979  0F51  084E               	movf	(??_LED_setColor+1)^(0+128),w
  9980  0F52  0140               	movlb	0	; select bank0
  9981  0F53  00A1               	movwf	___xxtofl@val+1
  9982  0F54  0141               	movlb	1	; select bank1
  9983  0F55  084D               	movf	??_LED_setColor^(0+128),w
  9984  0F56  0140               	movlb	0	; select bank0
  9985  0F57  00A0               	movwf	___xxtofl@val
  9986  0F58  3000               	movlw	0
  9987  0F59  3189  21C7  318E   	fcall	___xxtofl
  9988  0F5C  0140               	movlb	0	; select bank0
  9989  0F5D  0823               	movf	?___xxtofl+3,w
  9990  0F5E  00B5               	movwf	___fldiv@b+3
  9991  0F5F  0822               	movf	?___xxtofl+2,w
  9992  0F60  00B4               	movwf	___fldiv@b+2
  9993  0F61  0821               	movf	?___xxtofl+1,w
  9994  0F62  00B3               	movwf	___fldiv@b+1
  9995  0F63  0820               	movf	?___xxtofl,w
  9996  0F64  00B2               	movwf	___fldiv@b
  9997  0F65  3045               	movlw	69
  9998  0F66  00B1               	movwf	___fldiv@a+3
  9999  0F67  3000               	movlw	0
 10000  0F68  00B0               	movwf	___fldiv@a+2
 10001  0F69  3000               	movlw	0
 10002  0F6A  00AF               	movwf	___fldiv@a+1
 10003  0F6B  3000               	movlw	0
 10004  0F6C  00AE               	movwf	___fldiv@a
 10005  0F6D  3185  258E  318E   	fcall	___fldiv
 10006  0F70  0140               	movlb	0	; select bank0
 10007  0F71  0831               	movf	?___fldiv+3,w
 10008  0F72  00CF               	movwf	___flmul@a+3
 10009  0F73  0830               	movf	?___fldiv+2,w
 10010  0F74  00CE               	movwf	___flmul@a+2
 10011  0F75  082F               	movf	?___fldiv+1,w
 10012  0F76  00CD               	movwf	___flmul@a+1
 10013  0F77  082E               	movf	?___fldiv,w
 10014  0F78  00CC               	movwf	___flmul@a
 10015  0F79  3044               	movlw	68
 10016  0F7A  00CB               	movwf	___flmul@b+3
 10017  0F7B  3080               	movlw	128
 10018  0F7C  00CA               	movwf	___flmul@b+2
 10019  0F7D  3000               	movlw	0
 10020  0F7E  00C9               	movwf	___flmul@b+1
 10021  0F7F  3000               	movlw	0
 10022  0F80  00C8               	movwf	___flmul@b
 10023  0F81  3183  2362  318E   	fcall	___flmul
 10024  0F84  0140               	movlb	0	; select bank0
 10025  0F85  084B               	movf	?___flmul+3,w
 10026  0F86  00E5               	movwf	___fltol@f1+3
 10027  0F87  084A               	movf	?___flmul+2,w
 10028  0F88  00E4               	movwf	___fltol@f1+2
 10029  0F89  0849               	movf	?___flmul+1,w
 10030  0F8A  00E3               	movwf	___fltol@f1+1
 10031  0F8B  0848               	movf	?___flmul,w
 10032  0F8C  00E2               	movwf	___fltol@f1
 10033  0F8D  3189  2161  318E   	fcall	___fltol
 10034  0F90  0140               	movlb	0	; select bank0
 10035  0F91  0862               	movf	?___fltol,w
 10036  0F92  0141               	movlb	1	; select bank1
 10037  0F93  00D1               	movwf	(??_LED_setColor+4)^(0+128)
 10038  0F94  0851               	movf	(??_LED_setColor+4)^(0+128),w
 10039  0F95  0140               	movlb	0	; select bank0
 10040  0F96  00EE               	movwf	LED_setColor@B
 10041                           
 10042                           ;dmx.c: 118:     W = ((float)W/2048)*(4000000/(122 * 32));
 10043  0F97  086F               	movf	LED_setColor@W,w
 10044  0F98  0141               	movlb	1	; select bank1
 10045  0F99  00CD               	movwf	??_LED_setColor^(0+128)
 10046  0F9A  01CE               	clrf	(??_LED_setColor^(0+128)+1)
 10047  0F9B  01CF               	clrf	(??_LED_setColor^(0+128)+2)
 10048  0F9C  01D0               	clrf	(??_LED_setColor^(0+128)+3)
 10049  0F9D  0850               	movf	(??_LED_setColor+3)^(0+128),w
 10050  0F9E  0140               	movlb	0	; select bank0
 10051  0F9F  00A3               	movwf	___xxtofl@val+3
 10052  0FA0  0141               	movlb	1	; select bank1
 10053  0FA1  084F               	movf	(??_LED_setColor+2)^(0+128),w
 10054  0FA2  0140               	movlb	0	; select bank0
 10055  0FA3  00A2               	movwf	___xxtofl@val+2
 10056  0FA4  0141               	movlb	1	; select bank1
 10057  0FA5  084E               	movf	(??_LED_setColor+1)^(0+128),w
 10058  0FA6  0140               	movlb	0	; select bank0
 10059  0FA7  00A1               	movwf	___xxtofl@val+1
 10060  0FA8  0141               	movlb	1	; select bank1
 10061  0FA9  084D               	movf	??_LED_setColor^(0+128),w
 10062  0FAA  0140               	movlb	0	; select bank0
 10063  0FAB  00A0               	movwf	___xxtofl@val
 10064  0FAC  3000               	movlw	0
 10065  0FAD  3189  21C7  318E   	fcall	___xxtofl
 10066  0FB0  0140               	movlb	0	; select bank0
 10067  0FB1  0823               	movf	?___xxtofl+3,w
 10068  0FB2  00B5               	movwf	___fldiv@b+3
 10069  0FB3  0822               	movf	?___xxtofl+2,w
 10070  0FB4  00B4               	movwf	___fldiv@b+2
 10071  0FB5  0821               	movf	?___xxtofl+1,w
 10072  0FB6  00B3               	movwf	___fldiv@b+1
 10073  0FB7  0820               	movf	?___xxtofl,w
 10074  0FB8  00B2               	movwf	___fldiv@b
 10075  0FB9  3045               	movlw	69
 10076  0FBA  00B1               	movwf	___fldiv@a+3
 10077  0FBB  3000               	movlw	0
 10078  0FBC  00B0               	movwf	___fldiv@a+2
 10079  0FBD  3000               	movlw	0
 10080  0FBE  00AF               	movwf	___fldiv@a+1
 10081  0FBF  3000               	movlw	0
 10082  0FC0  00AE               	movwf	___fldiv@a
 10083  0FC1  3185  258E  318E   	fcall	___fldiv
 10084  0FC4  0140               	movlb	0	; select bank0
 10085  0FC5  0831               	movf	?___fldiv+3,w
 10086  0FC6  00CF               	movwf	___flmul@a+3
 10087  0FC7  0830               	movf	?___fldiv+2,w
 10088  0FC8  00CE               	movwf	___flmul@a+2
 10089  0FC9  082F               	movf	?___fldiv+1,w
 10090  0FCA  00CD               	movwf	___flmul@a+1
 10091  0FCB  082E               	movf	?___fldiv,w
 10092  0FCC  00CC               	movwf	___flmul@a
 10093  0FCD  3044               	movlw	68
 10094  0FCE  00CB               	movwf	___flmul@b+3
 10095  0FCF  3080               	movlw	128
 10096  0FD0  00CA               	movwf	___flmul@b+2
 10097  0FD1  3000               	movlw	0
 10098  0FD2  00C9               	movwf	___flmul@b+1
 10099  0FD3  3000               	movlw	0
 10100  0FD4  00C8               	movwf	___flmul@b
 10101  0FD5  3183  2362  318E   	fcall	___flmul
 10102  0FD8  0140               	movlb	0	; select bank0
 10103  0FD9  084B               	movf	?___flmul+3,w
 10104  0FDA  00E5               	movwf	___fltol@f1+3
 10105  0FDB  084A               	movf	?___flmul+2,w
 10106  0FDC  00E4               	movwf	___fltol@f1+2
 10107  0FDD  0849               	movf	?___flmul+1,w
 10108  0FDE  00E3               	movwf	___fltol@f1+1
 10109  0FDF  0848               	movf	?___flmul,w
 10110  0FE0  00E2               	movwf	___fltol@f1
 10111  0FE1  3189  2161         	fcall	___fltol
 10112  0FE3  0140               	movlb	0	; select bank0
 10113  0FE4  0862               	movf	?___fltol,w
 10114  0FE5  0141               	movlb	1	; select bank1
 10115  0FE6  00D1               	movwf	(??_LED_setColor+4)^(0+128)
 10116  0FE7  0851               	movf	(??_LED_setColor+4)^(0+128),w
 10117  0FE8  0140               	movlb	0	; select bank0
 10118  0FE9  00EF               	movwf	LED_setColor@W
 10119                           
 10120                           ;dmx.c: 119:     CCPR1H = R >> 8;
 10121  0FEA  0146               	movlb	6	; select bank6
 10122  0FEB  018D               	clrf	13	;volatile
 10123                           
 10124                           ;dmx.c: 120:     CCPR1L = R;
 10125  0FEC  0141               	movlb	1	; select bank1
 10126  0FED  0852               	movf	LED_setColor@R^(0+128),w
 10127  0FEE  0146               	movlb	6	; select bank6
 10128  0FEF  008C               	movwf	12	;volatile
 10129                           
 10130                           ;dmx.c: 121:     CCPR2H = G >> 8;
 10131  0FF0  0191               	clrf	17	;volatile
 10132                           
 10133                           ;dmx.c: 122:     CCPR2L = G;
 10134  0FF1  0140               	movlb	0	; select bank0
 10135  0FF2  086D               	movf	LED_setColor@G,w
 10136  0FF3  0146               	movlb	6	; select bank6
 10137  0FF4  0090               	movwf	16	;volatile
 10138                           
 10139                           ;dmx.c: 123:     CCPR3H = B >> 8;
 10140  0FF5  0195               	clrf	21	;volatile
 10141                           
 10142                           ;dmx.c: 124:     CCPR3L = B;
 10143  0FF6  0140               	movlb	0	; select bank0
 10144  0FF7  086E               	movf	LED_setColor@B,w
 10145  0FF8  0146               	movlb	6	; select bank6
 10146  0FF9  0094               	movwf	20	;volatile
 10147                           
 10148                           ;dmx.c: 125:     CCPR4H = W >> 8;
 10149  0FFA  0199               	clrf	25	;volatile
 10150                           
 10151                           ;dmx.c: 126:     CCPR4L = W;
 10152  0FFB  0140               	movlb	0	; select bank0
 10153  0FFC  086F               	movf	LED_setColor@W,w
 10154  0FFD  0146               	movlb	6	; select bank6
 10155  0FFE  0098               	movwf	24	;volatile
 10156  0FFF  0008               	return
 10157  1000                     __end_of_LED_setColor:	
 10158                           
 10159                           	psect	text19
 10160  09C7                     __ptext19:	
 10161 ;; *************** function ___xxtofl *****************
 10162 ;; Defined at:
 10163 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 10164 ;; Parameters:    Size  Location     Type
 10165 ;;  sign            1    wreg     unsigned char 
 10166 ;;  val             4    0[BANK0 ] long 
 10167 ;; Auto vars:     Size  Location     Type
 10168 ;;  sign            1    8[BANK0 ] unsigned char 
 10169 ;;  arg             4   10[BANK0 ] unsigned long 
 10170 ;;  exp             1    9[BANK0 ] unsigned char 
 10171 ;; Return value:  Size  Location     Type
 10172 ;;                  4    0[BANK0 ] unsigned char 
 10173 ;; Registers used:
 10174 ;;		wreg, status,2, status,0
 10175 ;; Tracked objects:
 10176 ;;		On entry : 0/0
 10177 ;;		On exit  : 0/0
 10178 ;;		Unchanged: 0/0
 10179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10180 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10181 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10182 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10183 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10184 ;;Total ram usage:       14 bytes
 10185 ;; Hardware stack levels used:    1
 10186 ;; Hardware stack levels required when called:    4
 10187 ;; This function calls:
 10188 ;;		Nothing
 10189 ;; This function is called by:
 10190 ;;		_LED_setColor
 10191 ;;		_LED_setBrightness
 10192 ;; This function uses a non-reentrant model
 10193 ;;
 10194                           
 10195                           
 10196                           ;psect for function ___xxtofl
 10197  09C7                     ___xxtofl:	
 10198                           
 10199                           ;incstack = 0
 10200                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10201                           ;___xxtofl@sign stored from wreg
 10202  09C7  0140               	movlb	0	; select bank0
 10203  09C8  00A8               	movwf	___xxtofl@sign
 10204  09C9  0828               	movf	___xxtofl@sign,w
 10205  09CA  1D03               	btfss	3,2
 10206  09CB  1FA3               	btfss	___xxtofl@val+3,7
 10207  09CC  29DD               	goto	l3831
 10208  09CD  0920               	comf	___xxtofl@val,w
 10209  09CE  00AA               	movwf	___xxtofl@arg
 10210  09CF  0921               	comf	___xxtofl@val+1,w
 10211  09D0  00AB               	movwf	___xxtofl@arg+1
 10212  09D1  0922               	comf	___xxtofl@val+2,w
 10213  09D2  00AC               	movwf	___xxtofl@arg+2
 10214  09D3  0923               	comf	___xxtofl@val+3,w
 10215  09D4  00AD               	movwf	___xxtofl@arg+3
 10216  09D5  0AAA               	incf	___xxtofl@arg,f
 10217  09D6  1903               	skipnz
 10218  09D7  0AAB               	incf	___xxtofl@arg+1,f
 10219  09D8  1903               	skipnz
 10220  09D9  0AAC               	incf	___xxtofl@arg+2,f
 10221  09DA  1903               	skipnz
 10222  09DB  0AAD               	incf	___xxtofl@arg+3,f
 10223  09DC  29E5               	goto	l1714
 10224  09DD                     l3831:	
 10225  09DD  0823               	movf	___xxtofl@val+3,w
 10226  09DE  00AD               	movwf	___xxtofl@arg+3
 10227  09DF  0822               	movf	___xxtofl@val+2,w
 10228  09E0  00AC               	movwf	___xxtofl@arg+2
 10229  09E1  0821               	movf	___xxtofl@val+1,w
 10230  09E2  00AB               	movwf	___xxtofl@arg+1
 10231  09E3  0820               	movf	___xxtofl@val,w
 10232  09E4  00AA               	movwf	___xxtofl@arg
 10233  09E5                     l1714:	
 10234  09E5  0823               	movf	___xxtofl@val+3,w
 10235  09E6  0422               	iorwf	___xxtofl@val+2,w
 10236  09E7  0421               	iorwf	___xxtofl@val+1,w
 10237  09E8  0420               	iorwf	___xxtofl@val,w
 10238  09E9  1D03               	skipz
 10239  09EA  29F4               	goto	l3837
 10240  09EB  3000               	movlw	0
 10241  09EC  00A3               	movwf	?___xxtofl+3
 10242  09ED  3000               	movlw	0
 10243  09EE  00A2               	movwf	?___xxtofl+2
 10244  09EF  3000               	movlw	0
 10245  09F0  00A1               	movwf	?___xxtofl+1
 10246  09F1  3000               	movlw	0
 10247  09F2  00A0               	movwf	?___xxtofl
 10248  09F3  0008               	return
 10249  09F4                     l3837:	
 10250  09F4  3096               	movlw	150
 10251  09F5  00A4               	movwf	??___xxtofl
 10252  09F6  0824               	movf	??___xxtofl,w
 10253  09F7  00A9               	movwf	___xxtofl@exp
 10254  09F8                     l3841:	
 10255  09F8  30FE               	movlw	254
 10256  09F9  052D               	andwf	___xxtofl@arg+3,w
 10257  09FA  1903               	btfsc	3,2
 10258  09FB  2A1B               	goto	l1720
 10259  09FC  3001               	movlw	1
 10260  09FD  00A4               	movwf	??___xxtofl
 10261  09FE  0824               	movf	??___xxtofl,w
 10262  09FF  07A9               	addwf	___xxtofl@exp,f
 10263  0A00  3001               	movlw	1
 10264  0A01                     u3105:	
 10265  0A01  36AD               	lsrf	___xxtofl@arg+3,f
 10266  0A02  0CAC               	rrf	___xxtofl@arg+2,f
 10267  0A03  0CAB               	rrf	___xxtofl@arg+1,f
 10268  0A04  0CAA               	rrf	___xxtofl@arg,f
 10269  0A05  0B89               	decfsz	9,f
 10270  0A06  2A01               	goto	u3105
 10271  0A07  29F8               	goto	l3841
 10272  0A08                     l3843:	
 10273  0A08  3001               	movlw	1
 10274  0A09  00A4               	movwf	??___xxtofl
 10275  0A0A  0824               	movf	??___xxtofl,w
 10276  0A0B  07A9               	addwf	___xxtofl@exp,f
 10277  0A0C  3001               	movlw	1
 10278  0A0D  07AA               	addwf	___xxtofl@arg,f
 10279  0A0E  3000               	movlw	0
 10280  0A0F  3DAB               	addwfc	___xxtofl@arg+1,f
 10281  0A10  3000               	movlw	0
 10282  0A11  3DAC               	addwfc	___xxtofl@arg+2,f
 10283  0A12  3000               	movlw	0
 10284  0A13  3DAD               	addwfc	___xxtofl@arg+3,f
 10285  0A14  3001               	movlw	1
 10286  0A15                     u3125:	
 10287  0A15  36AD               	lsrf	___xxtofl@arg+3,f
 10288  0A16  0CAC               	rrf	___xxtofl@arg+2,f
 10289  0A17  0CAB               	rrf	___xxtofl@arg+1,f
 10290  0A18  0CAA               	rrf	___xxtofl@arg,f
 10291  0A19  0B89               	decfsz	9,f
 10292  0A1A  2A15               	goto	u3125
 10293  0A1B                     l1720:	
 10294  0A1B  30FF               	movlw	255
 10295  0A1C  052D               	andwf	___xxtofl@arg+3,w
 10296  0A1D  1903               	btfsc	3,2
 10297  0A1E  2A2D               	goto	l3851
 10298  0A1F  2A08               	goto	l3843
 10299  0A20                     l3853:	
 10300  0A20  3002               	movlw	2
 10301  0A21  0229               	subwf	___xxtofl@exp,w
 10302  0A22  1C03               	btfss	3,0
 10303  0A23  2A2F               	goto	l1727
 10304  0A24  3001               	movlw	1
 10305  0A25  02A9               	subwf	___xxtofl@exp,f
 10306  0A26  3001               	movlw	1
 10307  0A27                     u3145:	
 10308  0A27  35AA               	lslf	___xxtofl@arg,f
 10309  0A28  0DAB               	rlf	___xxtofl@arg+1,f
 10310  0A29  0DAC               	rlf	___xxtofl@arg+2,f
 10311  0A2A  0DAD               	rlf	___xxtofl@arg+3,f
 10312  0A2B  0B89               	decfsz	9,f
 10313  0A2C  2A27               	goto	u3145
 10314  0A2D                     l3851:	
 10315  0A2D  1FAC               	btfss	___xxtofl@arg+2,7
 10316  0A2E  2A20               	goto	l3853
 10317  0A2F                     l1727:	
 10318  0A2F  1829               	btfsc	___xxtofl@exp,0
 10319  0A30  2A39               	goto	l1728
 10320  0A31  30FF               	movlw	255
 10321  0A32  05AA               	andwf	___xxtofl@arg,f
 10322  0A33  30FF               	movlw	255
 10323  0A34  05AB               	andwf	___xxtofl@arg+1,f
 10324  0A35  307F               	movlw	127
 10325  0A36  05AC               	andwf	___xxtofl@arg+2,f
 10326  0A37  30FF               	movlw	255
 10327  0A38  05AD               	andwf	___xxtofl@arg+3,f
 10328  0A39                     l1728:	
 10329  0A39  1003               	clrc
 10330  0A3A  0CA9               	rrf	___xxtofl@exp,f
 10331  0A3B  0829               	movf	___xxtofl@exp,w
 10332  0A3C  00A4               	movwf	??___xxtofl
 10333  0A3D  01A5               	clrf	??___xxtofl+1
 10334  0A3E  01A6               	clrf	??___xxtofl+2
 10335  0A3F  01A7               	clrf	??___xxtofl+3
 10336  0A40  3018               	movlw	24
 10337  0A41                     u3185:	
 10338  0A41  35A4               	lslf	??___xxtofl,f
 10339  0A42  0DA5               	rlf	??___xxtofl+1,f
 10340  0A43  0DA6               	rlf	??___xxtofl+2,f
 10341  0A44  0DA7               	rlf	??___xxtofl+3,f
 10342  0A45  0B89               	decfsz	9,f
 10343  0A46  2A41               	goto	u3185
 10344  0A47  0824               	movf	??___xxtofl,w
 10345  0A48  04AA               	iorwf	___xxtofl@arg,f
 10346  0A49  0825               	movf	??___xxtofl+1,w
 10347  0A4A  04AB               	iorwf	___xxtofl@arg+1,f
 10348  0A4B  0826               	movf	??___xxtofl+2,w
 10349  0A4C  04AC               	iorwf	___xxtofl@arg+2,f
 10350  0A4D  0827               	movf	??___xxtofl+3,w
 10351  0A4E  04AD               	iorwf	___xxtofl@arg+3,f
 10352  0A4F  0828               	movf	___xxtofl@sign,w
 10353  0A50  1D03               	btfss	3,2
 10354  0A51  1FA3               	btfss	___xxtofl@val+3,7
 10355  0A52  2A54               	goto	l3865
 10356  0A53  17AD               	bsf	___xxtofl@arg+3,7
 10357  0A54                     l3865:	
 10358  0A54  082D               	movf	___xxtofl@arg+3,w
 10359  0A55  00A3               	movwf	?___xxtofl+3
 10360  0A56  082C               	movf	___xxtofl@arg+2,w
 10361  0A57  00A2               	movwf	?___xxtofl+2
 10362  0A58  082B               	movf	___xxtofl@arg+1,w
 10363  0A59  00A1               	movwf	?___xxtofl+1
 10364  0A5A  082A               	movf	___xxtofl@arg,w
 10365  0A5B  00A0               	movwf	?___xxtofl
 10366  0A5C  0008               	return
 10367  0A5D                     __end_of___xxtofl:	
 10368                           
 10369                           	psect	text20
 10370  0961                     __ptext20:	
 10371 ;; *************** function ___fltol *****************
 10372 ;; Defined at:
 10373 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 10374 ;; Parameters:    Size  Location     Type
 10375 ;;  f1              4   66[BANK0 ] unsigned char 
 10376 ;; Auto vars:     Size  Location     Type
 10377 ;;  exp1            1   76[BANK0 ] unsigned char 
 10378 ;;  sign1           1   75[BANK0 ] unsigned char 
 10379 ;; Return value:  Size  Location     Type
 10380 ;;                  4   66[BANK0 ] long 
 10381 ;; Registers used:
 10382 ;;		wreg, status,2, status,0
 10383 ;; Tracked objects:
 10384 ;;		On entry : 0/0
 10385 ;;		On exit  : 0/0
 10386 ;;		Unchanged: 0/0
 10387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10388 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10389 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10390 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10391 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10392 ;;Total ram usage:       11 bytes
 10393 ;; Hardware stack levels used:    1
 10394 ;; Hardware stack levels required when called:    4
 10395 ;; This function calls:
 10396 ;;		Nothing
 10397 ;; This function is called by:
 10398 ;;		_LED_setColor
 10399 ;;		_LED_setBrightness
 10400 ;; This function uses a non-reentrant model
 10401 ;;
 10402                           
 10403                           
 10404                           ;psect for function ___fltol
 10405  0961                     ___fltol:	
 10406                           
 10407                           ;incstack = 0
 10408                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10409  0961  1003               	clrc
 10410  0962  0140               	movlb	0	; select bank0
 10411  0963  0D64               	rlf	___fltol@f1+2,w
 10412  0964  0D65               	rlf	___fltol@f1+3,w
 10413  0965  00E6               	movwf	??___fltol
 10414  0966  0866               	movf	??___fltol,w
 10415  0967  00EC               	movwf	___fltol@exp1
 10416  0968  086C               	movf	___fltol@exp1,w
 10417  0969  1D03               	btfss	3,2
 10418  096A  2974               	goto	l3467
 10419  096B                     l3463:	
 10420  096B  3000               	movlw	0
 10421  096C  00E5               	movwf	?___fltol+3
 10422  096D  3000               	movlw	0
 10423  096E  00E4               	movwf	?___fltol+2
 10424  096F  3000               	movlw	0
 10425  0970  00E3               	movwf	?___fltol+1
 10426  0971  3000               	movlw	0
 10427  0972  00E2               	movwf	?___fltol
 10428  0973  0008               	return
 10429  0974                     l3467:	
 10430  0974  0862               	movf	___fltol@f1,w
 10431  0975  00E6               	movwf	??___fltol
 10432  0976  0863               	movf	___fltol@f1+1,w
 10433  0977  00E7               	movwf	??___fltol+1
 10434  0978  0864               	movf	___fltol@f1+2,w
 10435  0979  00E8               	movwf	??___fltol+2
 10436  097A  0865               	movf	___fltol@f1+3,w
 10437  097B  00E9               	movwf	??___fltol+3
 10438  097C  301F               	movlw	31
 10439  097D                     u2305:	
 10440  097D  36E9               	lsrf	??___fltol+3,f
 10441  097E  0CE8               	rrf	??___fltol+2,f
 10442  097F  0CE7               	rrf	??___fltol+1,f
 10443  0980  0CE6               	rrf	??___fltol,f
 10444  0981  0B89               	decfsz	9,f
 10445  0982  297D               	goto	u2305
 10446  0983  0866               	movf	??___fltol,w
 10447  0984  00EA               	movwf	??___fltol+4
 10448  0985  086A               	movf	??___fltol+4,w
 10449  0986  00EB               	movwf	___fltol@sign1
 10450  0987  17E4               	bsf	___fltol@f1+2,7
 10451  0988  30FF               	movlw	255
 10452  0989  05E2               	andwf	___fltol@f1,f
 10453  098A  30FF               	movlw	255
 10454  098B  05E3               	andwf	___fltol@f1+1,f
 10455  098C  30FF               	movlw	255
 10456  098D  05E4               	andwf	___fltol@f1+2,f
 10457  098E  3000               	movlw	0
 10458  098F  05E5               	andwf	___fltol@f1+3,f
 10459  0990  3096               	movlw	150
 10460  0991  02EC               	subwf	___fltol@exp1,f
 10461  0992  1FEC               	btfss	___fltol@exp1,7
 10462  0993  29A7               	goto	l3485
 10463  0994  086C               	movf	___fltol@exp1,w
 10464  0995  3A80               	xorlw	128
 10465  0996  3E97               	addlw	151
 10466  0997  1C03               	btfss	3,0
 10467  0998  296B               	goto	l3463
 10468  0999                     l3483:	
 10469  0999  3001               	movlw	1
 10470  099A                     u2335:	
 10471  099A  36E5               	lsrf	___fltol@f1+3,f
 10472  099B  0CE4               	rrf	___fltol@f1+2,f
 10473  099C  0CE3               	rrf	___fltol@f1+1,f
 10474  099D  0CE2               	rrf	___fltol@f1,f
 10475  099E  0B89               	decfsz	9,f
 10476  099F  299A               	goto	u2335
 10477  09A0  3001               	movlw	1
 10478  09A1  00E6               	movwf	??___fltol
 10479  09A2  0866               	movf	??___fltol,w
 10480  09A3  07EC               	addwf	___fltol@exp1,f
 10481  09A4  1903               	btfsc	3,2
 10482  09A5  29B8               	goto	l3493
 10483  09A6  2999               	goto	l3483
 10484  09A7                     l3485:	
 10485  09A7  3020               	movlw	32
 10486  09A8  026C               	subwf	___fltol@exp1,w
 10487  09A9  1803               	btfsc	3,0
 10488  09AA  296B               	goto	l3463
 10489  09AB                     l1480:	
 10490  09AB  086C               	movf	___fltol@exp1,w
 10491  09AC  1903               	btfsc	3,2
 10492  09AD  29B8               	goto	l3493
 10493  09AE  3001               	movlw	1
 10494  09AF                     u2365:	
 10495  09AF  35E2               	lslf	___fltol@f1,f
 10496  09B0  0DE3               	rlf	___fltol@f1+1,f
 10497  09B1  0DE4               	rlf	___fltol@f1+2,f
 10498  09B2  0DE5               	rlf	___fltol@f1+3,f
 10499  09B3  0B89               	decfsz	9,f
 10500  09B4  29AF               	goto	u2365
 10501  09B5  3001               	movlw	1
 10502  09B6  02EC               	subwf	___fltol@exp1,f
 10503  09B7  29AB               	goto	l1480
 10504  09B8                     l3493:	
 10505  09B8  086B               	movf	___fltol@sign1,w
 10506  09B9  1903               	btfsc	3,2
 10507  09BA  0008               	return
 10508  09BB  09E2               	comf	___fltol@f1,f
 10509  09BC  09E3               	comf	___fltol@f1+1,f
 10510  09BD  09E4               	comf	___fltol@f1+2,f
 10511  09BE  09E5               	comf	___fltol@f1+3,f
 10512  09BF  0AE2               	incf	___fltol@f1,f
 10513  09C0  1903               	skipnz
 10514  09C1  0AE3               	incf	___fltol@f1+1,f
 10515  09C2  1903               	skipnz
 10516  09C3  0AE4               	incf	___fltol@f1+2,f
 10517  09C4  1903               	skipnz
 10518  09C5  0AE5               	incf	___fltol@f1+3,f
 10519  09C6  0008               	return
 10520  09C7                     __end_of___fltol:	
 10521                           
 10522                           	psect	text21
 10523  0362                     __ptext21:	
 10524 ;; *************** function ___flmul *****************
 10525 ;; Defined at:
 10526 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 10527 ;; Parameters:    Size  Location     Type
 10528 ;;  b               4   40[BANK0 ] long 
 10529 ;;  a               4   44[BANK0 ] long 
 10530 ;; Auto vars:     Size  Location     Type
 10531 ;;  prod            4   60[BANK0 ] struct .
 10532 ;;  grs             4   55[BANK0 ] unsigned long 
 10533 ;;  temp            2   64[BANK0 ] struct .
 10534 ;;  bexp            1   59[BANK0 ] unsigned char 
 10535 ;;  aexp            1   54[BANK0 ] unsigned char 
 10536 ;;  sign            1   53[BANK0 ] unsigned char 
 10537 ;; Return value:  Size  Location     Type
 10538 ;;                  4   40[BANK0 ] unsigned char 
 10539 ;; Registers used:
 10540 ;;		wreg, status,2, status,0, pclath, cstack
 10541 ;; Tracked objects:
 10542 ;;		On entry : 0/0
 10543 ;;		On exit  : 0/0
 10544 ;;		Unchanged: 0/0
 10545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10546 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10547 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10548 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10549 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10550 ;;Total ram usage:       26 bytes
 10551 ;; Hardware stack levels used:    1
 10552 ;; Hardware stack levels required when called:    5
 10553 ;; This function calls:
 10554 ;;		__Umul8_16
 10555 ;; This function is called by:
 10556 ;;		_LED_setColor
 10557 ;;		_LED_setBrightness
 10558 ;; This function uses a non-reentrant model
 10559 ;;
 10560                           
 10561                           
 10562                           ;psect for function ___flmul
 10563  0362                     ___flmul:	
 10564                           
 10565                           ;incstack = 0
 10566                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 10567  0362  0140               	movlb	0	; select bank0
 10568  0363  084B               	movf	___flmul@b+3,w
 10569  0364  3980               	andlw	128
 10570  0365  00D0               	movwf	??___flmul
 10571  0366  0850               	movf	??___flmul,w
 10572  0367  00D5               	movwf	___flmul@sign
 10573  0368  354B               	lslf	___flmul@b+3,w
 10574  0369  00D0               	movwf	??___flmul
 10575  036A  0850               	movf	??___flmul,w
 10576  036B  00DB               	movwf	___flmul@bexp
 10577  036C  1BCA               	btfsc	___flmul@b+2,7
 10578  036D  145B               	bsf	___flmul@bexp,0
 10579  036E  085B               	movf	___flmul@bexp,w
 10580  036F  1903               	btfsc	3,2
 10581  0370  2B7E               	goto	l5053
 10582  0371  0A5B               	incf	___flmul@bexp,w
 10583  0372  1D03               	btfss	3,2
 10584  0373  2B7C               	goto	l5051
 10585  0374  3000               	movlw	0
 10586  0375  00CB               	movwf	___flmul@b+3
 10587  0376  3000               	movlw	0
 10588  0377  00CA               	movwf	___flmul@b+2
 10589  0378  3000               	movlw	0
 10590  0379  00C9               	movwf	___flmul@b+1
 10591  037A  3000               	movlw	0
 10592  037B  00C8               	movwf	___flmul@b
 10593  037C                     l5051:	
 10594  037C  17CA               	bsf	___flmul@b+2,7
 10595  037D  2B86               	goto	l5055
 10596  037E                     l5053:	
 10597  037E  3000               	movlw	0
 10598  037F  00CB               	movwf	___flmul@b+3
 10599  0380  3000               	movlw	0
 10600  0381  00CA               	movwf	___flmul@b+2
 10601  0382  3000               	movlw	0
 10602  0383  00C9               	movwf	___flmul@b+1
 10603  0384  3000               	movlw	0
 10604  0385  00C8               	movwf	___flmul@b
 10605  0386                     l5055:	
 10606  0386  084F               	movf	___flmul@a+3,w
 10607  0387  3980               	andlw	128
 10608  0388  00D0               	movwf	??___flmul
 10609  0389  0850               	movf	??___flmul,w
 10610  038A  06D5               	xorwf	___flmul@sign,f
 10611  038B  354F               	lslf	___flmul@a+3,w
 10612  038C  00D0               	movwf	??___flmul
 10613  038D  0850               	movf	??___flmul,w
 10614  038E  00D6               	movwf	___flmul@aexp
 10615  038F  1BCE               	btfsc	___flmul@a+2,7
 10616  0390  1456               	bsf	___flmul@aexp,0
 10617  0391  0856               	movf	___flmul@aexp,w
 10618  0392  1903               	btfsc	3,2
 10619  0393  2BA1               	goto	l5071
 10620  0394  0A56               	incf	___flmul@aexp,w
 10621  0395  1D03               	btfss	3,2
 10622  0396  2B9F               	goto	l5069
 10623  0397  3000               	movlw	0
 10624  0398  00CF               	movwf	___flmul@a+3
 10625  0399  3000               	movlw	0
 10626  039A  00CE               	movwf	___flmul@a+2
 10627  039B  3000               	movlw	0
 10628  039C  00CD               	movwf	___flmul@a+1
 10629  039D  3000               	movlw	0
 10630  039E  00CC               	movwf	___flmul@a
 10631  039F                     l5069:	
 10632  039F  17CE               	bsf	___flmul@a+2,7
 10633  03A0  2BA9               	goto	l5073
 10634  03A1                     l5071:	
 10635  03A1  3000               	movlw	0
 10636  03A2  00CF               	movwf	___flmul@a+3
 10637  03A3  3000               	movlw	0
 10638  03A4  00CE               	movwf	___flmul@a+2
 10639  03A5  3000               	movlw	0
 10640  03A6  00CD               	movwf	___flmul@a+1
 10641  03A7  3000               	movlw	0
 10642  03A8  00CC               	movwf	___flmul@a
 10643  03A9                     l5073:	
 10644  03A9  0856               	movf	___flmul@aexp,w
 10645  03AA  1D03               	btfss	3,2
 10646  03AB  085B               	movf	___flmul@bexp,w
 10647  03AC  1D03               	btfss	3,2
 10648  03AD  2BB7               	goto	l5081
 10649  03AE  3000               	movlw	0
 10650  03AF  00CB               	movwf	?___flmul+3
 10651  03B0  3000               	movlw	0
 10652  03B1  00CA               	movwf	?___flmul+2
 10653  03B2  3000               	movlw	0
 10654  03B3  00C9               	movwf	?___flmul+1
 10655  03B4  3000               	movlw	0
 10656  03B5  00C8               	movwf	?___flmul
 10657  03B6  0008               	return
 10658  03B7                     l5081:	
 10659  03B7  0848               	movf	___flmul@b,w
 10660  03B8  00D0               	movwf	??___flmul
 10661  03B9  0850               	movf	??___flmul,w
 10662  03BA  00A0               	movwf	__Umul8_16@multiplicand
 10663  03BB  084E               	movf	___flmul@a+2,w
 10664  03BC  3187  27E0  3183   	fcall	__Umul8_16
 10665  03BF  0140               	movlb	0	; select bank0
 10666  03C0  0821               	movf	?__Umul8_16+1,w
 10667  03C1  00E1               	movwf	___flmul@temp+1
 10668  03C2  0820               	movf	?__Umul8_16,w
 10669  03C3  00E0               	movwf	___flmul@temp
 10670  03C4  0860               	movf	___flmul@temp,w
 10671  03C5  00D0               	movwf	??___flmul
 10672  03C6  01D1               	clrf	??___flmul+1
 10673  03C7  01D2               	clrf	??___flmul+2
 10674  03C8  01D3               	clrf	??___flmul+3
 10675  03C9  0853               	movf	??___flmul+3,w
 10676  03CA  00DA               	movwf	___flmul@grs+3
 10677  03CB  0852               	movf	??___flmul+2,w
 10678  03CC  00D9               	movwf	___flmul@grs+2
 10679  03CD  0851               	movf	??___flmul+1,w
 10680  03CE  00D8               	movwf	___flmul@grs+1
 10681  03CF  0850               	movf	??___flmul,w
 10682  03D0  00D7               	movwf	___flmul@grs
 10683  03D1  0861               	movf	___flmul@temp+1,w
 10684  03D2  00D0               	movwf	??___flmul
 10685  03D3  01D1               	clrf	??___flmul+1
 10686  03D4  01D2               	clrf	??___flmul+2
 10687  03D5  01D3               	clrf	??___flmul+3
 10688  03D6  0853               	movf	??___flmul+3,w
 10689  03D7  00DF               	movwf	___flmul@prod+3
 10690  03D8  0852               	movf	??___flmul+2,w
 10691  03D9  00DE               	movwf	___flmul@prod+2
 10692  03DA  0851               	movf	??___flmul+1,w
 10693  03DB  00DD               	movwf	___flmul@prod+1
 10694  03DC  0850               	movf	??___flmul,w
 10695  03DD  00DC               	movwf	___flmul@prod
 10696  03DE  0849               	movf	___flmul@b+1,w
 10697  03DF  00D0               	movwf	??___flmul
 10698  03E0  0850               	movf	??___flmul,w
 10699  03E1  00A0               	movwf	__Umul8_16@multiplicand
 10700  03E2  084D               	movf	___flmul@a+1,w
 10701  03E3  3187  27E0  3183   	fcall	__Umul8_16
 10702  03E6  0140               	movlb	0	; select bank0
 10703  03E7  0821               	movf	?__Umul8_16+1,w
 10704  03E8  00E1               	movwf	___flmul@temp+1
 10705  03E9  0820               	movf	?__Umul8_16,w
 10706  03EA  00E0               	movwf	___flmul@temp
 10707  03EB  0860               	movf	___flmul@temp,w
 10708  03EC  00D0               	movwf	??___flmul
 10709  03ED  01D1               	clrf	??___flmul+1
 10710  03EE  01D2               	clrf	??___flmul+2
 10711  03EF  01D3               	clrf	??___flmul+3
 10712  03F0  0850               	movf	??___flmul,w
 10713  03F1  07D7               	addwf	___flmul@grs,f
 10714  03F2  0851               	movf	??___flmul+1,w
 10715  03F3  3DD8               	addwfc	___flmul@grs+1,f
 10716  03F4  0852               	movf	??___flmul+2,w
 10717  03F5  3DD9               	addwfc	___flmul@grs+2,f
 10718  03F6  0853               	movf	??___flmul+3,w
 10719  03F7  3DDA               	addwfc	___flmul@grs+3,f
 10720  03F8  0861               	movf	___flmul@temp+1,w
 10721  03F9  00D0               	movwf	??___flmul
 10722  03FA  01D1               	clrf	??___flmul+1
 10723  03FB  01D2               	clrf	??___flmul+2
 10724  03FC  01D3               	clrf	??___flmul+3
 10725  03FD  0850               	movf	??___flmul,w
 10726  03FE  07DC               	addwf	___flmul@prod,f
 10727  03FF  0851               	movf	??___flmul+1,w
 10728  0400  3DDD               	addwfc	___flmul@prod+1,f
 10729  0401  0852               	movf	??___flmul+2,w
 10730  0402  3DDE               	addwfc	___flmul@prod+2,f
 10731  0403  0853               	movf	??___flmul+3,w
 10732  0404  3DDF               	addwfc	___flmul@prod+3,f
 10733  0405  084A               	movf	___flmul@b+2,w
 10734  0406  00D0               	movwf	??___flmul
 10735  0407  0850               	movf	??___flmul,w
 10736  0408  00A0               	movwf	__Umul8_16@multiplicand
 10737  0409  084C               	movf	___flmul@a,w
 10738  040A  3187  27E0  3183   	fcall	__Umul8_16
 10739  040D  0140               	movlb	0	; select bank0
 10740  040E  0821               	movf	?__Umul8_16+1,w
 10741  040F  00E1               	movwf	___flmul@temp+1
 10742  0410  0820               	movf	?__Umul8_16,w
 10743  0411  00E0               	movwf	___flmul@temp
 10744  0412  0860               	movf	___flmul@temp,w
 10745  0413  00D0               	movwf	??___flmul
 10746  0414  01D1               	clrf	??___flmul+1
 10747  0415  01D2               	clrf	??___flmul+2
 10748  0416  01D3               	clrf	??___flmul+3
 10749  0417  0850               	movf	??___flmul,w
 10750  0418  07D7               	addwf	___flmul@grs,f
 10751  0419  0851               	movf	??___flmul+1,w
 10752  041A  3DD8               	addwfc	___flmul@grs+1,f
 10753  041B  0852               	movf	??___flmul+2,w
 10754  041C  3DD9               	addwfc	___flmul@grs+2,f
 10755  041D  0853               	movf	??___flmul+3,w
 10756  041E  3DDA               	addwfc	___flmul@grs+3,f
 10757  041F  0861               	movf	___flmul@temp+1,w
 10758  0420  00D0               	movwf	??___flmul
 10759  0421  01D1               	clrf	??___flmul+1
 10760  0422  01D2               	clrf	??___flmul+2
 10761  0423  01D3               	clrf	??___flmul+3
 10762  0424  0850               	movf	??___flmul,w
 10763  0425  07DC               	addwf	___flmul@prod,f
 10764  0426  0851               	movf	??___flmul+1,w
 10765  0427  3DDD               	addwfc	___flmul@prod+1,f
 10766  0428  0852               	movf	??___flmul+2,w
 10767  0429  3DDE               	addwfc	___flmul@prod+2,f
 10768  042A  0853               	movf	??___flmul+3,w
 10769  042B  3DDF               	addwfc	___flmul@prod+3,f
 10770  042C  3008               	movlw	8
 10771  042D                     u4605:	
 10772  042D  35D7               	lslf	___flmul@grs,f
 10773  042E  0DD8               	rlf	___flmul@grs+1,f
 10774  042F  0DD9               	rlf	___flmul@grs+2,f
 10775  0430  0DDA               	rlf	___flmul@grs+3,f
 10776  0431  0B89               	decfsz	9,f
 10777  0432  2C2D               	goto	u4605
 10778  0433  0849               	movf	___flmul@b+1,w
 10779  0434  00D0               	movwf	??___flmul
 10780  0435  0850               	movf	??___flmul,w
 10781  0436  00A0               	movwf	__Umul8_16@multiplicand
 10782  0437  084C               	movf	___flmul@a,w
 10783  0438  3187  27E0  3183   	fcall	__Umul8_16
 10784  043B  0140               	movlb	0	; select bank0
 10785  043C  0821               	movf	?__Umul8_16+1,w
 10786  043D  00E1               	movwf	___flmul@temp+1
 10787  043E  0820               	movf	?__Umul8_16,w
 10788  043F  00E0               	movwf	___flmul@temp
 10789  0440  0860               	movf	___flmul@temp,w
 10790  0441  07D7               	addwf	___flmul@grs,f
 10791  0442  0861               	movf	___flmul@temp+1,w
 10792  0443  3DD8               	addwfc	___flmul@grs+1,f
 10793  0444  3000               	movlw	0
 10794  0445  3DD9               	addwfc	___flmul@grs+2,f
 10795  0446  3DDA               	addwfc	___flmul@grs+3,f
 10796  0447  0848               	movf	___flmul@b,w
 10797  0448  00D0               	movwf	??___flmul
 10798  0449  0850               	movf	??___flmul,w
 10799  044A  00A0               	movwf	__Umul8_16@multiplicand
 10800  044B  084D               	movf	___flmul@a+1,w
 10801  044C  3187  27E0  3183   	fcall	__Umul8_16
 10802  044F  0140               	movlb	0	; select bank0
 10803  0450  0821               	movf	?__Umul8_16+1,w
 10804  0451  00E1               	movwf	___flmul@temp+1
 10805  0452  0820               	movf	?__Umul8_16,w
 10806  0453  00E0               	movwf	___flmul@temp
 10807  0454  0860               	movf	___flmul@temp,w
 10808  0455  07D7               	addwf	___flmul@grs,f
 10809  0456  0861               	movf	___flmul@temp+1,w
 10810  0457  3DD8               	addwfc	___flmul@grs+1,f
 10811  0458  3000               	movlw	0
 10812  0459  3DD9               	addwfc	___flmul@grs+2,f
 10813  045A  3DDA               	addwfc	___flmul@grs+3,f
 10814  045B  3008               	movlw	8
 10815  045C                     u4615:	
 10816  045C  35D7               	lslf	___flmul@grs,f
 10817  045D  0DD8               	rlf	___flmul@grs+1,f
 10818  045E  0DD9               	rlf	___flmul@grs+2,f
 10819  045F  0DDA               	rlf	___flmul@grs+3,f
 10820  0460  0B89               	decfsz	9,f
 10821  0461  2C5C               	goto	u4615
 10822  0462  0848               	movf	___flmul@b,w
 10823  0463  00D0               	movwf	??___flmul
 10824  0464  0850               	movf	??___flmul,w
 10825  0465  00A0               	movwf	__Umul8_16@multiplicand
 10826  0466  084C               	movf	___flmul@a,w
 10827  0467  3187  27E0  3183   	fcall	__Umul8_16
 10828  046A  0140               	movlb	0	; select bank0
 10829  046B  0821               	movf	?__Umul8_16+1,w
 10830  046C  00E1               	movwf	___flmul@temp+1
 10831  046D  0820               	movf	?__Umul8_16,w
 10832  046E  00E0               	movwf	___flmul@temp
 10833  046F  0860               	movf	___flmul@temp,w
 10834  0470  07D7               	addwf	___flmul@grs,f
 10835  0471  0861               	movf	___flmul@temp+1,w
 10836  0472  3DD8               	addwfc	___flmul@grs+1,f
 10837  0473  3000               	movlw	0
 10838  0474  3DD9               	addwfc	___flmul@grs+2,f
 10839  0475  3DDA               	addwfc	___flmul@grs+3,f
 10840  0476  0849               	movf	___flmul@b+1,w
 10841  0477  00D0               	movwf	??___flmul
 10842  0478  0850               	movf	??___flmul,w
 10843  0479  00A0               	movwf	__Umul8_16@multiplicand
 10844  047A  084E               	movf	___flmul@a+2,w
 10845  047B  3187  27E0  3183   	fcall	__Umul8_16
 10846  047E  0140               	movlb	0	; select bank0
 10847  047F  0821               	movf	?__Umul8_16+1,w
 10848  0480  00E1               	movwf	___flmul@temp+1
 10849  0481  0820               	movf	?__Umul8_16,w
 10850  0482  00E0               	movwf	___flmul@temp
 10851  0483  0860               	movf	___flmul@temp,w
 10852  0484  07DC               	addwf	___flmul@prod,f
 10853  0485  0861               	movf	___flmul@temp+1,w
 10854  0486  3DDD               	addwfc	___flmul@prod+1,f
 10855  0487  3000               	movlw	0
 10856  0488  3DDE               	addwfc	___flmul@prod+2,f
 10857  0489  3DDF               	addwfc	___flmul@prod+3,f
 10858  048A  084A               	movf	___flmul@b+2,w
 10859  048B  00D0               	movwf	??___flmul
 10860  048C  0850               	movf	??___flmul,w
 10861  048D  00A0               	movwf	__Umul8_16@multiplicand
 10862  048E  084D               	movf	___flmul@a+1,w
 10863  048F  3187  27E0  3183   	fcall	__Umul8_16
 10864  0492  0140               	movlb	0	; select bank0
 10865  0493  0821               	movf	?__Umul8_16+1,w
 10866  0494  00E1               	movwf	___flmul@temp+1
 10867  0495  0820               	movf	?__Umul8_16,w
 10868  0496  00E0               	movwf	___flmul@temp
 10869  0497  0860               	movf	___flmul@temp,w
 10870  0498  07DC               	addwf	___flmul@prod,f
 10871  0499  0861               	movf	___flmul@temp+1,w
 10872  049A  3DDD               	addwfc	___flmul@prod+1,f
 10873  049B  3000               	movlw	0
 10874  049C  3DDE               	addwfc	___flmul@prod+2,f
 10875  049D  3DDF               	addwfc	___flmul@prod+3,f
 10876  049E  084A               	movf	___flmul@b+2,w
 10877  049F  00D0               	movwf	??___flmul
 10878  04A0  0850               	movf	??___flmul,w
 10879  04A1  00A0               	movwf	__Umul8_16@multiplicand
 10880  04A2  084E               	movf	___flmul@a+2,w
 10881  04A3  3187  27E0  3183   	fcall	__Umul8_16
 10882  04A6  0140               	movlb	0	; select bank0
 10883  04A7  0821               	movf	?__Umul8_16+1,w
 10884  04A8  00E1               	movwf	___flmul@temp+1
 10885  04A9  0820               	movf	?__Umul8_16,w
 10886  04AA  00E0               	movwf	___flmul@temp
 10887  04AB  0860               	movf	___flmul@temp,w
 10888  04AC  00D0               	movwf	??___flmul
 10889  04AD  0861               	movf	___flmul@temp+1,w
 10890  04AE  00D1               	movwf	??___flmul+1
 10891  04AF  01D2               	clrf	??___flmul+2
 10892  04B0  01D3               	clrf	??___flmul+3
 10893  04B1  3008               	movlw	8
 10894  04B2                     u4625:	
 10895  04B2  35D0               	lslf	??___flmul,f
 10896  04B3  0DD1               	rlf	??___flmul+1,f
 10897  04B4  0DD2               	rlf	??___flmul+2,f
 10898  04B5  0DD3               	rlf	??___flmul+3,f
 10899  04B6  0B89               	decfsz	9,f
 10900  04B7  2CB2               	goto	u4625
 10901  04B8  0850               	movf	??___flmul,w
 10902  04B9  07DC               	addwf	___flmul@prod,f
 10903  04BA  0851               	movf	??___flmul+1,w
 10904  04BB  3DDD               	addwfc	___flmul@prod+1,f
 10905  04BC  0852               	movf	??___flmul+2,w
 10906  04BD  3DDE               	addwfc	___flmul@prod+2,f
 10907  04BE  0853               	movf	??___flmul+3,w
 10908  04BF  3DDF               	addwfc	___flmul@prod+3,f
 10909  04C0  0857               	movf	___flmul@grs,w
 10910  04C1  00D0               	movwf	??___flmul
 10911  04C2  0858               	movf	___flmul@grs+1,w
 10912  04C3  00D1               	movwf	??___flmul+1
 10913  04C4  0859               	movf	___flmul@grs+2,w
 10914  04C5  00D2               	movwf	??___flmul+2
 10915  04C6  085A               	movf	___flmul@grs+3,w
 10916  04C7  00D3               	movwf	??___flmul+3
 10917  04C8  3018               	movlw	24
 10918  04C9                     u4635:	
 10919  04C9  36D3               	lsrf	??___flmul+3,f
 10920  04CA  0CD2               	rrf	??___flmul+2,f
 10921  04CB  0CD1               	rrf	??___flmul+1,f
 10922  04CC  0CD0               	rrf	??___flmul,f
 10923  04CD  0B89               	decfsz	9,f
 10924  04CE  2CC9               	goto	u4635
 10925  04CF  0850               	movf	??___flmul,w
 10926  04D0  07DC               	addwf	___flmul@prod,f
 10927  04D1  0851               	movf	??___flmul+1,w
 10928  04D2  3DDD               	addwfc	___flmul@prod+1,f
 10929  04D3  0852               	movf	??___flmul+2,w
 10930  04D4  3DDE               	addwfc	___flmul@prod+2,f
 10931  04D5  0853               	movf	??___flmul+3,w
 10932  04D6  3DDF               	addwfc	___flmul@prod+3,f
 10933  04D7  3008               	movlw	8
 10934  04D8                     u4645:	
 10935  04D8  35D7               	lslf	___flmul@grs,f
 10936  04D9  0DD8               	rlf	___flmul@grs+1,f
 10937  04DA  0DD9               	rlf	___flmul@grs+2,f
 10938  04DB  0DDA               	rlf	___flmul@grs+3,f
 10939  04DC  0B89               	decfsz	9,f
 10940  04DD  2CD8               	goto	u4645
 10941  04DE  085B               	movf	___flmul@bexp,w
 10942  04DF  0756               	addwf	___flmul@aexp,w
 10943  04E0  00D0               	movwf	??___flmul
 10944  04E1  01D1               	clrf	??___flmul+1
 10945  04E2  0DD1               	rlf	??___flmul+1,f
 10946  04E3  0850               	movf	??___flmul,w
 10947  04E4  3E82               	addlw	130
 10948  04E5  00E0               	movwf	___flmul@temp
 10949  04E6  30FF               	movlw	255
 10950  04E7  3D51               	addwfc	??___flmul+1,w
 10951  04E8  00E1               	movwf	___flmul@temp+1
 10952  04E9                     l5133:	
 10953  04E9  1BDE               	btfsc	___flmul@prod+2,7
 10954  04EA  2D00               	goto	l5135
 10955  04EB  3001               	movlw	1
 10956  04EC                     u4655:	
 10957  04EC  35DC               	lslf	___flmul@prod,f
 10958  04ED  0DDD               	rlf	___flmul@prod+1,f
 10959  04EE  0DDE               	rlf	___flmul@prod+2,f
 10960  04EF  0DDF               	rlf	___flmul@prod+3,f
 10961  04F0  0B89               	decfsz	9,f
 10962  04F1  2CEC               	goto	u4655
 10963  04F2  1BDA               	btfsc	___flmul@grs+3,7
 10964  04F3  145C               	bsf	___flmul@prod,0
 10965  04F4  3001               	movlw	1
 10966  04F5                     u4675:	
 10967  04F5  35D7               	lslf	___flmul@grs,f
 10968  04F6  0DD8               	rlf	___flmul@grs+1,f
 10969  04F7  0DD9               	rlf	___flmul@grs+2,f
 10970  04F8  0DDA               	rlf	___flmul@grs+3,f
 10971  04F9  0B89               	decfsz	9,f
 10972  04FA  2CF5               	goto	u4675
 10973  04FB  30FF               	movlw	255
 10974  04FC  07E0               	addwf	___flmul@temp,f
 10975  04FD  30FF               	movlw	255
 10976  04FE  3DE1               	addwfc	___flmul@temp+1,f
 10977  04FF  2CE9               	goto	l5133
 10978  0500                     l5135:	
 10979  0500  01D6               	clrf	___flmul@aexp
 10980  0501  1FDA               	btfss	___flmul@grs+3,7
 10981  0502  2D19               	goto	l5145
 10982  0503  30FF               	movlw	255
 10983  0504  0557               	andwf	___flmul@grs,w
 10984  0505  00D0               	movwf	??___flmul
 10985  0506  30FF               	movlw	255
 10986  0507  0558               	andwf	___flmul@grs+1,w
 10987  0508  00D1               	movwf	??___flmul+1
 10988  0509  30FF               	movlw	255
 10989  050A  0559               	andwf	___flmul@grs+2,w
 10990  050B  00D2               	movwf	??___flmul+2
 10991  050C  307F               	movlw	127
 10992  050D  055A               	andwf	___flmul@grs+3,w
 10993  050E  00D3               	movwf	??___flmul+3
 10994  050F  0853               	movf	??___flmul+3,w
 10995  0510  0452               	iorwf	??___flmul+2,w
 10996  0511  0451               	iorwf	??___flmul+1,w
 10997  0512  0450               	iorwf	??___flmul,w
 10998  0513  1903               	skipnz
 10999  0514  185C               	btfsc	___flmul@prod,0
 11000  0515  2D17               	goto	l5141
 11001  0516  2D19               	goto	l5145
 11002  0517                     l5141:	
 11003  0517  01D6               	clrf	___flmul@aexp
 11004  0518  0AD6               	incf	___flmul@aexp,f
 11005  0519                     l5145:	
 11006  0519  0856               	movf	___flmul@aexp,w
 11007  051A  1903               	btfsc	3,2
 11008  051B  2D42               	goto	l5155
 11009  051C  3001               	movlw	1
 11010  051D  07DC               	addwf	___flmul@prod,f
 11011  051E  3000               	movlw	0
 11012  051F  3DDD               	addwfc	___flmul@prod+1,f
 11013  0520  3000               	movlw	0
 11014  0521  3DDE               	addwfc	___flmul@prod+2,f
 11015  0522  3000               	movlw	0
 11016  0523  3DDF               	addwfc	___flmul@prod+3,f
 11017  0524  1C5F               	btfss	___flmul@prod+3,0
 11018  0525  2D42               	goto	l5155
 11019  0526  085C               	movf	___flmul@prod,w
 11020  0527  00D0               	movwf	??___flmul
 11021  0528  085D               	movf	___flmul@prod+1,w
 11022  0529  00D1               	movwf	??___flmul+1
 11023  052A  085E               	movf	___flmul@prod+2,w
 11024  052B  00D2               	movwf	??___flmul+2
 11025  052C  085F               	movf	___flmul@prod+3,w
 11026  052D  00D3               	movwf	??___flmul+3
 11027  052E  3001               	movlw	1
 11028  052F  00D4               	movwf	??___flmul+4
 11029  0530                     u4745:	
 11030  0530  37D3               	asrf	??___flmul+3,f
 11031  0531  0CD2               	rrf	??___flmul+2,f
 11032  0532  0CD1               	rrf	??___flmul+1,f
 11033  0533  0CD0               	rrf	??___flmul,f
 11034  0534  0BD4               	decfsz	??___flmul+4,f
 11035  0535  2D30               	goto	u4745
 11036  0536  0853               	movf	??___flmul+3,w
 11037  0537  00DF               	movwf	___flmul@prod+3
 11038  0538  0852               	movf	??___flmul+2,w
 11039  0539  00DE               	movwf	___flmul@prod+2
 11040  053A  0851               	movf	??___flmul+1,w
 11041  053B  00DD               	movwf	___flmul@prod+1
 11042  053C  0850               	movf	??___flmul,w
 11043  053D  00DC               	movwf	___flmul@prod
 11044  053E  3001               	movlw	1
 11045  053F  07E0               	addwf	___flmul@temp,f
 11046  0540  3000               	movlw	0
 11047  0541  3DE1               	addwfc	___flmul@temp+1,f
 11048  0542                     l5155:	
 11049  0542  0861               	movf	___flmul@temp+1,w
 11050  0543  3A80               	xorlw	128
 11051  0544  00D0               	movwf	??___flmul
 11052  0545  3080               	movlw	128
 11053  0546  0250               	subwf	??___flmul,w
 11054  0547  1D03               	skipz
 11055  0548  2D4B               	goto	u4755
 11056  0549  30FF               	movlw	255
 11057  054A  0260               	subwf	___flmul@temp,w
 11058  054B                     u4755:	
 11059  054B  1C03               	skipc
 11060  054C  2D57               	goto	l5159
 11061  054D  307F               	movlw	127
 11062  054E  0140               	movlb	0	; select bank0
 11063  054F  00DF               	movwf	___flmul@prod+3
 11064  0550  3080               	movlw	128
 11065  0551  00DE               	movwf	___flmul@prod+2
 11066  0552  3000               	movlw	0
 11067  0553  00DD               	movwf	___flmul@prod+1
 11068  0554  3000               	movlw	0
 11069  0555  00DC               	movwf	___flmul@prod
 11070  0556  2D81               	goto	l1688
 11071  0557                     l5159:	
 11072  0557  0140               	movlb	0	; select bank0
 11073  0558  0861               	movf	___flmul@temp+1,w
 11074  0559  3A80               	xorlw	128
 11075  055A  00D0               	movwf	??___flmul
 11076  055B  3080               	movlw	128
 11077  055C  0250               	subwf	??___flmul,w
 11078  055D  1D03               	skipz
 11079  055E  2D61               	goto	u4765
 11080  055F  3001               	movlw	1
 11081  0560  0260               	subwf	___flmul@temp,w
 11082  0561                     u4765:	
 11083  0561  1803               	skipnc
 11084  0562  2D6E               	goto	l5165
 11085  0563  3000               	movlw	0
 11086  0564  0140               	movlb	0	; select bank0
 11087  0565  00DF               	movwf	___flmul@prod+3
 11088  0566  3000               	movlw	0
 11089  0567  00DE               	movwf	___flmul@prod+2
 11090  0568  3000               	movlw	0
 11091  0569  00DD               	movwf	___flmul@prod+1
 11092  056A  3000               	movlw	0
 11093  056B  00DC               	movwf	___flmul@prod
 11094  056C  01D5               	clrf	___flmul@sign
 11095  056D  2D81               	goto	l1688
 11096  056E                     l5165:	
 11097  056E  0140               	movlb	0	; select bank0
 11098  056F  0860               	movf	___flmul@temp,w
 11099  0570  00D0               	movwf	??___flmul
 11100  0571  0850               	movf	??___flmul,w
 11101  0572  00DB               	movwf	___flmul@bexp
 11102  0573  30FF               	movlw	255
 11103  0574  05DC               	andwf	___flmul@prod,f
 11104  0575  30FF               	movlw	255
 11105  0576  05DD               	andwf	___flmul@prod+1,f
 11106  0577  307F               	movlw	127
 11107  0578  05DE               	andwf	___flmul@prod+2,f
 11108  0579  3000               	movlw	0
 11109  057A  05DF               	andwf	___flmul@prod+3,f
 11110  057B  185B               	btfsc	___flmul@bexp,0
 11111  057C  17DE               	bsf	___flmul@prod+2,7
 11112  057D  365B               	lsrf	___flmul@bexp,w
 11113  057E  00D0               	movwf	??___flmul
 11114  057F  0850               	movf	??___flmul,w
 11115  0580  00DF               	movwf	___flmul@prod+3
 11116  0581                     l1688:	
 11117  0581  0855               	movf	___flmul@sign,w
 11118  0582  00D0               	movwf	??___flmul
 11119  0583  0850               	movf	??___flmul,w
 11120  0584  04DF               	iorwf	___flmul@prod+3,f
 11121  0585  085F               	movf	___flmul@prod+3,w
 11122  0586  00CB               	movwf	?___flmul+3
 11123  0587  085E               	movf	___flmul@prod+2,w
 11124  0588  00CA               	movwf	?___flmul+2
 11125  0589  085D               	movf	___flmul@prod+1,w
 11126  058A  00C9               	movwf	?___flmul+1
 11127  058B  085C               	movf	___flmul@prod,w
 11128  058C  00C8               	movwf	?___flmul
 11129  058D  0008               	return
 11130  058E                     __end_of___flmul:	
 11131                           
 11132                           	psect	text22
 11133  07E0                     __ptext22:	
 11134 ;; *************** function __Umul8_16 *****************
 11135 ;; Defined at:
 11136 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 11137 ;; Parameters:    Size  Location     Type
 11138 ;;  multiplier      1    wreg     unsigned char 
 11139 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 11140 ;; Auto vars:     Size  Location     Type
 11141 ;;  multiplier      1    8[BANK0 ] unsigned char 
 11142 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 11143 ;;  product         2    4[BANK0 ] unsigned int 
 11144 ;; Return value:  Size  Location     Type
 11145 ;;                  2    0[BANK0 ] unsigned int 
 11146 ;; Registers used:
 11147 ;;		wreg, status,2, status,0
 11148 ;; Tracked objects:
 11149 ;;		On entry : 0/0
 11150 ;;		On exit  : 0/0
 11151 ;;		Unchanged: 0/0
 11152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11153 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11154 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11155 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11156 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11157 ;;Total ram usage:        9 bytes
 11158 ;; Hardware stack levels used:    1
 11159 ;; Hardware stack levels required when called:    4
 11160 ;; This function calls:
 11161 ;;		Nothing
 11162 ;; This function is called by:
 11163 ;;		___flmul
 11164 ;; This function uses a non-reentrant model
 11165 ;;
 11166                           
 11167                           
 11168                           ;psect for function __Umul8_16
 11169  07E0                     __Umul8_16:	
 11170                           
 11171                           ;incstack = 0
 11172                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11173                           ;__Umul8_16@multiplier stored from wreg
 11174  07E0  0140               	movlb	0	; select bank0
 11175  07E1  00A8               	movwf	__Umul8_16@multiplier
 11176  07E2  01A4               	clrf	__Umul8_16@product
 11177  07E3  01A5               	clrf	__Umul8_16@product+1
 11178  07E4  0820               	movf	__Umul8_16@multiplicand,w
 11179  07E5  00A2               	movwf	??__Umul8_16
 11180  07E6  01A3               	clrf	??__Umul8_16+1
 11181  07E7  0822               	movf	??__Umul8_16,w
 11182  07E8  00A6               	movwf	__Umul8_16@word_mpld
 11183  07E9  0823               	movf	??__Umul8_16+1,w
 11184  07EA  00A7               	movwf	__Umul8_16@word_mpld+1
 11185  07EB                     l4983:	
 11186  07EB  1C28               	btfss	__Umul8_16@multiplier,0
 11187  07EC  2FF1               	goto	l1733
 11188  07ED  0826               	movf	__Umul8_16@word_mpld,w
 11189  07EE  07A4               	addwf	__Umul8_16@product,f
 11190  07EF  0827               	movf	__Umul8_16@word_mpld+1,w
 11191  07F0  3DA5               	addwfc	__Umul8_16@product+1,f
 11192  07F1                     l1733:	
 11193  07F1  3001               	movlw	1
 11194  07F2                     u4435:	
 11195  07F2  35A6               	lslf	__Umul8_16@word_mpld,f
 11196  07F3  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 11197  07F4  0B89               	decfsz	9,f
 11198  07F5  2FF2               	goto	u4435
 11199  07F6  1003               	clrc
 11200  07F7  0CA8               	rrf	__Umul8_16@multiplier,f
 11201  07F8  0828               	movf	__Umul8_16@multiplier,w
 11202  07F9  1D03               	btfss	3,2
 11203  07FA  2FEB               	goto	l4983
 11204  07FB  0825               	movf	__Umul8_16@product+1,w
 11205  07FC  00A1               	movwf	?__Umul8_16+1
 11206  07FD  0824               	movf	__Umul8_16@product,w
 11207  07FE  00A0               	movwf	?__Umul8_16
 11208  07FF  0008               	return
 11209  0800                     __end_of__Umul8_16:	
 11210                           
 11211                           	psect	text23
 11212  058E                     __ptext23:	
 11213 ;; *************** function ___fldiv *****************
 11214 ;; Defined at:
 11215 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 11216 ;; Parameters:    Size  Location     Type
 11217 ;;  a               4   14[BANK0 ] unsigned int 
 11218 ;;  b               4   18[BANK0 ] unsigned int 
 11219 ;; Auto vars:     Size  Location     Type
 11220 ;;  grs             4   34[BANK0 ] unsigned long 
 11221 ;;  rem             4   27[BANK0 ] unsigned long 
 11222 ;;  new_exp         2   32[BANK0 ] int 
 11223 ;;  aexp            1   39[BANK0 ] unsigned char 
 11224 ;;  bexp            1   38[BANK0 ] unsigned char 
 11225 ;;  sign            1   31[BANK0 ] unsigned char 
 11226 ;; Return value:  Size  Location     Type
 11227 ;;                  4   14[BANK0 ] unsigned char 
 11228 ;; Registers used:
 11229 ;;		wreg, status,2, status,0
 11230 ;; Tracked objects:
 11231 ;;		On entry : 0/0
 11232 ;;		On exit  : 0/0
 11233 ;;		Unchanged: 0/0
 11234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11235 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11236 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11237 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11238 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11239 ;;Total ram usage:       26 bytes
 11240 ;; Hardware stack levels used:    1
 11241 ;; Hardware stack levels required when called:    4
 11242 ;; This function calls:
 11243 ;;		Nothing
 11244 ;; This function is called by:
 11245 ;;		_LED_setColor
 11246 ;;		_LED_setBrightness
 11247 ;; This function uses a non-reentrant model
 11248 ;;
 11249                           
 11250                           
 11251                           ;psect for function ___fldiv
 11252  058E                     ___fldiv:	
 11253                           
 11254                           ;incstack = 0
 11255                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 11256  058E  0140               	movlb	0	; select bank0
 11257  058F  0835               	movf	___fldiv@b+3,w
 11258  0590  3980               	andlw	128
 11259  0591  00B6               	movwf	??___fldiv
 11260  0592  0836               	movf	??___fldiv,w
 11261  0593  00BF               	movwf	___fldiv@sign
 11262  0594  3535               	lslf	___fldiv@b+3,w
 11263  0595  00B6               	movwf	??___fldiv
 11264  0596  0836               	movf	??___fldiv,w
 11265  0597  00C6               	movwf	___fldiv@bexp
 11266  0598  1BB4               	btfsc	___fldiv@b+2,7
 11267  0599  1446               	bsf	___fldiv@bexp,0
 11268  059A  0846               	movf	___fldiv@bexp,w
 11269  059B  1903               	btfsc	3,2
 11270  059C  2DAB               	goto	l3563
 11271  059D  0A46               	incf	___fldiv@bexp,w
 11272  059E  1D03               	btfss	3,2
 11273  059F  2DA8               	goto	l3559
 11274  05A0  3000               	movlw	0
 11275  05A1  00B5               	movwf	___fldiv@b+3
 11276  05A2  3000               	movlw	0
 11277  05A3  00B4               	movwf	___fldiv@b+2
 11278  05A4  3000               	movlw	0
 11279  05A5  00B3               	movwf	___fldiv@b+1
 11280  05A6  3000               	movlw	0
 11281  05A7  00B2               	movwf	___fldiv@b
 11282  05A8                     l3559:	
 11283  05A8  17B4               	bsf	___fldiv@b+2,7
 11284  05A9  01B5               	clrf	___fldiv@b+3
 11285  05AA  2DB3               	goto	l3565
 11286  05AB                     l3563:	
 11287  05AB  3000               	movlw	0
 11288  05AC  00B5               	movwf	___fldiv@b+3
 11289  05AD  3000               	movlw	0
 11290  05AE  00B4               	movwf	___fldiv@b+2
 11291  05AF  3000               	movlw	0
 11292  05B0  00B3               	movwf	___fldiv@b+1
 11293  05B1  3000               	movlw	0
 11294  05B2  00B2               	movwf	___fldiv@b
 11295  05B3                     l3565:	
 11296  05B3  0831               	movf	___fldiv@a+3,w
 11297  05B4  3980               	andlw	128
 11298  05B5  00B6               	movwf	??___fldiv
 11299  05B6  0836               	movf	??___fldiv,w
 11300  05B7  06BF               	xorwf	___fldiv@sign,f
 11301  05B8  3531               	lslf	___fldiv@a+3,w
 11302  05B9  00B6               	movwf	??___fldiv
 11303  05BA  0836               	movf	??___fldiv,w
 11304  05BB  00C7               	movwf	___fldiv@aexp
 11305  05BC  1BB0               	btfsc	___fldiv@a+2,7
 11306  05BD  1447               	bsf	___fldiv@aexp,0
 11307  05BE  0847               	movf	___fldiv@aexp,w
 11308  05BF  1903               	btfsc	3,2
 11309  05C0  2DCF               	goto	l3583
 11310  05C1  0A47               	incf	___fldiv@aexp,w
 11311  05C2  1D03               	btfss	3,2
 11312  05C3  2DCC               	goto	l3579
 11313  05C4  3000               	movlw	0
 11314  05C5  00B1               	movwf	___fldiv@a+3
 11315  05C6  3000               	movlw	0
 11316  05C7  00B0               	movwf	___fldiv@a+2
 11317  05C8  3000               	movlw	0
 11318  05C9  00AF               	movwf	___fldiv@a+1
 11319  05CA  3000               	movlw	0
 11320  05CB  00AE               	movwf	___fldiv@a
 11321  05CC                     l3579:	
 11322  05CC  17B0               	bsf	___fldiv@a+2,7
 11323  05CD  01B1               	clrf	___fldiv@a+3
 11324  05CE  2DD7               	goto	l1636
 11325  05CF                     l3583:	
 11326  05CF  3000               	movlw	0
 11327  05D0  00B1               	movwf	___fldiv@a+3
 11328  05D1  3000               	movlw	0
 11329  05D2  00B0               	movwf	___fldiv@a+2
 11330  05D3  3000               	movlw	0
 11331  05D4  00AF               	movwf	___fldiv@a+1
 11332  05D5  3000               	movlw	0
 11333  05D6  00AE               	movwf	___fldiv@a
 11334  05D7                     l1636:	
 11335  05D7  0831               	movf	___fldiv@a+3,w
 11336  05D8  0430               	iorwf	___fldiv@a+2,w
 11337  05D9  042F               	iorwf	___fldiv@a+1,w
 11338  05DA  042E               	iorwf	___fldiv@a,w
 11339  05DB  1D03               	skipz
 11340  05DC  2DF6               	goto	l3593
 11341  05DD  3000               	movlw	0
 11342  05DE  00B5               	movwf	___fldiv@b+3
 11343  05DF  3000               	movlw	0
 11344  05E0  00B4               	movwf	___fldiv@b+2
 11345  05E1  3000               	movlw	0
 11346  05E2  00B3               	movwf	___fldiv@b+1
 11347  05E3  3000               	movlw	0
 11348  05E4  00B2               	movwf	___fldiv@b
 11349  05E5  3080               	movlw	128
 11350  05E6  04B4               	iorwf	___fldiv@b+2,f
 11351  05E7  307F               	movlw	127
 11352  05E8  04B5               	iorwf	___fldiv@b+3,f
 11353  05E9                     L1:	
 11354  05E9  083F               	movf	___fldiv@sign,w
 11355  05EA  00B6               	movwf	??___fldiv
 11356  05EB  0836               	movf	??___fldiv,w
 11357  05EC  04B5               	iorwf	___fldiv@b+3,f
 11358  05ED  0835               	movf	___fldiv@b+3,w
 11359  05EE  00B1               	movwf	?___fldiv+3
 11360  05EF  0834               	movf	___fldiv@b+2,w
 11361  05F0  00B0               	movwf	?___fldiv+2
 11362  05F1  0833               	movf	___fldiv@b+1,w
 11363  05F2  00AF               	movwf	?___fldiv+1
 11364  05F3  0832               	movf	___fldiv@b,w
 11365  05F4  00AE               	movwf	?___fldiv
 11366  05F5  0008               	return
 11367  05F6                     l3593:	
 11368  05F6  0846               	movf	___fldiv@bexp,w
 11369  05F7  1D03               	btfss	3,2
 11370  05F8  2E02               	goto	l3599
 11371  05F9  3000               	movlw	0
 11372  05FA  00B1               	movwf	?___fldiv+3
 11373  05FB  3000               	movlw	0
 11374  05FC  00B0               	movwf	?___fldiv+2
 11375  05FD  3000               	movlw	0
 11376  05FE  00AF               	movwf	?___fldiv+1
 11377  05FF  3000               	movlw	0
 11378  0600  00AE               	movwf	?___fldiv
 11379  0601  0008               	return
 11380  0602                     l3599:	
 11381  0602  0846               	movf	___fldiv@bexp,w
 11382  0603  00B6               	movwf	??___fldiv
 11383  0604  01B7               	clrf	??___fldiv+1
 11384  0605  0837               	movf	??___fldiv+1,w
 11385  0606  00B9               	movwf	??___fldiv+3
 11386  0607  0847               	movf	___fldiv@aexp,w
 11387  0608  0236               	subwf	??___fldiv,w
 11388  0609  00B8               	movwf	??___fldiv+2
 11389  060A  1C03               	skipc
 11390  060B  03B9               	decf	??___fldiv+3,f
 11391  060C  0838               	movf	??___fldiv+2,w
 11392  060D  3E7F               	addlw	127
 11393  060E  00C0               	movwf	___fldiv@new_exp
 11394  060F  3000               	movlw	0
 11395  0610  3D39               	addwfc	??___fldiv+3,w
 11396  0611  00C1               	movwf	___fldiv@new_exp+1
 11397  0612  0835               	movf	___fldiv@b+3,w
 11398  0613  00BE               	movwf	___fldiv@rem+3
 11399  0614  0834               	movf	___fldiv@b+2,w
 11400  0615  00BD               	movwf	___fldiv@rem+2
 11401  0616  0833               	movf	___fldiv@b+1,w
 11402  0617  00BC               	movwf	___fldiv@rem+1
 11403  0618  0832               	movf	___fldiv@b,w
 11404  0619  00BB               	movwf	___fldiv@rem
 11405  061A  3000               	movlw	0
 11406  061B  00B5               	movwf	___fldiv@b+3
 11407  061C  3000               	movlw	0
 11408  061D  00B4               	movwf	___fldiv@b+2
 11409  061E  3000               	movlw	0
 11410  061F  00B3               	movwf	___fldiv@b+1
 11411  0620  3000               	movlw	0
 11412  0621  00B2               	movwf	___fldiv@b
 11413  0622  3000               	movlw	0
 11414  0623  00C5               	movwf	___fldiv@grs+3
 11415  0624  3000               	movlw	0
 11416  0625  00C4               	movwf	___fldiv@grs+2
 11417  0626  3000               	movlw	0
 11418  0627  00C3               	movwf	___fldiv@grs+1
 11419  0628  3000               	movlw	0
 11420  0629  00C2               	movwf	___fldiv@grs
 11421  062A  01C7               	clrf	___fldiv@aexp
 11422  062B                     l3627:	
 11423  062B  301A               	movlw	26
 11424  062C  0247               	subwf	___fldiv@aexp,w
 11425  062D  1803               	btfsc	3,0
 11426  062E  2E67               	goto	l3629
 11427  062F  0847               	movf	___fldiv@aexp,w
 11428  0630  1903               	btfsc	3,2
 11429  0631  2E49               	goto	l3619
 11430  0632  3001               	movlw	1
 11431  0633                     u2615:	
 11432  0633  35BB               	lslf	___fldiv@rem,f
 11433  0634  0DBC               	rlf	___fldiv@rem+1,f
 11434  0635  0DBD               	rlf	___fldiv@rem+2,f
 11435  0636  0DBE               	rlf	___fldiv@rem+3,f
 11436  0637  0B89               	decfsz	9,f
 11437  0638  2E33               	goto	u2615
 11438  0639  3001               	movlw	1
 11439  063A                     u2625:	
 11440  063A  35B2               	lslf	___fldiv@b,f
 11441  063B  0DB3               	rlf	___fldiv@b+1,f
 11442  063C  0DB4               	rlf	___fldiv@b+2,f
 11443  063D  0DB5               	rlf	___fldiv@b+3,f
 11444  063E  0B89               	decfsz	9,f
 11445  063F  2E3A               	goto	u2625
 11446  0640  1BC5               	btfsc	___fldiv@grs+3,7
 11447  0641  1432               	bsf	___fldiv@b,0
 11448  0642  3001               	movlw	1
 11449  0643                     u2645:	
 11450  0643  35C2               	lslf	___fldiv@grs,f
 11451  0644  0DC3               	rlf	___fldiv@grs+1,f
 11452  0645  0DC4               	rlf	___fldiv@grs+2,f
 11453  0646  0DC5               	rlf	___fldiv@grs+3,f
 11454  0647  0B89               	decfsz	9,f
 11455  0648  2E43               	goto	u2645
 11456  0649                     l3619:	
 11457  0649  0831               	movf	___fldiv@a+3,w
 11458  064A  023E               	subwf	___fldiv@rem+3,w
 11459  064B  1D03               	skipz
 11460  064C  2E57               	goto	u2655
 11461  064D  0830               	movf	___fldiv@a+2,w
 11462  064E  023D               	subwf	___fldiv@rem+2,w
 11463  064F  1D03               	skipz
 11464  0650  2E57               	goto	u2655
 11465  0651  082F               	movf	___fldiv@a+1,w
 11466  0652  023C               	subwf	___fldiv@rem+1,w
 11467  0653  1D03               	skipz
 11468  0654  2E57               	goto	u2655
 11469  0655  082E               	movf	___fldiv@a,w
 11470  0656  023B               	subwf	___fldiv@rem,w
 11471  0657                     u2655:	
 11472  0657  1C03               	skipc
 11473  0658  2E62               	goto	l3625
 11474  0659  1745               	bsf	___fldiv@grs+3,6
 11475  065A  082E               	movf	___fldiv@a,w
 11476  065B  02BB               	subwf	___fldiv@rem,f
 11477  065C  082F               	movf	___fldiv@a+1,w
 11478  065D  3BBC               	subwfb	___fldiv@rem+1,f
 11479  065E  0830               	movf	___fldiv@a+2,w
 11480  065F  3BBD               	subwfb	___fldiv@rem+2,f
 11481  0660  0831               	movf	___fldiv@a+3,w
 11482  0661  3BBE               	subwfb	___fldiv@rem+3,f
 11483  0662                     l3625:	
 11484  0662  3001               	movlw	1
 11485  0663  00B6               	movwf	??___fldiv
 11486  0664  0836               	movf	??___fldiv,w
 11487  0665  07C7               	addwf	___fldiv@aexp,f
 11488  0666  2E2B               	goto	l3627
 11489  0667                     l3629:	
 11490  0667  083E               	movf	___fldiv@rem+3,w
 11491  0668  043D               	iorwf	___fldiv@rem+2,w
 11492  0669  043C               	iorwf	___fldiv@rem+1,w
 11493  066A  043B               	iorwf	___fldiv@rem,w
 11494  066B  1D03               	btfss	3,2
 11495  066C  1442               	bsf	___fldiv@grs,0
 11496  066D                     l3643:	
 11497  066D  1BB4               	btfsc	___fldiv@b+2,7
 11498  066E  2E84               	goto	l3645
 11499  066F  3001               	movlw	1
 11500  0670                     u2685:	
 11501  0670  35B2               	lslf	___fldiv@b,f
 11502  0671  0DB3               	rlf	___fldiv@b+1,f
 11503  0672  0DB4               	rlf	___fldiv@b+2,f
 11504  0673  0DB5               	rlf	___fldiv@b+3,f
 11505  0674  0B89               	decfsz	9,f
 11506  0675  2E70               	goto	u2685
 11507  0676  1BC5               	btfsc	___fldiv@grs+3,7
 11508  0677  1432               	bsf	___fldiv@b,0
 11509  0678  3001               	movlw	1
 11510  0679                     u2705:	
 11511  0679  35C2               	lslf	___fldiv@grs,f
 11512  067A  0DC3               	rlf	___fldiv@grs+1,f
 11513  067B  0DC4               	rlf	___fldiv@grs+2,f
 11514  067C  0DC5               	rlf	___fldiv@grs+3,f
 11515  067D  0B89               	decfsz	9,f
 11516  067E  2E79               	goto	u2705
 11517  067F  30FF               	movlw	255
 11518  0680  07C0               	addwf	___fldiv@new_exp,f
 11519  0681  30FF               	movlw	255
 11520  0682  3DC1               	addwfc	___fldiv@new_exp+1,f
 11521  0683  2E6D               	goto	l3643
 11522  0684                     l3645:	
 11523  0684  01C7               	clrf	___fldiv@aexp
 11524  0685  1FC5               	btfss	___fldiv@grs+3,7
 11525  0686  2E9D               	goto	l3655
 11526  0687  30FF               	movlw	255
 11527  0688  0542               	andwf	___fldiv@grs,w
 11528  0689  00B6               	movwf	??___fldiv
 11529  068A  30FF               	movlw	255
 11530  068B  0543               	andwf	___fldiv@grs+1,w
 11531  068C  00B7               	movwf	??___fldiv+1
 11532  068D  30FF               	movlw	255
 11533  068E  0544               	andwf	___fldiv@grs+2,w
 11534  068F  00B8               	movwf	??___fldiv+2
 11535  0690  307F               	movlw	127
 11536  0691  0545               	andwf	___fldiv@grs+3,w
 11537  0692  00B9               	movwf	??___fldiv+3
 11538  0693  0839               	movf	??___fldiv+3,w
 11539  0694  0438               	iorwf	??___fldiv+2,w
 11540  0695  0437               	iorwf	??___fldiv+1,w
 11541  0696  0436               	iorwf	??___fldiv,w
 11542  0697  1903               	skipnz
 11543  0698  1832               	btfsc	___fldiv@b,0
 11544  0699  2E9B               	goto	l3651
 11545  069A  2E9D               	goto	l3655
 11546  069B                     l3651:	
 11547  069B  01C7               	clrf	___fldiv@aexp
 11548  069C  0AC7               	incf	___fldiv@aexp,f
 11549  069D                     l3655:	
 11550  069D  0847               	movf	___fldiv@aexp,w
 11551  069E  1903               	btfsc	3,2
 11552  069F  2EC6               	goto	l3665
 11553  06A0  3001               	movlw	1
 11554  06A1  07B2               	addwf	___fldiv@b,f
 11555  06A2  3000               	movlw	0
 11556  06A3  3DB3               	addwfc	___fldiv@b+1,f
 11557  06A4  3000               	movlw	0
 11558  06A5  3DB4               	addwfc	___fldiv@b+2,f
 11559  06A6  3000               	movlw	0
 11560  06A7  3DB5               	addwfc	___fldiv@b+3,f
 11561  06A8  1C35               	btfss	___fldiv@b+3,0
 11562  06A9  2EC6               	goto	l3665
 11563  06AA  0832               	movf	___fldiv@b,w
 11564  06AB  00B6               	movwf	??___fldiv
 11565  06AC  0833               	movf	___fldiv@b+1,w
 11566  06AD  00B7               	movwf	??___fldiv+1
 11567  06AE  0834               	movf	___fldiv@b+2,w
 11568  06AF  00B8               	movwf	??___fldiv+2
 11569  06B0  0835               	movf	___fldiv@b+3,w
 11570  06B1  00B9               	movwf	??___fldiv+3
 11571  06B2  3001               	movlw	1
 11572  06B3  00BA               	movwf	??___fldiv+4
 11573  06B4                     u2775:	
 11574  06B4  37B9               	asrf	??___fldiv+3,f
 11575  06B5  0CB8               	rrf	??___fldiv+2,f
 11576  06B6  0CB7               	rrf	??___fldiv+1,f
 11577  06B7  0CB6               	rrf	??___fldiv,f
 11578  06B8  0BBA               	decfsz	??___fldiv+4,f
 11579  06B9  2EB4               	goto	u2775
 11580  06BA  0839               	movf	??___fldiv+3,w
 11581  06BB  00B5               	movwf	___fldiv@b+3
 11582  06BC  0838               	movf	??___fldiv+2,w
 11583  06BD  00B4               	movwf	___fldiv@b+2
 11584  06BE  0837               	movf	??___fldiv+1,w
 11585  06BF  00B3               	movwf	___fldiv@b+1
 11586  06C0  0836               	movf	??___fldiv,w
 11587  06C1  00B2               	movwf	___fldiv@b
 11588  06C2  3001               	movlw	1
 11589  06C3  07C0               	addwf	___fldiv@new_exp,f
 11590  06C4  3000               	movlw	0
 11591  06C5  3DC1               	addwfc	___fldiv@new_exp+1,f
 11592  06C6                     l3665:	
 11593  06C6  0841               	movf	___fldiv@new_exp+1,w
 11594  06C7  3A80               	xorlw	128
 11595  06C8  00B6               	movwf	??___fldiv
 11596  06C9  3080               	movlw	128
 11597  06CA  0236               	subwf	??___fldiv,w
 11598  06CB  1D03               	skipz
 11599  06CC  2ECF               	goto	u2785
 11600  06CD  30FF               	movlw	255
 11601  06CE  0240               	subwf	___fldiv@new_exp,w
 11602  06CF                     u2785:	
 11603  06CF  1C03               	skipc
 11604  06D0  2EDE               	goto	l1657
 11605  06D1  30FF               	movlw	255
 11606  06D2  0140               	movlb	0	; select bank0
 11607  06D3  00C0               	movwf	___fldiv@new_exp
 11608  06D4  3000               	movlw	0
 11609  06D5  00C1               	movwf	___fldiv@new_exp+1
 11610  06D6  3000               	movlw	0
 11611  06D7  00B5               	movwf	___fldiv@b+3
 11612  06D8  3000               	movlw	0
 11613  06D9  00B4               	movwf	___fldiv@b+2
 11614  06DA  3000               	movlw	0
 11615  06DB  00B3               	movwf	___fldiv@b+1
 11616  06DC  3000               	movlw	0
 11617  06DD  00B2               	movwf	___fldiv@b
 11618  06DE                     l1657:	
 11619  06DE  0140               	movlb	0	; select bank0
 11620  06DF  0841               	movf	___fldiv@new_exp+1,w
 11621  06E0  3A80               	xorlw	128
 11622  06E1  00B6               	movwf	??___fldiv
 11623  06E2  3080               	movlw	128
 11624  06E3  0236               	subwf	??___fldiv,w
 11625  06E4  1D03               	skipz
 11626  06E5  2EE8               	goto	u2795
 11627  06E6  3001               	movlw	1
 11628  06E7  0240               	subwf	___fldiv@new_exp,w
 11629  06E8                     u2795:	
 11630  06E8  1803               	skipnc
 11631  06E9  2EF6               	goto	l1658
 11632  06EA  0140               	movlb	0	; select bank0
 11633  06EB  01C0               	clrf	___fldiv@new_exp
 11634  06EC  01C1               	clrf	___fldiv@new_exp+1
 11635  06ED  3000               	movlw	0
 11636  06EE  00B5               	movwf	___fldiv@b+3
 11637  06EF  3000               	movlw	0
 11638  06F0  00B4               	movwf	___fldiv@b+2
 11639  06F1  3000               	movlw	0
 11640  06F2  00B3               	movwf	___fldiv@b+1
 11641  06F3  3000               	movlw	0
 11642  06F4  00B2               	movwf	___fldiv@b
 11643  06F5  01BF               	clrf	___fldiv@sign
 11644  06F6                     l1658:	
 11645  06F6  0140               	movlb	0	; select bank0
 11646  06F7  0840               	movf	___fldiv@new_exp,w
 11647  06F8  00B6               	movwf	??___fldiv
 11648  06F9  0836               	movf	??___fldiv,w
 11649  06FA  00C6               	movwf	___fldiv@bexp
 11650  06FB  1C46               	btfss	___fldiv@bexp,0
 11651  06FC  2EFF               	goto	l3679
 11652  06FD  17B4               	bsf	___fldiv@b+2,7
 11653  06FE  2F03               	goto	l1660
 11654  06FF                     l3679:	
 11655  06FF  307F               	movlw	127
 11656  0700  00B6               	movwf	??___fldiv
 11657  0701  0836               	movf	??___fldiv,w
 11658  0702  05B4               	andwf	___fldiv@b+2,f
 11659  0703                     l1660:	
 11660  0703  3646               	lsrf	___fldiv@bexp,w
 11661  0704  00B6               	movwf	??___fldiv
 11662  0705  0836               	movf	??___fldiv,w
 11663  0706  00B5               	movwf	___fldiv@b+3
 11664  0707  2DE9               	goto	L1
 11665  0708                     __end_of___fldiv:	
 11666                           
 11667                           	psect	text24
 11668  13D8                     __ptext24:	
 11669 ;; *************** function _DMX_Mode *****************
 11670 ;; Defined at:
 11671 ;;		line 192 in file "dmx.c"
 11672 ;; Parameters:    Size  Location     Type
 11673 ;;		None
 11674 ;; Auto vars:     Size  Location     Type
 11675 ;;		None
 11676 ;; Return value:  Size  Location     Type
 11677 ;;                  1    wreg      _Bool 
 11678 ;; Registers used:
 11679 ;;		wreg, status,2, status,0
 11680 ;; Tracked objects:
 11681 ;;		On entry : 0/0
 11682 ;;		On exit  : 0/0
 11683 ;;		Unchanged: 0/0
 11684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11689 ;;Total ram usage:        0 bytes
 11690 ;; Hardware stack levels used:    1
 11691 ;; Hardware stack levels required when called:    4
 11692 ;; This function calls:
 11693 ;;		Nothing
 11694 ;; This function is called by:
 11695 ;;		_DMX_Task
 11696 ;; This function uses a non-reentrant model
 11697 ;;
 11698                           
 11699                           
 11700                           ;psect for function _DMX_Mode
 11701  13D8                     _DMX_Mode:	
 11702                           
 11703                           ;dmx.c: 193:     if (dmx_mode) {
 11704                           
 11705                           ;incstack = 0
 11706                           ; Regs used in _DMX_Mode: [wreg+status,2+status,0]
 11707  13D8  0141               	movlb	1	; select bank1
 11708  13D9  086B               	movf	_dmx_mode^(0+128),w
 11709  13DA  1903               	btfsc	3,2
 11710  13DB  2BDE               	goto	l5471
 11711                           
 11712                           ;dmx.c: 195:         return 1;
 11713  13DC  3001               	movlw	1
 11714  13DD  0008               	return
 11715  13DE                     l5471:	
 11716                           
 11717                           ;dmx.c: 197:     return 0;
 11718  13DE  3000               	movlw	0
 11719  13DF  0008               	return
 11720  13E0                     __end_of_DMX_Mode:	
 11721                           
 11722                           	psect	text25
 11723  1404                     __ptext25:	
 11724 ;; *************** function _BEAT_detected *****************
 11725 ;; Defined at:
 11726 ;;		line 46 in file "beat.c"
 11727 ;; Parameters:    Size  Location     Type
 11728 ;;		None
 11729 ;; Auto vars:     Size  Location     Type
 11730 ;;		None
 11731 ;; Return value:  Size  Location     Type
 11732 ;;                  1    wreg      _Bool 
 11733 ;; Registers used:
 11734 ;;		wreg, status,2, status,0
 11735 ;; Tracked objects:
 11736 ;;		On entry : 0/0
 11737 ;;		On exit  : 0/0
 11738 ;;		Unchanged: 0/0
 11739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11744 ;;Total ram usage:        0 bytes
 11745 ;; Hardware stack levels used:    1
 11746 ;; Hardware stack levels required when called:    4
 11747 ;; This function calls:
 11748 ;;		Nothing
 11749 ;; This function is called by:
 11750 ;;		_DMX_Task
 11751 ;; This function uses a non-reentrant model
 11752 ;;
 11753                           
 11754                           
 11755                           ;psect for function _BEAT_detected
 11756  1404                     _BEAT_detected:	
 11757                           
 11758                           ;beat.c: 47:     if (detected) {
 11759                           
 11760                           ;incstack = 0
 11761                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 11762  1404  0141               	movlb	1	; select bank1
 11763  1405  083B               	movf	_detected^(0+128),w
 11764  1406  1903               	btfsc	3,2
 11765  1407  2C0B               	goto	l5461
 11766                           
 11767                           ;beat.c: 48:         detected = 0;
 11768  1408  01BB               	clrf	_detected^(0+128)
 11769                           
 11770                           ;beat.c: 49:         return 1;
 11771  1409  3001               	movlw	1
 11772  140A  0008               	return
 11773  140B                     l5461:	
 11774                           
 11775                           ;beat.c: 52:     return 0;
 11776  140B  3000               	movlw	0
 11777  140C  0008               	return
 11778  140D                     __end_of_BEAT_detected:	
 11779                           
 11780                           	psect	text26
 11781  08FC                     __ptext26:	
 11782 ;; *************** function _CONTROLLER_task *****************
 11783 ;; Defined at:
 11784 ;;		line 45 in file "controller.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;		None
 11787 ;; Auto vars:     Size  Location     Type
 11788 ;;  active          1   42[BANK0 ] _Bool 
 11789 ;; Return value:  Size  Location     Type
 11790 ;;                  1    wreg      void 
 11791 ;; Registers used:
 11792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11793 ;; Tracked objects:
 11794 ;;		On entry : 0/0
 11795 ;;		On exit  : 0/0
 11796 ;;		Unchanged: 0/0
 11797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11799 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11800 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11801 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11802 ;;Total ram usage:        3 bytes
 11803 ;; Hardware stack levels used:    1
 11804 ;; Hardware stack levels required when called:   11
 11805 ;; This function calls:
 11806 ;;		_BUTTONS_isClicked
 11807 ;;		_BUTTONS_isHeld
 11808 ;;		_CLOCK_getTime
 11809 ;;		_TM1650_enable
 11810 ;;		_address_dec
 11811 ;;		_address_inc
 11812 ;; This function is called by:
 11813 ;;		_main
 11814 ;; This function uses a non-reentrant model
 11815 ;;
 11816                           
 11817                           
 11818                           ;psect for function _CONTROLLER_task
 11819  08FC                     _CONTROLLER_task:	
 11820                           
 11821                           ;controller.c: 46:     _Bool active = 1;
 11822                           
 11823                           ;incstack = 0
 11824                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11825  08FC  0140               	movlb	0	; select bank0
 11826  08FD  01CA               	clrf	CONTROLLER_task@active
 11827  08FE  0ACA               	incf	CONTROLLER_task@active,f
 11828                           
 11829                           ;controller.c: 47:     if (BUTTONS_isClicked(up)) {
 11830  08FF  0141               	movlb	1	; select bank1
 11831  0900  083F               	movf	_up^(0+128),w
 11832  0901  3188  2002  3188   	fcall	_BUTTONS_isClicked
 11833  0904  3A00               	xorlw	0
 11834  0905  1903               	skipnz
 11835  0906  290B               	goto	l5649
 11836  0907                     l5647:	
 11837                           
 11838                           ;controller.c: 48:         address_inc();
 11839  0907  3195  2545  3188   	fcall	_address_inc
 11840                           
 11841                           ;controller.c: 49:     }else if(BUTTONS_isHeld(up)){
 11842  090A  2929               	goto	l5663
 11843  090B                     l5649:	
 11844  090B  0141               	movlb	1	; select bank1
 11845  090C  083F               	movf	_up^(0+128),w
 11846  090D  3194  247D  3188   	fcall	_BUTTONS_isHeld
 11847  0910  3A00               	xorlw	0
 11848  0911  1D03               	btfss	3,2
 11849  0912  2907               	goto	l5647
 11850  0913  0141               	movlb	1	; select bank1
 11851  0914  083E               	movf	_down^(0+128),w
 11852  0915  3188  2002  3188   	fcall	_BUTTONS_isClicked
 11853  0918  3A00               	xorlw	0
 11854  0919  1903               	skipnz
 11855  091A  291F               	goto	l5657
 11856  091B                     l5655:	
 11857                           
 11858                           ;controller.c: 52:         address_dec();
 11859  091B  3195  252D  3188   	fcall	_address_dec
 11860                           
 11861                           ;controller.c: 53:     }else if(BUTTONS_isHeld(down)){
 11862  091E  2929               	goto	l5663
 11863  091F                     l5657:	
 11864  091F  0141               	movlb	1	; select bank1
 11865  0920  083E               	movf	_down^(0+128),w
 11866  0921  3194  247D  3188   	fcall	_BUTTONS_isHeld
 11867  0924  3A00               	xorlw	0
 11868  0925  1D03               	btfss	3,2
 11869  0926  291B               	goto	l5655
 11870                           
 11871                           ;controller.c: 56:         active = 0;
 11872  0927  0140               	movlb	0	; select bank0
 11873  0928  01CA               	clrf	CONTROLLER_task@active
 11874  0929                     l5663:	
 11875                           
 11876                           ;controller.c: 59:     if(active){
 11877  0929  0140               	movlb	0	; select bank0
 11878  092A  084A               	movf	CONTROLLER_task@active,w
 11879  092B  1903               	btfsc	3,2
 11880  092C  293C               	goto	l5669
 11881                           
 11882                           ;controller.c: 60:         TM1650_enable(1);
 11883  092D  3001               	movlw	1
 11884  092E  3195  2515  3188   	fcall	_TM1650_enable
 11885                           
 11886                           ;controller.c: 61:         lastActiveTime = CLOCK_getTime();
 11887  0931  3193  23FB  3188   	fcall	_CLOCK_getTime
 11888  0934  0140               	movlb	0	; select bank0
 11889  0935  0821               	movf	?_CLOCK_getTime+1,w
 11890  0936  0141               	movlb	1	; select bank1
 11891  0937  00B0               	movwf	(_lastActiveTime+1)^(0+128)
 11892  0938  0140               	movlb	0	; select bank0
 11893  0939  0820               	movf	?_CLOCK_getTime,w
 11894  093A  0141               	movlb	1	; select bank1
 11895  093B  00AF               	movwf	_lastActiveTime^(0+128)
 11896  093C                     l5669:	
 11897                           
 11898                           ;controller.c: 63:     if(CLOCK_getTime() - lastActiveTime >= 5000){
 11899  093C  3193  23FB  3188   	fcall	_CLOCK_getTime
 11900  093F  0141               	movlb	1	; select bank1
 11901  0940  082F               	movf	_lastActiveTime^(0+128),w
 11902  0941  0140               	movlb	0	; select bank0
 11903  0942  0220               	subwf	?_CLOCK_getTime,w
 11904  0943  00C8               	movwf	??_CONTROLLER_task
 11905  0944  0141               	movlb	1	; select bank1
 11906  0945  0830               	movf	(_lastActiveTime+1)^(0+128),w
 11907  0946  0140               	movlb	0	; select bank0
 11908  0947  3B21               	subwfb	?_CLOCK_getTime+1,w
 11909  0948  00C9               	movwf	??_CONTROLLER_task+1
 11910  0949  3013               	movlw	19
 11911  094A  0249               	subwf	??_CONTROLLER_task+1,w
 11912  094B  3088               	movlw	136
 11913  094C  1903               	skipnz
 11914  094D  0248               	subwf	??_CONTROLLER_task,w
 11915  094E  1C03               	skipc
 11916  094F  0008               	return
 11917                           
 11918                           ;controller.c: 64:         TM1650_enable(0);
 11919  0950  3000               	movlw	0
 11920  0951  3195  2515  3188   	fcall	_TM1650_enable
 11921                           
 11922                           ;controller.c: 65:         lastActiveTime = CLOCK_getTime() - 5001;
 11923  0954  3193  23FB         	fcall	_CLOCK_getTime
 11924  0956  0140               	movlb	0	; select bank0
 11925  0957  0820               	movf	?_CLOCK_getTime,w
 11926  0958  3E77               	addlw	119
 11927  0959  0141               	movlb	1	; select bank1
 11928  095A  00AF               	movwf	_lastActiveTime^(0+128)
 11929  095B  30EC               	movlw	236
 11930  095C  0140               	movlb	0	; select bank0
 11931  095D  3D21               	addwfc	?_CLOCK_getTime+1,w
 11932  095E  0141               	movlb	1	; select bank1
 11933  095F  00B0               	movwf	(_lastActiveTime+1)^(0+128)
 11934  0960  0008               	return
 11935  0961                     __end_of_CONTROLLER_task:	
 11936                           
 11937                           	psect	text27
 11938  1545                     __ptext27:	
 11939 ;; *************** function _address_inc *****************
 11940 ;; Defined at:
 11941 ;;		line 20 in file "controller.c"
 11942 ;; Parameters:    Size  Location     Type
 11943 ;;		None
 11944 ;; Auto vars:     Size  Location     Type
 11945 ;;		None
 11946 ;; Return value:  Size  Location     Type
 11947 ;;                  1    wreg      void 
 11948 ;; Registers used:
 11949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11950 ;; Tracked objects:
 11951 ;;		On entry : 0/0
 11952 ;;		On exit  : 0/0
 11953 ;;		Unchanged: 0/0
 11954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11959 ;;Total ram usage:        0 bytes
 11960 ;; Hardware stack levels used:    1
 11961 ;; Hardware stack levels required when called:   10
 11962 ;; This function calls:
 11963 ;;		_TM1650_fastPrintNum
 11964 ;; This function is called by:
 11965 ;;		_CONTROLLER_task
 11966 ;; This function uses a non-reentrant model
 11967 ;;
 11968                           
 11969                           
 11970                           ;psect for function _address_inc
 11971  1545                     _address_inc:	
 11972                           
 11973                           ;controller.c: 22:     if(address == 512)
 11974                           
 11975                           ;incstack = 0
 11976                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11977  1545  3002               	movlw	2
 11978  1546  0141               	movlb	1	; select bank1
 11979  1547  066A               	xorwf	(_address+1)^(0+128),w
 11980  1548  0469               	iorwf	_address^(0+128),w
 11981  1549  1D03               	btfss	3,2
 11982  154A  2D50               	goto	l5441
 11983                           
 11984                           ;controller.c: 23:         address = 1;
 11985  154B  3001               	movlw	1
 11986  154C  00E9               	movwf	_address^(0+128)
 11987  154D  3000               	movlw	0
 11988  154E  00EA               	movwf	(_address^(0+128)+1)
 11989  154F  2D54               	goto	l5443
 11990  1550                     l5441:	
 11991                           
 11992                           ;controller.c: 25:         address++;
 11993  1550  3001               	movlw	1
 11994  1551  07E9               	addwf	_address^(0+128),f
 11995  1552  3000               	movlw	0
 11996  1553  3DEA               	addwfc	(_address+1)^(0+128),f
 11997  1554                     l5443:	
 11998                           
 11999                           ;controller.c: 28:     TM1650_fastPrintNum(address);
 12000  1554  086A               	movf	(_address+1)^(0+128),w
 12001  1555  0140               	movlb	0	; select bank0
 12002  1556  00BC               	movwf	TM1650_fastPrintNum@num+1
 12003  1557  0141               	movlb	1	; select bank1
 12004  1558  0869               	movf	_address^(0+128),w
 12005  1559  0140               	movlb	0	; select bank0
 12006  155A  00BB               	movwf	TM1650_fastPrintNum@num
 12007  155B  3180  2097         	fcall	_TM1650_fastPrintNum
 12008  155D  0008               	return
 12009  155E                     __end_of_address_inc:	
 12010                           
 12011                           	psect	text28
 12012  152D                     __ptext28:	
 12013 ;; *************** function _address_dec *****************
 12014 ;; Defined at:
 12015 ;;		line 34 in file "controller.c"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;		None
 12018 ;; Auto vars:     Size  Location     Type
 12019 ;;		None
 12020 ;; Return value:  Size  Location     Type
 12021 ;;                  1    wreg      void 
 12022 ;; Registers used:
 12023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12024 ;; Tracked objects:
 12025 ;;		On entry : 0/0
 12026 ;;		On exit  : 0/0
 12027 ;;		Unchanged: 0/0
 12028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12033 ;;Total ram usage:        0 bytes
 12034 ;; Hardware stack levels used:    1
 12035 ;; Hardware stack levels required when called:   10
 12036 ;; This function calls:
 12037 ;;		_TM1650_fastPrintNum
 12038 ;; This function is called by:
 12039 ;;		_CONTROLLER_task
 12040 ;; This function uses a non-reentrant model
 12041 ;;
 12042                           
 12043                           
 12044                           ;psect for function _address_dec
 12045  152D                     _address_dec:	
 12046                           
 12047                           ;controller.c: 36:     if(address == 1)
 12048                           
 12049                           ;incstack = 0
 12050                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12051  152D  0141               	movlb	1	; select bank1
 12052  152E  0369               	decf	_address^(0+128),w
 12053  152F  046A               	iorwf	(_address+1)^(0+128),w
 12054  1530  1D03               	btfss	3,2
 12055  1531  2D37               	goto	l5449
 12056                           
 12057                           ;controller.c: 37:         address = 512;
 12058  1532  3000               	movlw	0
 12059  1533  00E9               	movwf	_address^(0+128)
 12060  1534  3002               	movlw	2
 12061  1535  00EA               	movwf	(_address^(0+128)+1)
 12062  1536  2D3B               	goto	l5451
 12063  1537                     l5449:	
 12064                           
 12065                           ;controller.c: 39:         address--;
 12066  1537  3001               	movlw	1
 12067  1538  02E9               	subwf	_address^(0+128),f
 12068  1539  3000               	movlw	0
 12069  153A  3BEA               	subwfb	(_address+1)^(0+128),f
 12070  153B                     l5451:	
 12071                           
 12072                           ;controller.c: 42:     TM1650_fastPrintNum(address);
 12073  153B  086A               	movf	(_address+1)^(0+128),w
 12074  153C  0140               	movlb	0	; select bank0
 12075  153D  00BC               	movwf	TM1650_fastPrintNum@num+1
 12076  153E  0141               	movlb	1	; select bank1
 12077  153F  0869               	movf	_address^(0+128),w
 12078  1540  0140               	movlb	0	; select bank0
 12079  1541  00BB               	movwf	TM1650_fastPrintNum@num
 12080  1542  3180  2097         	fcall	_TM1650_fastPrintNum
 12081  1544  0008               	return
 12082  1545                     __end_of_address_dec:	
 12083                           
 12084                           	psect	text29
 12085  1515                     __ptext29:	
 12086 ;; *************** function _TM1650_enable *****************
 12087 ;; Defined at:
 12088 ;;		line 112 in file "tm1650.c"
 12089 ;; Parameters:    Size  Location     Type
 12090 ;;  enable          1    wreg     _Bool 
 12091 ;; Auto vars:     Size  Location     Type
 12092 ;;  enable          1   21[BANK0 ] _Bool 
 12093 ;; Return value:  Size  Location     Type
 12094 ;;                  1    wreg      void 
 12095 ;; Registers used:
 12096 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12097 ;; Tracked objects:
 12098 ;;		On entry : 0/0
 12099 ;;		On exit  : 0/0
 12100 ;;		Unchanged: 0/0
 12101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12103 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12105 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12106 ;;Total ram usage:        1 bytes
 12107 ;; Hardware stack levels used:    1
 12108 ;; Hardware stack levels required when called:    8
 12109 ;; This function calls:
 12110 ;;		_writeData
 12111 ;; This function is called by:
 12112 ;;		_TM1650_init
 12113 ;;		_CONTROLLER_task
 12114 ;; This function uses a non-reentrant model
 12115 ;;
 12116                           
 12117                           
 12118                           ;psect for function _TM1650_enable
 12119  1515                     _TM1650_enable:	
 12120                           
 12121                           ;incstack = 0
 12122                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12123                           ;TM1650_enable@enable stored from wreg
 12124  1515  0140               	movlb	0	; select bank0
 12125  1516  00B5               	movwf	TM1650_enable@enable
 12126                           
 12127                           ;tm1650.c: 113:     if(enable == 1){
 12128  1517  0335               	decf	TM1650_enable@enable,w
 12129  1518  1D03               	btfss	3,2
 12130  1519  2D23               	goto	l5397
 12131                           
 12132                           ;tm1650.c: 114:         writeData(0x24, 0x01);
 12133  151A  01AE               	clrf	writeData@data
 12134  151B  0AAE               	incf	writeData@data,f
 12135  151C  3024               	movlw	36
 12136  151D  3195  25B8         	fcall	_writeData
 12137                           
 12138                           ;tm1650.c: 115:         displayState = 1;
 12139  151F  0141               	movlb	1	; select bank1
 12140  1520  01C0               	clrf	_displayState^(0+128)
 12141  1521  0AC0               	incf	_displayState^(0+128),f
 12142                           
 12143                           ;tm1650.c: 116:     }else if(enable == 0){
 12144  1522  0008               	return
 12145  1523                     l5397:	
 12146  1523  0835               	movf	TM1650_enable@enable,w
 12147  1524  1D03               	btfss	3,2
 12148  1525  0008               	return
 12149                           
 12150                           ;tm1650.c: 117:         writeData(0x24, 0x00);
 12151  1526  01AE               	clrf	writeData@data
 12152  1527  3024               	movlw	36
 12153  1528  3195  25B8         	fcall	_writeData
 12154                           
 12155                           ;tm1650.c: 118:         displayState = 0;
 12156  152A  0141               	movlb	1	; select bank1
 12157  152B  01C0               	clrf	_displayState^(0+128)
 12158  152C  0008               	return
 12159  152D                     __end_of_TM1650_enable:	
 12160                           
 12161                           	psect	text30
 12162  147D                     __ptext30:	
 12163 ;; *************** function _BUTTONS_isHeld *****************
 12164 ;; Defined at:
 12165 ;;		line 86 in file "buttons.c"
 12166 ;; Parameters:    Size  Location     Type
 12167 ;;  button          1    wreg     PTR struct .
 12168 ;;		 -> buttons(32), NULL(0), 
 12169 ;; Auto vars:     Size  Location     Type
 12170 ;;  button          1    0[BANK0 ] PTR struct .
 12171 ;;		 -> buttons(32), NULL(0), 
 12172 ;; Return value:  Size  Location     Type
 12173 ;;                  1    wreg      _Bool 
 12174 ;; Registers used:
 12175 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12176 ;; Tracked objects:
 12177 ;;		On entry : 0/0
 12178 ;;		On exit  : 0/0
 12179 ;;		Unchanged: 0/0
 12180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12182 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12184 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12185 ;;Total ram usage:        1 bytes
 12186 ;; Hardware stack levels used:    1
 12187 ;; Hardware stack levels required when called:    4
 12188 ;; This function calls:
 12189 ;;		Nothing
 12190 ;; This function is called by:
 12191 ;;		_CONTROLLER_task
 12192 ;; This function uses a non-reentrant model
 12193 ;;
 12194                           
 12195                           
 12196                           ;psect for function _BUTTONS_isHeld
 12197  147D                     _BUTTONS_isHeld:	
 12198                           
 12199                           ;incstack = 0
 12200                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 12201                           ;BUTTONS_isHeld@button stored from wreg
 12202  147D  0140               	movlb	0	; select bank0
 12203  147E  00A0               	movwf	BUTTONS_isHeld@button
 12204                           
 12205                           ;buttons.c: 87:     if(button->event == EVENT_HELD){
 12206  147F  0820               	movf	BUTTONS_isHeld@button,w
 12207  1480  3E05               	addlw	5
 12208  1481  0086               	movwf	6
 12209  1482  3001               	movlw	1	; select bank2/3
 12210  1483  0087               	movwf	7
 12211  1484  3002               	movlw	2
 12212  1485  0601               	xorwf	1,w
 12213  1486  1D03               	btfss	3,2
 12214  1487  2C8A               	goto	l5433
 12215                           
 12216                           ;buttons.c: 89:         return 1;
 12217  1488  3001               	movlw	1
 12218  1489  0008               	return
 12219  148A                     l5433:	
 12220                           
 12221                           ;buttons.c: 91:     return 0;
 12222  148A  3000               	movlw	0
 12223  148B  0008               	return
 12224  148C                     __end_of_BUTTONS_isHeld:	
 12225                           
 12226                           	psect	text31
 12227  0802                     __ptext31:	
 12228 ;; *************** function _BUTTONS_isClicked *****************
 12229 ;; Defined at:
 12230 ;;		line 77 in file "buttons.c"
 12231 ;; Parameters:    Size  Location     Type
 12232 ;;  button          1    wreg     PTR struct .
 12233 ;;		 -> buttons(32), NULL(0), 
 12234 ;; Auto vars:     Size  Location     Type
 12235 ;;  button          1    0[BANK0 ] PTR struct .
 12236 ;;		 -> buttons(32), NULL(0), 
 12237 ;; Return value:  Size  Location     Type
 12238 ;;                  1    wreg      _Bool 
 12239 ;; Registers used:
 12240 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12241 ;; Tracked objects:
 12242 ;;		On entry : 0/0
 12243 ;;		On exit  : 0/0
 12244 ;;		Unchanged: 0/0
 12245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12247 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12249 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12250 ;;Total ram usage:        1 bytes
 12251 ;; Hardware stack levels used:    1
 12252 ;; Hardware stack levels required when called:    4
 12253 ;; This function calls:
 12254 ;;		Nothing
 12255 ;; This function is called by:
 12256 ;;		_CONTROLLER_task
 12257 ;; This function uses a non-reentrant model
 12258 ;;
 12259                           
 12260                           
 12261                           ;psect for function _BUTTONS_isClicked
 12262  0802                     _BUTTONS_isClicked:	
 12263                           
 12264                           ;incstack = 0
 12265                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 12266                           ;BUTTONS_isClicked@button stored from wreg
 12267  0802  0140               	movlb	0	; select bank0
 12268  0803  00A0               	movwf	BUTTONS_isClicked@button
 12269                           
 12270                           ;buttons.c: 78:     if (button->event == EVENT_PRESSED) {
 12271  0804  0820               	movf	BUTTONS_isClicked@button,w
 12272  0805  3E05               	addlw	5
 12273  0806  0086               	movwf	6
 12274  0807  3001               	movlw	1	; select bank2/3
 12275  0808  0087               	movwf	7
 12276  0809  0301               	decf	1,w
 12277  080A  1D03               	btfss	3,2
 12278  080B  2814               	goto	l5423
 12279                           
 12280                           ;buttons.c: 79:         button->event = EVENT_IDLE;
 12281  080C  0820               	movf	BUTTONS_isClicked@button,w
 12282  080D  3E05               	addlw	5
 12283  080E  0086               	movwf	6
 12284  080F  3001               	movlw	1	; select bank2/3
 12285  0810  0087               	movwf	7
 12286  0811  0181               	clrf	1
 12287                           
 12288                           ;buttons.c: 80:         return 1;
 12289  0812  3001               	movlw	1
 12290  0813  0008               	return
 12291  0814                     l5423:	
 12292                           
 12293                           ;buttons.c: 83:     return 0;
 12294  0814  3000               	movlw	0
 12295  0815  0008               	return
 12296  0816                     __end_of_BUTTONS_isClicked:	
 12297                           
 12298                           	psect	text32
 12299  144D                     __ptext32:	
 12300 ;; *************** function _CONTROLLER_init *****************
 12301 ;; Defined at:
 12302 ;;		line 13 in file "controller.c"
 12303 ;; Parameters:    Size  Location     Type
 12304 ;;		None
 12305 ;; Auto vars:     Size  Location     Type
 12306 ;;		None
 12307 ;; Return value:  Size  Location     Type
 12308 ;;                  1    wreg      void 
 12309 ;; Registers used:
 12310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12311 ;; Tracked objects:
 12312 ;;		On entry : 0/0
 12313 ;;		On exit  : 0/0
 12314 ;;		Unchanged: 0/0
 12315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12320 ;;Total ram usage:        0 bytes
 12321 ;; Hardware stack levels used:    1
 12322 ;; Hardware stack levels required when called:   10
 12323 ;; This function calls:
 12324 ;;		_TM1650_fastPrintNum
 12325 ;; This function is called by:
 12326 ;;		_main
 12327 ;; This function uses a non-reentrant model
 12328 ;;
 12329                           
 12330                           
 12331                           ;psect for function _CONTROLLER_init
 12332  144D                     _CONTROLLER_init:	
 12333                           
 12334                           ;controller.c: 14:     TM1650_fastPrintNum(address);
 12335                           
 12336                           ;incstack = 0
 12337                           ; Regs used in _CONTROLLER_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12338  144D  0141               	movlb	1	; select bank1
 12339  144E  086A               	movf	(_address+1)^(0+128),w
 12340  144F  0140               	movlb	0	; select bank0
 12341  1450  00BC               	movwf	TM1650_fastPrintNum@num+1
 12342  1451  0141               	movlb	1	; select bank1
 12343  1452  0869               	movf	_address^(0+128),w
 12344  1453  0140               	movlb	0	; select bank0
 12345  1454  00BB               	movwf	TM1650_fastPrintNum@num
 12346  1455  3180  2097         	fcall	_TM1650_fastPrintNum
 12347  1457  0008               	return
 12348  1458                     __end_of_CONTROLLER_init:	
 12349                           
 12350                           	psect	text33
 12351  0097                     __ptext33:	
 12352 ;; *************** function _TM1650_fastPrintNum *****************
 12353 ;; Defined at:
 12354 ;;		line 72 in file "tm1650.c"
 12355 ;; Parameters:    Size  Location     Type
 12356 ;;  num             2   27[BANK0 ] unsigned short 
 12357 ;; Auto vars:     Size  Location     Type
 12358 ;;  array           4   34[BANK0 ] unsigned char [4]
 12359 ;; Return value:  Size  Location     Type
 12360 ;;                  1    wreg      void 
 12361 ;; Registers used:
 12362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12363 ;; Tracked objects:
 12364 ;;		On entry : 0/0
 12365 ;;		On exit  : 0/0
 12366 ;;		Unchanged: 0/0
 12367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12368 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12369 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12370 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12371 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12372 ;;Total ram usage:       13 bytes
 12373 ;; Hardware stack levels used:    1
 12374 ;; Hardware stack levels required when called:    9
 12375 ;; This function calls:
 12376 ;;		_TM1650_setDigit
 12377 ;;		___lwdiv
 12378 ;;		___lwmod
 12379 ;; This function is called by:
 12380 ;;		_main
 12381 ;;		_CONTROLLER_init
 12382 ;;		_address_inc
 12383 ;;		_address_dec
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           
 12387                           
 12388                           ;psect for function _TM1650_fastPrintNum
 12389  0097                     _TM1650_fastPrintNum:	
 12390                           
 12391                           ;tm1650.c: 73:     char array[4];;tm1650.c: 74:     if(num < 10){
 12392                           
 12393                           ;incstack = 0
 12394                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12395  0097  3000               	movlw	0
 12396  0098  0140               	movlb	0	; select bank0
 12397  0099  023C               	subwf	TM1650_fastPrintNum@num+1,w
 12398  009A  300A               	movlw	10
 12399  009B  1903               	skipnz
 12400  009C  023B               	subwf	TM1650_fastPrintNum@num,w
 12401  009D  1803               	skipnc
 12402  009E  28D7               	goto	l5201
 12403                           
 12404                           ;tm1650.c: 75:         array[0] = (num % 10) + 48;
 12405  009F  300A               	movlw	10
 12406  00A0  00A0               	movwf	___lwmod@divisor
 12407  00A1  3000               	movlw	0
 12408  00A2  00A1               	movwf	___lwmod@divisor+1
 12409  00A3  083C               	movf	TM1650_fastPrintNum@num+1,w
 12410  00A4  00A3               	movwf	___lwmod@dividend+1
 12411  00A5  083B               	movf	TM1650_fastPrintNum@num,w
 12412  00A6  00A2               	movwf	___lwmod@dividend
 12413  00A7  3196  264C  3180   	fcall	___lwmod
 12414  00AA  0140               	movlb	0	; select bank0
 12415  00AB  0820               	movf	?___lwmod,w
 12416  00AC  3E30               	addlw	48
 12417  00AD  00BD               	movwf	??_TM1650_fastPrintNum
 12418  00AE  083D               	movf	??_TM1650_fastPrintNum,w
 12419  00AF  00C2               	movwf	TM1650_fastPrintNum@array
 12420                           
 12421                           ;tm1650.c: 76:         TM1650_setDigit(0,' ', 0);
 12422  00B0  3020               	movlw	32
 12423  00B1  00BD               	movwf	??_TM1650_fastPrintNum
 12424  00B2  083D               	movf	??_TM1650_fastPrintNum,w
 12425  00B3  00B5               	movwf	TM1650_setDigit@num
 12426  00B4  01B6               	clrf	TM1650_setDigit@dp
 12427  00B5  3000               	movlw	0
 12428  00B6  3188  2016  3180   	fcall	_TM1650_setDigit
 12429                           
 12430                           ;tm1650.c: 77:         TM1650_setDigit(1,' ', 0);
 12431  00B9  3020               	movlw	32
 12432  00BA  0140               	movlb	0	; select bank0
 12433  00BB  00BD               	movwf	??_TM1650_fastPrintNum
 12434  00BC  083D               	movf	??_TM1650_fastPrintNum,w
 12435  00BD  00B5               	movwf	TM1650_setDigit@num
 12436  00BE  01B6               	clrf	TM1650_setDigit@dp
 12437  00BF  3001               	movlw	1
 12438  00C0  3188  2016  3180   	fcall	_TM1650_setDigit
 12439                           
 12440                           ;tm1650.c: 78:         TM1650_setDigit(2,' ', 0);
 12441  00C3  3020               	movlw	32
 12442  00C4  0140               	movlb	0	; select bank0
 12443  00C5  00BD               	movwf	??_TM1650_fastPrintNum
 12444  00C6  083D               	movf	??_TM1650_fastPrintNum,w
 12445  00C7  00B5               	movwf	TM1650_setDigit@num
 12446  00C8  01B6               	clrf	TM1650_setDigit@dp
 12447  00C9  3002               	movlw	2
 12448  00CA  3188  2016  3180   	fcall	_TM1650_setDigit
 12449                           
 12450                           ;tm1650.c: 79:         TM1650_setDigit(3,array[0], 0);
 12451  00CD  0140               	movlb	0	; select bank0
 12452  00CE  0842               	movf	TM1650_fastPrintNum@array,w
 12453  00CF  00BD               	movwf	??_TM1650_fastPrintNum
 12454  00D0  083D               	movf	??_TM1650_fastPrintNum,w
 12455  00D1  00B5               	movwf	TM1650_setDigit@num
 12456  00D2  01B6               	clrf	TM1650_setDigit@dp
 12457  00D3  3003               	movlw	3
 12458  00D4  3188  2016         	fcall	_TM1650_setDigit
 12459                           
 12460                           ;tm1650.c: 80:     }else if(num < 100 && num >= 10){
 12461  00D6  0008               	return
 12462  00D7                     l5201:	
 12463  00D7  3000               	movlw	0
 12464  00D8  023C               	subwf	TM1650_fastPrintNum@num+1,w
 12465  00D9  3064               	movlw	100
 12466  00DA  1903               	skipnz
 12467  00DB  023B               	subwf	TM1650_fastPrintNum@num,w
 12468  00DC  1803               	skipnc
 12469  00DD  294C               	goto	l5215
 12470  00DE  3000               	movlw	0
 12471  00DF  023C               	subwf	TM1650_fastPrintNum@num+1,w
 12472  00E0  300A               	movlw	10
 12473  00E1  1903               	skipnz
 12474  00E2  023B               	subwf	TM1650_fastPrintNum@num,w
 12475  00E3  1C03               	skipc
 12476  00E4  294C               	goto	l5215
 12477                           
 12478                           ;tm1650.c: 81:         array[0] = (num % 10) + 48;
 12479  00E5  300A               	movlw	10
 12480  00E6  00A0               	movwf	___lwmod@divisor
 12481  00E7  3000               	movlw	0
 12482  00E8  00A1               	movwf	___lwmod@divisor+1
 12483  00E9  083C               	movf	TM1650_fastPrintNum@num+1,w
 12484  00EA  00A3               	movwf	___lwmod@dividend+1
 12485  00EB  083B               	movf	TM1650_fastPrintNum@num,w
 12486  00EC  00A2               	movwf	___lwmod@dividend
 12487  00ED  3196  264C  3180   	fcall	___lwmod
 12488  00F0  0140               	movlb	0	; select bank0
 12489  00F1  0820               	movf	?___lwmod,w
 12490  00F2  3E30               	addlw	48
 12491  00F3  00BD               	movwf	??_TM1650_fastPrintNum
 12492  00F4  083D               	movf	??_TM1650_fastPrintNum,w
 12493  00F5  00C2               	movwf	TM1650_fastPrintNum@array
 12494                           
 12495                           ;tm1650.c: 82:         array[1] = (((num - (num % 10))/10) % 10) + 48;
 12496  00F6  300A               	movlw	10
 12497  00F7  00A6               	movwf	___lwdiv@divisor
 12498  00F8  3000               	movlw	0
 12499  00F9  00A7               	movwf	___lwdiv@divisor+1
 12500  00FA  300A               	movlw	10
 12501  00FB  00A0               	movwf	___lwmod@divisor
 12502  00FC  3000               	movlw	0
 12503  00FD  00A1               	movwf	___lwmod@divisor+1
 12504  00FE  083C               	movf	TM1650_fastPrintNum@num+1,w
 12505  00FF  00A3               	movwf	___lwmod@dividend+1
 12506  0100  083B               	movf	TM1650_fastPrintNum@num,w
 12507  0101  00A2               	movwf	___lwmod@dividend
 12508  0102  3196  264C  3180   	fcall	___lwmod
 12509  0105  0140               	movlb	0	; select bank0
 12510  0106  0820               	movf	?___lwmod,w
 12511  0107  023B               	subwf	TM1650_fastPrintNum@num,w
 12512  0108  00A8               	movwf	___lwdiv@dividend
 12513  0109  0821               	movf	?___lwmod+1,w
 12514  010A  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 12515  010B  00A9               	movwf	___lwdiv@dividend+1
 12516  010C  3197  2711  3180   	fcall	___lwdiv
 12517  010F  0140               	movlb	0	; select bank0
 12518  0110  0827               	movf	?___lwdiv+1,w
 12519  0111  00C7               	movwf	_TM1650_fastPrintNum$2885+1
 12520  0112  0826               	movf	?___lwdiv,w
 12521  0113  00C6               	movwf	_TM1650_fastPrintNum$2885
 12522                           
 12523                           ;tm1650.c: 82:         array[1] = (((num - (num % 10))/10) % 10) + 48;
 12524  0114  300A               	movlw	10
 12525  0115  00A0               	movwf	___lwmod@divisor
 12526  0116  3000               	movlw	0
 12527  0117  00A1               	movwf	___lwmod@divisor+1
 12528  0118  0847               	movf	_TM1650_fastPrintNum$2885+1,w
 12529  0119  00A3               	movwf	___lwmod@dividend+1
 12530  011A  0846               	movf	_TM1650_fastPrintNum$2885,w
 12531  011B  00A2               	movwf	___lwmod@dividend
 12532  011C  3196  264C  3180   	fcall	___lwmod
 12533  011F  0140               	movlb	0	; select bank0
 12534  0120  0820               	movf	?___lwmod,w
 12535  0121  3E30               	addlw	48
 12536  0122  00BD               	movwf	??_TM1650_fastPrintNum
 12537  0123  083D               	movf	??_TM1650_fastPrintNum,w
 12538  0124  00C3               	movwf	TM1650_fastPrintNum@array+1
 12539                           
 12540                           ;tm1650.c: 83:         TM1650_setDigit(0,' ', 0);
 12541  0125  3020               	movlw	32
 12542  0126  00BD               	movwf	??_TM1650_fastPrintNum
 12543  0127  083D               	movf	??_TM1650_fastPrintNum,w
 12544  0128  00B5               	movwf	TM1650_setDigit@num
 12545  0129  01B6               	clrf	TM1650_setDigit@dp
 12546  012A  3000               	movlw	0
 12547  012B  3188  2016  3180   	fcall	_TM1650_setDigit
 12548                           
 12549                           ;tm1650.c: 84:         TM1650_setDigit(1,' ', 0);
 12550  012E  3020               	movlw	32
 12551  012F  0140               	movlb	0	; select bank0
 12552  0130  00BD               	movwf	??_TM1650_fastPrintNum
 12553  0131  083D               	movf	??_TM1650_fastPrintNum,w
 12554  0132  00B5               	movwf	TM1650_setDigit@num
 12555  0133  01B6               	clrf	TM1650_setDigit@dp
 12556  0134  3001               	movlw	1
 12557  0135  3188  2016  3180   	fcall	_TM1650_setDigit
 12558                           
 12559                           ;tm1650.c: 85:         TM1650_setDigit(2,array[1], 0);
 12560  0138  0140               	movlb	0	; select bank0
 12561  0139  0843               	movf	TM1650_fastPrintNum@array+1,w
 12562  013A  00BD               	movwf	??_TM1650_fastPrintNum
 12563  013B  083D               	movf	??_TM1650_fastPrintNum,w
 12564  013C  00B5               	movwf	TM1650_setDigit@num
 12565  013D  01B6               	clrf	TM1650_setDigit@dp
 12566  013E  3002               	movlw	2
 12567  013F  3188  2016  3180   	fcall	_TM1650_setDigit
 12568                           
 12569                           ;tm1650.c: 86:         TM1650_setDigit(3,array[0], 0);
 12570  0142  0140               	movlb	0	; select bank0
 12571  0143  0842               	movf	TM1650_fastPrintNum@array,w
 12572  0144  00BD               	movwf	??_TM1650_fastPrintNum
 12573  0145  083D               	movf	??_TM1650_fastPrintNum,w
 12574  0146  00B5               	movwf	TM1650_setDigit@num
 12575  0147  01B6               	clrf	TM1650_setDigit@dp
 12576  0148  3003               	movlw	3
 12577  0149  3188  2016         	fcall	_TM1650_setDigit
 12578                           
 12579                           ;tm1650.c: 87:     }else if(num < 1000 && num >= 100){
 12580  014B  0008               	return
 12581  014C                     l5215:	
 12582  014C  3003               	movlw	3
 12583  014D  023C               	subwf	TM1650_fastPrintNum@num+1,w
 12584  014E  30E8               	movlw	232
 12585  014F  1903               	skipnz
 12586  0150  023B               	subwf	TM1650_fastPrintNum@num,w
 12587  0151  1803               	skipnc
 12588  0152  2A0E               	goto	l5229
 12589  0153  3000               	movlw	0
 12590  0154  023C               	subwf	TM1650_fastPrintNum@num+1,w
 12591  0155  3064               	movlw	100
 12592  0156  1903               	skipnz
 12593  0157  023B               	subwf	TM1650_fastPrintNum@num,w
 12594  0158  1C03               	skipc
 12595  0159  2A0E               	goto	l5229
 12596                           
 12597                           ;tm1650.c: 88:         array[0] = (num % 10) + 48;
 12598  015A  300A               	movlw	10
 12599  015B  00A0               	movwf	___lwmod@divisor
 12600  015C  3000               	movlw	0
 12601  015D  00A1               	movwf	___lwmod@divisor+1
 12602  015E  083C               	movf	TM1650_fastPrintNum@num+1,w
 12603  015F  00A3               	movwf	___lwmod@dividend+1
 12604  0160  083B               	movf	TM1650_fastPrintNum@num,w
 12605  0161  00A2               	movwf	___lwmod@dividend
 12606  0162  3196  264C  3180   	fcall	___lwmod
 12607  0165  0140               	movlb	0	; select bank0
 12608  0166  0820               	movf	?___lwmod,w
 12609  0167  3E30               	addlw	48
 12610  0168  00BD               	movwf	??_TM1650_fastPrintNum
 12611  0169  083D               	movf	??_TM1650_fastPrintNum,w
 12612  016A  00C2               	movwf	TM1650_fastPrintNum@array
 12613                           
 12614                           ;tm1650.c: 89:         array[1] = ((num - (num % 10))/10) % 10 + 48;
 12615  016B  300A               	movlw	10
 12616  016C  00A6               	movwf	___lwdiv@divisor
 12617  016D  3000               	movlw	0
 12618  016E  00A7               	movwf	___lwdiv@divisor+1
 12619  016F  300A               	movlw	10
 12620  0170  00A0               	movwf	___lwmod@divisor
 12621  0171  3000               	movlw	0
 12622  0172  00A1               	movwf	___lwmod@divisor+1
 12623  0173  083C               	movf	TM1650_fastPrintNum@num+1,w
 12624  0174  00A3               	movwf	___lwmod@dividend+1
 12625  0175  083B               	movf	TM1650_fastPrintNum@num,w
 12626  0176  00A2               	movwf	___lwmod@dividend
 12627  0177  3196  264C  3180   	fcall	___lwmod
 12628  017A  0140               	movlb	0	; select bank0
 12629  017B  0820               	movf	?___lwmod,w
 12630  017C  023B               	subwf	TM1650_fastPrintNum@num,w
 12631  017D  00A8               	movwf	___lwdiv@dividend
 12632  017E  0821               	movf	?___lwmod+1,w
 12633  017F  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 12634  0180  00A9               	movwf	___lwdiv@dividend+1
 12635  0181  3197  2711  3180   	fcall	___lwdiv
 12636  0184  0140               	movlb	0	; select bank0
 12637  0185  0827               	movf	?___lwdiv+1,w
 12638  0186  00C7               	movwf	_TM1650_fastPrintNum$2885+1
 12639  0187  0826               	movf	?___lwdiv,w
 12640  0188  00C6               	movwf	_TM1650_fastPrintNum$2885
 12641                           
 12642                           ;tm1650.c: 89:         array[1] = ((num - (num % 10))/10) % 10 + 48;
 12643  0189  300A               	movlw	10
 12644  018A  00A0               	movwf	___lwmod@divisor
 12645  018B  3000               	movlw	0
 12646  018C  00A1               	movwf	___lwmod@divisor+1
 12647  018D  0847               	movf	_TM1650_fastPrintNum$2885+1,w
 12648  018E  00A3               	movwf	___lwmod@dividend+1
 12649  018F  0846               	movf	_TM1650_fastPrintNum$2885,w
 12650  0190  00A2               	movwf	___lwmod@dividend
 12651  0191  3196  264C  3180   	fcall	___lwmod
 12652  0194  0140               	movlb	0	; select bank0
 12653  0195  0820               	movf	?___lwmod,w
 12654  0196  3E30               	addlw	48
 12655  0197  00BD               	movwf	??_TM1650_fastPrintNum
 12656  0198  083D               	movf	??_TM1650_fastPrintNum,w
 12657  0199  00C3               	movwf	TM1650_fastPrintNum@array+1
 12658                           
 12659                           ;tm1650.c: 90:         array[2] = ((num - (((num - (num % 10))/10) % 10))/100) %10 + 48;
 12660  019A  300A               	movlw	10
 12661  019B  00A6               	movwf	___lwdiv@divisor
 12662  019C  3000               	movlw	0
 12663  019D  00A7               	movwf	___lwdiv@divisor+1
 12664  019E  300A               	movlw	10
 12665  019F  00A0               	movwf	___lwmod@divisor
 12666  01A0  3000               	movlw	0
 12667  01A1  00A1               	movwf	___lwmod@divisor+1
 12668  01A2  083C               	movf	TM1650_fastPrintNum@num+1,w
 12669  01A3  00A3               	movwf	___lwmod@dividend+1
 12670  01A4  083B               	movf	TM1650_fastPrintNum@num,w
 12671  01A5  00A2               	movwf	___lwmod@dividend
 12672  01A6  3196  264C  3180   	fcall	___lwmod
 12673  01A9  0140               	movlb	0	; select bank0
 12674  01AA  0820               	movf	?___lwmod,w
 12675  01AB  023B               	subwf	TM1650_fastPrintNum@num,w
 12676  01AC  00A8               	movwf	___lwdiv@dividend
 12677  01AD  0821               	movf	?___lwmod+1,w
 12678  01AE  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 12679  01AF  00A9               	movwf	___lwdiv@dividend+1
 12680  01B0  3197  2711  3180   	fcall	___lwdiv
 12681  01B3  0140               	movlb	0	; select bank0
 12682  01B4  0827               	movf	?___lwdiv+1,w
 12683  01B5  00C7               	movwf	_TM1650_fastPrintNum$2885+1
 12684  01B6  0826               	movf	?___lwdiv,w
 12685  01B7  00C6               	movwf	_TM1650_fastPrintNum$2885
 12686                           
 12687                           ;tm1650.c: 90:         array[2] = ((num - (((num - (num % 10))/10) % 10))/100) %10 + 48;
 12688  01B8  3064               	movlw	100
 12689  01B9  00A6               	movwf	___lwdiv@divisor
 12690  01BA  3000               	movlw	0
 12691  01BB  00A7               	movwf	___lwdiv@divisor+1
 12692  01BC  300A               	movlw	10
 12693  01BD  00A0               	movwf	___lwmod@divisor
 12694  01BE  3000               	movlw	0
 12695  01BF  00A1               	movwf	___lwmod@divisor+1
 12696  01C0  0847               	movf	_TM1650_fastPrintNum$2885+1,w
 12697  01C1  00A3               	movwf	___lwmod@dividend+1
 12698  01C2  0846               	movf	_TM1650_fastPrintNum$2885,w
 12699  01C3  00A2               	movwf	___lwmod@dividend
 12700  01C4  3196  264C  3180   	fcall	___lwmod
 12701  01C7  0140               	movlb	0	; select bank0
 12702  01C8  0820               	movf	?___lwmod,w
 12703  01C9  023B               	subwf	TM1650_fastPrintNum@num,w
 12704  01CA  00A8               	movwf	___lwdiv@dividend
 12705  01CB  0821               	movf	?___lwmod+1,w
 12706  01CC  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 12707  01CD  00A9               	movwf	___lwdiv@dividend+1
 12708  01CE  3197  2711  3180   	fcall	___lwdiv
 12709  01D1  0140               	movlb	0	; select bank0
 12710  01D2  0827               	movf	?___lwdiv+1,w
 12711  01D3  00C1               	movwf	_TM1650_fastPrintNum$2886+1
 12712  01D4  0826               	movf	?___lwdiv,w
 12713  01D5  00C0               	movwf	_TM1650_fastPrintNum$2886
 12714                           
 12715                           ;tm1650.c: 90:         array[2] = ((num - (((num - (num % 10))/10) % 10))/100) %10 + 48;
 12716  01D6  300A               	movlw	10
 12717  01D7  00A0               	movwf	___lwmod@divisor
 12718  01D8  3000               	movlw	0
 12719  01D9  00A1               	movwf	___lwmod@divisor+1
 12720  01DA  0841               	movf	_TM1650_fastPrintNum$2886+1,w
 12721  01DB  00A3               	movwf	___lwmod@dividend+1
 12722  01DC  0840               	movf	_TM1650_fastPrintNum$2886,w
 12723  01DD  00A2               	movwf	___lwmod@dividend
 12724  01DE  3196  264C  3180   	fcall	___lwmod
 12725  01E1  0140               	movlb	0	; select bank0
 12726  01E2  0820               	movf	?___lwmod,w
 12727  01E3  3E30               	addlw	48
 12728  01E4  00BD               	movwf	??_TM1650_fastPrintNum
 12729  01E5  083D               	movf	??_TM1650_fastPrintNum,w
 12730  01E6  00C4               	movwf	TM1650_fastPrintNum@array+2
 12731                           
 12732                           ;tm1650.c: 91:         TM1650_setDigit(0,' ', 0);
 12733  01E7  3020               	movlw	32
 12734  01E8  00BD               	movwf	??_TM1650_fastPrintNum
 12735  01E9  083D               	movf	??_TM1650_fastPrintNum,w
 12736  01EA  00B5               	movwf	TM1650_setDigit@num
 12737  01EB  01B6               	clrf	TM1650_setDigit@dp
 12738  01EC  3000               	movlw	0
 12739  01ED  3188  2016  3180   	fcall	_TM1650_setDigit
 12740                           
 12741                           ;tm1650.c: 92:         TM1650_setDigit(1, array[2], 0);
 12742  01F0  0140               	movlb	0	; select bank0
 12743  01F1  0844               	movf	TM1650_fastPrintNum@array+2,w
 12744  01F2  00BD               	movwf	??_TM1650_fastPrintNum
 12745  01F3  083D               	movf	??_TM1650_fastPrintNum,w
 12746  01F4  00B5               	movwf	TM1650_setDigit@num
 12747  01F5  01B6               	clrf	TM1650_setDigit@dp
 12748  01F6  3001               	movlw	1
 12749  01F7  3188  2016  3180   	fcall	_TM1650_setDigit
 12750                           
 12751                           ;tm1650.c: 93:         TM1650_setDigit(2, array[1], 0);
 12752  01FA  0140               	movlb	0	; select bank0
 12753  01FB  0843               	movf	TM1650_fastPrintNum@array+1,w
 12754  01FC  00BD               	movwf	??_TM1650_fastPrintNum
 12755  01FD  083D               	movf	??_TM1650_fastPrintNum,w
 12756  01FE  00B5               	movwf	TM1650_setDigit@num
 12757  01FF  01B6               	clrf	TM1650_setDigit@dp
 12758  0200  3002               	movlw	2
 12759  0201  3188  2016  3180   	fcall	_TM1650_setDigit
 12760                           
 12761                           ;tm1650.c: 94:         TM1650_setDigit(3, array[0], 0);
 12762  0204  0140               	movlb	0	; select bank0
 12763  0205  0842               	movf	TM1650_fastPrintNum@array,w
 12764  0206  00BD               	movwf	??_TM1650_fastPrintNum
 12765  0207  083D               	movf	??_TM1650_fastPrintNum,w
 12766  0208  00B5               	movwf	TM1650_setDigit@num
 12767  0209  01B6               	clrf	TM1650_setDigit@dp
 12768  020A  3003               	movlw	3
 12769  020B  3188  2016         	fcall	_TM1650_setDigit
 12770                           
 12771                           ;tm1650.c: 95:     }else if(num < 10000 && num >= 1000){
 12772  020D  0008               	return
 12773  020E                     l5229:	
 12774  020E  3027               	movlw	39
 12775  020F  023C               	subwf	TM1650_fastPrintNum@num+1,w
 12776  0210  3010               	movlw	16
 12777  0211  1903               	skipnz
 12778  0212  023B               	subwf	TM1650_fastPrintNum@num,w
 12779  0213  1803               	skipnc
 12780  0214  2B3B               	goto	l5243
 12781  0215  3003               	movlw	3
 12782  0216  023C               	subwf	TM1650_fastPrintNum@num+1,w
 12783  0217  30E8               	movlw	232
 12784  0218  1903               	skipnz
 12785  0219  023B               	subwf	TM1650_fastPrintNum@num,w
 12786  021A  1C03               	skipc
 12787  021B  2B3B               	goto	l5243
 12788                           
 12789                           ;tm1650.c: 96:         array[0] = (num % 10) + 48;
 12790  021C  300A               	movlw	10
 12791  021D  00A0               	movwf	___lwmod@divisor
 12792  021E  3000               	movlw	0
 12793  021F  00A1               	movwf	___lwmod@divisor+1
 12794  0220  083C               	movf	TM1650_fastPrintNum@num+1,w
 12795  0221  00A3               	movwf	___lwmod@dividend+1
 12796  0222  083B               	movf	TM1650_fastPrintNum@num,w
 12797  0223  00A2               	movwf	___lwmod@dividend
 12798  0224  3196  264C  3180   	fcall	___lwmod
 12799  0227  0140               	movlb	0	; select bank0
 12800  0228  0820               	movf	?___lwmod,w
 12801  0229  3E30               	addlw	48
 12802  022A  00BD               	movwf	??_TM1650_fastPrintNum
 12803  022B  083D               	movf	??_TM1650_fastPrintNum,w
 12804  022C  00C2               	movwf	TM1650_fastPrintNum@array
 12805                           
 12806                           ;tm1650.c: 97:         array[1] = ((num - (num % 10))/10) % 10 + 48;
 12807  022D  300A               	movlw	10
 12808  022E  00A6               	movwf	___lwdiv@divisor
 12809  022F  3000               	movlw	0
 12810  0230  00A7               	movwf	___lwdiv@divisor+1
 12811  0231  300A               	movlw	10
 12812  0232  00A0               	movwf	___lwmod@divisor
 12813  0233  3000               	movlw	0
 12814  0234  00A1               	movwf	___lwmod@divisor+1
 12815  0235  083C               	movf	TM1650_fastPrintNum@num+1,w
 12816  0236  00A3               	movwf	___lwmod@dividend+1
 12817  0237  083B               	movf	TM1650_fastPrintNum@num,w
 12818  0238  00A2               	movwf	___lwmod@dividend
 12819  0239  3196  264C  3180   	fcall	___lwmod
 12820  023C  0140               	movlb	0	; select bank0
 12821  023D  0820               	movf	?___lwmod,w
 12822  023E  023B               	subwf	TM1650_fastPrintNum@num,w
 12823  023F  00A8               	movwf	___lwdiv@dividend
 12824  0240  0821               	movf	?___lwmod+1,w
 12825  0241  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 12826  0242  00A9               	movwf	___lwdiv@dividend+1
 12827  0243  3197  2711  3180   	fcall	___lwdiv
 12828  0246  0140               	movlb	0	; select bank0
 12829  0247  0827               	movf	?___lwdiv+1,w
 12830  0248  00C7               	movwf	_TM1650_fastPrintNum$2885+1
 12831  0249  0826               	movf	?___lwdiv,w
 12832  024A  00C6               	movwf	_TM1650_fastPrintNum$2885
 12833                           
 12834                           ;tm1650.c: 97:         array[1] = ((num - (num % 10))/10) % 10 + 48;
 12835  024B  300A               	movlw	10
 12836  024C  00A0               	movwf	___lwmod@divisor
 12837  024D  3000               	movlw	0
 12838  024E  00A1               	movwf	___lwmod@divisor+1
 12839  024F  0847               	movf	_TM1650_fastPrintNum$2885+1,w
 12840  0250  00A3               	movwf	___lwmod@dividend+1
 12841  0251  0846               	movf	_TM1650_fastPrintNum$2885,w
 12842  0252  00A2               	movwf	___lwmod@dividend
 12843  0253  3196  264C  3180   	fcall	___lwmod
 12844  0256  0140               	movlb	0	; select bank0
 12845  0257  0820               	movf	?___lwmod,w
 12846  0258  3E30               	addlw	48
 12847  0259  00BD               	movwf	??_TM1650_fastPrintNum
 12848  025A  083D               	movf	??_TM1650_fastPrintNum,w
 12849  025B  00C3               	movwf	TM1650_fastPrintNum@array+1
 12850                           
 12851                           ;tm1650.c: 98:         array[2] = ((num - (((num - (num % 10))/10) % 10))/100) %10 + 48;
 12852  025C  300A               	movlw	10
 12853  025D  00A6               	movwf	___lwdiv@divisor
 12854  025E  3000               	movlw	0
 12855  025F  00A7               	movwf	___lwdiv@divisor+1
 12856  0260  300A               	movlw	10
 12857  0261  00A0               	movwf	___lwmod@divisor
 12858  0262  3000               	movlw	0
 12859  0263  00A1               	movwf	___lwmod@divisor+1
 12860  0264  083C               	movf	TM1650_fastPrintNum@num+1,w
 12861  0265  00A3               	movwf	___lwmod@dividend+1
 12862  0266  083B               	movf	TM1650_fastPrintNum@num,w
 12863  0267  00A2               	movwf	___lwmod@dividend
 12864  0268  3196  264C  3180   	fcall	___lwmod
 12865  026B  0140               	movlb	0	; select bank0
 12866  026C  0820               	movf	?___lwmod,w
 12867  026D  023B               	subwf	TM1650_fastPrintNum@num,w
 12868  026E  00A8               	movwf	___lwdiv@dividend
 12869  026F  0821               	movf	?___lwmod+1,w
 12870  0270  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 12871  0271  00A9               	movwf	___lwdiv@dividend+1
 12872  0272  3197  2711  3180   	fcall	___lwdiv
 12873  0275  0140               	movlb	0	; select bank0
 12874  0276  0827               	movf	?___lwdiv+1,w
 12875  0277  00C7               	movwf	_TM1650_fastPrintNum$2885+1
 12876  0278  0826               	movf	?___lwdiv,w
 12877  0279  00C6               	movwf	_TM1650_fastPrintNum$2885
 12878                           
 12879                           ;tm1650.c: 98:         array[2] = ((num - (((num - (num % 10))/10) % 10))/100) %10 + 48;
 12880  027A  3064               	movlw	100
 12881  027B  00A6               	movwf	___lwdiv@divisor
 12882  027C  3000               	movlw	0
 12883  027D  00A7               	movwf	___lwdiv@divisor+1
 12884  027E  300A               	movlw	10
 12885  027F  00A0               	movwf	___lwmod@divisor
 12886  0280  3000               	movlw	0
 12887  0281  00A1               	movwf	___lwmod@divisor+1
 12888  0282  0847               	movf	_TM1650_fastPrintNum$2885+1,w
 12889  0283  00A3               	movwf	___lwmod@dividend+1
 12890  0284  0846               	movf	_TM1650_fastPrintNum$2885,w
 12891  0285  00A2               	movwf	___lwmod@dividend
 12892  0286  3196  264C  3180   	fcall	___lwmod
 12893  0289  0140               	movlb	0	; select bank0
 12894  028A  0820               	movf	?___lwmod,w
 12895  028B  023B               	subwf	TM1650_fastPrintNum@num,w
 12896  028C  00A8               	movwf	___lwdiv@dividend
 12897  028D  0821               	movf	?___lwmod+1,w
 12898  028E  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 12899  028F  00A9               	movwf	___lwdiv@dividend+1
 12900  0290  3197  2711  3180   	fcall	___lwdiv
 12901  0293  0140               	movlb	0	; select bank0
 12902  0294  0827               	movf	?___lwdiv+1,w
 12903  0295  00C1               	movwf	_TM1650_fastPrintNum$2886+1
 12904  0296  0826               	movf	?___lwdiv,w
 12905  0297  00C0               	movwf	_TM1650_fastPrintNum$2886
 12906                           
 12907                           ;tm1650.c: 98:         array[2] = ((num - (((num - (num % 10))/10) % 10))/100) %10 + 48;
 12908  0298  300A               	movlw	10
 12909  0299  00A0               	movwf	___lwmod@divisor
 12910  029A  3000               	movlw	0
 12911  029B  00A1               	movwf	___lwmod@divisor+1
 12912  029C  0841               	movf	_TM1650_fastPrintNum$2886+1,w
 12913  029D  00A3               	movwf	___lwmod@dividend+1
 12914  029E  0840               	movf	_TM1650_fastPrintNum$2886,w
 12915  029F  00A2               	movwf	___lwmod@dividend
 12916  02A0  3196  264C  3180   	fcall	___lwmod
 12917  02A3  0140               	movlb	0	; select bank0
 12918  02A4  0820               	movf	?___lwmod,w
 12919  02A5  3E30               	addlw	48
 12920  02A6  00BD               	movwf	??_TM1650_fastPrintNum
 12921  02A7  083D               	movf	??_TM1650_fastPrintNum,w
 12922  02A8  00C4               	movwf	TM1650_fastPrintNum@array+2
 12923                           
 12924                           ;tm1650.c: 99:         array[3] = ((num - (((num - (((num - (num % 10))/10) % 10))/100) 
      +                          %10))/1000) % 10 + 48;
 12925  02A9  300A               	movlw	10
 12926  02AA  00A6               	movwf	___lwdiv@divisor
 12927  02AB  3000               	movlw	0
 12928  02AC  00A7               	movwf	___lwdiv@divisor+1
 12929  02AD  300A               	movlw	10
 12930  02AE  00A0               	movwf	___lwmod@divisor
 12931  02AF  3000               	movlw	0
 12932  02B0  00A1               	movwf	___lwmod@divisor+1
 12933  02B1  083C               	movf	TM1650_fastPrintNum@num+1,w
 12934  02B2  00A3               	movwf	___lwmod@dividend+1
 12935  02B3  083B               	movf	TM1650_fastPrintNum@num,w
 12936  02B4  00A2               	movwf	___lwmod@dividend
 12937  02B5  3196  264C  3180   	fcall	___lwmod
 12938  02B8  0140               	movlb	0	; select bank0
 12939  02B9  0820               	movf	?___lwmod,w
 12940  02BA  023B               	subwf	TM1650_fastPrintNum@num,w
 12941  02BB  00A8               	movwf	___lwdiv@dividend
 12942  02BC  0821               	movf	?___lwmod+1,w
 12943  02BD  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 12944  02BE  00A9               	movwf	___lwdiv@dividend+1
 12945  02BF  3197  2711  3180   	fcall	___lwdiv
 12946  02C2  0140               	movlb	0	; select bank0
 12947  02C3  0827               	movf	?___lwdiv+1,w
 12948  02C4  00C7               	movwf	_TM1650_fastPrintNum$2885+1
 12949  02C5  0826               	movf	?___lwdiv,w
 12950  02C6  00C6               	movwf	_TM1650_fastPrintNum$2885
 12951                           
 12952                           ;tm1650.c: 99:         array[3] = ((num - (((num - (((num - (num % 10))/10) % 10))/100) 
      +                          %10))/1000) % 10 + 48;
 12953  02C7  3064               	movlw	100
 12954  02C8  00A6               	movwf	___lwdiv@divisor
 12955  02C9  3000               	movlw	0
 12956  02CA  00A7               	movwf	___lwdiv@divisor+1
 12957  02CB  300A               	movlw	10
 12958  02CC  00A0               	movwf	___lwmod@divisor
 12959  02CD  3000               	movlw	0
 12960  02CE  00A1               	movwf	___lwmod@divisor+1
 12961  02CF  0847               	movf	_TM1650_fastPrintNum$2885+1,w
 12962  02D0  00A3               	movwf	___lwmod@dividend+1
 12963  02D1  0846               	movf	_TM1650_fastPrintNum$2885,w
 12964  02D2  00A2               	movwf	___lwmod@dividend
 12965  02D3  3196  264C  3180   	fcall	___lwmod
 12966  02D6  0140               	movlb	0	; select bank0
 12967  02D7  0820               	movf	?___lwmod,w
 12968  02D8  023B               	subwf	TM1650_fastPrintNum@num,w
 12969  02D9  00A8               	movwf	___lwdiv@dividend
 12970  02DA  0821               	movf	?___lwmod+1,w
 12971  02DB  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 12972  02DC  00A9               	movwf	___lwdiv@dividend+1
 12973  02DD  3197  2711  3180   	fcall	___lwdiv
 12974  02E0  0140               	movlb	0	; select bank0
 12975  02E1  0827               	movf	?___lwdiv+1,w
 12976  02E2  00C1               	movwf	_TM1650_fastPrintNum$2886+1
 12977  02E3  0826               	movf	?___lwdiv,w
 12978  02E4  00C0               	movwf	_TM1650_fastPrintNum$2886
 12979                           
 12980                           ;tm1650.c: 99:         array[3] = ((num - (((num - (((num - (num % 10))/10) % 10))/100) 
      +                          %10))/1000) % 10 + 48;
 12981  02E5  30E8               	movlw	232
 12982  02E6  00A6               	movwf	___lwdiv@divisor
 12983  02E7  3003               	movlw	3
 12984  02E8  00A7               	movwf	___lwdiv@divisor+1
 12985  02E9  300A               	movlw	10
 12986  02EA  00A0               	movwf	___lwmod@divisor
 12987  02EB  3000               	movlw	0
 12988  02EC  00A1               	movwf	___lwmod@divisor+1
 12989  02ED  0841               	movf	_TM1650_fastPrintNum$2886+1,w
 12990  02EE  00A3               	movwf	___lwmod@dividend+1
 12991  02EF  0840               	movf	_TM1650_fastPrintNum$2886,w
 12992  02F0  00A2               	movwf	___lwmod@dividend
 12993  02F1  3196  264C  3180   	fcall	___lwmod
 12994  02F4  0140               	movlb	0	; select bank0
 12995  02F5  0820               	movf	?___lwmod,w
 12996  02F6  023B               	subwf	TM1650_fastPrintNum@num,w
 12997  02F7  00A8               	movwf	___lwdiv@dividend
 12998  02F8  0821               	movf	?___lwmod+1,w
 12999  02F9  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 13000  02FA  00A9               	movwf	___lwdiv@dividend+1
 13001  02FB  3197  2711  3180   	fcall	___lwdiv
 13002  02FE  0140               	movlb	0	; select bank0
 13003  02FF  0827               	movf	?___lwdiv+1,w
 13004  0300  00BF               	movwf	_TM1650_fastPrintNum$2887+1
 13005  0301  0826               	movf	?___lwdiv,w
 13006  0302  00BE               	movwf	_TM1650_fastPrintNum$2887
 13007                           
 13008                           ;tm1650.c: 99:         array[3] = ((num - (((num - (((num - (num % 10))/10) % 10))/100) 
      +                          %10))/1000) % 10 + 48;
 13009  0303  300A               	movlw	10
 13010  0304  00A0               	movwf	___lwmod@divisor
 13011  0305  3000               	movlw	0
 13012  0306  00A1               	movwf	___lwmod@divisor+1
 13013  0307  083F               	movf	_TM1650_fastPrintNum$2887+1,w
 13014  0308  00A3               	movwf	___lwmod@dividend+1
 13015  0309  083E               	movf	_TM1650_fastPrintNum$2887,w
 13016  030A  00A2               	movwf	___lwmod@dividend
 13017  030B  3196  264C  3180   	fcall	___lwmod
 13018  030E  0140               	movlb	0	; select bank0
 13019  030F  0820               	movf	?___lwmod,w
 13020  0310  3E30               	addlw	48
 13021  0311  00BD               	movwf	??_TM1650_fastPrintNum
 13022  0312  083D               	movf	??_TM1650_fastPrintNum,w
 13023  0313  00C5               	movwf	TM1650_fastPrintNum@array+3
 13024                           
 13025                           ;tm1650.c: 100:         TM1650_setDigit(0, array[3], 0);
 13026  0314  0845               	movf	TM1650_fastPrintNum@array+3,w
 13027  0315  00BD               	movwf	??_TM1650_fastPrintNum
 13028  0316  083D               	movf	??_TM1650_fastPrintNum,w
 13029  0317  00B5               	movwf	TM1650_setDigit@num
 13030  0318  01B6               	clrf	TM1650_setDigit@dp
 13031  0319  3000               	movlw	0
 13032  031A  3188  2016  3180   	fcall	_TM1650_setDigit
 13033                           
 13034                           ;tm1650.c: 101:         TM1650_setDigit(1, array[2], 0);
 13035  031D  0140               	movlb	0	; select bank0
 13036  031E  0844               	movf	TM1650_fastPrintNum@array+2,w
 13037  031F  00BD               	movwf	??_TM1650_fastPrintNum
 13038  0320  083D               	movf	??_TM1650_fastPrintNum,w
 13039  0321  00B5               	movwf	TM1650_setDigit@num
 13040  0322  01B6               	clrf	TM1650_setDigit@dp
 13041  0323  3001               	movlw	1
 13042  0324  3188  2016  3180   	fcall	_TM1650_setDigit
 13043                           
 13044                           ;tm1650.c: 102:         TM1650_setDigit(2, array[1], 0);
 13045  0327  0140               	movlb	0	; select bank0
 13046  0328  0843               	movf	TM1650_fastPrintNum@array+1,w
 13047  0329  00BD               	movwf	??_TM1650_fastPrintNum
 13048  032A  083D               	movf	??_TM1650_fastPrintNum,w
 13049  032B  00B5               	movwf	TM1650_setDigit@num
 13050  032C  01B6               	clrf	TM1650_setDigit@dp
 13051  032D  3002               	movlw	2
 13052  032E  3188  2016  3180   	fcall	_TM1650_setDigit
 13053                           
 13054                           ;tm1650.c: 103:         TM1650_setDigit(3, array[0], 0);
 13055  0331  0140               	movlb	0	; select bank0
 13056  0332  0842               	movf	TM1650_fastPrintNum@array,w
 13057  0333  00BD               	movwf	??_TM1650_fastPrintNum
 13058  0334  083D               	movf	??_TM1650_fastPrintNum,w
 13059  0335  00B5               	movwf	TM1650_setDigit@num
 13060  0336  01B6               	clrf	TM1650_setDigit@dp
 13061  0337  3003               	movlw	3
 13062  0338  3188  2016         	fcall	_TM1650_setDigit
 13063                           
 13064                           ;tm1650.c: 104:     }else{
 13065  033A  0008               	return
 13066  033B                     l5243:	
 13067                           
 13068                           ;tm1650.c: 105:         TM1650_setDigit(0, 'E', 0);
 13069  033B  3045               	movlw	69
 13070  033C  00BD               	movwf	??_TM1650_fastPrintNum
 13071  033D  083D               	movf	??_TM1650_fastPrintNum,w
 13072  033E  00B5               	movwf	TM1650_setDigit@num
 13073  033F  01B6               	clrf	TM1650_setDigit@dp
 13074  0340  3000               	movlw	0
 13075  0341  3188  2016  3180   	fcall	_TM1650_setDigit
 13076                           
 13077                           ;tm1650.c: 106:         TM1650_setDigit(1, 'E', 0);
 13078  0344  3045               	movlw	69
 13079  0345  0140               	movlb	0	; select bank0
 13080  0346  00BD               	movwf	??_TM1650_fastPrintNum
 13081  0347  083D               	movf	??_TM1650_fastPrintNum,w
 13082  0348  00B5               	movwf	TM1650_setDigit@num
 13083  0349  01B6               	clrf	TM1650_setDigit@dp
 13084  034A  3001               	movlw	1
 13085  034B  3188  2016  3180   	fcall	_TM1650_setDigit
 13086                           
 13087                           ;tm1650.c: 107:         TM1650_setDigit(2, 'E', 0);
 13088  034E  3045               	movlw	69
 13089  034F  0140               	movlb	0	; select bank0
 13090  0350  00BD               	movwf	??_TM1650_fastPrintNum
 13091  0351  083D               	movf	??_TM1650_fastPrintNum,w
 13092  0352  00B5               	movwf	TM1650_setDigit@num
 13093  0353  01B6               	clrf	TM1650_setDigit@dp
 13094  0354  3002               	movlw	2
 13095  0355  3188  2016  3180   	fcall	_TM1650_setDigit
 13096                           
 13097                           ;tm1650.c: 108:         TM1650_setDigit(3, 'E', 0);
 13098  0358  3045               	movlw	69
 13099  0359  0140               	movlb	0	; select bank0
 13100  035A  00BD               	movwf	??_TM1650_fastPrintNum
 13101  035B  083D               	movf	??_TM1650_fastPrintNum,w
 13102  035C  00B5               	movwf	TM1650_setDigit@num
 13103  035D  01B6               	clrf	TM1650_setDigit@dp
 13104  035E  3003               	movlw	3
 13105  035F  3188  2016         	fcall	_TM1650_setDigit
 13106  0361  0008               	return
 13107  0362                     __end_of_TM1650_fastPrintNum:	
 13108                           
 13109                           	psect	text34
 13110  164C                     __ptext34:	
 13111 ;; *************** function ___lwmod *****************
 13112 ;; Defined at:
 13113 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
 13114 ;; Parameters:    Size  Location     Type
 13115 ;;  divisor         2    0[BANK0 ] unsigned int 
 13116 ;;  dividend        2    2[BANK0 ] unsigned int 
 13117 ;; Auto vars:     Size  Location     Type
 13118 ;;  counter         1    5[BANK0 ] unsigned char 
 13119 ;; Return value:  Size  Location     Type
 13120 ;;                  2    0[BANK0 ] unsigned int 
 13121 ;; Registers used:
 13122 ;;		wreg, status,2, status,0
 13123 ;; Tracked objects:
 13124 ;;		On entry : 0/0
 13125 ;;		On exit  : 0/0
 13126 ;;		Unchanged: 0/0
 13127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13128 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13129 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13130 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13131 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13132 ;;Total ram usage:        6 bytes
 13133 ;; Hardware stack levels used:    1
 13134 ;; Hardware stack levels required when called:    4
 13135 ;; This function calls:
 13136 ;;		Nothing
 13137 ;; This function is called by:
 13138 ;;		_TM1650_fastPrintNum
 13139 ;; This function uses a non-reentrant model
 13140 ;;
 13141                           
 13142                           
 13143                           ;psect for function ___lwmod
 13144  164C                     ___lwmod:	
 13145                           
 13146                           ;incstack = 0
 13147                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13148  164C  0140               	movlb	0	; select bank0
 13149  164D  0820               	movf	___lwmod@divisor,w
 13150  164E  0421               	iorwf	___lwmod@divisor+1,w
 13151  164F  1903               	btfsc	3,2
 13152  1650  2E74               	goto	l5033
 13153  1651  01A5               	clrf	___lwmod@counter
 13154  1652  0AA5               	incf	___lwmod@counter,f
 13155  1653                     l5023:	
 13156  1653  1BA1               	btfsc	___lwmod@divisor+1,7
 13157  1654  2E5F               	goto	l5025
 13158  1655  3001               	movlw	1
 13159  1656                     u4475:	
 13160  1656  35A0               	lslf	___lwmod@divisor,f
 13161  1657  0DA1               	rlf	___lwmod@divisor+1,f
 13162  1658  0B89               	decfsz	9,f
 13163  1659  2E56               	goto	u4475
 13164  165A  3001               	movlw	1
 13165  165B  00A4               	movwf	??___lwmod
 13166  165C  0824               	movf	??___lwmod,w
 13167  165D  07A5               	addwf	___lwmod@counter,f
 13168  165E  2E53               	goto	l5023
 13169  165F                     l5025:	
 13170  165F  0821               	movf	___lwmod@divisor+1,w
 13171  1660  0223               	subwf	___lwmod@dividend+1,w
 13172  1661  1D03               	skipz
 13173  1662  2E65               	goto	u4495
 13174  1663  0820               	movf	___lwmod@divisor,w
 13175  1664  0222               	subwf	___lwmod@dividend,w
 13176  1665                     u4495:	
 13177  1665  1C03               	skipc
 13178  1666  2E6B               	goto	l5029
 13179  1667  0820               	movf	___lwmod@divisor,w
 13180  1668  02A2               	subwf	___lwmod@dividend,f
 13181  1669  0821               	movf	___lwmod@divisor+1,w
 13182  166A  3BA3               	subwfb	___lwmod@dividend+1,f
 13183  166B                     l5029:	
 13184  166B  3001               	movlw	1
 13185  166C                     u4505:	
 13186  166C  36A1               	lsrf	___lwmod@divisor+1,f
 13187  166D  0CA0               	rrf	___lwmod@divisor,f
 13188  166E  0B89               	decfsz	9,f
 13189  166F  2E6C               	goto	u4505
 13190  1670  3001               	movlw	1
 13191  1671  02A5               	subwf	___lwmod@counter,f
 13192  1672  1D03               	btfss	3,2
 13193  1673  2E5F               	goto	l5025
 13194  1674                     l5033:	
 13195  1674  0823               	movf	___lwmod@dividend+1,w
 13196  1675  00A1               	movwf	?___lwmod+1
 13197  1676  0822               	movf	___lwmod@dividend,w
 13198  1677  00A0               	movwf	?___lwmod
 13199  1678  0008               	return
 13200  1679                     __end_of___lwmod:	
 13201                           
 13202                           	psect	text35
 13203  0816                     __ptext35:	
 13204 ;; *************** function _TM1650_setDigit *****************
 13205 ;; Defined at:
 13206 ;;		line 26 in file "tm1650.c"
 13207 ;; Parameters:    Size  Location     Type
 13208 ;;  digit           1    wreg     unsigned char 
 13209 ;;  num             1   21[BANK0 ] unsigned char 
 13210 ;;  dp              1   22[BANK0 ] _Bool 
 13211 ;; Auto vars:     Size  Location     Type
 13212 ;;  digit           1   25[BANK0 ] unsigned char 
 13213 ;;  data            1   26[BANK0 ] unsigned char 
 13214 ;; Return value:  Size  Location     Type
 13215 ;;                  1    wreg      void 
 13216 ;; Registers used:
 13217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13218 ;; Tracked objects:
 13219 ;;		On entry : 0/0
 13220 ;;		On exit  : 0/0
 13221 ;;		Unchanged: 0/0
 13222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13223 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13224 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13225 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13226 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13227 ;;Total ram usage:        6 bytes
 13228 ;; Hardware stack levels used:    1
 13229 ;; Hardware stack levels required when called:    8
 13230 ;; This function calls:
 13231 ;;		_writeData
 13232 ;; This function is called by:
 13233 ;;		_TM1650_fastPrintNum
 13234 ;;		_putch
 13235 ;; This function uses a non-reentrant model
 13236 ;;
 13237                           
 13238                           
 13239                           ;psect for function _TM1650_setDigit
 13240  0816                     _TM1650_setDigit:	
 13241                           
 13242                           ;incstack = 0
 13243                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13244                           ;TM1650_setDigit@digit stored from wreg
 13245  0816  0140               	movlb	0	; select bank0
 13246  0817  00B9               	movwf	TM1650_setDigit@digit
 13247                           
 13248                           ;tm1650.c: 27:     const uint8_t charTable[] =;tm1650.c: 36:     uint8_t data = charTabl
      +                          e[num-32];
 13249  0818  0835               	movf	TM1650_setDigit@num,w
 13250  0819  3EE0               	addlw	low ((TM1650_setDigit@charTable+65504)| (0+32768))
 13251  081A  0084               	movwf	4
 13252  081B  308F               	movlw	high ((TM1650_setDigit@charTable+65504)| (0+32768))
 13253  081C  1803               	skipnc
 13254  081D  3E01               	addlw	1
 13255  081E  0085               	movwf	5
 13256  081F  0800               	movf	0,w	;code access
 13257  0820  00B7               	movwf	??_TM1650_setDigit
 13258  0821  0837               	movf	??_TM1650_setDigit,w
 13259  0822  00BA               	movwf	TM1650_setDigit@data
 13260                           
 13261                           ;tm1650.c: 37:     if(dp == 1){
 13262  0823  0336               	decf	TM1650_setDigit@dp,w
 13263  0824  1D03               	btfss	3,2
 13264  0825  2848               	goto	l5009
 13265                           
 13266                           ;tm1650.c: 38:         data |= 0b10000000;
 13267  0826  17BA               	bsf	TM1650_setDigit@data,7
 13268  0827  2848               	goto	l5009
 13269  0828                     l4999:	
 13270                           
 13271                           ;tm1650.c: 43:                 writeData(0x34, data);
 13272  0828  083A               	movf	TM1650_setDigit@data,w
 13273  0829  00B7               	movwf	??_TM1650_setDigit
 13274  082A  0837               	movf	??_TM1650_setDigit,w
 13275  082B  00AE               	movwf	writeData@data
 13276  082C  3034               	movlw	52
 13277  082D  3195  25B8         	fcall	_writeData
 13278                           
 13279                           ;tm1650.c: 44:                 break;
 13280  082F  0008               	return
 13281  0830                     l5001:	
 13282                           
 13283                           ;tm1650.c: 46:                 writeData(0x35, data);
 13284  0830  083A               	movf	TM1650_setDigit@data,w
 13285  0831  00B7               	movwf	??_TM1650_setDigit
 13286  0832  0837               	movf	??_TM1650_setDigit,w
 13287  0833  00AE               	movwf	writeData@data
 13288  0834  3035               	movlw	53
 13289  0835  3195  25B8         	fcall	_writeData
 13290                           
 13291                           ;tm1650.c: 47:                 break;
 13292  0837  0008               	return
 13293  0838                     l5003:	
 13294                           
 13295                           ;tm1650.c: 49:                 writeData(0x36, data);
 13296  0838  083A               	movf	TM1650_setDigit@data,w
 13297  0839  00B7               	movwf	??_TM1650_setDigit
 13298  083A  0837               	movf	??_TM1650_setDigit,w
 13299  083B  00AE               	movwf	writeData@data
 13300  083C  3036               	movlw	54
 13301  083D  3195  25B8         	fcall	_writeData
 13302                           
 13303                           ;tm1650.c: 50:                 break;
 13304  083F  0008               	return
 13305  0840                     l5005:	
 13306                           
 13307                           ;tm1650.c: 52:                 writeData(0x37, data);
 13308  0840  083A               	movf	TM1650_setDigit@data,w
 13309  0841  00B7               	movwf	??_TM1650_setDigit
 13310  0842  0837               	movf	??_TM1650_setDigit,w
 13311  0843  00AE               	movwf	writeData@data
 13312  0844  3037               	movlw	55
 13313  0845  3195  25B8         	fcall	_writeData
 13314                           
 13315                           ;tm1650.c: 53:                 break;
 13316  0847  0008               	return
 13317  0848                     l5009:	
 13318  0848  0839               	movf	TM1650_setDigit@digit,w
 13319  0849  00B7               	movwf	??_TM1650_setDigit
 13320  084A  01B8               	clrf	??_TM1650_setDigit+1
 13321                           
 13322                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13323                           ; Switch size 1, requested type "simple"
 13324                           ; Number of cases is 1, Range of values is 0 to 0
 13325                           ; switch strategies available:
 13326                           ; Name         Instructions Cycles
 13327                           ; simple_byte            4     3 (average)
 13328                           ; direct_byte            8     6 (fixed)
 13329                           ; jumptable            260     6 (fixed)
 13330                           ;	Chosen strategy is simple_byte
 13331  084B  0838               	movf	??_TM1650_setDigit+1,w
 13332  084C  3A00               	xorlw	0	; case 0
 13333  084D  1903               	skipnz
 13334  084E  2850               	goto	l5911
 13335  084F  285E               	goto	l732
 13336  0850                     l5911:	
 13337                           
 13338                           ; Switch size 1, requested type "simple"
 13339                           ; Number of cases is 4, Range of values is 0 to 3
 13340                           ; switch strategies available:
 13341                           ; Name         Instructions Cycles
 13342                           ; simple_byte           13     7 (average)
 13343                           ; direct_byte           14     6 (fixed)
 13344                           ; jumptable            260     6 (fixed)
 13345                           ;	Chosen strategy is simple_byte
 13346  0850  0837               	movf	??_TM1650_setDigit,w
 13347  0851  3A00               	xorlw	0	; case 0
 13348  0852  1903               	skipnz
 13349  0853  2828               	goto	l4999
 13350  0854  3A01               	xorlw	1	; case 1
 13351  0855  1903               	skipnz
 13352  0856  2830               	goto	l5001
 13353  0857  3A03               	xorlw	3	; case 2
 13354  0858  1903               	skipnz
 13355  0859  2838               	goto	l5003
 13356  085A  3A01               	xorlw	1	; case 3
 13357  085B  1903               	skipnz
 13358  085C  2840               	goto	l5005
 13359  085D  285E               	goto	l732
 13360  085E                     l732:	
 13361  085E  0008               	return
 13362  085F                     __end_of_TM1650_setDigit:	
 13363                           
 13364                           	psect	text36
 13365  15B8                     __ptext36:	
 13366 ;; *************** function _writeData *****************
 13367 ;; Defined at:
 13368 ;;		line 19 in file "tm1650.c"
 13369 ;; Parameters:    Size  Location     Type
 13370 ;;  address         1    wreg     unsigned char 
 13371 ;;  data            1   14[BANK0 ] unsigned char 
 13372 ;; Auto vars:     Size  Location     Type
 13373 ;;  address         1   18[BANK0 ] unsigned char 
 13374 ;;  status          1   20[BANK0 ] enum E10868
 13375 ;;  dataToSend      1   19[BANK0 ] unsigned char 
 13376 ;; Return value:  Size  Location     Type
 13377 ;;                  1    wreg      void 
 13378 ;; Registers used:
 13379 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13380 ;; Tracked objects:
 13381 ;;		On entry : 0/0
 13382 ;;		On exit  : 0/0
 13383 ;;		Unchanged: 0/0
 13384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13385 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13386 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13387 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13388 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13389 ;;Total ram usage:        7 bytes
 13390 ;; Hardware stack levels used:    1
 13391 ;; Hardware stack levels required when called:    7
 13392 ;; This function calls:
 13393 ;;		_I2C1_MasterWrite
 13394 ;; This function is called by:
 13395 ;;		_TM1650_setDigit
 13396 ;;		_TM1650_enable
 13397 ;;		_putch
 13398 ;; This function uses a non-reentrant model
 13399 ;;
 13400                           
 13401                           
 13402                           ;psect for function _writeData
 13403  15B8                     _writeData:	
 13404                           
 13405                           ;incstack = 0
 13406                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13407                           ;writeData@address stored from wreg
 13408  15B8  0140               	movlb	0	; select bank0
 13409  15B9  00B2               	movwf	writeData@address
 13410                           
 13411                           ;tm1650.c: 20:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 13412  15BA  3002               	movlw	2
 13413  15BB  00AF               	movwf	??_writeData
 13414  15BC  082F               	movf	??_writeData,w
 13415  15BD  00B4               	movwf	writeData@status
 13416                           
 13417                           ;tm1650.c: 21:     uint8_t dataToSend = data;
 13418  15BE  082E               	movf	writeData@data,w
 13419  15BF  00AF               	movwf	??_writeData
 13420  15C0  082F               	movf	??_writeData,w
 13421  15C1  00B3               	movwf	writeData@dataToSend
 13422                           
 13423                           ;tm1650.c: 22:     I2C1_MasterWrite(&dataToSend, 1, address, &status);
 13424  15C2  01A7               	clrf	I2C1_MasterWrite@length
 13425  15C3  0AA7               	incf	I2C1_MasterWrite@length,f
 13426  15C4  0832               	movf	writeData@address,w
 13427  15C5  00AF               	movwf	??_writeData
 13428  15C6  01B0               	clrf	??_writeData+1
 13429  15C7  082F               	movf	??_writeData,w
 13430  15C8  00A8               	movwf	I2C1_MasterWrite@address
 13431  15C9  0830               	movf	??_writeData+1,w
 13432  15CA  00A9               	movwf	I2C1_MasterWrite@address+1
 13433  15CB  3034               	movlw	(low (writeData@status| 0))& (0+255)
 13434  15CC  00B1               	movwf	??_writeData+2
 13435  15CD  0831               	movf	??_writeData+2,w
 13436  15CE  00AA               	movwf	I2C1_MasterWrite@pflag
 13437  15CF  3033               	movlw	(low (writeData@dataToSend| 0))& (0+255)
 13438  15D0  3196  2622  3195   	fcall	_I2C1_MasterWrite
 13439  15D3                     l4977:	
 13440                           ;tm1650.c: 23:     while( status == I2C1_MESSAGE_PENDING );
 13441                           
 13442  15D3  3002               	movlw	2
 13443  15D4  0140               	movlb	0	; select bank0
 13444  15D5  0634               	xorwf	writeData@status,w
 13445  15D6  1D03               	btfss	3,2
 13446  15D7  0008               	return
 13447  15D8  2DD3               	goto	l4977
 13448  15D9                     __end_of_writeData:	
 13449                           
 13450                           	psect	text37
 13451  1622                     __ptext37:	
 13452 ;; *************** function _I2C1_MasterWrite *****************
 13453 ;; Defined at:
 13454 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 13455 ;; Parameters:    Size  Location     Type
 13456 ;;  pdata           1    wreg     PTR unsigned char 
 13457 ;;		 -> writeData@dataToSend(1), 
 13458 ;;  length          1    7[BANK0 ] unsigned char 
 13459 ;;  address         2    8[BANK0 ] unsigned short 
 13460 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 13461 ;;		 -> writeData@status(1), 
 13462 ;; Auto vars:     Size  Location     Type
 13463 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 13464 ;;		 -> writeData@dataToSend(1), 
 13465 ;; Return value:  Size  Location     Type
 13466 ;;                  1    wreg      void 
 13467 ;; Registers used:
 13468 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13469 ;; Tracked objects:
 13470 ;;		On entry : 0/0
 13471 ;;		On exit  : 0/0
 13472 ;;		Unchanged: 0/0
 13473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13474 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13475 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13476 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13477 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13478 ;;Total ram usage:        7 bytes
 13479 ;; Hardware stack levels used:    1
 13480 ;; Hardware stack levels required when called:    6
 13481 ;; This function calls:
 13482 ;;		_I2C1_MasterTRBInsert
 13483 ;;		_I2C1_MasterWriteTRBBuild
 13484 ;; This function is called by:
 13485 ;;		_writeData
 13486 ;; This function uses a non-reentrant model
 13487 ;;
 13488                           
 13489                           
 13490                           ;psect for function _I2C1_MasterWrite
 13491  1622                     _I2C1_MasterWrite:	
 13492                           
 13493                           ;incstack = 0
 13494                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13495                           ;I2C1_MasterWrite@pdata stored from wreg
 13496  1622  0140               	movlb	0	; select bank0
 13497  1623  00AD               	movwf	I2C1_MasterWrite@pdata
 13498                           
 13499                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 13500  1624  0141               	movlb	1	; select bank1
 13501  1625  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 13502  1626  2E45               	goto	l4971
 13503                           
 13504                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 13505  1627  0140               	movlb	0	; select bank0
 13506  1628  082D               	movf	I2C1_MasterWrite@pdata,w
 13507  1629  00AB               	movwf	??_I2C1_MasterWrite
 13508  162A  082B               	movf	??_I2C1_MasterWrite,w
 13509  162B  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 13510  162C  0827               	movf	I2C1_MasterWrite@length,w
 13511  162D  00AC               	movwf	??_I2C1_MasterWrite+1
 13512  162E  082C               	movf	??_I2C1_MasterWrite+1,w
 13513  162F  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 13514  1630  0829               	movf	I2C1_MasterWrite@address+1,w
 13515  1631  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 13516  1632  0828               	movf	I2C1_MasterWrite@address,w
 13517  1633  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 13518  1634  3046               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 13519  1635  3195  25D9  3196   	fcall	_I2C1_MasterWriteTRBBuild
 13520                           
 13521                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 13522  1638  3046               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 13523  1639  0140               	movlb	0	; select bank0
 13524  163A  00AB               	movwf	??_I2C1_MasterWrite
 13525  163B  082B               	movf	??_I2C1_MasterWrite,w
 13526  163C  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 13527  163D  082A               	movf	I2C1_MasterWrite@pflag,w
 13528  163E  00AC               	movwf	??_I2C1_MasterWrite+1
 13529  163F  082C               	movf	??_I2C1_MasterWrite+1,w
 13530  1640  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 13531  1641  3001               	movlw	1
 13532  1642  3188  20AA         	fcall	_I2C1_MasterTRBInsert
 13533                           
 13534                           ;mcc_generated_files/i2c1.c: 613:     }
 13535  1644  0008               	return
 13536  1645                     l4971:	
 13537                           
 13538                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 13539  1645  0140               	movlb	0	; select bank0
 13540  1646  082A               	movf	I2C1_MasterWrite@pflag,w
 13541  1647  0086               	movwf	6
 13542  1648  0187               	clrf	7
 13543  1649  0181               	clrf	1
 13544  164A  0A81               	incf	1,f
 13545  164B  0008               	return
 13546  164C                     __end_of_I2C1_MasterWrite:	
 13547                           
 13548                           	psect	text38
 13549  15D9                     __ptext38:	
 13550 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 13551 ;; Defined at:
 13552 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 13553 ;; Parameters:    Size  Location     Type
 13554 ;;  ptrb            1    wreg     PTR struct .
 13555 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 13556 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 13557 ;;		 -> writeData@dataToSend(1), 
 13558 ;;  length          1    1[BANK0 ] unsigned char 
 13559 ;;  address         2    2[BANK0 ] unsigned short 
 13560 ;; Auto vars:     Size  Location     Type
 13561 ;;  ptrb            1    6[BANK0 ] PTR struct .
 13562 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 13563 ;; Return value:  Size  Location     Type
 13564 ;;                  1    wreg      void 
 13565 ;; Registers used:
 13566 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13567 ;; Tracked objects:
 13568 ;;		On entry : 0/0
 13569 ;;		On exit  : 0/0
 13570 ;;		Unchanged: 0/0
 13571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13572 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13573 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13574 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13575 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13576 ;;Total ram usage:        7 bytes
 13577 ;; Hardware stack levels used:    1
 13578 ;; Hardware stack levels required when called:    4
 13579 ;; This function calls:
 13580 ;;		Nothing
 13581 ;; This function is called by:
 13582 ;;		_I2C1_MasterWrite
 13583 ;; This function uses a non-reentrant model
 13584 ;;
 13585                           
 13586                           
 13587                           ;psect for function _I2C1_MasterWriteTRBBuild
 13588  15D9                     _I2C1_MasterWriteTRBBuild:	
 13589                           
 13590                           ;incstack = 0
 13591                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 13592                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 13593  15D9  0140               	movlb	0	; select bank0
 13594  15DA  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 13595                           
 13596                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 13597  15DB  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 13598  15DC  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 13599  15DD  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 13600  15DE  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 13601  15DF  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 13602  15E0  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 13603  15E1  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 13604  15E2  0086               	movwf	6
 13605  15E3  3001               	movlw	1	; select bank2/3
 13606  15E4  0087               	movwf	7
 13607  15E5  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 13608  15E6  3FC0               	movwi [0]fsr1
 13609  15E7  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 13610  15E8  3FC1               	movwi [1]fsr1
 13611                           
 13612                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 13613  15E9  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 13614  15EA  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 13615  15EB  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 13616  15EC  3E02               	addlw	2
 13617  15ED  0086               	movwf	6
 13618  15EE  3001               	movlw	1	; select bank2/3
 13619  15EF  0087               	movwf	7
 13620  15F0  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 13621  15F1  0081               	movwf	1
 13622                           
 13623                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 13624  15F2  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 13625  15F3  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 13626  15F4  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 13627  15F5  3E03               	addlw	3
 13628  15F6  0086               	movwf	6
 13629  15F7  3001               	movlw	1	; select bank2/3
 13630  15F8  0087               	movwf	7
 13631  15F9  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 13632  15FA  0081               	movwf	1
 13633  15FB  0008               	return
 13634  15FC                     __end_of_I2C1_MasterWriteTRBBuild:	
 13635                           
 13636                           	psect	text39
 13637  08AA                     __ptext39:	
 13638 ;; *************** function _I2C1_MasterTRBInsert *****************
 13639 ;; Defined at:
 13640 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 13641 ;; Parameters:    Size  Location     Type
 13642 ;;  count           1    wreg     unsigned char 
 13643 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 13644 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 13645 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 13646 ;;		 -> writeData@status(1), 
 13647 ;; Auto vars:     Size  Location     Type
 13648 ;;  count           1    3[BANK0 ] unsigned char 
 13649 ;; Return value:  Size  Location     Type
 13650 ;;                  1    wreg      void 
 13651 ;; Registers used:
 13652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13653 ;; Tracked objects:
 13654 ;;		On entry : 0/0
 13655 ;;		On exit  : 0/0
 13656 ;;		Unchanged: 0/0
 13657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13658 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13659 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13660 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13661 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13662 ;;Total ram usage:        4 bytes
 13663 ;; Hardware stack levels used:    1
 13664 ;; Hardware stack levels required when called:    5
 13665 ;; This function calls:
 13666 ;;		_I2C1_WaitForLastPacketToComplete
 13667 ;; This function is called by:
 13668 ;;		_I2C1_MasterWrite
 13669 ;;		_I2C1_MasterRead
 13670 ;; This function uses a non-reentrant model
 13671 ;;
 13672                           
 13673                           
 13674                           ;psect for function _I2C1_MasterTRBInsert
 13675  08AA                     _I2C1_MasterTRBInsert:	
 13676                           
 13677                           ;incstack = 0
 13678                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13679                           ;I2C1_MasterTRBInsert@count stored from wreg
 13680  08AA  0140               	movlb	0	; select bank0
 13681  08AB  00A3               	movwf	I2C1_MasterTRBInsert@count
 13682                           
 13683                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 13684  08AC  0141               	movlb	1	; select bank1
 13685  08AD  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 13686  08AE  28E9               	goto	l4959
 13687                           
 13688                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 13689  08AF  3002               	movlw	2
 13690  08B0  0140               	movlb	0	; select bank0
 13691  08B1  00A2               	movwf	??_I2C1_MasterTRBInsert
 13692  08B2  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 13693  08B3  0086               	movwf	6
 13694  08B4  0187               	clrf	7
 13695  08B5  0822               	movf	??_I2C1_MasterTRBInsert,w
 13696  08B6  0081               	movwf	1
 13697                           
 13698                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 13699  08B7  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 13700  08B8  00A2               	movwf	??_I2C1_MasterTRBInsert
 13701  08B9  0141               	movlb	1	; select bank1
 13702  08BA  0A20               	incf	_i2c1_object^(0+128),w
 13703  08BB  0086               	movwf	6
 13704  08BC  0187               	clrf	7
 13705  08BD  0140               	movlb	0	; select bank0
 13706  08BE  0822               	movf	??_I2C1_MasterTRBInsert,w
 13707  08BF  0081               	movwf	1
 13708                           
 13709                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 13710  08C0  0823               	movf	I2C1_MasterTRBInsert@count,w
 13711  08C1  00A2               	movwf	??_I2C1_MasterTRBInsert
 13712  08C2  0141               	movlb	1	; select bank1
 13713  08C3  0820               	movf	_i2c1_object^(0+128),w
 13714  08C4  0086               	movwf	6
 13715  08C5  0187               	clrf	7
 13716  08C6  0140               	movlb	0	; select bank0
 13717  08C7  0822               	movf	??_I2C1_MasterTRBInsert,w
 13718  08C8  0081               	movwf	1
 13719                           
 13720                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 13721  08C9  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 13722  08CA  00A2               	movwf	??_I2C1_MasterTRBInsert
 13723  08CB  0141               	movlb	1	; select bank1
 13724  08CC  0820               	movf	_i2c1_object^(0+128),w
 13725  08CD  3E02               	addlw	2
 13726  08CE  0086               	movwf	6
 13727  08CF  0187               	clrf	7
 13728  08D0  0140               	movlb	0	; select bank0
 13729  08D1  0822               	movf	??_I2C1_MasterTRBInsert,w
 13730  08D2  0081               	movwf	1
 13731                           
 13732                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 13733  08D3  3003               	movlw	3
 13734  08D4  00A2               	movwf	??_I2C1_MasterTRBInsert
 13735  08D5  0822               	movf	??_I2C1_MasterTRBInsert,w
 13736  08D6  0141               	movlb	1	; select bank1
 13737  08D7  07A0               	addwf	_i2c1_object^(0+128),f
 13738                           
 13739                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 13740  08D8  0820               	movf	_i2c1_object^(0+128),w
 13741  08D9  3ACD               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 13742  08DA  1D03               	skipz
 13743  08DB  28E2               	goto	l4955
 13744                           
 13745                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 13746  08DC  30CA               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 13747  08DD  0140               	movlb	0	; select bank0
 13748  08DE  00A2               	movwf	??_I2C1_MasterTRBInsert
 13749  08DF  0822               	movf	??_I2C1_MasterTRBInsert,w
 13750  08E0  0141               	movlb	1	; select bank1
 13751  08E1  00A0               	movwf	_i2c1_object^(0+128)
 13752  08E2                     l4955:	
 13753                           
 13754                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 13755  08E2  10A2               	bcf	(_i2c1_object^(0+128)+2),1
 13756                           
 13757                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 13758  08E3  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 13759  08E4  0620               	xorwf	_i2c1_object^(0+128),w
 13760  08E5  1D03               	skipz
 13761  08E6  28EF               	goto	l4961
 13762                           
 13763                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 13764  08E7  1422               	bsf	(_i2c1_object^(0+128)+2),0
 13765  08E8  28EF               	goto	l4961
 13766  08E9                     l4959:	
 13767                           
 13768                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 13769  08E9  0140               	movlb	0	; select bank0
 13770  08EA  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 13771  08EB  0086               	movwf	6
 13772  08EC  0187               	clrf	7
 13773  08ED  0181               	clrf	1
 13774  08EE  0A81               	incf	1,f
 13775  08EF                     l4961:	
 13776                           
 13777                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 13778  08EF  0140               	movlb	0	; select bank0
 13779  08F0  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 13780  08F1  0086               	movwf	6
 13781  08F2  0187               	clrf	7
 13782  08F3  3002               	movlw	2
 13783  08F4  0601               	xorwf	1,w
 13784  08F5  1D03               	btfss	3,2
 13785  08F6  0008               	return
 13786                           
 13787                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 13788  08F7  3193  23BA         	fcall	_I2C1_WaitForLastPacketToComplete
 13789                           
 13790                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 13791  08F9  014E               	movlb	14	; select bank14
 13792  08FA  140F               	bsf	15,0	;volatile
 13793  08FB  0008               	return
 13794  08FC                     __end_of_I2C1_MasterTRBInsert:	
 13795                           
 13796                           	psect	text40
 13797  13BA                     __ptext40:	
 13798 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 13799 ;; Defined at:
 13800 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 13801 ;; Parameters:    Size  Location     Type
 13802 ;;		None
 13803 ;; Auto vars:     Size  Location     Type
 13804 ;;		None
 13805 ;; Return value:  Size  Location     Type
 13806 ;;                  1    wreg      void 
 13807 ;; Registers used:
 13808 ;;		wreg, status,2, status,0
 13809 ;; Tracked objects:
 13810 ;;		On entry : 0/0
 13811 ;;		On exit  : 0/0
 13812 ;;		Unchanged: 0/0
 13813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13818 ;;Total ram usage:        0 bytes
 13819 ;; Hardware stack levels used:    1
 13820 ;; Hardware stack levels required when called:    4
 13821 ;; This function calls:
 13822 ;;		Nothing
 13823 ;; This function is called by:
 13824 ;;		_I2C1_MasterTRBInsert
 13825 ;; This function uses a non-reentrant model
 13826 ;;
 13827                           
 13828                           
 13829                           ;psect for function _I2C1_WaitForLastPacketToComplete
 13830  13BA                     _I2C1_WaitForLastPacketToComplete:	
 13831  13BA                     l4941:	
 13832                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 13833                           
 13834                           ;incstack = 0
 13835                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 13836                           
 13837                           
 13838                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 13839  13BA  0141               	movlb	1	; select bank1
 13840  13BB  0847               	movf	_i2c1_state^(0+128),w
 13841  13BC  1903               	btfsc	3,2
 13842  13BD  0008               	return
 13843  13BE  2BBA               	goto	l4941
 13844  13BF                     __end_of_I2C1_WaitForLastPacketToComplete:	
 13845                           
 13846                           	psect	text41
 13847  149B                     __ptext41:	
 13848 ;; *************** function _CLOCK_init *****************
 13849 ;; Defined at:
 13850 ;;		line 18 in file "clock.c"
 13851 ;; Parameters:    Size  Location     Type
 13852 ;;		None
 13853 ;; Auto vars:     Size  Location     Type
 13854 ;;		None
 13855 ;; Return value:  Size  Location     Type
 13856 ;;                  1    wreg      void 
 13857 ;; Registers used:
 13858 ;;		wreg, status,2, status,0
 13859 ;; Tracked objects:
 13860 ;;		On entry : 0/0
 13861 ;;		On exit  : 0/0
 13862 ;;		Unchanged: 0/0
 13863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13868 ;;Total ram usage:        0 bytes
 13869 ;; Hardware stack levels used:    1
 13870 ;; Hardware stack levels required when called:    4
 13871 ;; This function calls:
 13872 ;;		Nothing
 13873 ;; This function is called by:
 13874 ;;		_main
 13875 ;; This function uses a non-reentrant model
 13876 ;;
 13877                           
 13878                           
 13879                           ;psect for function _CLOCK_init
 13880  149B                     _CLOCK_init:	
 13881                           
 13882                           ;clock.c: 25:     T0CON1bits.T0CS = 0b010;
 13883                           
 13884                           ;incstack = 0
 13885                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0]
 13886  149B  014B               	movlb	11	; select bank11
 13887  149C  081F               	movf	31,w	;volatile
 13888  149D  391F               	andlw	-225
 13889  149E  3840               	iorlw	64
 13890  149F  009F               	movwf	31	;volatile
 13891                           
 13892                           ;clock.c: 26:     T0CON1bits.CKPS = 0b0110;
 13893  14A0  081F               	movf	31,w	;volatile
 13894  14A1  39F0               	andlw	-16
 13895  14A2  3806               	iorlw	6
 13896  14A3  009F               	movwf	31	;volatile
 13897                           
 13898                           ;clock.c: 28:     TMR0H = 249;
 13899  14A4  30F9               	movlw	249
 13900  14A5  009D               	movwf	29	;volatile
 13901                           
 13902                           ;clock.c: 30:     PIE0bits.TMR0IE = 1;
 13903  14A6  014E               	movlb	14	; select bank14
 13904  14A7  1696               	bsf	22,5	;volatile
 13905                           
 13906                           ;clock.c: 33:     T0CON0bits.EN = 1;
 13907  14A8  014B               	movlb	11	; select bank11
 13908  14A9  179E               	bsf	30,7	;volatile
 13909  14AA  0008               	return
 13910  14AB                     __end_of_CLOCK_init:	
 13911                           
 13912                           	psect	text42
 13913  0AF9                     __ptext42:	
 13914 ;; *************** function _BUTTONS_task *****************
 13915 ;; Defined at:
 13916 ;;		line 15 in file "buttons.c"
 13917 ;; Parameters:    Size  Location     Type
 13918 ;;		None
 13919 ;; Auto vars:     Size  Location     Type
 13920 ;;  btn             1    8[BANK0 ] PTR struct .
 13921 ;;		 -> buttons(32), 
 13922 ;;  i               1    5[BANK0 ] unsigned char 
 13923 ;;  time            2    6[BANK0 ] unsigned short 
 13924 ;; Return value:  Size  Location     Type
 13925 ;;                  1    wreg      void 
 13926 ;; Registers used:
 13927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13928 ;; Tracked objects:
 13929 ;;		On entry : 0/0
 13930 ;;		On exit  : 0/0
 13931 ;;		Unchanged: 0/0
 13932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13934 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13935 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13936 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13937 ;;Total ram usage:        7 bytes
 13938 ;; Hardware stack levels used:    1
 13939 ;; Hardware stack levels required when called:    5
 13940 ;; This function calls:
 13941 ;;		_CLOCK_getTime
 13942 ;; This function is called by:
 13943 ;;		_main
 13944 ;; This function uses a non-reentrant model
 13945 ;;
 13946                           
 13947                           
 13948                           ;psect for function _BUTTONS_task
 13949  0AF9                     _BUTTONS_task:	
 13950                           
 13951                           ;buttons.c: 16:     time_t time = CLOCK_getTime();
 13952                           
 13953                           ;incstack = 0
 13954                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13955  0AF9  3193  23FB  318A   	fcall	_CLOCK_getTime
 13956  0AFC  0140               	movlb	0	; select bank0
 13957  0AFD  0821               	movf	?_CLOCK_getTime+1,w
 13958  0AFE  00A7               	movwf	BUTTONS_task@time+1
 13959  0AFF  0820               	movf	?_CLOCK_getTime,w
 13960  0B00  00A6               	movwf	BUTTONS_task@time
 13961                           
 13962                           ;buttons.c: 19:     if (time - lastTime < 10)
 13963  0B01  0142               	movlb	2	; select bank2
 13964  0B02  0840               	movf	_lastTime^(0+256),w
 13965  0B03  0140               	movlb	0	; select bank0
 13966  0B04  0226               	subwf	BUTTONS_task@time,w
 13967  0B05  00A2               	movwf	??_BUTTONS_task
 13968  0B06  0142               	movlb	2	; select bank2
 13969  0B07  0841               	movf	(_lastTime+1)^(0+256),w
 13970  0B08  0140               	movlb	0	; select bank0
 13971  0B09  3B27               	subwfb	BUTTONS_task@time+1,w
 13972  0B0A  00A3               	movwf	??_BUTTONS_task+1
 13973  0B0B  3000               	movlw	0
 13974  0B0C  0223               	subwf	??_BUTTONS_task+1,w
 13975  0B0D  300A               	movlw	10
 13976  0B0E  1903               	skipnz
 13977  0B0F  0222               	subwf	??_BUTTONS_task,w
 13978  0B10  1C03               	btfss	3,0
 13979  0B11  0008               	return
 13980                           
 13981                           ;buttons.c: 22:     lastTime = time;
 13982  0B12  0827               	movf	BUTTONS_task@time+1,w
 13983  0B13  0142               	movlb	2	; select bank2
 13984  0B14  00C1               	movwf	(_lastTime+1)^(0+256)
 13985  0B15  0140               	movlb	0	; select bank0
 13986  0B16  0826               	movf	BUTTONS_task@time,w
 13987  0B17  0142               	movlb	2	; select bank2
 13988  0B18  00C0               	movwf	_lastTime^(0+256)
 13989                           
 13990                           ;buttons.c: 25:     for (uint8_t i = 0; i < 4; i++) {
 13991  0B19  0140               	movlb	0	; select bank0
 13992  0B1A  01A5               	clrf	BUTTONS_task@i
 13993  0B1B                     l5611:	
 13994                           
 13995                           ;buttons.c: 26:         button_t* btn = buttons + i;
 13996  0B1B  0825               	movf	BUTTONS_task@i,w
 13997  0B1C  00A2               	movwf	??_BUTTONS_task
 13998  0B1D  3002               	movlw	2
 13999  0B1E                     u5005:	
 14000  0B1E  35A2               	lslf	??_BUTTONS_task,f
 14001  0B1F  3EFF               	addlw	-1
 14002  0B20  1D03               	skipz
 14003  0B21  2B1E               	goto	u5005
 14004  0B22  3522               	lslf	??_BUTTONS_task,w
 14005  0B23  3EA0               	addlw	(low (_buttons| (0+256)))& (0+255)
 14006  0B24  00A3               	movwf	??_BUTTONS_task+1
 14007  0B25  0823               	movf	??_BUTTONS_task+1,w
 14008  0B26  00A8               	movwf	BUTTONS_task@btn
 14009                           
 14010                           ;buttons.c: 29:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 14011  0B27  0828               	movf	BUTTONS_task@btn,w
 14012  0B28  0086               	movwf	6
 14013  0B29  3001               	movlw	1	; select bank2/3
 14014  0B2A  0087               	movwf	7
 14015  0B2B  3F40               	moviw [0]fsr1
 14016  0B2C  00A2               	movwf	??_BUTTONS_task
 14017  0B2D  3F41               	moviw [1]fsr1
 14018  0B2E  00A3               	movwf	??_BUTTONS_task+1
 14019  0B2F  0822               	movf	??_BUTTONS_task,w
 14020  0B30  0086               	movwf	6
 14021  0B31  0823               	movf	??_BUTTONS_task+1,w
 14022  0B32  0087               	movwf	7
 14023  0B33  3001               	movlw	1
 14024  0B34  00A4               	movwf	??_BUTTONS_task+2
 14025  0B35  0828               	movf	BUTTONS_task@btn,w
 14026  0B36  3E02               	addlw	2
 14027  0B37  0084               	movwf	4
 14028  0B38  3001               	movlw	1	; select bank2/3
 14029  0B39  0085               	movwf	5
 14030  0B3A  0A00               	incf	0,w
 14031  0B3B  2B3D               	goto	u5014
 14032  0B3C                     u5015:	
 14033  0B3C  35A4               	lslf	??_BUTTONS_task+2,f
 14034  0B3D                     u5014:	
 14035  0B3D  0B89               	decfsz	9,f
 14036  0B3E  2B3C               	goto	u5015
 14037  0B3F  0824               	movf	??_BUTTONS_task+2,w
 14038  0B40  0501               	andwf	1,w
 14039  0B41  1D03               	btfss	3,2
 14040  0B42  2B4B               	goto	l5617
 14041                           
 14042                           ;buttons.c: 30:             btn->state = STATE_PRESSED;
 14043  0B43  0828               	movf	BUTTONS_task@btn,w
 14044  0B44  3E03               	addlw	3
 14045  0B45  0086               	movwf	6
 14046  0B46  3001               	movlw	1	; select bank2/3
 14047  0B47  0087               	movwf	7
 14048  0B48  0181               	clrf	1
 14049  0B49  0A81               	incf	1,f
 14050                           
 14051                           ;buttons.c: 31:         } else {
 14052  0B4A  2B51               	goto	l803
 14053  0B4B                     l5617:	
 14054                           
 14055                           ;buttons.c: 32:             btn->state = STATE_UNPRESSED;
 14056  0B4B  0828               	movf	BUTTONS_task@btn,w
 14057  0B4C  3E03               	addlw	3
 14058  0B4D  0086               	movwf	6
 14059  0B4E  3001               	movlw	1	; select bank2/3
 14060  0B4F  0087               	movwf	7
 14061  0B50  0181               	clrf	1
 14062  0B51                     l803:	
 14063                           ;buttons.c: 33:         }
 14064                           
 14065                           
 14066                           ;buttons.c: 35:         if(btn->state == STATE_PRESSED
 14067  0B51  0828               	movf	BUTTONS_task@btn,w
 14068  0B52  3E03               	addlw	3
 14069  0B53  0086               	movwf	6
 14070  0B54  3001               	movlw	1	; select bank2/3
 14071  0B55  0087               	movwf	7
 14072  0B56  0301               	decf	1,w
 14073  0B57  1D03               	btfss	3,2
 14074  0B58  2B6A               	goto	l804
 14075  0B59  0828               	movf	BUTTONS_task@btn,w
 14076  0B5A  3E04               	addlw	4
 14077  0B5B  0086               	movwf	6
 14078  0B5C  3001               	movlw	1	; select bank2/3
 14079  0B5D  0087               	movwf	7
 14080  0B5E  0801               	movf	1,w
 14081  0B5F  1D03               	btfss	3,2
 14082  0B60  2B6A               	goto	l804
 14083                           
 14084                           ;buttons.c: 36:             && btn->lastState == STATE_UNPRESSED){;buttons.c: 37:       
      +                                btn->time = time;
 14085  0B61  0828               	movf	BUTTONS_task@btn,w
 14086  0B62  3E06               	addlw	6
 14087  0B63  0086               	movwf	6
 14088  0B64  3001               	movlw	1	; select bank2/3
 14089  0B65  0087               	movwf	7
 14090  0B66  0826               	movf	BUTTONS_task@time,w
 14091  0B67  3FC0               	movwi [0]fsr1
 14092  0B68  0827               	movf	BUTTONS_task@time+1,w
 14093  0B69  3FC1               	movwi [1]fsr1
 14094  0B6A                     l804:	
 14095                           ;buttons.c: 38:         }
 14096                           
 14097                           
 14098                           ;buttons.c: 39:         if (
 14099  0B6A  0828               	movf	BUTTONS_task@btn,w
 14100  0B6B  3E03               	addlw	3
 14101  0B6C  0086               	movwf	6
 14102  0B6D  3001               	movlw	1	; select bank2/3
 14103  0B6E  0087               	movwf	7
 14104  0B6F  0801               	movf	1,w
 14105  0B70  1D03               	btfss	3,2
 14106  0B71  2B93               	goto	l805
 14107  0B72  0828               	movf	BUTTONS_task@btn,w
 14108  0B73  3E04               	addlw	4
 14109  0B74  0086               	movwf	6
 14110  0B75  3001               	movlw	1	; select bank2/3
 14111  0B76  0087               	movwf	7
 14112  0B77  0301               	decf	1,w
 14113  0B78  1D03               	btfss	3,2
 14114  0B79  2B93               	goto	l805
 14115  0B7A  0828               	movf	BUTTONS_task@btn,w
 14116  0B7B  3E06               	addlw	6
 14117  0B7C  0086               	movwf	6
 14118  0B7D  3001               	movlw	1	; select bank2/3
 14119  0B7E  0087               	movwf	7
 14120  0B7F  3F40               	moviw [0]fsr1
 14121  0B80  0226               	subwf	BUTTONS_task@time,w
 14122  0B81  00A2               	movwf	??_BUTTONS_task
 14123  0B82  3F41               	moviw [1]fsr1
 14124  0B83  3B27               	subwfb	BUTTONS_task@time+1,w
 14125  0B84  00A3               	movwf	??_BUTTONS_task+1
 14126  0B85  3000               	movlw	0
 14127  0B86  0223               	subwf	??_BUTTONS_task+1,w
 14128  0B87  30FA               	movlw	250
 14129  0B88  1903               	skipnz
 14130  0B89  0222               	subwf	??_BUTTONS_task,w
 14131  0B8A  1803               	skipnc
 14132  0B8B  2B93               	goto	l805
 14133                           
 14134                           ;buttons.c: 42:             && (time-btn->time) < 250) {;buttons.c: 43:             btn-
      +                          >event = EVENT_PRESSED;
 14135  0B8C  0828               	movf	BUTTONS_task@btn,w
 14136  0B8D  3E05               	addlw	5
 14137  0B8E  0086               	movwf	6
 14138  0B8F  3001               	movlw	1	; select bank2/3
 14139  0B90  0087               	movwf	7
 14140  0B91  0181               	clrf	1
 14141  0B92  0A81               	incf	1,f
 14142  0B93                     l805:	
 14143                           ;buttons.c: 44:         }
 14144                           
 14145                           
 14146                           ;buttons.c: 45:         if (
 14147  0B93  0828               	movf	BUTTONS_task@btn,w
 14148  0B94  3E03               	addlw	3
 14149  0B95  0086               	movwf	6
 14150  0B96  3001               	movlw	1	; select bank2/3
 14151  0B97  0087               	movwf	7
 14152  0B98  0801               	movf	1,w
 14153  0B99  1D03               	btfss	3,2
 14154  0B9A  2BBB               	goto	l806
 14155  0B9B  0828               	movf	BUTTONS_task@btn,w
 14156  0B9C  3E04               	addlw	4
 14157  0B9D  0086               	movwf	6
 14158  0B9E  3001               	movlw	1	; select bank2/3
 14159  0B9F  0087               	movwf	7
 14160  0BA0  0301               	decf	1,w
 14161  0BA1  1D03               	btfss	3,2
 14162  0BA2  2BBB               	goto	l806
 14163  0BA3  0828               	movf	BUTTONS_task@btn,w
 14164  0BA4  3E06               	addlw	6
 14165  0BA5  0086               	movwf	6
 14166  0BA6  3001               	movlw	1	; select bank2/3
 14167  0BA7  0087               	movwf	7
 14168  0BA8  3F40               	moviw [0]fsr1
 14169  0BA9  0226               	subwf	BUTTONS_task@time,w
 14170  0BAA  00A2               	movwf	??_BUTTONS_task
 14171  0BAB  3F41               	moviw [1]fsr1
 14172  0BAC  3B27               	subwfb	BUTTONS_task@time+1,w
 14173  0BAD  00A3               	movwf	??_BUTTONS_task+1
 14174  0BAE  3000               	movlw	0
 14175  0BAF  0223               	subwf	??_BUTTONS_task+1,w
 14176  0BB0  30FB               	movlw	251
 14177  0BB1  1903               	skipnz
 14178  0BB2  0222               	subwf	??_BUTTONS_task,w
 14179  0BB3  1C03               	skipc
 14180  0BB4  2BBB               	goto	l806
 14181                           
 14182                           ;buttons.c: 48:             && (time-btn->time) > 250){;buttons.c: 49:             btn->
      +                          event = EVENT_IDLE;
 14183  0BB5  0828               	movf	BUTTONS_task@btn,w
 14184  0BB6  3E05               	addlw	5
 14185  0BB7  0086               	movwf	6
 14186  0BB8  3001               	movlw	1	; select bank2/3
 14187  0BB9  0087               	movwf	7
 14188  0BBA  0181               	clrf	1
 14189  0BBB                     l806:	
 14190                           ;buttons.c: 50:         }
 14191                           
 14192                           
 14193                           ;buttons.c: 51:         if(btn->state == STATE_PRESSED && (time-btn->time) > 250){
 14194  0BBB  0828               	movf	BUTTONS_task@btn,w
 14195  0BBC  3E03               	addlw	3
 14196  0BBD  0086               	movwf	6
 14197  0BBE  3001               	movlw	1	; select bank2/3
 14198  0BBF  0087               	movwf	7
 14199  0BC0  0301               	decf	1,w
 14200  0BC1  1D03               	btfss	3,2
 14201  0BC2  2BDE               	goto	l807
 14202  0BC3  0828               	movf	BUTTONS_task@btn,w
 14203  0BC4  3E06               	addlw	6
 14204  0BC5  0086               	movwf	6
 14205  0BC6  3001               	movlw	1	; select bank2/3
 14206  0BC7  0087               	movwf	7
 14207  0BC8  3F40               	moviw [0]fsr1
 14208  0BC9  0226               	subwf	BUTTONS_task@time,w
 14209  0BCA  00A2               	movwf	??_BUTTONS_task
 14210  0BCB  3F41               	moviw [1]fsr1
 14211  0BCC  3B27               	subwfb	BUTTONS_task@time+1,w
 14212  0BCD  00A3               	movwf	??_BUTTONS_task+1
 14213  0BCE  3000               	movlw	0
 14214  0BCF  0223               	subwf	??_BUTTONS_task+1,w
 14215  0BD0  30FB               	movlw	251
 14216  0BD1  1903               	skipnz
 14217  0BD2  0222               	subwf	??_BUTTONS_task,w
 14218  0BD3  1C03               	skipc
 14219  0BD4  2BDE               	goto	l807
 14220                           
 14221                           ;buttons.c: 52:             btn->event = EVENT_HELD;
 14222  0BD5  3002               	movlw	2
 14223  0BD6  00A2               	movwf	??_BUTTONS_task
 14224  0BD7  0828               	movf	BUTTONS_task@btn,w
 14225  0BD8  3E05               	addlw	5
 14226  0BD9  0086               	movwf	6
 14227  0BDA  3001               	movlw	1	; select bank2/3
 14228  0BDB  0087               	movwf	7
 14229  0BDC  0822               	movf	??_BUTTONS_task,w
 14230  0BDD  0081               	movwf	1
 14231  0BDE                     l807:	
 14232                           ;buttons.c: 53:         }
 14233                           
 14234                           
 14235                           ;buttons.c: 54:         btn->lastState = btn->state;
 14236  0BDE  0828               	movf	BUTTONS_task@btn,w
 14237  0BDF  3E03               	addlw	3
 14238  0BE0  0086               	movwf	6
 14239  0BE1  3001               	movlw	1	; select bank2/3
 14240  0BE2  0087               	movwf	7
 14241  0BE3  0801               	movf	1,w
 14242  0BE4  00A2               	movwf	??_BUTTONS_task
 14243  0BE5  0828               	movf	BUTTONS_task@btn,w
 14244  0BE6  3E04               	addlw	4
 14245  0BE7  0086               	movwf	6
 14246  0BE8  3001               	movlw	1	; select bank2/3
 14247  0BE9  0087               	movwf	7
 14248  0BEA  0822               	movf	??_BUTTONS_task,w
 14249  0BEB  0081               	movwf	1
 14250                           
 14251                           ;buttons.c: 55:     }
 14252  0BEC  3001               	movlw	1
 14253  0BED  00A2               	movwf	??_BUTTONS_task
 14254  0BEE  0822               	movf	??_BUTTONS_task,w
 14255  0BEF  07A5               	addwf	BUTTONS_task@i,f
 14256  0BF0  3004               	movlw	4
 14257  0BF1  0225               	subwf	BUTTONS_task@i,w
 14258  0BF2  1803               	btfsc	3,0
 14259  0BF3  0008               	return
 14260  0BF4  2B1B               	goto	l5611
 14261  0BF5                     __end_of_BUTTONS_task:	
 14262                           
 14263                           	psect	text43
 14264  085F                     __ptext43:	
 14265 ;; *************** function _BUTTONS_init *****************
 14266 ;; Defined at:
 14267 ;;		line 65 in file "buttons.c"
 14268 ;; Parameters:    Size  Location     Type
 14269 ;;		None
 14270 ;; Auto vars:     Size  Location     Type
 14271 ;;		None
 14272 ;; Return value:  Size  Location     Type
 14273 ;;                  1    wreg      void 
 14274 ;; Registers used:
 14275 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14276 ;; Tracked objects:
 14277 ;;		On entry : 0/0
 14278 ;;		On exit  : 0/0
 14279 ;;		Unchanged: 0/0
 14280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14283 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14284 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14285 ;;Total ram usage:        1 bytes
 14286 ;; Hardware stack levels used:    1
 14287 ;; Hardware stack levels required when called:    5
 14288 ;; This function calls:
 14289 ;;		_init
 14290 ;; This function is called by:
 14291 ;;		_main
 14292 ;; This function uses a non-reentrant model
 14293 ;;
 14294                           
 14295                           
 14296                           ;psect for function _BUTTONS_init
 14297  085F                     _BUTTONS_init:	
 14298                           
 14299                           ;buttons.c: 66:     menu = &buttons[0];
 14300                           
 14301                           ;incstack = 0
 14302                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14303  085F  30A0               	movlw	(low (_buttons| (0+256)))& (0+255)
 14304  0860  0140               	movlb	0	; select bank0
 14305  0861  00A5               	movwf	??_BUTTONS_init
 14306  0862  0825               	movf	??_BUTTONS_init,w
 14307  0863  0141               	movlb	1	; select bank1
 14308  0864  00BC               	movwf	_menu^(0+128)
 14309                           
 14310                           ;buttons.c: 67:     up = &buttons[1];
 14311  0865  30A8               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 14312  0866  0140               	movlb	0	; select bank0
 14313  0867  00A5               	movwf	??_BUTTONS_init
 14314  0868  0825               	movf	??_BUTTONS_init,w
 14315  0869  0141               	movlb	1	; select bank1
 14316  086A  00BF               	movwf	_up^(0+128)
 14317                           
 14318                           ;buttons.c: 68:     down = &buttons[2];
 14319  086B  30B0               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 14320  086C  0140               	movlb	0	; select bank0
 14321  086D  00A5               	movwf	??_BUTTONS_init
 14322  086E  0825               	movf	??_BUTTONS_init,w
 14323  086F  0141               	movlb	1	; select bank1
 14324  0870  00BE               	movwf	_down^(0+128)
 14325                           
 14326                           ;buttons.c: 69:     enter = &buttons[3];
 14327  0871  30B8               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 14328  0872  0140               	movlb	0	; select bank0
 14329  0873  00A5               	movwf	??_BUTTONS_init
 14330  0874  0825               	movf	??_BUTTONS_init,w
 14331  0875  0141               	movlb	1	; select bank1
 14332  0876  00BD               	movwf	_enter^(0+128)
 14333                           
 14334                           ;buttons.c: 71:     init(menu, &PORTC, 2);
 14335  0877  300E               	movlw	14
 14336  0878  0140               	movlb	0	; select bank0
 14337  0879  00A0               	movwf	init@port
 14338  087A  3000               	movlw	0
 14339  087B  00A1               	movwf	init@port+1
 14340  087C  3002               	movlw	2
 14341  087D  00A5               	movwf	??_BUTTONS_init
 14342  087E  0825               	movf	??_BUTTONS_init,w
 14343  087F  00A2               	movwf	init@pin
 14344  0880  0141               	movlb	1	; select bank1
 14345  0881  083C               	movf	_menu^(0+128),w
 14346  0882  3195  2598  3188   	fcall	_init
 14347                           
 14348                           ;buttons.c: 72:     init(enter, &PORTA, 2);
 14349  0885  300C               	movlw	12
 14350  0886  0140               	movlb	0	; select bank0
 14351  0887  00A0               	movwf	init@port
 14352  0888  3000               	movlw	0
 14353  0889  00A1               	movwf	init@port+1
 14354  088A  3002               	movlw	2
 14355  088B  00A5               	movwf	??_BUTTONS_init
 14356  088C  0825               	movf	??_BUTTONS_init,w
 14357  088D  00A2               	movwf	init@pin
 14358  088E  0141               	movlb	1	; select bank1
 14359  088F  083D               	movf	_enter^(0+128),w
 14360  0890  3195  2598  3188   	fcall	_init
 14361                           
 14362                           ;buttons.c: 73:     init(down, &PORTC, 0);
 14363  0893  300E               	movlw	14
 14364  0894  0140               	movlb	0	; select bank0
 14365  0895  00A0               	movwf	init@port
 14366  0896  3000               	movlw	0
 14367  0897  00A1               	movwf	init@port+1
 14368  0898  01A2               	clrf	init@pin
 14369  0899  0141               	movlb	1	; select bank1
 14370  089A  083E               	movf	_down^(0+128),w
 14371  089B  3195  2598  3188   	fcall	_init
 14372                           
 14373                           ;buttons.c: 74:     init(up, &PORTC, 1);
 14374  089E  300E               	movlw	14
 14375  089F  0140               	movlb	0	; select bank0
 14376  08A0  00A0               	movwf	init@port
 14377  08A1  3000               	movlw	0
 14378  08A2  00A1               	movwf	init@port+1
 14379  08A3  01A2               	clrf	init@pin
 14380  08A4  0AA2               	incf	init@pin,f
 14381  08A5  0141               	movlb	1	; select bank1
 14382  08A6  083F               	movf	_up^(0+128),w
 14383  08A7  3195  2598         	fcall	_init
 14384  08A9  0008               	return
 14385  08AA                     __end_of_BUTTONS_init:	
 14386                           
 14387                           	psect	text44
 14388  1598                     __ptext44:	
 14389 ;; *************** function _init *****************
 14390 ;; Defined at:
 14391 ;;		line 58 in file "buttons.c"
 14392 ;; Parameters:    Size  Location     Type
 14393 ;;  btn             1    wreg     PTR struct .
 14394 ;;		 -> buttons(32), NULL(0), 
 14395 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 14396 ;;		 -> PORTA(1), PORTC(1), 
 14397 ;;  pin             1    2[BANK0 ] unsigned char 
 14398 ;; Auto vars:     Size  Location     Type
 14399 ;;  btn             1    4[BANK0 ] PTR struct .
 14400 ;;		 -> buttons(32), NULL(0), 
 14401 ;; Return value:  Size  Location     Type
 14402 ;;                  1    wreg      void 
 14403 ;; Registers used:
 14404 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14405 ;; Tracked objects:
 14406 ;;		On entry : 0/0
 14407 ;;		On exit  : 0/0
 14408 ;;		Unchanged: 0/0
 14409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14410 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14411 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14412 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14413 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14414 ;;Total ram usage:        5 bytes
 14415 ;; Hardware stack levels used:    1
 14416 ;; Hardware stack levels required when called:    4
 14417 ;; This function calls:
 14418 ;;		Nothing
 14419 ;; This function is called by:
 14420 ;;		_BUTTONS_init
 14421 ;; This function uses a non-reentrant model
 14422 ;;
 14423                           
 14424                           
 14425                           ;psect for function _init
 14426  1598                     _init:	
 14427                           
 14428                           ;incstack = 0
 14429                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 14430                           ;init@btn stored from wreg
 14431  1598  0140               	movlb	0	; select bank0
 14432  1599  00A4               	movwf	init@btn
 14433                           
 14434                           ;buttons.c: 59:     btn->port = port;
 14435  159A  0824               	movf	init@btn,w
 14436  159B  0086               	movwf	6
 14437  159C  3001               	movlw	1	; select bank2/3
 14438  159D  0087               	movwf	7
 14439  159E  0820               	movf	init@port,w
 14440  159F  3FC0               	movwi [0]fsr1
 14441  15A0  0821               	movf	init@port+1,w
 14442  15A1  3FC1               	movwi [1]fsr1
 14443                           
 14444                           ;buttons.c: 60:     btn->pin = pin;
 14445  15A2  0822               	movf	init@pin,w
 14446  15A3  00A3               	movwf	??_init
 14447  15A4  0824               	movf	init@btn,w
 14448  15A5  3E02               	addlw	2
 14449  15A6  0086               	movwf	6
 14450  15A7  3001               	movlw	1	; select bank2/3
 14451  15A8  0087               	movwf	7
 14452  15A9  0823               	movf	??_init,w
 14453  15AA  0081               	movwf	1
 14454                           
 14455                           ;buttons.c: 61:     btn->state = STATE_UNPRESSED;
 14456  15AB  0824               	movf	init@btn,w
 14457  15AC  3E03               	addlw	3
 14458  15AD  0086               	movwf	6
 14459  15AE  3001               	movlw	1	; select bank2/3
 14460  15AF  0087               	movwf	7
 14461  15B0  0181               	clrf	1
 14462                           
 14463                           ;buttons.c: 62:     btn->event = EVENT_IDLE;
 14464  15B1  0824               	movf	init@btn,w
 14465  15B2  3E05               	addlw	5
 14466  15B3  0086               	movwf	6
 14467  15B4  3001               	movlw	1	; select bank2/3
 14468  15B5  0087               	movwf	7
 14469  15B6  0181               	clrf	1
 14470  15B7  0008               	return
 14471  15B8                     __end_of_init:	
 14472                           
 14473                           	psect	text45
 14474  0708                     __ptext45:	
 14475 ;; *************** function _BEAT_task *****************
 14476 ;; Defined at:
 14477 ;;		line 63 in file "beat.c"
 14478 ;; Parameters:    Size  Location     Type
 14479 ;;		None
 14480 ;; Auto vars:     Size  Location     Type
 14481 ;;  offset          2   16[BANK0 ] unsigned short 
 14482 ;; Return value:  Size  Location     Type
 14483 ;;                  1    wreg      void 
 14484 ;; Registers used:
 14485 ;;		wreg, status,2, status,0, pclath, cstack
 14486 ;; Tracked objects:
 14487 ;;		On entry : 0/0
 14488 ;;		On exit  : 0/0
 14489 ;;		Unchanged: 0/0
 14490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14492 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14493 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14494 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14495 ;;Total ram usage:        4 bytes
 14496 ;; Hardware stack levels used:    1
 14497 ;; Hardware stack levels required when called:    5
 14498 ;; This function calls:
 14499 ;;		_ADCC_SetUpperThreshold
 14500 ;;		_CLOCK_getTime
 14501 ;;		_TM1650_isEnabled
 14502 ;;		___lwdiv
 14503 ;; This function is called by:
 14504 ;;		_main
 14505 ;; This function uses a non-reentrant model
 14506 ;;
 14507                           
 14508                           
 14509                           ;psect for function _BEAT_task
 14510  0708                     _BEAT_task:	
 14511                           
 14512                           ;beat.c: 65:     if (TM1650_isEnabled())
 14513                           
 14514                           ;incstack = 0
 14515                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 14516  0708  3193  23AF  3187   	fcall	_TM1650_isEnabled
 14517  070B  3A00               	xorlw	0
 14518  070C  1D03               	btfss	3,2
 14519  070D  0008               	return
 14520                           
 14521                           ;beat.c: 68:     if (CLOCK_getTime() - lastRun < delay)
 14522  070E  3193  23FB  3187   	fcall	_CLOCK_getTime
 14523  0711  0142               	movlb	2	; select bank2
 14524  0712  083C               	movf	_lastRun^(0+256),w
 14525  0713  0140               	movlb	0	; select bank0
 14526  0714  0220               	subwf	?_CLOCK_getTime,w
 14527  0715  00AE               	movwf	??_BEAT_task
 14528  0716  0142               	movlb	2	; select bank2
 14529  0717  083D               	movf	(_lastRun+1)^(0+256),w
 14530  0718  0140               	movlb	0	; select bank0
 14531  0719  3B21               	subwfb	?_CLOCK_getTime+1,w
 14532  071A  00AF               	movwf	??_BEAT_task+1
 14533  071B  0142               	movlb	2	; select bank2
 14534  071C  085B               	movf	(_delay+1)^(0+256),w
 14535  071D  0140               	movlb	0	; select bank0
 14536  071E  022F               	subwf	??_BEAT_task+1,w
 14537  071F  1D03               	skipz
 14538  0720  2F25               	goto	u5215
 14539  0721  0142               	movlb	2	; select bank2
 14540  0722  085A               	movf	_delay^(0+256),w
 14541  0723  0140               	movlb	0	; select bank0
 14542  0724  022E               	subwf	??_BEAT_task,w
 14543  0725                     u5215:	
 14544  0725  1C03               	btfss	3,0
 14545  0726  0008               	return
 14546                           
 14547                           ;beat.c: 71:     lastRun = CLOCK_getTime();
 14548  0727  3193  23FB  3187   	fcall	_CLOCK_getTime
 14549  072A  0140               	movlb	0	; select bank0
 14550  072B  0821               	movf	?_CLOCK_getTime+1,w
 14551  072C  0142               	movlb	2	; select bank2
 14552  072D  00BD               	movwf	(_lastRun+1)^(0+256)
 14553  072E  0140               	movlb	0	; select bank0
 14554  072F  0820               	movf	?_CLOCK_getTime,w
 14555  0730  0142               	movlb	2	; select bank2
 14556  0731  00BC               	movwf	_lastRun^(0+256)
 14557                           
 14558                           ;beat.c: 73:     if (thresholdExceeded == 1) {
 14559  0732  0141               	movlb	1	; select bank1
 14560  0733  033A               	decf	_thresholdExceeded^(0+128),w
 14561  0734  1D03               	btfss	3,2
 14562  0735  2F3C               	goto	l5689
 14563                           
 14564                           ;beat.c: 77:         thresholdCount++;
 14565  0736  3001               	movlw	1
 14566  0737  0142               	movlb	2	; select bank2
 14567  0738  07BA               	addwf	_thresholdCount^(0+256),f
 14568  0739  3000               	movlw	0
 14569  073A  3DBB               	addwfc	(_thresholdCount+1)^(0+256),f
 14570                           
 14571                           ;beat.c: 78:     } else {
 14572  073B  2F43               	goto	l5693
 14573  073C                     l5689:	
 14574                           
 14575                           ;beat.c: 80:         thresholdCount = 0;
 14576  073C  0142               	movlb	2	; select bank2
 14577  073D  01BA               	clrf	_thresholdCount^(0+256)
 14578  073E  01BB               	clrf	(_thresholdCount+1)^(0+256)
 14579                           
 14580                           ;beat.c: 81:         delay = 20;
 14581  073F  3014               	movlw	20
 14582  0740  00DA               	movwf	_delay^(0+256)
 14583  0741  3000               	movlw	0
 14584  0742  00DB               	movwf	(_delay^(0+256)+1)
 14585  0743                     l5693:	
 14586                           
 14587                           ;beat.c: 87:     if (thresholdExceeded == 1 && lastDetected == 0) {
 14588  0743  0141               	movlb	1	; select bank1
 14589  0744  033A               	decf	_thresholdExceeded^(0+128),w
 14590  0745  1D03               	btfss	3,2
 14591  0746  2F8A               	goto	l5711
 14592  0747  0839               	movf	_lastDetected^(0+128),w
 14593  0748  1D03               	btfss	3,2
 14594  0749  2F8A               	goto	l5711
 14595                           
 14596                           ;beat.c: 89:         detected = 1;
 14597  074A  01BB               	clrf	_detected^(0+128)
 14598  074B  0ABB               	incf	_detected^(0+128),f
 14599                           
 14600                           ;beat.c: 92:         delay = 100;
 14601  074C  3064               	movlw	100
 14602  074D  0142               	movlb	2	; select bank2
 14603  074E  00DA               	movwf	_delay^(0+256)
 14604  074F  3000               	movlw	0
 14605  0750  00DB               	movwf	(_delay^(0+256)+1)
 14606                           
 14607                           ;beat.c: 95:         time_t offset = CLOCK_getTime() - lastBeat;
 14608  0751  3193  23FB  3187   	fcall	_CLOCK_getTime
 14609  0754  0141               	movlb	1	; select bank1
 14610  0755  082D               	movf	_lastBeat^(0+128),w
 14611  0756  0140               	movlb	0	; select bank0
 14612  0757  0220               	subwf	?_CLOCK_getTime,w
 14613  0758  00B0               	movwf	BEAT_task@offset
 14614  0759  0141               	movlb	1	; select bank1
 14615  075A  082E               	movf	(_lastBeat+1)^(0+128),w
 14616  075B  0140               	movlb	0	; select bank0
 14617  075C  3B21               	subwfb	?_CLOCK_getTime+1,w
 14618  075D  00B1               	movwf	BEAT_task@offset+1
 14619                           
 14620                           ;beat.c: 97:         lastBeat = CLOCK_getTime();
 14621  075E  3193  23FB  3187   	fcall	_CLOCK_getTime
 14622  0761  0140               	movlb	0	; select bank0
 14623  0762  0821               	movf	?_CLOCK_getTime+1,w
 14624  0763  0141               	movlb	1	; select bank1
 14625  0764  00AE               	movwf	(_lastBeat+1)^(0+128)
 14626  0765  0140               	movlb	0	; select bank0
 14627  0766  0820               	movf	?_CLOCK_getTime,w
 14628  0767  0141               	movlb	1	; select bank1
 14629  0768  00AD               	movwf	_lastBeat^(0+128)
 14630                           
 14631                           ;beat.c: 99:         if (offset < 150)
 14632  0769  3000               	movlw	0
 14633  076A  0140               	movlb	0	; select bank0
 14634  076B  0231               	subwf	BEAT_task@offset+1,w
 14635  076C  3096               	movlw	150
 14636  076D  1903               	skipnz
 14637  076E  0230               	subwf	BEAT_task@offset,w
 14638  076F  1803               	skipnc
 14639  0770  2F77               	goto	l5709
 14640                           
 14641                           ;beat.c: 100:             bpm = 400;
 14642  0771  3090               	movlw	144
 14643  0772  0142               	movlb	2	; select bank2
 14644  0773  00BE               	movwf	_bpm^(0+256)
 14645  0774  3001               	movlw	1
 14646  0775  00BF               	movwf	(_bpm^(0+256)+1)
 14647  0776  2F8A               	goto	l5711
 14648  0777                     l5709:	
 14649                           
 14650                           ;beat.c: 102:             bpm = 60 * 1000 / offset;
 14651  0777  0831               	movf	BEAT_task@offset+1,w
 14652  0778  00A7               	movwf	___lwdiv@divisor+1
 14653  0779  0830               	movf	BEAT_task@offset,w
 14654  077A  00A6               	movwf	___lwdiv@divisor
 14655  077B  3060               	movlw	96
 14656  077C  00A8               	movwf	___lwdiv@dividend
 14657  077D  30EA               	movlw	234
 14658  077E  00A9               	movwf	___lwdiv@dividend+1
 14659  077F  3197  2711  3187   	fcall	___lwdiv
 14660  0782  0140               	movlb	0	; select bank0
 14661  0783  0827               	movf	?___lwdiv+1,w
 14662  0784  0142               	movlb	2	; select bank2
 14663  0785  00BF               	movwf	(_bpm+1)^(0+256)
 14664  0786  0140               	movlb	0	; select bank0
 14665  0787  0826               	movf	?___lwdiv,w
 14666  0788  0142               	movlb	2	; select bank2
 14667  0789  00BE               	movwf	_bpm^(0+256)
 14668  078A                     l5711:	
 14669                           
 14670                           ;beat.c: 108:     lastDetected = thresholdExceeded;
 14671  078A  0141               	movlb	1	; select bank1
 14672  078B  083A               	movf	_thresholdExceeded^(0+128),w
 14673  078C  0140               	movlb	0	; select bank0
 14674  078D  00AE               	movwf	??_BEAT_task
 14675  078E  082E               	movf	??_BEAT_task,w
 14676  078F  0141               	movlb	1	; select bank1
 14677  0790  00B9               	movwf	_lastDetected^(0+128)
 14678                           
 14679                           ;beat.c: 109:     thresholdExceeded = 0;
 14680  0791  01BA               	clrf	_thresholdExceeded^(0+128)
 14681                           
 14682                           ;beat.c: 111:     if (thresholdCount > 3) {
 14683  0792  0142               	movlb	2	; select bank2
 14684  0793  083B               	movf	(_thresholdCount+1)^(0+256),w
 14685  0794  3A80               	xorlw	128
 14686  0795  0140               	movlb	0	; select bank0
 14687  0796  00AE               	movwf	??_BEAT_task
 14688  0797  3080               	movlw	128
 14689  0798  022E               	subwf	??_BEAT_task,w
 14690  0799  1D03               	skipz
 14691  079A  2F9E               	goto	u5265
 14692  079B  3004               	movlw	4
 14693  079C  0142               	movlb	2	; select bank2
 14694  079D  023A               	subwf	_thresholdCount^(0+256),w
 14695  079E                     u5265:	
 14696  079E  1C03               	skipc
 14697  079F  2FBD               	goto	l5725
 14698                           
 14699                           ;beat.c: 112:         threshold += 1;
 14700  07A0  3001               	movlw	1
 14701  07A1  0141               	movlb	1	; select bank1
 14702  07A2  07E7               	addwf	_threshold^(0+128),f
 14703  07A3  3000               	movlw	0
 14704  07A4  3DE8               	addwfc	(_threshold+1)^(0+128),f
 14705                           
 14706                           ;beat.c: 113:         ADCC_SetUpperThreshold(threshold);
 14707  07A5  0868               	movf	(_threshold+1)^(0+128),w
 14708  07A6  0140               	movlb	0	; select bank0
 14709  07A7  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 14710  07A8  0141               	movlb	1	; select bank1
 14711  07A9  0867               	movf	_threshold^(0+128),w
 14712  07AA  0140               	movlb	0	; select bank0
 14713  07AB  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 14714  07AC  3193  23E9  3187   	fcall	_ADCC_SetUpperThreshold
 14715                           
 14716                           ;beat.c: 114:         thresholdCount = 0;
 14717  07AF  0142               	movlb	2	; select bank2
 14718  07B0  01BA               	clrf	_thresholdCount^(0+256)
 14719  07B1  01BB               	clrf	(_thresholdCount+1)^(0+256)
 14720                           
 14721                           ;beat.c: 117:         lastBeat = CLOCK_getTime();
 14722  07B2  3193  23FB         	fcall	_CLOCK_getTime
 14723  07B4  0140               	movlb	0	; select bank0
 14724  07B5  0821               	movf	?_CLOCK_getTime+1,w
 14725  07B6  0141               	movlb	1	; select bank1
 14726  07B7  00AE               	movwf	(_lastBeat+1)^(0+128)
 14727  07B8  0140               	movlb	0	; select bank0
 14728  07B9  0820               	movf	?_CLOCK_getTime,w
 14729  07BA  0141               	movlb	1	; select bank1
 14730  07BB  00AD               	movwf	_lastBeat^(0+128)
 14731                           
 14732                           ;beat.c: 118:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 14733  07BC  0008               	return
 14734  07BD                     l5725:	
 14735  07BD  3193  23FB  3187   	fcall	_CLOCK_getTime
 14736  07C0  0141               	movlb	1	; select bank1
 14737  07C1  082D               	movf	_lastBeat^(0+128),w
 14738  07C2  0140               	movlb	0	; select bank0
 14739  07C3  0220               	subwf	?_CLOCK_getTime,w
 14740  07C4  00AE               	movwf	??_BEAT_task
 14741  07C5  0141               	movlb	1	; select bank1
 14742  07C6  082E               	movf	(_lastBeat+1)^(0+128),w
 14743  07C7  0140               	movlb	0	; select bank0
 14744  07C8  3B21               	subwfb	?_CLOCK_getTime+1,w
 14745  07C9  00AF               	movwf	??_BEAT_task+1
 14746  07CA  3003               	movlw	3
 14747  07CB  022F               	subwf	??_BEAT_task+1,w
 14748  07CC  30E9               	movlw	233
 14749  07CD  1903               	skipnz
 14750  07CE  022E               	subwf	??_BEAT_task,w
 14751  07CF  1C03               	skipc
 14752  07D0  0008               	return
 14753                           
 14754                           ;beat.c: 119:         threshold -= 1;
 14755  07D1  3001               	movlw	1
 14756  07D2  0141               	movlb	1	; select bank1
 14757  07D3  02E7               	subwf	_threshold^(0+128),f
 14758  07D4  3000               	movlw	0
 14759  07D5  3BE8               	subwfb	(_threshold+1)^(0+128),f
 14760                           
 14761                           ;beat.c: 120:         ADCC_SetUpperThreshold(threshold);
 14762  07D6  0868               	movf	(_threshold+1)^(0+128),w
 14763  07D7  0140               	movlb	0	; select bank0
 14764  07D8  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 14765  07D9  0141               	movlb	1	; select bank1
 14766  07DA  0867               	movf	_threshold^(0+128),w
 14767  07DB  0140               	movlb	0	; select bank0
 14768  07DC  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 14769  07DD  3193  23E9         	fcall	_ADCC_SetUpperThreshold
 14770  07DF  0008               	return
 14771  07E0                     __end_of_BEAT_task:	
 14772                           
 14773                           	psect	text46
 14774  1711                     __ptext46:	
 14775 ;; *************** function ___lwdiv *****************
 14776 ;; Defined at:
 14777 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
 14778 ;; Parameters:    Size  Location     Type
 14779 ;;  divisor         2    6[BANK0 ] unsigned int 
 14780 ;;  dividend        2    8[BANK0 ] unsigned int 
 14781 ;; Auto vars:     Size  Location     Type
 14782 ;;  quotient        2   11[BANK0 ] unsigned int 
 14783 ;;  counter         1   13[BANK0 ] unsigned char 
 14784 ;; Return value:  Size  Location     Type
 14785 ;;                  2    6[BANK0 ] unsigned int 
 14786 ;; Registers used:
 14787 ;;		wreg, status,2, status,0
 14788 ;; Tracked objects:
 14789 ;;		On entry : 0/0
 14790 ;;		On exit  : 0/0
 14791 ;;		Unchanged: 0/0
 14792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14793 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14794 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14795 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14796 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14797 ;;Total ram usage:        8 bytes
 14798 ;; Hardware stack levels used:    1
 14799 ;; Hardware stack levels required when called:    4
 14800 ;; This function calls:
 14801 ;;		Nothing
 14802 ;; This function is called by:
 14803 ;;		_TM1650_fastPrintNum
 14804 ;;		_BEAT_task
 14805 ;; This function uses a non-reentrant model
 14806 ;;
 14807                           
 14808                           
 14809                           ;psect for function ___lwdiv
 14810  1711                     ___lwdiv:	
 14811                           
 14812                           ;incstack = 0
 14813                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 14814  1711  0140               	movlb	0	; select bank0
 14815  1712  01AB               	clrf	___lwdiv@quotient
 14816  1713  01AC               	clrf	___lwdiv@quotient+1
 14817  1714  0826               	movf	___lwdiv@divisor,w
 14818  1715  0427               	iorwf	___lwdiv@divisor+1,w
 14819  1716  1903               	btfsc	3,2
 14820  1717  2F41               	goto	l3519
 14821  1718  01AD               	clrf	___lwdiv@counter
 14822  1719  0AAD               	incf	___lwdiv@counter,f
 14823  171A                     l3507:	
 14824  171A  1BA7               	btfsc	___lwdiv@divisor+1,7
 14825  171B  2F26               	goto	l3509
 14826  171C  3001               	movlw	1
 14827  171D                     u2405:	
 14828  171D  35A6               	lslf	___lwdiv@divisor,f
 14829  171E  0DA7               	rlf	___lwdiv@divisor+1,f
 14830  171F  0B89               	decfsz	9,f
 14831  1720  2F1D               	goto	u2405
 14832  1721  3001               	movlw	1
 14833  1722  00AA               	movwf	??___lwdiv
 14834  1723  082A               	movf	??___lwdiv,w
 14835  1724  07AD               	addwf	___lwdiv@counter,f
 14836  1725  2F1A               	goto	l3507
 14837  1726                     l3509:	
 14838  1726  3001               	movlw	1
 14839  1727                     u2425:	
 14840  1727  35AB               	lslf	___lwdiv@quotient,f
 14841  1728  0DAC               	rlf	___lwdiv@quotient+1,f
 14842  1729  0B89               	decfsz	9,f
 14843  172A  2F27               	goto	u2425
 14844  172B  0827               	movf	___lwdiv@divisor+1,w
 14845  172C  0229               	subwf	___lwdiv@dividend+1,w
 14846  172D  1D03               	skipz
 14847  172E  2F31               	goto	u2435
 14848  172F  0826               	movf	___lwdiv@divisor,w
 14849  1730  0228               	subwf	___lwdiv@dividend,w
 14850  1731                     u2435:	
 14851  1731  1C03               	skipc
 14852  1732  2F38               	goto	l3515
 14853  1733  0826               	movf	___lwdiv@divisor,w
 14854  1734  02A8               	subwf	___lwdiv@dividend,f
 14855  1735  0827               	movf	___lwdiv@divisor+1,w
 14856  1736  3BA9               	subwfb	___lwdiv@dividend+1,f
 14857  1737  142B               	bsf	___lwdiv@quotient,0
 14858  1738                     l3515:	
 14859  1738  3001               	movlw	1
 14860  1739                     u2445:	
 14861  1739  36A7               	lsrf	___lwdiv@divisor+1,f
 14862  173A  0CA6               	rrf	___lwdiv@divisor,f
 14863  173B  0B89               	decfsz	9,f
 14864  173C  2F39               	goto	u2445
 14865  173D  3001               	movlw	1
 14866  173E  02AD               	subwf	___lwdiv@counter,f
 14867  173F  1D03               	btfss	3,2
 14868  1740  2F26               	goto	l3509
 14869  1741                     l3519:	
 14870  1741  082C               	movf	___lwdiv@quotient+1,w
 14871  1742  00A7               	movwf	?___lwdiv+1
 14872  1743  082B               	movf	___lwdiv@quotient,w
 14873  1744  00A6               	movwf	?___lwdiv
 14874  1745  0008               	return
 14875  1746                     __end_of___lwdiv:	
 14876                           
 14877                           	psect	text47
 14878  13AF                     __ptext47:	
 14879 ;; *************** function _TM1650_isEnabled *****************
 14880 ;; Defined at:
 14881 ;;		line 122 in file "tm1650.c"
 14882 ;; Parameters:    Size  Location     Type
 14883 ;;		None
 14884 ;; Auto vars:     Size  Location     Type
 14885 ;;		None
 14886 ;; Return value:  Size  Location     Type
 14887 ;;                  1    wreg      _Bool 
 14888 ;; Registers used:
 14889 ;;		wreg
 14890 ;; Tracked objects:
 14891 ;;		On entry : 0/0
 14892 ;;		On exit  : 0/0
 14893 ;;		Unchanged: 0/0
 14894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14899 ;;Total ram usage:        0 bytes
 14900 ;; Hardware stack levels used:    1
 14901 ;; Hardware stack levels required when called:    4
 14902 ;; This function calls:
 14903 ;;		Nothing
 14904 ;; This function is called by:
 14905 ;;		_BEAT_task
 14906 ;; This function uses a non-reentrant model
 14907 ;;
 14908                           
 14909                           
 14910                           ;psect for function _TM1650_isEnabled
 14911  13AF                     _TM1650_isEnabled:	
 14912                           
 14913                           ;tm1650.c: 123:     return displayState;
 14914                           
 14915                           ;incstack = 0
 14916                           ; Regs used in _TM1650_isEnabled: [wreg]
 14917  13AF  0141               	movlb	1	; select bank1
 14918  13B0  0840               	movf	_displayState^(0+128),w
 14919  13B1  0008               	return
 14920  13B2                     __end_of_TM1650_isEnabled:	
 14921                           
 14922                           	psect	text48
 14923  13FB                     __ptext48:	
 14924 ;; *************** function _CLOCK_getTime *****************
 14925 ;; Defined at:
 14926 ;;		line 36 in file "clock.c"
 14927 ;; Parameters:    Size  Location     Type
 14928 ;;		None
 14929 ;; Auto vars:     Size  Location     Type
 14930 ;;		None
 14931 ;; Return value:  Size  Location     Type
 14932 ;;                  2    0[BANK0 ] unsigned short 
 14933 ;; Registers used:
 14934 ;;		wreg
 14935 ;; Tracked objects:
 14936 ;;		On entry : 0/0
 14937 ;;		On exit  : 0/0
 14938 ;;		Unchanged: 0/0
 14939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14940 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14943 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14944 ;;Total ram usage:        2 bytes
 14945 ;; Hardware stack levels used:    1
 14946 ;; Hardware stack levels required when called:    4
 14947 ;; This function calls:
 14948 ;;		Nothing
 14949 ;; This function is called by:
 14950 ;;		_BUTTONS_task
 14951 ;;		_CONTROLLER_task
 14952 ;;		_BEAT_task
 14953 ;;		_DMX_Task
 14954 ;; This function uses a non-reentrant model
 14955 ;;
 14956                           
 14957                           
 14958                           ;psect for function _CLOCK_getTime
 14959  13FB                     _CLOCK_getTime:	
 14960                           
 14961                           ;clock.c: 37:     return ClockCurrentTime;
 14962                           
 14963                           ;incstack = 0
 14964                           ; Regs used in _CLOCK_getTime: [wreg]
 14965  13FB  0141               	movlb	1	; select bank1
 14966  13FC  0836               	movf	(_ClockCurrentTime+1)^(0+128),w
 14967  13FD  0140               	movlb	0	; select bank0
 14968  13FE  00A1               	movwf	?_CLOCK_getTime+1
 14969  13FF  0141               	movlb	1	; select bank1
 14970  1400  0835               	movf	_ClockCurrentTime^(0+128),w
 14971  1401  0140               	movlb	0	; select bank0
 14972  1402  00A0               	movwf	?_CLOCK_getTime
 14973  1403  0008               	return
 14974  1404                     __end_of_CLOCK_getTime:	
 14975                           
 14976                           	psect	text49
 14977  14CE                     __ptext49:	
 14978 ;; *************** function _BEAT_init *****************
 14979 ;; Defined at:
 14980 ;;		line 36 in file "beat.c"
 14981 ;; Parameters:    Size  Location     Type
 14982 ;;		None
 14983 ;; Auto vars:     Size  Location     Type
 14984 ;;		None
 14985 ;; Return value:  Size  Location     Type
 14986 ;;                  1    wreg      void 
 14987 ;; Registers used:
 14988 ;;		wreg, status,2, status,0, pclath, cstack
 14989 ;; Tracked objects:
 14990 ;;		On entry : 0/0
 14991 ;;		On exit  : 0/0
 14992 ;;		Unchanged: 0/0
 14993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14998 ;;Total ram usage:        0 bytes
 14999 ;; Hardware stack levels used:    1
 15000 ;; Hardware stack levels required when called:    5
 15001 ;; This function calls:
 15002 ;;		_ADCC_SetADTIInterruptHandler
 15003 ;;		_ADCC_SetUpperThreshold
 15004 ;;		_ADCC_StartConversion
 15005 ;; This function is called by:
 15006 ;;		_main
 15007 ;; This function uses a non-reentrant model
 15008 ;;
 15009                           
 15010                           
 15011                           ;psect for function _BEAT_init
 15012  14CE                     _BEAT_init:	
 15013                           
 15014                           ;beat.c: 37:     ADCC_SetUpperThreshold(threshold);
 15015                           
 15016                           ;incstack = 0
 15017                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 15018  14CE  0141               	movlb	1	; select bank1
 15019  14CF  0868               	movf	(_threshold+1)^(0+128),w
 15020  14D0  0140               	movlb	0	; select bank0
 15021  14D1  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 15022  14D2  0141               	movlb	1	; select bank1
 15023  14D3  0867               	movf	_threshold^(0+128),w
 15024  14D4  0140               	movlb	0	; select bank0
 15025  14D5  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 15026  14D6  3193  23E9  3194   	fcall	_ADCC_SetUpperThreshold
 15027                           
 15028                           ;beat.c: 38:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 15029  14D9  30B2               	movlw	low _adcThresholdHandler
 15030  14DA  0140               	movlb	0	; select bank0
 15031  14DB  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 15032  14DC  3013               	movlw	high _adcThresholdHandler
 15033  14DD  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 15034  14DE  3193  23E0  3194   	fcall	_ADCC_SetADTIInterruptHandler
 15035                           
 15036                           ;beat.c: 39:     ADCC_StartConversion(0x0F);
 15037  14E1  300F               	movlw	15
 15038  14E2  3193  23F2         	fcall	_ADCC_StartConversion
 15039  14E4  0008               	return
 15040  14E5                     __end_of_BEAT_init:	
 15041                           
 15042                           	psect	text50
 15043  13F2                     __ptext50:	
 15044 ;; *************** function _ADCC_StartConversion *****************
 15045 ;; Defined at:
 15046 ;;		line 121 in file "mcc_generated_files/adcc.c"
 15047 ;; Parameters:    Size  Location     Type
 15048 ;;  channel         1    wreg     enum E10867
 15049 ;; Auto vars:     Size  Location     Type
 15050 ;;  channel         1    0[BANK0 ] enum E10867
 15051 ;; Return value:  Size  Location     Type
 15052 ;;                  1    wreg      void 
 15053 ;; Registers used:
 15054 ;;		wreg
 15055 ;; Tracked objects:
 15056 ;;		On entry : 0/0
 15057 ;;		On exit  : 0/0
 15058 ;;		Unchanged: 0/0
 15059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15061 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15063 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15064 ;;Total ram usage:        1 bytes
 15065 ;; Hardware stack levels used:    1
 15066 ;; Hardware stack levels required when called:    4
 15067 ;; This function calls:
 15068 ;;		Nothing
 15069 ;; This function is called by:
 15070 ;;		_BEAT_init
 15071 ;; This function uses a non-reentrant model
 15072 ;;
 15073                           
 15074                           
 15075                           ;psect for function _ADCC_StartConversion
 15076  13F2                     _ADCC_StartConversion:	
 15077                           
 15078                           ;incstack = 0
 15079                           ; Regs used in _ADCC_StartConversion: [wreg]
 15080                           ;ADCC_StartConversion@channel stored from wreg
 15081  13F2  0140               	movlb	0	; select bank0
 15082  13F3  00A0               	movwf	ADCC_StartConversion@channel
 15083                           
 15084                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 15085  13F4  0820               	movf	ADCC_StartConversion@channel,w
 15086  13F5  0141               	movlb	1	; select bank1
 15087  13F6  009F               	movwf	31	;volatile
 15088                           
 15089                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 15090  13F7  0142               	movlb	2	; select bank2
 15091  13F8  1791               	bsf	17,7	;volatile
 15092                           
 15093                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 15094  13F9  1411               	bsf	17,0	;volatile
 15095  13FA  0008               	return
 15096  13FB                     __end_of_ADCC_StartConversion:	
 15097                           
 15098                           	psect	text51
 15099  13E9                     __ptext51:	
 15100 ;; *************** function _ADCC_SetUpperThreshold *****************
 15101 ;; Defined at:
 15102 ;;		line 251 in file "mcc_generated_files/adcc.c"
 15103 ;; Parameters:    Size  Location     Type
 15104 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 15105 ;; Auto vars:     Size  Location     Type
 15106 ;;		None
 15107 ;; Return value:  Size  Location     Type
 15108 ;;                  1    wreg      void 
 15109 ;; Registers used:
 15110 ;;		wreg, status,2
 15111 ;; Tracked objects:
 15112 ;;		On entry : 0/0
 15113 ;;		On exit  : 0/0
 15114 ;;		Unchanged: 0/0
 15115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15116 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15119 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15120 ;;Total ram usage:        2 bytes
 15121 ;; Hardware stack levels used:    1
 15122 ;; Hardware stack levels required when called:    4
 15123 ;; This function calls:
 15124 ;;		Nothing
 15125 ;; This function is called by:
 15126 ;;		_BEAT_init
 15127 ;;		_BEAT_task
 15128 ;; This function uses a non-reentrant model
 15129 ;;
 15130                           
 15131                           
 15132                           ;psect for function _ADCC_SetUpperThreshold
 15133  13E9                     _ADCC_SetUpperThreshold:	
 15134                           
 15135                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 15136                           
 15137                           ;incstack = 0
 15138                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 15139  13E9  0140               	movlb	0	; select bank0
 15140  13EA  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 15141  13EB  0141               	movlb	1	; select bank1
 15142  13EC  008F               	movwf	15	;volatile
 15143                           
 15144                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 15145  13ED  0140               	movlb	0	; select bank0
 15146  13EE  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 15147  13EF  0141               	movlb	1	; select bank1
 15148  13F0  008E               	movwf	14	;volatile
 15149  13F1  0008               	return
 15150  13F2                     __end_of_ADCC_SetUpperThreshold:	
 15151                           
 15152                           	psect	text52
 15153  13E0                     __ptext52:	
 15154 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 15155 ;; Defined at:
 15156 ;;		line 317 in file "mcc_generated_files/adcc.c"
 15157 ;; Parameters:    Size  Location     Type
 15158 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 15159 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 15160 ;; Auto vars:     Size  Location     Type
 15161 ;;		None
 15162 ;; Return value:  Size  Location     Type
 15163 ;;                  1    wreg      void 
 15164 ;; Registers used:
 15165 ;;		wreg
 15166 ;; Tracked objects:
 15167 ;;		On entry : 0/0
 15168 ;;		On exit  : 0/0
 15169 ;;		Unchanged: 0/0
 15170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15171 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15174 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15175 ;;Total ram usage:        2 bytes
 15176 ;; Hardware stack levels used:    1
 15177 ;; Hardware stack levels required when called:    4
 15178 ;; This function calls:
 15179 ;;		Nothing
 15180 ;; This function is called by:
 15181 ;;		_ADCC_Initialize
 15182 ;;		_BEAT_init
 15183 ;; This function uses a non-reentrant model
 15184 ;;
 15185                           
 15186                           
 15187                           ;psect for function _ADCC_SetADTIInterruptHandler
 15188  13E0                     _ADCC_SetADTIInterruptHandler:	
 15189                           
 15190                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 15191                           
 15192                           ;incstack = 0
 15193                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 15194  13E0  0140               	movlb	0	; select bank0
 15195  13E1  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 15196  13E2  0142               	movlb	2	; select bank2
 15197  13E3  00CB               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 15198  13E4  0140               	movlb	0	; select bank0
 15199  13E5  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 15200  13E6  0142               	movlb	2	; select bank2
 15201  13E7  00CA               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 15202  13E8  0008               	return
 15203  13E9                     __end_of_ADCC_SetADTIInterruptHandler:	
 15204                           
 15205                           	psect	intentry
 15206  0004                     __pintentry:	
 15207 ;; *************** function _INTERRUPT_InterruptManager *****************
 15208 ;; Defined at:
 15209 ;;		line 54 in file "mcc_generated_files/interrupt_manager.c"
 15210 ;; Parameters:    Size  Location     Type
 15211 ;;		None
 15212 ;; Auto vars:     Size  Location     Type
 15213 ;;		None
 15214 ;; Return value:  Size  Location     Type
 15215 ;;                  1    wreg      void 
 15216 ;; Registers used:
 15217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15218 ;; Tracked objects:
 15219 ;;		On entry : 0/0
 15220 ;;		On exit  : 0/0
 15221 ;;		Unchanged: 0/0
 15222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15227 ;;Total ram usage:        0 bytes
 15228 ;; Hardware stack levels used:    1
 15229 ;; Hardware stack levels required when called:    3
 15230 ;; This function calls:
 15231 ;;		Absolute function
 15232 ;;		_ADCC_ThresholdISR
 15233 ;;		_EUSART1_Receive_ISR
 15234 ;;		_EUSART1_Transmit_ISR
 15235 ;;		_I2C1_BusCollisionISR
 15236 ;;		_I2C1_ISR
 15237 ;;		_handler
 15238 ;;		i1_CLOCK_getTime
 15239 ;; This function is called by:
 15240 ;;		Interrupt level 1
 15241 ;; This function uses a non-reentrant model
 15242 ;;
 15243                           
 15244  0004                     _INTERRUPT_InterruptManager:	
 15245                           
 15246                           ;incstack = 0
 15247  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 15248                           
 15249                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15250  0005  3180               	pagesel	$
 15251                           
 15252                           ;mcc_generated_files/interrupt_manager.c: 57:     if(INTCONbits.PEIE == 1)
 15253  0006  1F0B               	btfss	11,6	;volatile
 15254  0007  2842               	goto	i1l193
 15255                           
 15256                           ;mcc_generated_files/interrupt_manager.c: 58:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 59:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 15257  0008  014E               	movlb	14	; select bank14
 15258  0009  1899               	btfsc	25,1	;volatile
 15259  000A  1C8F               	btfss	15,1	;volatile
 15260  000B  2810               	goto	i1l180
 15261                           
 15262                           ;mcc_generated_files/interrupt_manager.c: 60:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 61:             I2C1_BusCollisionISR();
 15263  000C  3193  23AC  3180   	fcall	_I2C1_BusCollisionISR
 15264                           
 15265                           ;mcc_generated_files/interrupt_manager.c: 62:         }
 15266  000F  2842               	goto	i1l193
 15267  0010                     i1l180:	
 15268                           ;mcc_generated_files/interrupt_manager.c: 63:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 15269                           
 15270  0010  1819               	btfsc	25,0	;volatile
 15271  0011  1C0F               	btfss	15,0	;volatile
 15272  0012  2817               	goto	i1l182
 15273                           
 15274                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             I2C1_ISR();
 15275  0013  318B  23F5  3180   	fcall	_I2C1_ISR
 15276                           
 15277                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 15278  0016  2842               	goto	i1l193
 15279  0017                     i1l182:	
 15280                           ;mcc_generated_files/interrupt_manager.c: 67:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 15281                           
 15282  0017  1A19               	btfsc	25,4	;volatile
 15283  0018  1E0F               	btfss	15,4	;volatile
 15284  0019  2821               	goto	i1l184
 15285                           
 15286                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 15287  001A  0142               	movlb	2	; select bank2
 15288  001B  0855               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 15289  001C  008A               	movwf	10
 15290  001D  0854               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 15291  001E  000A               	callw
 15292  001F  3180               	pagesel	$
 15293                           
 15294                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 15295  0020  2842               	goto	i1l193
 15296  0021                     i1l184:	
 15297                           ;mcc_generated_files/interrupt_manager.c: 71:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 15298                           
 15299  0021  1A99               	btfsc	25,5	;volatile
 15300  0022  1E8F               	btfss	15,5	;volatile
 15301  0023  2833               	goto	i1l186
 15302                           
 15303                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 15304  0024  0142               	movlb	2	; select bank2
 15305  0025  0853               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 15306  0026  008A               	movwf	10
 15307  0027  0852               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 15308  0028  000A               	callw
 15309  0029  3180               	pagesel	$
 15310                           
 15311                           ;mcc_generated_files/interrupt_manager.c: 74:             dmx_lastActiveTime = CLOCK_get
      +                          Time();
 15312  002A  3193  23BF  3180   	fcall	i1_CLOCK_getTime
 15313  002D  0877               	movf	?i1_CLOCK_getTime+1,w
 15314  002E  0141               	movlb	1	; select bank1
 15315  002F  00B8               	movwf	(_dmx_lastActiveTime+1)^(0+128)
 15316  0030  0876               	movf	?i1_CLOCK_getTime,w
 15317  0031  00B7               	movwf	_dmx_lastActiveTime^(0+128)
 15318                           
 15319                           ;mcc_generated_files/interrupt_manager.c: 75:         }
 15320  0032  2842               	goto	i1l193
 15321  0033                     i1l186:	
 15322                           ;mcc_generated_files/interrupt_manager.c: 76:         else if(PIR0bits.TMR0IF == 1){
 15323                           
 15324  0033  1E8C               	btfss	12,5	;volatile
 15325  0034  283D               	goto	i1l188
 15326                           
 15327                           ;mcc_generated_files/interrupt_manager.c: 78:             ClockCurrentTime++;
 15328  0035  3001               	movlw	1
 15329  0036  0141               	movlb	1	; select bank1
 15330  0037  07B5               	addwf	_ClockCurrentTime^(0+128),f
 15331  0038  3000               	movlw	0
 15332  0039  3DB6               	addwfc	(_ClockCurrentTime+1)^(0+128),f
 15333                           
 15334                           ;mcc_generated_files/interrupt_manager.c: 79:             PIR0bits.TMR0IF = 0;
 15335  003A  014E               	movlb	14	; select bank14
 15336  003B  128C               	bcf	12,5	;volatile
 15337                           
 15338                           ;mcc_generated_files/interrupt_manager.c: 80:         }else if(PIE1bits.ADTIE == 1 && PI
      +                          R1bits.ADTIF == 1)
 15339  003C  2842               	goto	i1l193
 15340  003D                     i1l188:	
 15341  003D  1897               	btfsc	23,1	;volatile
 15342  003E  1C8D               	btfss	13,1	;volatile
 15343  003F  2842               	goto	i1l193
 15344                           
 15345                           ;mcc_generated_files/interrupt_manager.c: 81:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 82:             ADCC_ThresholdISR();
 15346  0040  3194  2470         	fcall	_ADCC_ThresholdISR
 15347  0042                     i1l193:	
 15348                           ;mcc_generated_files/interrupt_manager.c: 83:         }
 15349                           
 15350  0042  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 15351  0043  0009               	retfie
 15352  0044                     __end_of_INTERRUPT_InterruptManager:	
 15353                           
 15354                           	psect	text54
 15355  13BF                     __ptext54:	
 15356 ;; *************** function i1_CLOCK_getTime *****************
 15357 ;; Defined at:
 15358 ;;		line 36 in file "clock.c"
 15359 ;; Parameters:    Size  Location     Type
 15360 ;;		None
 15361 ;; Auto vars:     Size  Location     Type
 15362 ;;		None
 15363 ;; Return value:  Size  Location     Type
 15364 ;;                  2    0[COMMON] unsigned short 
 15365 ;; Registers used:
 15366 ;;		wreg
 15367 ;; Tracked objects:
 15368 ;;		On entry : 0/0
 15369 ;;		On exit  : 0/0
 15370 ;;		Unchanged: 0/0
 15371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15372 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15375 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15376 ;;Total ram usage:        2 bytes
 15377 ;; Hardware stack levels used:    1
 15378 ;; This function calls:
 15379 ;;		Nothing
 15380 ;; This function is called by:
 15381 ;;		_INTERRUPT_InterruptManager
 15382 ;; This function uses a non-reentrant model
 15383 ;;
 15384                           
 15385                           
 15386                           ;psect for function i1_CLOCK_getTime
 15387  13BF                     i1_CLOCK_getTime:	
 15388                           
 15389                           ;clock.c: 37:     return ClockCurrentTime;
 15390                           
 15391                           ;incstack = 0
 15392                           ; Regs used in i1_CLOCK_getTime: [wreg]
 15393  13BF  0141               	movlb	1	; select bank1
 15394  13C0  0836               	movf	(_ClockCurrentTime+1)^(0+128),w
 15395  13C1  00F7               	movwf	?i1_CLOCK_getTime+1
 15396  13C2  0835               	movf	_ClockCurrentTime^(0+128),w
 15397  13C3  00F6               	movwf	?i1_CLOCK_getTime
 15398  13C4  0008               	return
 15399  13C5                     __end_ofi1_CLOCK_getTime:	
 15400                           
 15401                           	psect	text55
 15402  16A8                     __ptext55:	
 15403 ;; *************** function _EUSART1_Receive_ISR *****************
 15404 ;; Defined at:
 15405 ;;		line 213 in file "mcc_generated_files/eusart1.c"
 15406 ;; Parameters:    Size  Location     Type
 15407 ;;		None
 15408 ;; Auto vars:     Size  Location     Type
 15409 ;;		None
 15410 ;; Return value:  Size  Location     Type
 15411 ;;                  1    wreg      void 
 15412 ;; Registers used:
 15413 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15414 ;; Tracked objects:
 15415 ;;		On entry : 0/0
 15416 ;;		On exit  : 0/0
 15417 ;;		Unchanged: 0/0
 15418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15423 ;;Total ram usage:        0 bytes
 15424 ;; Hardware stack levels used:    1
 15425 ;; Hardware stack levels required when called:    2
 15426 ;; This function calls:
 15427 ;;		Absolute function
 15428 ;;		_EUSART1_DefaultErrorHandler
 15429 ;;		_EUSART1_DefaultFramingErrorHandler
 15430 ;;		_EUSART1_DefaultOverrunErrorHandler
 15431 ;;		_EUSART1_RxDataHandler
 15432 ;; This function is called by:
 15433 ;;		_EUSART1_Initialize
 15434 ;;		_INTERRUPT_InterruptManager
 15435 ;; This function uses a non-reentrant model
 15436 ;;
 15437                           
 15438                           
 15439                           ;psect for function _EUSART1_Receive_ISR
 15440  16A8                     _EUSART1_Receive_ISR:	
 15441                           
 15442                           ;mcc_generated_files/eusart1.c: 216:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 15443                           
 15444                           ;incstack = 0
 15445                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15446  16A8  0871               	movf	_eusart1RxHead,w	;volatile
 15447  16A9  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 15448  16AA  0086               	movwf	6
 15449  16AB  3001               	movlw	1	; select bank2/3
 15450  16AC  0087               	movwf	7
 15451  16AD  0181               	clrf	1
 15452                           
 15453                           ;mcc_generated_files/eusart1.c: 218:     if(RC1STAbits.FERR){
 15454  16AE  0142               	movlb	2	; select bank2
 15455  16AF  1D1D               	btfss	29,2	;volatile
 15456  16B0  2EBC               	goto	i1l4245
 15457                           
 15458                           ;mcc_generated_files/eusart1.c: 219:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 15459  16B1  0871               	movf	_eusart1RxHead,w	;volatile
 15460  16B2  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 15461  16B3  0086               	movwf	6
 15462  16B4  3001               	movlw	1	; select bank2/3
 15463  16B5  0087               	movwf	7
 15464  16B6  1481               	bsf	1,1
 15465                           
 15466                           ;mcc_generated_files/eusart1.c: 220:         EUSART1_FramingErrorHandler();
 15467  16B7  0851               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 15468  16B8  008A               	movwf	10
 15469  16B9  0850               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 15470  16BA  000A               	callw
 15471  16BB  3196               	pagesel	$
 15472  16BC                     i1l4245:	
 15473                           
 15474                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.OERR){
 15475  16BC  0142               	movlb	2	; select bank2
 15476  16BD  1C9D               	btfss	29,1	;volatile
 15477  16BE  2ECA               	goto	i1l4251
 15478                           
 15479                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 15480  16BF  0871               	movf	_eusart1RxHead,w	;volatile
 15481  16C0  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 15482  16C1  0086               	movwf	6
 15483  16C2  3001               	movlw	1	; select bank2/3
 15484  16C3  0087               	movwf	7
 15485  16C4  1501               	bsf	1,2
 15486                           
 15487                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_OverrunErrorHandler();
 15488  16C5  084F               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 15489  16C6  008A               	movwf	10
 15490  16C7  084E               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 15491  16C8  000A               	callw
 15492  16C9  3196               	pagesel	$
 15493  16CA                     i1l4251:	
 15494                           
 15495                           ;mcc_generated_files/eusart1.c: 228:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 15496  16CA  0871               	movf	_eusart1RxHead,w	;volatile
 15497  16CB  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 15498  16CC  0086               	movwf	6
 15499  16CD  3001               	movlw	1	; select bank2/3
 15500  16CE  0087               	movwf	7
 15501  16CF  0801               	movf	1,w
 15502  16D0  1903               	btfsc	3,2
 15503  16D1  2ED9               	goto	i1l4255
 15504                           
 15505                           ;mcc_generated_files/eusart1.c: 229:         EUSART1_ErrorHandler();
 15506  16D2  0142               	movlb	2	; select bank2
 15507  16D3  084D               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 15508  16D4  008A               	movwf	10
 15509  16D5  084C               	movf	_EUSART1_ErrorHandler^(0+256),w
 15510  16D6  000A               	callw
 15511  16D7  3196               	pagesel	$
 15512                           
 15513                           ;mcc_generated_files/eusart1.c: 230:     } else {
 15514  16D8  0008               	return
 15515  16D9                     i1l4255:	
 15516                           
 15517                           ;mcc_generated_files/eusart1.c: 231:         EUSART1_RxDataHandler();
 15518  16D9  3194  24E5         	fcall	_EUSART1_RxDataHandler
 15519  16DB  0008               	return
 15520  16DC                     __end_of_EUSART1_Receive_ISR:	
 15521                           
 15522                           	psect	text56
 15523  16DC                     __ptext56:	
 15524 ;; *************** function _handler *****************
 15525 ;; Defined at:
 15526 ;;		line 28 in file "dmx.c"
 15527 ;; Parameters:    Size  Location     Type
 15528 ;;		None
 15529 ;; Auto vars:     Size  Location     Type
 15530 ;;  dataIn          1    4[COMMON] unsigned char 
 15531 ;; Return value:  Size  Location     Type
 15532 ;;                  1    wreg      void 
 15533 ;; Registers used:
 15534 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15535 ;; Tracked objects:
 15536 ;;		On entry : 0/0
 15537 ;;		On exit  : 0/0
 15538 ;;		Unchanged: 0/0
 15539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15542 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15543 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15544 ;;Total ram usage:        5 bytes
 15545 ;; Hardware stack levels used:    1
 15546 ;; This function calls:
 15547 ;;		Nothing
 15548 ;; This function is called by:
 15549 ;;		_DMX_init
 15550 ;;		_INTERRUPT_InterruptManager
 15551 ;; This function uses a non-reentrant model
 15552 ;;
 15553                           
 15554                           
 15555                           ;psect for function _handler
 15556  16DC                     _handler:	
 15557                           
 15558                           ;dmx.c: 29:     LATC5 = 1;
 15559                           
 15560                           ;incstack = 0
 15561                           ; Regs used in _handler: [wreg+fsr1l+fsr1h+status,2+status,0]
 15562  16DC  0140               	movlb	0	; select bank0
 15563  16DD  169A               	bsf	26,5	;volatile
 15564                           
 15565                           ;dmx.c: 30:     if(RC1STAbits.OERR == 1){
 15566  16DE  0142               	movlb	2	; select bank2
 15567  16DF  1C9D               	btfss	29,1	;volatile
 15568  16E0  2EE3               	goto	i1l4713
 15569                           
 15570                           ;dmx.c: 31:                 RC1STAbits.CREN = 0;
 15571  16E1  121D               	bcf	29,4	;volatile
 15572                           
 15573                           ;dmx.c: 32:                 RC1STAbits.CREN = 1;
 15574  16E2  161D               	bsf	29,4	;volatile
 15575  16E3                     i1l4713:	
 15576                           
 15577                           ;dmx.c: 34:             uint8_t dataIn = RC1REG;
 15578  16E3  0819               	movf	25,w	;volatile
 15579  16E4  00F6               	movwf	??_handler
 15580  16E5  0876               	movf	??_handler,w
 15581  16E6  00FA               	movwf	handler@dataIn
 15582                           
 15583                           ;dmx.c: 35:             if(RC1STAbits.FERR == 1){
 15584  16E7  1D1D               	btfss	29,2	;volatile
 15585  16E8  2EED               	goto	i1l4719
 15586                           
 15587                           ;dmx.c: 36:                 point = 0;
 15588  16E9  0141               	movlb	1	; select bank1
 15589  16EA  01AB               	clrf	_point^(0+128)
 15590  16EB  01AC               	clrf	(_point+1)^(0+128)
 15591                           
 15592                           ;dmx.c: 37:             }else if(point > 513){
 15593  16EC  2F0E               	goto	i1l4727
 15594  16ED                     i1l4719:	
 15595  16ED  0141               	movlb	1	; select bank1
 15596  16EE  082C               	movf	(_point+1)^(0+128),w
 15597  16EF  3A80               	xorlw	128
 15598  16F0  00F6               	movwf	??_handler
 15599  16F1  3082               	movlw	130
 15600  16F2  0276               	subwf	??_handler,w
 15601  16F3  1D03               	skipz
 15602  16F4  2EF7               	goto	u414_25
 15603  16F5  3002               	movlw	2
 15604  16F6  022B               	subwf	_point^(0+128),w
 15605  16F7                     u414_25:	
 15606  16F7  1803               	btfsc	3,0
 15607  16F8  2F0E               	goto	i1l4727
 15608                           
 15609                           ;dmx.c: 40:                 input[point] = dataIn;
 15610  16F9  30EF               	movlw	239
 15611  16FA  00F6               	movwf	??_handler
 15612  16FB  3025               	movlw	37
 15613  16FC  00F7               	movwf	??_handler+1
 15614  16FD  0141               	movlb	1	; select bank1
 15615  16FE  082B               	movf	_point^(0+128),w
 15616  16FF  0776               	addwf	??_handler,w
 15617  1700  00F8               	movwf	??_handler+2
 15618  1701  082C               	movf	(_point+1)^(0+128),w
 15619  1702  3D77               	addwfc	??_handler+1,w
 15620  1703  00F9               	movwf	??_handler+3
 15621  1704  0878               	movf	??_handler+2,w
 15622  1705  0086               	movwf	6
 15623  1706  0879               	movf	??_handler+3,w
 15624  1707  0087               	movwf	7
 15625  1708  087A               	movf	handler@dataIn,w
 15626  1709  0081               	movwf	1
 15627                           
 15628                           ;dmx.c: 41:                 point++;
 15629  170A  3001               	movlw	1
 15630  170B  07AB               	addwf	_point^(0+128),f
 15631  170C  3000               	movlw	0
 15632  170D  3DAC               	addwfc	(_point+1)^(0+128),f
 15633  170E                     i1l4727:	
 15634                           
 15635                           ;dmx.c: 43:     LATC5 = 0;
 15636  170E  0140               	movlb	0	; select bank0
 15637  170F  129A               	bcf	26,5	;volatile
 15638  1710  0008               	return
 15639  1711                     __end_of_handler:	
 15640                           
 15641                           	psect	text57
 15642  0BF5                     __ptext57:	
 15643 ;; *************** function _I2C1_ISR *****************
 15644 ;; Defined at:
 15645 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 15646 ;; Parameters:    Size  Location     Type
 15647 ;;		None
 15648 ;; Auto vars:     Size  Location     Type
 15649 ;;		None
 15650 ;; Return value:  Size  Location     Type
 15651 ;;                  1    wreg      void 
 15652 ;; Registers used:
 15653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15654 ;; Tracked objects:
 15655 ;;		On entry : 0/0
 15656 ;;		On exit  : 0/0
 15657 ;;		Unchanged: 0/0
 15658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15661 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15662 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15663 ;;Total ram usage:        4 bytes
 15664 ;; Hardware stack levels used:    1
 15665 ;; Hardware stack levels required when called:    1
 15666 ;; This function calls:
 15667 ;;		_I2C1_FunctionComplete
 15668 ;;		_I2C1_Stop
 15669 ;; This function is called by:
 15670 ;;		_INTERRUPT_InterruptManager
 15671 ;; This function uses a non-reentrant model
 15672 ;;
 15673                           
 15674                           
 15675                           ;psect for function _I2C1_ISR
 15676  0BF5                     _I2C1_ISR:	
 15677                           
 15678                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 15679                           
 15680                           ;incstack = 0
 15681                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15682  0BF5  014E               	movlb	14	; select bank14
 15683  0BF6  100F               	bcf	15,0	;volatile
 15684                           
 15685                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 15686  0BF7  0143               	movlb	3	; select bank3
 15687  0BF8  1F90               	btfss	16,7	;volatile
 15688  0BF9  2D16               	goto	i1l4395
 15689                           
 15690                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 15691  0BFA  1390               	bcf	16,7	;volatile
 15692                           
 15693                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 15694  0BFB  0141               	movlb	1	; select bank1
 15695  0BFC  01C7               	clrf	_i2c1_state^(0+128)
 15696                           
 15697                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 15698  0BFD  0844               	movf	_p_i2c1_current^(0+128),w
 15699  0BFE  3E02               	addlw	2
 15700  0BFF  0086               	movwf	6
 15701  0C00  0187               	clrf	7
 15702  0C01  0801               	movf	1,w
 15703  0C02  0086               	movwf	6
 15704  0C03  0187               	clrf	7
 15705  0C04  0181               	clrf	1
 15706  0C05  0A81               	incf	1,f
 15707                           
 15708                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 15709  0C06  01C4               	clrf	_p_i2c1_current^(0+128)
 15710  0C07  0008               	return
 15711  0C08                     i1l304:	
 15712                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 15713                           
 15714                           
 15715                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 15716  0C08  18A2               	btfsc	(_i2c1_object^(0+128)+2),1
 15717  0C09  0008               	return
 15718                           
 15719                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 15720  0C0A  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 15721  0C0B  00F8               	movwf	??_I2C1_ISR
 15722  0C0C  0878               	movf	??_I2C1_ISR,w
 15723  0C0D  00C4               	movwf	_p_i2c1_current^(0+128)
 15724                           
 15725                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 15726  0C0E  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 15727  0C0F  0086               	movwf	6
 15728  0C10  0187               	clrf	7
 15729  0C11  0801               	movf	1,w
 15730  0C12  00F8               	movwf	??_I2C1_ISR
 15731  0C13  0878               	movf	??_I2C1_ISR,w
 15732  0C14  00C6               	movwf	_i2c1_trb_count^(0+128)
 15733                           
 15734                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 15735  0C15  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 15736  0C16  0086               	movwf	6
 15737  0C17  0187               	clrf	7
 15738  0C18  3F41               	moviw [1]fsr1
 15739  0C19  00C5               	movwf	_p_i2c1_trb_current^(0+128)
 15740                           
 15741                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 15742  0C1A  3003               	movlw	3
 15743  0C1B  00F8               	movwf	??_I2C1_ISR
 15744  0C1C  0878               	movf	??_I2C1_ISR,w
 15745  0C1D  07A1               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 15746                           
 15747                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 15748  0C1E  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 15749  0C1F  3ACD               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 15750  0C20  1D03               	skipz
 15751  0C21  2C26               	goto	i1l4283
 15752                           
 15753                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 15754  0C22  30CA               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 15755  0C23  00F8               	movwf	??_I2C1_ISR
 15756  0C24  0878               	movf	??_I2C1_ISR,w
 15757  0C25  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 15758  0C26                     i1l4283:	
 15759                           
 15760                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 15761  0C26  1022               	bcf	(_i2c1_object^(0+128)+2),0
 15762                           
 15763                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 15764  0C27  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 15765  0C28  0620               	xorwf	_i2c1_object^(0+128),w
 15766  0C29  1903               	btfsc	3,2
 15767                           
 15768                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 15769  0C2A  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 15770                           
 15771                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 15772                           
 15773                           ;mcc_generated_files/i2c1.c: 290:                 }
 15774  0C2B  0143               	movlb	3	; select bank3
 15775  0C2C  1411               	bsf	17,0	;volatile
 15776  0C2D                     i1l4287:	
 15777                           
 15778                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 15779  0C2D  3002               	movlw	2
 15780  0C2E  00F8               	movwf	??_I2C1_ISR
 15781  0C2F  0878               	movf	??_I2C1_ISR,w
 15782  0C30  0141               	movlb	1	; select bank1
 15783  0C31  00C7               	movwf	_i2c1_state^(0+128)
 15784  0C32  0008               	return
 15785  0C33                     i1l309:	
 15786                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 15787                           
 15788  0C33  2CBF               	goto	i1l330
 15789  0C34                     i1l310:	
 15790                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 15791                           
 15792                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 15793                           
 15794                           
 15795                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 15796  0C34  0143               	movlb	3	; select bank3
 15797  0C35  1F11               	btfss	17,6	;volatile
 15798  0C36  2C40               	goto	i1l4295
 15799                           
 15800                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 15801  0C37  3001               	movlw	1
 15802  0C38  00F8               	movwf	??_I2C1_ISR
 15803  0C39  0878               	movf	??_I2C1_ISR,w
 15804  0C3A  0141               	movlb	1	; select bank1
 15805  0C3B  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 15806                           
 15807                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 15808  0C3C  3004               	movlw	4
 15809  0C3D  3194  24FD         	fcall	_I2C1_Stop
 15810                           
 15811                           ;mcc_generated_files/i2c1.c: 319:             }
 15812  0C3F  0008               	return
 15813  0C40                     i1l4295:	
 15814                           
 15815                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 15816  0C40  0875               	movf	I2C1_ISR@i2c_address+1,w
 15817  0C41  00F9               	movwf	??_I2C1_ISR+1
 15818  0C42  0874               	movf	I2C1_ISR@i2c_address,w
 15819  0C43  00F8               	movwf	??_I2C1_ISR
 15820  0C44  36F9               	lsrf	??_I2C1_ISR+1,f
 15821  0C45  0CF8               	rrf	??_I2C1_ISR,f
 15822  0C46  0878               	movf	??_I2C1_ISR,w
 15823  0C47  008C               	movwf	12	;volatile
 15824                           
 15825                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 15826  0C48  1C74               	btfss	I2C1_ISR@i2c_address,0
 15827  0C49  2C50               	goto	i1l4301
 15828                           
 15829                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 15830  0C4A  300B               	movlw	11
 15831  0C4B  00F8               	movwf	??_I2C1_ISR
 15832  0C4C  0878               	movf	??_I2C1_ISR,w
 15833  0C4D  0141               	movlb	1	; select bank1
 15834  0C4E  00C7               	movwf	_i2c1_state^(0+128)
 15835                           
 15836                           ;mcc_generated_files/i2c1.c: 331:                 }
 15837  0C4F  0008               	return
 15838  0C50                     i1l4301:	
 15839                           
 15840                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 15841  0C50  3003               	movlw	3
 15842  0C51  00F8               	movwf	??_I2C1_ISR
 15843  0C52  0878               	movf	??_I2C1_ISR,w
 15844  0C53  0141               	movlb	1	; select bank1
 15845  0C54  00C7               	movwf	_i2c1_state^(0+128)
 15846  0C55  0008               	return
 15847  0C56                     i1l315:	
 15848                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 15849                           
 15850                           
 15851                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 15852  0C56  0143               	movlb	3	; select bank3
 15853  0C57  1F11               	btfss	17,6	;volatile
 15854  0C58  2C62               	goto	i1l316
 15855                           
 15856                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 15857  0C59  3001               	movlw	1
 15858  0C5A  00F8               	movwf	??_I2C1_ISR
 15859  0C5B  0878               	movf	??_I2C1_ISR,w
 15860  0C5C  0141               	movlb	1	; select bank1
 15861  0C5D  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 15862                           
 15863                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 15864  0C5E  3004               	movlw	4
 15865  0C5F  3194  24FD         	fcall	_I2C1_Stop
 15866                           
 15867                           ;mcc_generated_files/i2c1.c: 347:             }
 15868  0C61  0008               	return
 15869  0C62                     i1l316:	
 15870                           ;mcc_generated_files/i2c1.c: 348:             else
 15871                           
 15872                           
 15873                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 15874  0C62  1491               	bsf	17,1	;volatile
 15875                           
 15876                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 15877  0C63  0875               	movf	I2C1_ISR@i2c_address+1,w
 15878  0C64  00F9               	movwf	??_I2C1_ISR+1
 15879  0C65  0874               	movf	I2C1_ISR@i2c_address,w
 15880  0C66  00F8               	movwf	??_I2C1_ISR
 15881  0C67  0879               	movf	??_I2C1_ISR+1,w
 15882  0C68  00F8               	movwf	??_I2C1_ISR
 15883  0C69  01F9               	clrf	??_I2C1_ISR+1
 15884  0C6A  3006               	movlw	6
 15885  0C6B  0578               	andwf	??_I2C1_ISR,w
 15886  0C6C  00FA               	movwf	??_I2C1_ISR+2
 15887  0C6D  3000               	movlw	0
 15888  0C6E  0579               	andwf	??_I2C1_ISR+1,w
 15889  0C6F  00FB               	movwf	??_I2C1_ISR+3
 15890  0C70  30F0               	movlw	240
 15891  0C71  047A               	iorwf	??_I2C1_ISR+2,w
 15892  0C72  00F4               	movwf	I2C1_ISR@i2c_address
 15893  0C73  3000               	movlw	0
 15894  0C74  047B               	iorwf	??_I2C1_ISR+3,w
 15895  0C75  00F5               	movwf	I2C1_ISR@i2c_address+1
 15896                           
 15897                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 15898  0C76  1474               	bsf	I2C1_ISR@i2c_address,0
 15899                           
 15900                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 15901  0C77  0141               	movlb	1	; select bank1
 15902  0C78  01C1               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 15903  0C79  0AC1               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 15904  0C7A  2C2D               	goto	i1l4287
 15905  0C7B                     i1l4315:	
 15906                           
 15907                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 15908  0C7B  0341               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 15909  0C7C  1903               	btfsc	3,2
 15910  0C7D  2C94               	goto	i1l4335
 15911                           
 15912                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 15913  0C7E  0845               	movf	_p_i2c1_trb_current^(0+128),w
 15914  0C7F  0086               	movwf	6
 15915  0C80  3001               	movlw	1	; select bank2/3
 15916  0C81  0087               	movwf	7
 15917  0C82  3F40               	moviw [0]fsr1
 15918  0C83  00F4               	movwf	I2C1_ISR@i2c_address
 15919  0C84  3F41               	moviw [1]fsr1
 15920  0C85  00F5               	movwf	I2C1_ISR@i2c_address+1
 15921                           
 15922                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 15923  0C86  0845               	movf	_p_i2c1_trb_current^(0+128),w
 15924  0C87  0086               	movwf	6
 15925  0C88  3001               	movlw	1	; select bank2/3
 15926  0C89  0087               	movwf	7
 15927  0C8A  3001               	movlw	1	; select bank2/3
 15928  0C8B  3F43               	moviw [3]fsr1
 15929  0C8C  00C3               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 15930                           
 15931                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 15932  0C8D  0845               	movf	_p_i2c1_trb_current^(0+128),w
 15933  0C8E  0086               	movwf	6
 15934  0C8F  3001               	movlw	1	; select bank2/3
 15935  0C90  0087               	movwf	7
 15936  0C91  3001               	movlw	1	; select bank2/3
 15937  0C92  3F42               	moviw [2]fsr1
 15938  0C93  00C2               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 15939  0C94                     i1l4335:	
 15940                           
 15941                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 15942  0C94  0874               	movf	I2C1_ISR@i2c_address,w
 15943  0C95  0143               	movlb	3	; select bank3
 15944  0C96  008C               	movwf	12	;volatile
 15945                           
 15946                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 15947  0C97  1C74               	btfss	I2C1_ISR@i2c_address,0
 15948  0C98  2C50               	goto	i1l4301
 15949                           
 15950                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 15951  0C99  3005               	movlw	5
 15952  0C9A  00F8               	movwf	??_I2C1_ISR
 15953  0C9B  0878               	movf	??_I2C1_ISR,w
 15954  0C9C  0141               	movlb	1	; select bank1
 15955  0C9D  00C7               	movwf	_i2c1_state^(0+128)
 15956                           
 15957                           ;mcc_generated_files/i2c1.c: 419:                 }
 15958  0C9E  0008               	return
 15959  0C9F                     i1l326:	
 15960                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 15961                           
 15962                           
 15963                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 15964  0C9F  0143               	movlb	3	; select bank3
 15965  0CA0  1F11               	btfss	17,6	;volatile
 15966  0CA1  2CAD               	goto	i1l4349
 15967                           
 15968                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 15969  0CA2  3001               	movlw	1
 15970  0CA3  00F8               	movwf	??_I2C1_ISR
 15971  0CA4  0878               	movf	??_I2C1_ISR,w
 15972  0CA5  0141               	movlb	1	; select bank1
 15973  0CA6  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 15974                           
 15975                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 15976  0CA7  0143               	movlb	3	; select bank3
 15977  0CA8  1311               	bcf	17,6	;volatile
 15978                           
 15979                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 15980  0CA9  3005               	movlw	5
 15981  0CAA  3194  24FD         	fcall	_I2C1_Stop
 15982                           
 15983                           ;mcc_generated_files/i2c1.c: 442:             }
 15984  0CAC  0008               	return
 15985  0CAD                     i1l4349:	
 15986                           
 15987                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 15988  0CAD  3001               	movlw	1
 15989  0CAE  0141               	movlb	1	; select bank1
 15990  0CAF  02C2               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 15991  0CB0  0A42               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 15992  0CB1  1D03               	btfss	3,2
 15993  0CB2  2CC2               	goto	i1l4357
 15994                           
 15995                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 15996  0CB3  3004               	movlw	4
 15997  0CB4  00F8               	movwf	??_I2C1_ISR
 15998  0CB5  0878               	movf	??_I2C1_ISR,w
 15999  0CB6  07C5               	addwf	_p_i2c1_trb_current^(0+128),f
 16000                           
 16001                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 16002  0CB7  3001               	movlw	1
 16003  0CB8  02C6               	subwf	_i2c1_trb_count^(0+128),f
 16004  0CB9  1D03               	btfss	3,2
 16005  0CBA  2CBF               	goto	i1l330
 16006                           
 16007                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 16008  0CBB  3000               	movlw	0
 16009  0CBC  3194  24FD         	fcall	_I2C1_Stop
 16010                           
 16011                           ;mcc_generated_files/i2c1.c: 457:                     }
 16012  0CBE  0008               	return
 16013  0CBF                     i1l330:	
 16014                           ;mcc_generated_files/i2c1.c: 458:                     else
 16015                           
 16016                           
 16017                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 16018  0CBF  0143               	movlb	3	; select bank3
 16019  0CC0  1491               	bsf	17,1	;volatile
 16020  0CC1  2C2D               	goto	i1l4287
 16021  0CC2                     i1l4357:	
 16022                           
 16023                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 16024  0CC2  0843               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 16025  0CC3  0086               	movwf	6
 16026  0CC4  0187               	clrf	7
 16027  0CC5  0801               	movf	1,w
 16028  0CC6  0143               	movlb	3	; select bank3
 16029  0CC7  008C               	movwf	12	;volatile
 16030  0CC8  3001               	movlw	1
 16031  0CC9  00F8               	movwf	??_I2C1_ISR
 16032  0CCA  0878               	movf	??_I2C1_ISR,w
 16033  0CCB  0141               	movlb	1	; select bank1
 16034  0CCC  07C3               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 16035  0CCD  0008               	return
 16036  0CCE                     i1l333:	
 16037                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 16038                           
 16039                           
 16040                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 16041  0CCE  0143               	movlb	3	; select bank3
 16042  0CCF  1F11               	btfss	17,6	;volatile
 16043  0CD0  2CDC               	goto	i1l334
 16044                           
 16045                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 16046  0CD1  3001               	movlw	1
 16047  0CD2  00F8               	movwf	??_I2C1_ISR
 16048  0CD3  0878               	movf	??_I2C1_ISR,w
 16049  0CD4  0141               	movlb	1	; select bank1
 16050  0CD5  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 16051                           
 16052                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 16053  0CD6  3004               	movlw	4
 16054  0CD7  3194  24FD         	fcall	_I2C1_Stop
 16055                           
 16056                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 16057  0CD9  0143               	movlb	3	; select bank3
 16058  0CDA  1311               	bcf	17,6	;volatile
 16059                           
 16060                           ;mcc_generated_files/i2c1.c: 495:             }
 16061  0CDB  0008               	return
 16062  0CDC                     i1l334:	
 16063                           ;mcc_generated_files/i2c1.c: 496:             else
 16064                           
 16065                           
 16066                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 16067  0CDC  1591               	bsf	17,3	;volatile
 16068                           
 16069                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 16070  0CDD  3008               	movlw	8
 16071  0CDE  00F8               	movwf	??_I2C1_ISR
 16072  0CDF  0878               	movf	??_I2C1_ISR,w
 16073  0CE0  0141               	movlb	1	; select bank1
 16074  0CE1  00C7               	movwf	_i2c1_state^(0+128)
 16075  0CE2  0008               	return
 16076  0CE3                     i1l4369:	
 16077                           
 16078                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 16079  0CE3  3008               	movlw	8
 16080  0CE4  00F8               	movwf	??_I2C1_ISR
 16081  0CE5  0878               	movf	??_I2C1_ISR,w
 16082  0CE6  00C7               	movwf	_i2c1_state^(0+128)
 16083                           
 16084                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 16085  0CE7  0143               	movlb	3	; select bank3
 16086  0CE8  1591               	bsf	17,3	;volatile
 16087                           
 16088                           ;mcc_generated_files/i2c1.c: 513:             break;
 16089  0CE9  0008               	return
 16090  0CEA                     i1l4373:	
 16091                           
 16092                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 16093  0CEA  0143               	movlb	3	; select bank3
 16094  0CEB  080C               	movf	12,w	;volatile
 16095  0CEC  00F8               	movwf	??_I2C1_ISR
 16096  0CED  0141               	movlb	1	; select bank1
 16097  0CEE  0843               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 16098  0CEF  0086               	movwf	6
 16099  0CF0  0187               	clrf	7
 16100  0CF1  0878               	movf	??_I2C1_ISR,w
 16101  0CF2  0081               	movwf	1
 16102  0CF3  3001               	movlw	1
 16103  0CF4  00F8               	movwf	??_I2C1_ISR
 16104  0CF5  0878               	movf	??_I2C1_ISR,w
 16105  0CF6  07C3               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 16106                           
 16107                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 16108  0CF7  3001               	movlw	1
 16109  0CF8  02C2               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 16110  0CF9  1903               	btfsc	3,2
 16111  0CFA  2D03               	goto	i1l338
 16112                           
 16113                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 16114  0CFB  0143               	movlb	3	; select bank3
 16115  0CFC  1291               	bcf	17,5	;volatile
 16116                           
 16117                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 16118  0CFD  3006               	movlw	6
 16119  0CFE  00F8               	movwf	??_I2C1_ISR
 16120  0CFF  0878               	movf	??_I2C1_ISR,w
 16121  0D00  0141               	movlb	1	; select bank1
 16122  0D01  00C7               	movwf	_i2c1_state^(0+128)
 16123                           
 16124                           ;mcc_generated_files/i2c1.c: 532:             }
 16125  0D02  2D07               	goto	i1l4385
 16126  0D03                     i1l338:	
 16127                           ;mcc_generated_files/i2c1.c: 533:             else
 16128                           
 16129                           
 16130                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 16131  0D03  0143               	movlb	3	; select bank3
 16132  0D04  1691               	bsf	17,5	;volatile
 16133                           
 16134                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 16135  0D05  3194  24AB         	fcall	_I2C1_FunctionComplete
 16136  0D07                     i1l4385:	
 16137                           
 16138                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 16139  0D07  0143               	movlb	3	; select bank3
 16140  0D08  1611               	bsf	17,4	;volatile
 16141                           
 16142                           ;mcc_generated_files/i2c1.c: 545:             break;
 16143  0D09  0008               	return
 16144  0D0A                     i1l4387:	
 16145                           
 16146                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 16147  0D0A  3000               	movlw	0
 16148  0D0B  3194  24FD         	fcall	_I2C1_Stop
 16149                           
 16150                           ;mcc_generated_files/i2c1.c: 552:             break;
 16151  0D0D  0008               	return
 16152  0D0E                     i1l4389:	
 16153                           
 16154                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 16155  0D0E  3001               	movlw	1
 16156  0D0F  00F8               	movwf	??_I2C1_ISR
 16157  0D10  0878               	movf	??_I2C1_ISR,w
 16158  0D11  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 16159                           
 16160                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 16161  0D12  3006               	movlw	6
 16162  0D13  3194  24FD         	fcall	_I2C1_Stop
 16163                           
 16164                           ;mcc_generated_files/i2c1.c: 560:             break;
 16165  0D15  0008               	return
 16166  0D16                     i1l4395:	
 16167  0D16  0141               	movlb	1	; select bank1
 16168  0D17  0847               	movf	_i2c1_state^(0+128),w
 16169  0D18  00F8               	movwf	??_I2C1_ISR
 16170  0D19  01F9               	clrf	??_I2C1_ISR+1
 16171                           
 16172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16173                           ; Switch size 1, requested type "simple"
 16174                           ; Number of cases is 1, Range of values is 0 to 0
 16175                           ; switch strategies available:
 16176                           ; Name         Instructions Cycles
 16177                           ; simple_byte            4     3 (average)
 16178                           ; direct_byte            8     6 (fixed)
 16179                           ; jumptable            260     6 (fixed)
 16180                           ;	Chosen strategy is simple_byte
 16181  0D1A  0879               	movf	??_I2C1_ISR+1,w
 16182  0D1B  3A00               	xorlw	0	; case 0
 16183  0D1C  1903               	skipnz
 16184  0D1D  2D1F               	goto	i1l5913
 16185  0D1E  2D0E               	goto	i1l4389
 16186  0D1F                     i1l5913:	
 16187                           
 16188                           ; Switch size 1, requested type "simple"
 16189                           ; Number of cases is 11, Range of values is 0 to 11
 16190                           ; switch strategies available:
 16191                           ; Name         Instructions Cycles
 16192                           ; direct_byte           30     6 (fixed)
 16193                           ; simple_byte           34    18 (average)
 16194                           ; jumptable            260     6 (fixed)
 16195                           ;	Chosen strategy is simple_byte
 16196  0D1F  0878               	movf	??_I2C1_ISR,w
 16197  0D20  3A00               	xorlw	0	; case 0
 16198  0D21  1903               	skipnz
 16199  0D22  2C08               	goto	i1l304
 16200  0D23  3A01               	xorlw	1	; case 1
 16201  0D24  1903               	skipnz
 16202  0D25  2C33               	goto	i1l309
 16203  0D26  3A03               	xorlw	3	; case 2
 16204  0D27  1903               	skipnz
 16205  0D28  2C7B               	goto	i1l4315
 16206  0D29  3A01               	xorlw	1	; case 3
 16207  0D2A  1903               	skipnz
 16208  0D2B  2C9F               	goto	i1l326
 16209  0D2C  3A07               	xorlw	7	; case 4
 16210  0D2D  1903               	skipnz
 16211  0D2E  2D0A               	goto	i1l4387
 16212  0D2F  3A01               	xorlw	1	; case 5
 16213  0D30  1903               	skipnz
 16214  0D31  2CCE               	goto	i1l333
 16215  0D32  3A03               	xorlw	3	; case 6
 16216  0D33  1903               	skipnz
 16217  0D34  2CE3               	goto	i1l4369
 16218  0D35  3A01               	xorlw	1	; case 7
 16219  0D36  1903               	skipnz
 16220  0D37  2D0A               	goto	i1l4387
 16221  0D38  3A0F               	xorlw	15	; case 8
 16222  0D39  1903               	skipnz
 16223  0D3A  2CEA               	goto	i1l4373
 16224  0D3B  3A02               	xorlw	2	; case 10
 16225  0D3C  1903               	skipnz
 16226  0D3D  2C34               	goto	i1l310
 16227  0D3E  3A01               	xorlw	1	; case 11
 16228  0D3F  1903               	skipnz
 16229  0D40  2C56               	goto	i1l315
 16230  0D41  2D0E               	goto	i1l4389
 16231  0D42  0008               	return
 16232  0D43                     __end_of_I2C1_ISR:	
 16233                           
 16234                           	psect	text58
 16235  14FD                     __ptext58:	
 16236 ;; *************** function _I2C1_Stop *****************
 16237 ;; Defined at:
 16238 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 16239 ;; Parameters:    Size  Location     Type
 16240 ;;  completion_c    1    wreg     enum E10866
 16241 ;; Auto vars:     Size  Location     Type
 16242 ;;  completion_c    1    1[COMMON] enum E10866
 16243 ;; Return value:  Size  Location     Type
 16244 ;;                  1    wreg      void 
 16245 ;; Registers used:
 16246 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16247 ;; Tracked objects:
 16248 ;;		On entry : 0/0
 16249 ;;		On exit  : 0/0
 16250 ;;		Unchanged: 0/0
 16251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16253 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16254 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16255 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16256 ;;Total ram usage:        2 bytes
 16257 ;; Hardware stack levels used:    1
 16258 ;; This function calls:
 16259 ;;		Nothing
 16260 ;; This function is called by:
 16261 ;;		_I2C1_ISR
 16262 ;; This function uses a non-reentrant model
 16263 ;;
 16264                           
 16265                           
 16266                           ;psect for function _I2C1_Stop
 16267  14FD                     _I2C1_Stop:	
 16268                           
 16269                           ;incstack = 0
 16270                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 16271                           ;I2C1_Stop@completion_code stored from wreg
 16272  14FD  00F7               	movwf	I2C1_Stop@completion_code
 16273                           
 16274                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 16275  14FE  0143               	movlb	3	; select bank3
 16276  14FF  1511               	bsf	17,2	;volatile
 16277                           
 16278                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 16279  1500  0141               	movlb	1	; select bank1
 16280  1501  0844               	movf	_p_i2c1_current^(0+128),w
 16281  1502  3E02               	addlw	2
 16282  1503  0086               	movwf	6
 16283  1504  0187               	clrf	7
 16284  1505  0801               	movf	1,w
 16285  1506  1903               	btfsc	3,2
 16286  1507  2D13               	goto	i1l4093
 16287                           
 16288                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 16289  1508  0877               	movf	I2C1_Stop@completion_code,w
 16290  1509  00F6               	movwf	??_I2C1_Stop
 16291  150A  0844               	movf	_p_i2c1_current^(0+128),w
 16292  150B  3E02               	addlw	2
 16293  150C  0086               	movwf	6
 16294  150D  0187               	clrf	7
 16295  150E  0801               	movf	1,w
 16296  150F  0086               	movwf	6
 16297  1510  0187               	clrf	7
 16298  1511  0876               	movf	??_I2C1_Stop,w
 16299  1512  0081               	movwf	1
 16300  1513                     i1l4093:	
 16301                           
 16302                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 16303  1513  01C7               	clrf	_i2c1_state^(0+128)
 16304  1514  0008               	return
 16305  1515                     __end_of_I2C1_Stop:	
 16306                           
 16307                           	psect	text59
 16308  14AB                     __ptext59:	
 16309 ;; *************** function _I2C1_FunctionComplete *****************
 16310 ;; Defined at:
 16311 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 16312 ;; Parameters:    Size  Location     Type
 16313 ;;		None
 16314 ;; Auto vars:     Size  Location     Type
 16315 ;;		None
 16316 ;; Return value:  Size  Location     Type
 16317 ;;                  1    wreg      void 
 16318 ;; Registers used:
 16319 ;;		wreg, status,2, status,0
 16320 ;; Tracked objects:
 16321 ;;		On entry : 0/0
 16322 ;;		On exit  : 0/0
 16323 ;;		Unchanged: 0/0
 16324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16327 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16328 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16329 ;;Total ram usage:        1 bytes
 16330 ;; Hardware stack levels used:    1
 16331 ;; This function calls:
 16332 ;;		Nothing
 16333 ;; This function is called by:
 16334 ;;		_I2C1_ISR
 16335 ;; This function uses a non-reentrant model
 16336 ;;
 16337                           
 16338                           
 16339                           ;psect for function _I2C1_FunctionComplete
 16340  14AB                     _I2C1_FunctionComplete:	
 16341                           
 16342                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 16343                           
 16344                           ;incstack = 0
 16345                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 16346  14AB  3004               	movlw	4
 16347  14AC  00F6               	movwf	??_I2C1_FunctionComplete
 16348  14AD  0876               	movf	??_I2C1_FunctionComplete,w
 16349  14AE  0141               	movlb	1	; select bank1
 16350  14AF  07C5               	addwf	_p_i2c1_trb_current^(0+128),f
 16351                           
 16352                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 16353  14B0  3001               	movlw	1
 16354  14B1  02C6               	subwf	_i2c1_trb_count^(0+128),f
 16355  14B2  1D03               	btfss	3,2
 16356  14B3  2CB9               	goto	i1l345
 16357                           
 16358                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 16359  14B4  3004               	movlw	4
 16360  14B5  00F6               	movwf	??_I2C1_FunctionComplete
 16361  14B6  0876               	movf	??_I2C1_FunctionComplete,w
 16362  14B7  00C7               	movwf	_i2c1_state^(0+128)
 16363                           
 16364                           ;mcc_generated_files/i2c1.c: 575:     }
 16365  14B8  0008               	return
 16366  14B9                     i1l345:	
 16367                           ;mcc_generated_files/i2c1.c: 576:     else
 16368                           
 16369                           
 16370                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 16371  14B9  01C7               	clrf	_i2c1_state^(0+128)
 16372  14BA  0AC7               	incf	_i2c1_state^(0+128),f
 16373  14BB  0008               	return
 16374  14BC                     __end_of_I2C1_FunctionComplete:	
 16375                           
 16376                           	psect	text60
 16377  13AC                     __ptext60:	
 16378 ;; *************** function _I2C1_BusCollisionISR *****************
 16379 ;; Defined at:
 16380 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 16381 ;; Parameters:    Size  Location     Type
 16382 ;;		None
 16383 ;; Auto vars:     Size  Location     Type
 16384 ;;		None
 16385 ;; Return value:  Size  Location     Type
 16386 ;;                  1    wreg      void 
 16387 ;; Registers used:
 16388 ;;		None
 16389 ;; Tracked objects:
 16390 ;;		On entry : 0/0
 16391 ;;		On exit  : 0/0
 16392 ;;		Unchanged: 0/0
 16393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16398 ;;Total ram usage:        0 bytes
 16399 ;; Hardware stack levels used:    1
 16400 ;; This function calls:
 16401 ;;		Nothing
 16402 ;; This function is called by:
 16403 ;;		_INTERRUPT_InterruptManager
 16404 ;; This function uses a non-reentrant model
 16405 ;;
 16406                           
 16407                           
 16408                           ;psect for function _I2C1_BusCollisionISR
 16409  13AC                     _I2C1_BusCollisionISR:	
 16410                           
 16411                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 16412                           
 16413                           ;incstack = 0
 16414                           ; Regs used in _I2C1_BusCollisionISR: []
 16415  13AC  014E               	movlb	14	; select bank14
 16416  13AD  108F               	bcf	15,1	;volatile
 16417  13AE  0008               	return
 16418  13AF                     __end_of_I2C1_BusCollisionISR:	
 16419                           
 16420                           	psect	text61
 16421  157A                     __ptext61:	
 16422 ;; *************** function _EUSART1_Transmit_ISR *****************
 16423 ;; Defined at:
 16424 ;;		line 194 in file "mcc_generated_files/eusart1.c"
 16425 ;; Parameters:    Size  Location     Type
 16426 ;;		None
 16427 ;; Auto vars:     Size  Location     Type
 16428 ;;		None
 16429 ;; Return value:  Size  Location     Type
 16430 ;;                  1    wreg      void 
 16431 ;; Registers used:
 16432 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16433 ;; Tracked objects:
 16434 ;;		On entry : 0/0
 16435 ;;		On exit  : 0/0
 16436 ;;		Unchanged: 0/0
 16437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16440 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16441 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16442 ;;Total ram usage:        1 bytes
 16443 ;; Hardware stack levels used:    1
 16444 ;; This function calls:
 16445 ;;		Nothing
 16446 ;; This function is called by:
 16447 ;;		_EUSART1_Initialize
 16448 ;;		_INTERRUPT_InterruptManager
 16449 ;; This function uses a non-reentrant model
 16450 ;;
 16451                           
 16452                           
 16453                           ;psect for function _EUSART1_Transmit_ISR
 16454  157A                     _EUSART1_Transmit_ISR:	
 16455                           
 16456                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 16457                           
 16458                           ;incstack = 0
 16459                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 16460  157A  3008               	movlw	8
 16461  157B  0141               	movlb	1	; select bank1
 16462  157C  026C               	subwf	_eusart1TxBufferRemaining^(0+128),w	;volatile
 16463  157D  1803               	skipnc
 16464  157E  2D95               	goto	i1l106
 16465                           
 16466                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 16467  157F  0872               	movf	_eusart1TxTail,w
 16468  1580  3E30               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 16469  1581  0086               	movwf	6
 16470  1582  3001               	movlw	1	; select bank2/3
 16471  1583  0087               	movwf	7
 16472  1584  0801               	movf	1,w
 16473  1585  0142               	movlb	2	; select bank2
 16474  1586  009A               	movwf	26	;volatile
 16475  1587  3001               	movlw	1
 16476  1588  00F6               	movwf	??_EUSART1_Transmit_ISR
 16477  1589  0876               	movf	??_EUSART1_Transmit_ISR,w
 16478  158A  07F2               	addwf	_eusart1TxTail,f	;volatile
 16479                           
 16480                           ;mcc_generated_files/eusart1.c: 201:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 16481  158B  3008               	movlw	8
 16482  158C  0272               	subwf	_eusart1TxTail,w	;volatile
 16483  158D  1803               	btfsc	3,0
 16484                           
 16485                           ;mcc_generated_files/eusart1.c: 202:         {;mcc_generated_files/eusart1.c: 203:      
      +                                 eusart1TxTail = 0;
 16486  158E  01F2               	clrf	_eusart1TxTail	;volatile
 16487                           
 16488                           ;mcc_generated_files/eusart1.c: 205:         eusart1TxBufferRemaining++;
 16489  158F  3001               	movlw	1
 16490  1590  00F6               	movwf	??_EUSART1_Transmit_ISR
 16491  1591  0876               	movf	??_EUSART1_Transmit_ISR,w
 16492  1592  0141               	movlb	1	; select bank1
 16493  1593  07EC               	addwf	_eusart1TxBufferRemaining^(0+128),f	;volatile
 16494                           
 16495                           ;mcc_generated_files/eusart1.c: 206:     }
 16496  1594  0008               	return
 16497  1595                     i1l106:	
 16498                           ;mcc_generated_files/eusart1.c: 207:     else
 16499                           
 16500                           
 16501                           ;mcc_generated_files/eusart1.c: 208:     {;mcc_generated_files/eusart1.c: 209:         P
      +                          IE3bits.TX1IE = 0;
 16502  1595  014E               	movlb	14	; select bank14
 16503  1596  1219               	bcf	25,4	;volatile
 16504  1597  0008               	return
 16505  1598                     __end_of_EUSART1_Transmit_ISR:	
 16506                           
 16507                           	psect	text62
 16508  13B6                     __ptext62:	
 16509 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 16510 ;; Defined at:
 16511 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 16512 ;; Parameters:    Size  Location     Type
 16513 ;;		None
 16514 ;; Auto vars:     Size  Location     Type
 16515 ;;		None
 16516 ;; Return value:  Size  Location     Type
 16517 ;;                  1    wreg      void 
 16518 ;; Registers used:
 16519 ;;		None
 16520 ;; Tracked objects:
 16521 ;;		On entry : 0/0
 16522 ;;		On exit  : 0/0
 16523 ;;		Unchanged: 0/0
 16524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16529 ;;Total ram usage:        0 bytes
 16530 ;; Hardware stack levels used:    1
 16531 ;; This function calls:
 16532 ;;		Nothing
 16533 ;; This function is called by:
 16534 ;;		_EUSART1_Initialize
 16535 ;;		_EUSART1_Receive_ISR
 16536 ;; This function uses a non-reentrant model
 16537 ;;
 16538                           
 16539                           
 16540                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 16541  13B6                     _EUSART1_DefaultOverrunErrorHandler:	
 16542                           
 16543                           ;mcc_generated_files/eusart1.c: 252:     RC1STAbits.CREN = 0;
 16544                           
 16545                           ;incstack = 0
 16546                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 16547  13B6  0142               	movlb	2	; select bank2
 16548  13B7  121D               	bcf	29,4	;volatile
 16549                           
 16550                           ;mcc_generated_files/eusart1.c: 253:     RC1STAbits.CREN = 1;
 16551  13B8  161D               	bsf	29,4	;volatile
 16552  13B9  0008               	return
 16553  13BA                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 16554                           
 16555                           	psect	text63
 16556  0003                     __ptext63:	
 16557 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 16558 ;; Defined at:
 16559 ;;		line 247 in file "mcc_generated_files/eusart1.c"
 16560 ;; Parameters:    Size  Location     Type
 16561 ;;		None
 16562 ;; Auto vars:     Size  Location     Type
 16563 ;;		None
 16564 ;; Return value:  Size  Location     Type
 16565 ;;                  1    wreg      void 
 16566 ;; Registers used:
 16567 ;;		None
 16568 ;; Tracked objects:
 16569 ;;		On entry : 0/0
 16570 ;;		On exit  : 0/0
 16571 ;;		Unchanged: 0/0
 16572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16577 ;;Total ram usage:        0 bytes
 16578 ;; Hardware stack levels used:    1
 16579 ;; This function calls:
 16580 ;;		Nothing
 16581 ;; This function is called by:
 16582 ;;		_EUSART1_Initialize
 16583 ;;		_EUSART1_Receive_ISR
 16584 ;; This function uses a non-reentrant model
 16585 ;;
 16586                           
 16587                           
 16588                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 16589  0003                     _EUSART1_DefaultFramingErrorHandler:	
 16590                           
 16591                           ;incstack = 0
 16592                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 16593  0003  0008               	return
 16594  0004                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 16595                           
 16596                           	psect	text64
 16597  13A9                     __ptext64:	
 16598 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 16599 ;; Defined at:
 16600 ;;		line 257 in file "mcc_generated_files/eusart1.c"
 16601 ;; Parameters:    Size  Location     Type
 16602 ;;		None
 16603 ;; Auto vars:     Size  Location     Type
 16604 ;;		None
 16605 ;; Return value:  Size  Location     Type
 16606 ;;                  1    wreg      void 
 16607 ;; Registers used:
 16608 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16609 ;; Tracked objects:
 16610 ;;		On entry : 0/0
 16611 ;;		On exit  : 0/0
 16612 ;;		Unchanged: 0/0
 16613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16618 ;;Total ram usage:        0 bytes
 16619 ;; Hardware stack levels used:    1
 16620 ;; Hardware stack levels required when called:    1
 16621 ;; This function calls:
 16622 ;;		_EUSART1_RxDataHandler
 16623 ;; This function is called by:
 16624 ;;		_EUSART1_Initialize
 16625 ;;		_EUSART1_Receive_ISR
 16626 ;; This function uses a non-reentrant model
 16627 ;;
 16628                           
 16629                           
 16630                           ;psect for function _EUSART1_DefaultErrorHandler
 16631  13A9                     _EUSART1_DefaultErrorHandler:	
 16632                           
 16633                           ;mcc_generated_files/eusart1.c: 258:     EUSART1_RxDataHandler();
 16634                           
 16635                           ;incstack = 0
 16636                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16637  13A9  3194  24E5         	fcall	_EUSART1_RxDataHandler
 16638  13AB  0008               	return
 16639  13AC                     __end_of_EUSART1_DefaultErrorHandler:	
 16640                           
 16641                           	psect	text65
 16642  14E5                     __ptext65:	
 16643 ;; *************** function _EUSART1_RxDataHandler *****************
 16644 ;; Defined at:
 16645 ;;		line 237 in file "mcc_generated_files/eusart1.c"
 16646 ;; Parameters:    Size  Location     Type
 16647 ;;		None
 16648 ;; Auto vars:     Size  Location     Type
 16649 ;;		None
 16650 ;; Return value:  Size  Location     Type
 16651 ;;                  1    wreg      void 
 16652 ;; Registers used:
 16653 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16654 ;; Tracked objects:
 16655 ;;		On entry : 0/0
 16656 ;;		On exit  : 0/0
 16657 ;;		Unchanged: 0/0
 16658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16661 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16662 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16663 ;;Total ram usage:        1 bytes
 16664 ;; Hardware stack levels used:    1
 16665 ;; This function calls:
 16666 ;;		Nothing
 16667 ;; This function is called by:
 16668 ;;		_EUSART1_Receive_ISR
 16669 ;;		_EUSART1_DefaultErrorHandler
 16670 ;; This function uses a non-reentrant model
 16671 ;;
 16672                           
 16673                           
 16674                           ;psect for function _EUSART1_RxDataHandler
 16675  14E5                     _EUSART1_RxDataHandler:	
 16676                           
 16677                           ;mcc_generated_files/eusart1.c: 239:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 16678                           
 16679                           ;incstack = 0
 16680                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 16681  14E5  0142               	movlb	2	; select bank2
 16682  14E6  0819               	movf	25,w	;volatile
 16683  14E7  00F6               	movwf	??_EUSART1_RxDataHandler
 16684  14E8  0871               	movf	_eusart1RxHead,w
 16685  14E9  3E28               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 16686  14EA  0086               	movwf	6
 16687  14EB  3001               	movlw	1	; select bank2/3
 16688  14EC  0087               	movwf	7
 16689  14ED  0876               	movf	??_EUSART1_RxDataHandler,w
 16690  14EE  0081               	movwf	1
 16691  14EF  3001               	movlw	1
 16692  14F0  00F6               	movwf	??_EUSART1_RxDataHandler
 16693  14F1  0876               	movf	??_EUSART1_RxDataHandler,w
 16694  14F2  07F1               	addwf	_eusart1RxHead,f	;volatile
 16695                           
 16696                           ;mcc_generated_files/eusart1.c: 240:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 16697  14F3  3008               	movlw	8
 16698  14F4  0271               	subwf	_eusart1RxHead,w	;volatile
 16699  14F5  1803               	btfsc	3,0
 16700                           
 16701                           ;mcc_generated_files/eusart1.c: 241:     {;mcc_generated_files/eusart1.c: 242:         e
      +                          usart1RxHead = 0;
 16702  14F6  01F1               	clrf	_eusart1RxHead	;volatile
 16703                           
 16704                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxCount++;
 16705  14F7  3001               	movlw	1
 16706  14F8  00F6               	movwf	??_EUSART1_RxDataHandler
 16707  14F9  0876               	movf	??_EUSART1_RxDataHandler,w
 16708  14FA  0141               	movlb	1	; select bank1
 16709  14FB  07C9               	addwf	_eusart1RxCount^(0+128),f	;volatile
 16710  14FC  0008               	return
 16711  14FD                     __end_of_EUSART1_RxDataHandler:	
 16712                           
 16713                           	psect	text66
 16714  1470                     __ptext66:	
 16715 ;; *************** function _ADCC_ThresholdISR *****************
 16716 ;; Defined at:
 16717 ;;		line 308 in file "mcc_generated_files/adcc.c"
 16718 ;; Parameters:    Size  Location     Type
 16719 ;;		None
 16720 ;; Auto vars:     Size  Location     Type
 16721 ;;		None
 16722 ;; Return value:  Size  Location     Type
 16723 ;;                  1    wreg      void 
 16724 ;; Registers used:
 16725 ;;		wreg, status,2, status,0, pclath, cstack
 16726 ;; Tracked objects:
 16727 ;;		On entry : 0/0
 16728 ;;		On exit  : 0/0
 16729 ;;		Unchanged: 0/0
 16730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16735 ;;Total ram usage:        0 bytes
 16736 ;; Hardware stack levels used:    1
 16737 ;; Hardware stack levels required when called:    1
 16738 ;; This function calls:
 16739 ;;		Absolute function
 16740 ;;		_ADCC_DefaultInterruptHandler
 16741 ;;		_adcThresholdHandler
 16742 ;; This function is called by:
 16743 ;;		_INTERRUPT_InterruptManager
 16744 ;; This function uses a non-reentrant model
 16745 ;;
 16746                           
 16747                           
 16748                           ;psect for function _ADCC_ThresholdISR
 16749  1470                     _ADCC_ThresholdISR:	
 16750                           
 16751                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 16752                           
 16753                           ;incstack = 0
 16754                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 16755  1470  014E               	movlb	14	; select bank14
 16756  1471  108D               	bcf	13,1	;volatile
 16757                           
 16758                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 16759  1472  0142               	movlb	2	; select bank2
 16760  1473  084A               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 16761  1474  044B               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 16762  1475  1903               	btfsc	3,2
 16763  1476  0008               	return
 16764                           
 16765                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 16766  1477  084B               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 16767  1478  008A               	movwf	10
 16768  1479  084A               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 16769  147A  000A               	callw
 16770  147B  3194               	pagesel	$
 16771  147C  0008               	return
 16772  147D                     __end_of_ADCC_ThresholdISR:	
 16773                           
 16774                           	psect	text67
 16775  0002                     __ptext67:	
 16776 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 16777 ;; Defined at:
 16778 ;;		line 320 in file "mcc_generated_files/adcc.c"
 16779 ;; Parameters:    Size  Location     Type
 16780 ;;		None
 16781 ;; Auto vars:     Size  Location     Type
 16782 ;;		None
 16783 ;; Return value:  Size  Location     Type
 16784 ;;                  1    wreg      void 
 16785 ;; Registers used:
 16786 ;;		None
 16787 ;; Tracked objects:
 16788 ;;		On entry : 0/0
 16789 ;;		On exit  : 0/0
 16790 ;;		Unchanged: 0/0
 16791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16796 ;;Total ram usage:        0 bytes
 16797 ;; Hardware stack levels used:    1
 16798 ;; This function calls:
 16799 ;;		Nothing
 16800 ;; This function is called by:
 16801 ;;		_ADCC_Initialize
 16802 ;;		_ADCC_ThresholdISR
 16803 ;; This function uses a non-reentrant model
 16804 ;;
 16805                           
 16806                           
 16807                           ;psect for function _ADCC_DefaultInterruptHandler
 16808  0002                     _ADCC_DefaultInterruptHandler:	
 16809                           
 16810                           ;incstack = 0
 16811                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 16812  0002  0008               	return
 16813  0003                     __end_of_ADCC_DefaultInterruptHandler:	
 16814                           
 16815                           	psect	text68
 16816  13B2                     __ptext68:	
 16817 ;; *************** function _adcThresholdHandler *****************
 16818 ;; Defined at:
 16819 ;;		line 32 in file "beat.c"
 16820 ;; Parameters:    Size  Location     Type
 16821 ;;		None
 16822 ;; Auto vars:     Size  Location     Type
 16823 ;;		None
 16824 ;; Return value:  Size  Location     Type
 16825 ;;                  1    wreg      void 
 16826 ;; Registers used:
 16827 ;;		None
 16828 ;; Tracked objects:
 16829 ;;		On entry : 0/0
 16830 ;;		On exit  : 0/0
 16831 ;;		Unchanged: 0/0
 16832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16837 ;;Total ram usage:        0 bytes
 16838 ;; Hardware stack levels used:    1
 16839 ;; This function calls:
 16840 ;;		Nothing
 16841 ;; This function is called by:
 16842 ;;		_BEAT_init
 16843 ;;		_ADCC_ThresholdISR
 16844 ;; This function uses a non-reentrant model
 16845 ;;
 16846                           
 16847                           
 16848                           ;psect for function _adcThresholdHandler
 16849  13B2                     _adcThresholdHandler:	
 16850                           
 16851                           ;beat.c: 33:     thresholdExceeded = 1;
 16852                           
 16853                           ;incstack = 0
 16854                           ; Regs used in _adcThresholdHandler: []
 16855  13B2  0141               	movlb	1	; select bank1
 16856  13B3  01BA               	clrf	_thresholdExceeded^(0+128)
 16857  13B4  0ABA               	incf	_thresholdExceeded^(0+128),f
 16858  13B5  0008               	return
 16859  13B6                     __end_of_adcThresholdHandler:	
 16860  007E                     btemp	set	126	;btemp
 16861  007E                     int$flags	set	126
 16862  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    96
    Data        13
    BSS         125
    Persistent  45
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     80      80
    BANK1            80     26      79
    BANK2            80      0      60
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           79      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    S1239$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), Absolute function(), ADCC_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S419$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    S431$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    S431$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), NULL(NULL[0]), 

    S442$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    S442$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _TM1650_init->_TM1650_enable
    _SYSTEM_Initialize->_EUSART1_Initialize
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _DMX_init->_EUSART1_SetRxInterruptHandler
    _DMX_Task->_LED_setColor
    _animation1->_LED_setColor
    _LED_setColor->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_enable->_writeData
    _CONTROLLER_init->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _writeData->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    ___lwdiv->___lwmod
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_DMX_Task
    _DMX_Task->_animation1
    _animation1->_LED_setColor

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   91229
                                             22 BANK1      4     4      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                         _CLOCK_init
                    _CONTROLLER_init
                    _CONTROLLER_task
                           _DMX_Task
                           _DMX_init
                           _LED_init
                  _SYSTEM_Initialize
                _TM1650_fastPrintNum
                        _TM1650_init
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0    2685
                      _TM1650_enable
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     906
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     695
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_init                                             0     0      0     211
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _DMX_Task                                            13    13      0   22135
                                              9 BANK1     13    13      0
                      _BEAT_detected
                      _CLOCK_getTime
                           _DMX_Mode
                       _LED_setColor
                         _animation1
 ---------------------------------------------------------------------------------
 (2) _animation1                                           3     3      0   11035
                                              6 BANK1      3     3      0
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (3) _LED_setColor                                         9     6      3   11035
                                             77 BANK0      3     0      3
                                              0 BANK1      6     6      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     702
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     609
                                             66 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4073
                                             40 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    1881
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _DMX_Mode                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      3     3      0   31741
                                             40 BANK0      3     3      0
                  _BUTTONS_isClicked
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                      _TM1650_enable
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (2) _address_inc                                          0     0      0   14391
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _address_dec                                          0     0      0   14391
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    2685
                                             21 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isHeld                                       1     1      0     103
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     134
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_init                                      0     0      0   14391
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (1) _TM1650_fastPrintNum                                 13    11      2   14391
                                             27 BANK0     13    11      2
                    _TM1650_setDigit
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    3832
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _TM1650_setDigit                                      6     4      2    6626
                                             21 BANK0      6     4      2
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _writeData                                            7     6      1    2623
                                             14 BANK0      7     6      1
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     7     3      4    1499
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                             7     3      4     492
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (6) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     911
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0    1050
                                              5 BANK0      1     1      0
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3    1050
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    2231
                                             14 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                   _TM1650_isEnabled
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1834
                                              6 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _TM1650_isEnabled                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0      45
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                            _handler *
                    i1_CLOCK_getTime
 ---------------------------------------------------------------------------------
 (10) i1_CLOCK_getTime                                     2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _handler                                             5     5      0      23
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (11) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (11) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     _TM1650_isEnabled
     ___lwdiv
       ___lwmod (ARG)
   _BUTTONS_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_init
   _CONTROLLER_init
     _TM1650_fastPrintNum
       _TM1650_setDigit
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
   _CONTROLLER_task
     _BUTTONS_isClicked
     _BUTTONS_isHeld
     _CLOCK_getTime
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _address_dec
       _TM1650_fastPrintNum
         _TM1650_setDigit
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     _address_inc
       _TM1650_fastPrintNum
         _TM1650_setDigit
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
   _DMX_Task
     _BEAT_detected
     _CLOCK_getTime
     _DMX_Mode
     _LED_setColor
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _animation1
       _LED_setColor
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
   _DMX_init
     _EUSART1_SetRxInterruptHandler
   _LED_init
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _TM1650_fastPrintNum
     _TM1650_setDigit
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _handler *
   i1_CLOCK_getTime *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     107       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     1A      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3C      10       75.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      20      12       40.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              4F      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     107      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 30 23:17:21 2019

                      _eusart1TxBufferRemaining 00EC                                               _B 00A7  
                                             _G 00A9                                               _R 00E5  
                                  ___fldiv@aexp 0047                                               _W 0158  
                                  ___fldiv@bexp 0046                        ??_ADCC_SetUpperThreshold 0022  
                                  ___fldiv@sign 003F                                    ?_TM1650_init 0076  
                                            _up 00BF                              __size_of_BEAT_init 0017  
                              ?i1_CLOCK_getTime 0076                              __size_of_BEAT_task 00D8  
                           __Umul8_16@word_mpld 0026                             _adcThresholdHandler 13B2  
                                           l803 0B51                                             l804 0B6A  
                                           l732 085E                                             l805 0B93  
                                           l806 0BBB                                             l807 0BDE  
                                           _bpm 013E                         __size_of_PMD_Initialize 000A  
                                           wreg 0009                                    ___flmul@aexp 0056  
                                  ___flmul@bexp 005B                                    ___flmul@sign 0055  
                                  ___flmul@temp 0060                                    ___flmul@prod 005C  
                                  _BAUD1CONbits 011F                                __end_of_I2C1_ISR 0D43  
                                  ___fltol@exp1 006C                                            l1087 0D5A  
                                          l1480 09AB                                            l1720 0A1B  
                                          l5001 0830                                            l1714 09E5  
                                          l5003 0838                                            l1660 0703  
                                          l1636 05D7                                            l5005 0840  
                                          l1733 07F1                                            l5023 1653  
                                          l1727 0A2F                                            l1728 0A39  
                                          l5009 0848                                            l5025 165F  
                                          l5033 1674                                            l5201 00D7  
                                          l1657 06DE                                            l1658 06F6  
                                          l3515 1738                                            l3507 171A  
                                          l5051 037C                                            l3509 1726  
                                          l5029 166B                                            l5141 0517  
                                          l5133 04E9                                            l5053 037E  
                          _ADCC_StartConversion 13F2                                            l3519 1741  
                                          l5215 014C                                            l5135 0500  
                                          l5071 03A1                                            l5055 0386  
                                          l3463 096B                                            l1688 0581  
                                          l3625 0662                                            l5145 0519  
                                          l5081 03B7                                            l5073 03A9  
                                          l5243 033B                                            l3651 069B  
                                          l3643 066D                                            l3619 0649  
                                          l3627 062B                                            l3563 05AB  
                                          l5155 0542                                            l3483 0999  
                                          l3467 0974                                            l5229 020E  
                                          l3645 0684                                            l3629 0667  
                                          l3565 05B3                                            l5165 056E  
                                          l5069 039F                                            l3493 09B8  
                                          l3485 09A7                                            l5423 0814  
                                          l3655 069D                                            l3583 05CF  
                                          l3559 05A8                                            l5159 0557  
                                          l3831 09DD                                            l5433 148A  
                                          l5441 1550                                            l3665 06C6  
                                          l3593 05F6                                            l3841 09F8  
                                          l5611 0B1B                                            l5451 153B  
                                          l5443 1554                                            l3579 05CC  
                                          l3851 0A2D                                            l3843 0A08  
                                          l5461 140B                                            l3853 0A20  
                                          l3837 09F4                                            l5711 078A  
                                          l5471 13DE                                            l3679 06FF  
                                          l3599 0602                                            l5617 0B4B  
                                          l5449 1537                                            l3865 0A54  
                                          l5801 0E92                                            l5725 07BD  
                                          l5709 0777                                            l4941 13BA  
                                          l5397 1523                                            l5485 0A92  
                                          l5911 0850                                            l5655 091B  
                                          l5663 0929                                            l5647 0907  
                                          l5495 0AC6                                            l5735 0D5C  
                                          l4961 08EF                                            l5657 091F  
                                          l5649 090B                                            l5833 17A3  
                                          l4955 08E2                                            l4971 1645  
                                          l5739 0DA1                                            l5693 0743  
                                          l5669 093C                                            l5773 0E1B  
                                          l5765 0DFD                                            l5757 0DE1  
                                          l5781 0E37                                            l4959 08E9  
                                          l4983 07EB                                            l5689 073C  
                                          l4977 15D3                                            l5793 0E6E  
                                          l5785 0E51                                            l5797 0E80  
                                          l5789 0E5E                                            l4999 0828  
                                ?_TM1650_enable 0076                                            _LATA 0018  
                                          _LATB 0019                                            _LATC 001A  
                                          u2305 097D                                            u3105 0A01  
                                          u2405 171D                                            u3125 0A15  
                                          u2335 099A                                            u2425 1727  
                                          u3145 0A27                                            u2435 1731  
                                          u2445 1739                                            u5005 0B1E  
                                          u2365 09AF                                            u5014 0B3D  
                                          u5015 0B3C                                            u2615 0633  
                                          u2705 0679                                            u2625 063A  
                                          u3185 0A41                                            u2645 0643  
                                          u5215 0725                                            u2655 0657  
                                          u4505 166C                                            u4435 07F2  
                                          _PMD0 0796                                            u2685 0670  
                                          u4605 042D                                            _PMD1 0797  
                                          _PMD2 0798                                            u2775 06B4  
                                          u4615 045C                                            _PMD3 0799  
                                          _PMD4 079A                                            u5265 079E  
                                          u2785 06CF                                            u4625 04B2  
                                          _PMD5 079B                                            _PMD6 079C  
                                          u4475 1656                                            u2795 06E8  
                                          u4635 04C9                                            _PMD7 079D  
                                          u4645 04D8                                            u4495 1665  
                                          u4655 04EC                                            u4745 0530  
                                          u4755 054B                                            u4675 04F5  
                                          u4765 0561                                            u4945 0A8A  
                                          u5497 1785                                            u4965 0ABE  
                                          u4985 0AF3                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                                 ?_BUTTONS_init 0076                                   ?_BUTTONS_task 0076  
                          ?_adcThresholdHandler 0076                                            _main 177C  
                                          _down 00BE                                            _init 1598  
                                          _menu 00BC                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                          ??_I2C1_MasterTRBInsert 0022  
                                          btemp 007E                                            start 0044  
                               ___fldiv@new_exp 0040                         __end_of_TM1650_setDigit 085F  
                           __size_of_CLOCK_init 0010                            __size_of_address_dec 0018  
                          __size_of_address_inc 0019                  I2C1_MasterWriteTRBBuild@length 0021  
                                _BUTTONS_isHeld 147D                                      _i2c1_state 00C7  
                __size_of_OSCILLATOR_Initialize 0009                       I2C1_MasterTRBInsert@count 0023  
                 __end_of_OSCILLATOR_Initialize 1443                                __end_of_DMX_Mode 13E0  
                      __end_of_TM1650_isEnabled 13B2                                __end_of_DMX_Task 0E9A  
                     I2C1_MasterTRBInsert@pflag 0021                           _eusart1RxStatusBuffer 0120  
                              __end_of_LED_init 177C                                   ___fltol@sign1 006B  
                                         _ADCAP 010E                                           _ADACT 0117  
                                         ?_main 0076                                           _ADCLK 0118  
                                         _ADCNT 0099                                           ?_init 0020  
                                         _ADPCH 009F                                 __end_of___fldiv 0708  
                                         _ADREF 0116                               __end_of_I2C1_Stop 1515  
                                 __CFG_WDTE$OFF 0000                                __end_of_DMX_init 149B  
                                         _ADRPT 009A                                 __end_of___flmul 058E  
                               __end_of___fltol 09C7                                           _LATC5 00D5  
                               __end_of___lwdiv 1746                      _ADCC_ADTI_InterruptHandler 014A  
                                         i1l106 1595                                           i1l310 0C34  
                                         i1l304 0C08                                           i1l330 0CBF  
                                         i1l315 0C56                                           i1l316 0C62  
                                         i1l180 0010                                           i1l333 0CCE  
                                         i1l309 0C33                                           i1l334 0CDC  
                                         i1l326 0C9F                                           i1l182 0017  
                                         i1l184 0021                                           i1l345 14B9  
                                         i1l193 0042                                 __end_of___lwmod 1679  
                                         i1l338 0D03                                           i1l186 0033  
                                         i1l188 003D                                           _OSCEN 0891  
                                         _TMR0H 059D                                           _PORTA 000C  
                                         _PORTC 000E                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
                  __end_of_I2C1_BusCollisionISR 13AF                            _EUSART1_Transmit_ISR 157A  
                               __end_of_handler 1711                               ??_I2C1_Initialize 0020  
                                         _delay 015A                                           _color 00B3  
                                         _enter 00BD                                           _count 00B1  
                         ?_ADCC_StartConversion 0076                                           _input 25EF  
                                         _point 00AB                                           pclath 000A  
                                ??_BUTTONS_init 0025                                  ??_BUTTONS_task 0022  
                         ??_adcThresholdHandler 0076                               __end_of_BEAT_init 14E5  
                             __end_of_BEAT_task 07E0                                           status 0003  
                                         wtemp0 007E      __end_of_EUSART1_DefaultFramingErrorHandler 0004  
   __size_of_EUSART1_DefaultFramingErrorHandler 0001            ??_EUSART1_DefaultFramingErrorHandler 0076  
           ?_EUSART1_DefaultFramingErrorHandler 0076              _EUSART1_DefaultFramingErrorHandler 0003  
               I2C1_MasterWriteTRBBuild@address 0022                          __end_of_BUTTONS_isHeld 148C  
                               __initialization 0046                            TM1650_setDigit@digit 0039  
                         I2C1_MasterWrite@pdata 002D                           I2C1_MasterWrite@pflag 002A  
                    __end_of_EUSART1_Initialize 1800                                    __end_of_main 17BB  
                                  __end_of_init 15B8                                 _CONTROLLER_init 144D  
                               _CONTROLLER_task 08FC                                   ?_LED_setColor 006D  
               __size_of_ADCC_SetUpperThreshold 0009                           __end_of_CLOCK_getTime 1404  
                   ?_INTERRUPT_InterruptManager 0076                        TM1650_setDigit@charTable 1000  
                                   _i2c1_object 00A0                                          ??_main 00E3  
                                        ??_init 0023                           ?_EUSART1_Transmit_ISR 0076  
                               ??_TM1650_enable 0035                                          _ADACCH 0097  
                                        _ADACCL 0096                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        _ADCON0 0111                                          _ADCON1 0112  
                                        _ADCON2 0113                                          _ADCON3 0114  
                                        _ADERRH 0091                                          _ADERRL 0090  
                                        _ADLTHH 008D                                          _ADLTHL 008C  
                                        _ADRESH 009E                                          _ADRESL 009D  
                                        _ADPREH 0110                                          _ADPREL 010F  
                                        _CCPR1H 030D                                          _CCPR2H 0311  
                                        _CCPR1L 030C                                          _CCPR3H 0315  
                                        _CCPR2L 0310                                          _CCPR4H 0319  
                                        _CCPR3L 0314                                          _CCPR4L 0318  
                                        _ADSTAT 0115                                          _ADUTHH 008F  
                                        _ADUTHL 008E                                          _ANSELA 1F38  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                                        _RC1REG 0119                                          _RA4PPS 1F14  
                                        _RA5PPS 1F15                                          _RC1STA 011D  
                                        _RC3PPS 1F23                                          _RB6PPS 1F1E  
                                        _RC4PPS 1F24                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _RC7PPS 1F27  
                                        i1l4301 0C50                                          i1l4315 0C7B  
                                        i1l4251 16CA                                          i1l4093 1513  
                                        i1l4245 16BC                                          i1l4335 0C94  
                                        i1l4255 16D9                                          i1l4283 0C26  
                                        i1l4373 0CEA                                          i1l4357 0CC2  
                                        i1l4349 0CAD                                          i1l4295 0C40  
                                        i1l4287 0C2D                                          i1l4385 0D07  
                                        i1l4369 0CE3                                          i1l4713 16E3  
                                        i1l4387 0D0A                                          i1l4395 0D16  
                                        i1l4389 0D0E                                          i1l4727 170E  
                                        i1l4719 16ED                                          i1l5913 0D1F  
                                        u414_25 16F7                                          _SP1BRG 011B  
                                        _OSCFRQ 0893                                          _RX1PPS 1ECB  
                                        _TX1REG 011A                                          _TX1STA 011E  
                                        _TRISB4 009C                                          _TRISC3 00A3  
                                        _TRISC4 00A4                                          _TRISC5 00A5  
                                        _TRISC6 00A6                                          _TRISC7 00A7  
                              __end_of___xxtofl 0A5D                               ?_I2C1_MasterWrite 0027  
                              ?_TM1650_setDigit 0035                                 ?_BUTTONS_isHeld 0076  
                            ??_I2C1_MasterWrite 002B                                  _p_i2c1_current 00C4  
                                ??_LED_setColor 00CD                     __end_of_TM1650_fastPrintNum 0362  
                             _ADCC_ThresholdISR 1470                                       ??___fldiv 0036  
                                     ??___flmul 0050                                       ??___fltol 0066  
                                     ??___lwdiv 002A                                       ??___lwmod 0024  
                      ?_EUSART1_SetErrorHandler 0020                      ??_I2C1_MasterWriteTRBBuild 0024  
                            ?_ADCC_ThresholdISR 0076                                       ?_I2C1_ISR 0076  
                        __size_of_BEAT_detected 0009                                       ??_handler 0076  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                _lastActiveTime 00AF                            __size_of_TM1650_init 0006  
                               _ADCC_Initialize 15FC                                  _PMD_Initialize 1443  
                                  ??_CLOCK_init 0020                              __size_of__Umul8_16 0020  
                           ??_ADCC_ThresholdISR 0076                          ??_ADCC_StartConversion 0020  
          ADCC_SetUpperThreshold@upperThreshold 0020    ADCC_SetADTIInterruptHandler@InterruptHandler 0020  
                        _ADCC_SetUpperThreshold 13E9                   I2C1_MasterWriteTRBBuild@pdata 0020  
                               _eusart1RxBuffer 0128                                 _eusart1TxBuffer 0130  
                                  ___xxtofl@arg 002A                                    ___xxtofl@exp 0029  
                             _SYSTEM_Initialize 14BC                                    ___xxtofl@val 0020  
                       __end_of__initialization 0093                         __end_of_CONTROLLER_init 1458  
                       __end_of_CONTROLLER_task 0961                                       ?_DMX_Mode 0076  
                            ?_SYSTEM_Initialize 0076                                       ?_DMX_Task 0076  
                                     ?_LED_init 0076                                      ___fltol@f1 0062  
                                     ?_DMX_init 0076                                  _i2c1_trb_count 00C6  
                __size_of_EUSART1_RxDataHandler 0018                       __end_of_ADCC_ThresholdISR 147D  
                 __end_of_EUSART1_RxDataHandler 14FD                           _I2C1_FunctionComplete 14AB  
                          _I2C1_BusCollisionISR 13AC                                  __pcstackCOMMON 0076  
                            __end_of_CLOCK_init 14AB                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK1 13D1                                    __pidataBANK2 13CB  
                           ??_SYSTEM_Initialize 0023                                      _ani1_state 00A5  
                                    ??_I2C1_ISR 0078                            __end_of_BUTTONS_init 08AA  
                        __end_of_PMD_Initialize 144D                            __end_of_BUTTONS_task 0BF5  
                      _TM1650_fastPrintNum$2885 0046                        _TM1650_fastPrintNum$2886 0040  
                      _TM1650_fastPrintNum$2887 003E                                    DMX_Task@time 00E1  
                        ??_EUSART1_Transmit_ISR 0076                     __end_of_EUSART1_Receive_ISR 16DC  
                             _thresholdExceeded 00BA                     ADCC_StartConversion@channel 0020  
                     __end_of_SYSTEM_Initialize 14CE                                   _eusart1RxHead 0071  
                                 _eusart1TxHead 0073                                   _eusart1RxTail 0070  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
                                    __pbssBANK3 01A0                                   _eusart1TxTail 0072  
             _EUSART1_TxDefaultInterruptHandler 0154                 ??_EUSART1_SetRxInterruptHandler 0022  
                                 _BEAT_detected 1404                                      ??_DMX_Mode 0020  
                                    ??_DMX_Task 00D6                                      ??_LED_init 0020  
                                    ??_DMX_init 0022                               __end_of__Umul8_16 0800  
                         ?_I2C1_BusCollisionISR 0076                 __end_of_EUSART1_SetErrorHandler 141F  
                                    __pmaintext 177C                                writeData@address 0032  
                       __end_of_ADCC_Initialize 1622                                      _animation1 0A5D  
                                    __pintentry 0004                                 _I2C1_Initialize 155E  
                                       _ADFLTRH 0095                                         _ADFLTRL 0094  
                                       _ADPREVH 009C                                         _ADPREVL 009B  
                                 BUTTONS_task@i 0025            __end_of_ADCC_SetADTIInterruptHandler 13E9  
         __size_of_ADCC_SetADTIInterruptHandler 0009                    _ADCC_SetADTIInterruptHandler 13E0  
                                       _ADSTPTH 0093                                         _ADSTPTL 0092  
                               ?_PMD_Initialize 0076                               ?_TM1650_isEnabled 0076  
        __end_of_EUSART1_SetFramingErrorHandler 1428         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 141F                                       ?___xxtofl 0020  
                            ??_TM1650_isEnabled 0020                    ?_EUSART1_DefaultErrorHandler 0076  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                                     _I2C1_Stop 14FD                                         _OSCTUNE 0892  
                      __size_ofi1_CLOCK_getTime 0006                                         _SSP1ADD 018D  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                         _SSP1BUF 018C  
                          __end_of_LED_setColor 1000                                  ?_BEAT_detected 0076  
                 I2C1_MasterTRBInsert@ptrb_list 0020                              __size_of_writeData 0021  
                                 ??_address_dec 0048                                ?_CONTROLLER_init 0076  
                                 ??_address_inc 0048                                ?_CONTROLLER_task 0076  
                               BUTTONS_task@btn 0028                          ?_I2C1_FunctionComplete 0076  
                                     _BEAT_init 14CE                   __size_of_I2C1_MasterTRBInsert 0052  
                                     _BEAT_task 0708                      __size_of_ADCC_ThresholdISR 000D  
                            _p_i2c1_trb_current 00C5                                         ___fldiv 058E  
                                       ___flmul 0362                                         ___fltol 0961  
                                       ___lwdiv 1711                                         ___lwmod 164C  
                                       _address 00E9                                         _handler 16DC  
                                       __ptext1 13C5                                         __ptext2 14BC  
                                       __ptext3 1443                                         __ptext4 1679  
                                       __ptext5 143A                                         __ptext6 155E  
                                       __ptext7 17BB                                         __ptext8 1431  
                                       __ptext9 1428                   ?_ADCC_SetADTIInterruptHandler 0020  
                                       _lastRun 013C                           _OSCILLATOR_Initialize 143A  
                                     _T2CONbits 028E                                         _buttons 01A0  
                                    ??___xxtofl 0024                              _EUSART1_Initialize 17BB  
                      ??_PIN_MANAGER_Initialize 0020                                      ?_I2C1_Stop 0076  
                   __end_of_adcThresholdHandler 13B6                   ??_EUSART1_DefaultErrorHandler 0077  
                    __size_of_SYSTEM_Initialize 0012                            I2C1_ISR@pi2c_buf_ptr 00C3  
                                       clrloop0 1459                            end_of_initialization 0093  
                           ?_EUSART1_Initialize 0076                                         init@btn 0024  
                                       init@pin 0022                                ??_BUTTONS_isHeld 0020  
                                       init_ram 1464                     _EUSART1_OverrunErrorHandler 014E  
                                       initloop 1465                          ??_I2C1_BusCollisionISR 0076  
                       __end_of_I2C1_Initialize 157A           __end_of_EUSART1_SetRxInterruptHandler 1416  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 140D  
                                    ?_BEAT_init 0076                                      ?_BEAT_task 0076  
                         __size_of_BUTTONS_init 004B                           __size_of_BUTTONS_task 00FC  
                                _animationSpeed 0156                                     ?_animation1 0076  
                           __end_of_address_dec 1545                             __end_of_address_inc 155E  
                              ?_ADCC_Initialize 0076                            ??_EUSART1_Initialize 0022  
                     __size_of_I2C1_MasterWrite 002A                                    _displayState 00C0  
                             __size_of_I2C1_ISR 014E                               __end_of_writeData 15D9  
                       ?_ADCC_SetUpperThreshold 0020                                   ___xxtofl@sign 0028  
                                   ___fldiv@grs 0042                                     ___fldiv@rem 003B  
                               ??_BEAT_detected 0020                __size_of_EUSART1_SetErrorHandler 0009  
                              __CFG_FEXTOSC$OFF 0000                           __end_of_TM1650_enable 152D  
             I2C1_ISR@i2c_10bit_address_restart 00C1                          __size_of_CLOCK_getTime 0009  
                                   ___flmul@grs 0057                                    _BUTTONS_init 085F  
                             ??i1_CLOCK_getTime 0078                                    _BUTTONS_task 0AF9  
                                   _CCP1CONbits 030E                                     _CCP2CONbits 0312  
                                   _CCP3CONbits 0316                                     _CCP4CONbits 031A  
                       I2C1_MasterWrite@address 0028            __size_of_EUSART1_DefaultErrorHandler 0003  
                             __size_of_DMX_Mode 0008                               __size_of_DMX_Task 0157  
                             __size_of_LED_init 0036                               __size_of_DMX_init 000F  
                ??_ADCC_DefaultInterruptHandler 0076                                   ??_TM1650_init 0036  
                       I2C1_MasterWrite@trBlock 0146                        I2C1_Stop@completion_code 0077  
                      __size_of_TM1650_setDigit 0049                          ?_OSCILLATOR_Initialize 0076  
                __end_of_ADCC_SetUpperThreshold 13F2                    __size_of_TM1650_fastPrintNum 02CB  
                         __size_of_LED_setColor 0166                                    _lastDetected 00B9  
                           start_initialization 0046                                     ??_I2C1_Stop 0076  
               __size_of_PIN_MANAGER_Initialize 002F                             TM1650_setDigit@data 003A  
 EUSART1_SetRxInterruptHandler@interruptHandler 0020   EUSART1_SetTxInterruptHandler@interruptHandler 0020  
                 __size_of_ADCC_StartConversion 0009               __size_of_I2C1_MasterWriteTRBBuild 0023  
                     ?_I2C1_MasterWriteTRBBuild 0020                             __size_of_animation1 009C  
                             _BUTTONS_isClicked 0802                              ?_BUTTONS_isClicked 0076  
                                   _address_dec 152D                                     _address_inc 1545  
                                   ??_BEAT_init 0022                                ?_I2C1_Initialize 0076  
                                   ??_BEAT_task 002E                             ??_BUTTONS_isClicked 0020  
                              ??_PMD_Initialize 0020                           _EUSART1_RxDataHandler 14E5  
                                  _LED_setColor 0E9A                  ?_EUSART1_SetRxInterruptHandler 0020  
                                     __Umul8_16 07E0                                     __pdataBANK1 00E5  
                                   __pdataBANK2 0156                                   _CLOCK_getTime 13FB  
                  I2C1_MasterWriteTRBBuild@ptrb 0026                                  _eusart1RxCount 00C9  
                                     ___fldiv@a 002E                                       ___fldiv@b 0032  
                                   __pbssBIGRAM 25EF                             __end_of_TM1650_init 13CB  
                                     ___flmul@a 004C                                       ___flmul@b 0048  
                                   __pbssCOMMON 0070               _EUSART1_RxDefaultInterruptHandler 0152  
                                     ___latbits 0003                   __size_of_EUSART1_Transmit_ISR 001E  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00CD  
                                 _i2c1_tr_queue 00CA                               __size_of___xxtofl 0096  
                     __end_of_BUTTONS_isClicked 0816                 ??_EUSART1_SetTxInterruptHandler 0022  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                       ??_I2C1_FunctionComplete 0076                       __size_of_TM1650_isEnabled 0003  
                  __size_of_EUSART1_Receive_ISR 0034                                       __pnvBANK1 00EC  
                                     __pnvBANK2 014A                              _dmx_lastActiveTime 00B7  
                              ___lwdiv@dividend 0028                          _PIN_MANAGER_Initialize 1679  
                                      ?___fldiv 002E                                        ?___flmul 0048  
                                      ?___fltol 0062                                      ?__Umul8_16 0020  
                                      ?___lwdiv 0026                                        ?___lwmod 0020  
                                ?_CLOCK_getTime 0020                                        _I2C1_ISR 0BF5  
                  ??_INTERRUPT_InterruptManager 007C                                 writeData@status 0034  
                                      ?_handler 0076                                _I2C1_MasterWrite 1622  
                                      _BAUD1CON 011F                    __end_of_I2C1_MasterTRBInsert 08FC  
    __end_of_EUSART1_DefaultOverrunErrorHandler 13BA     __size_of_EUSART1_DefaultOverrunErrorHandler 0004  
          ??_EUSART1_DefaultOverrunErrorHandler 0076             ?_EUSART1_DefaultOverrunErrorHandler 0076  
            _EUSART1_DefaultOverrunErrorHandler 13B6                            _EUSART1_ErrorHandler 014C  
                       _EUSART1_SetErrorHandler 1416                               ??_TM1650_setDigit 0037  
                              ___lwdiv@quotient 002B                                   LED_setColor@B 006E  
                                 LED_setColor@G 006D                                   LED_setColor@R 00D2  
                                 LED_setColor@W 006F                                        _T2CLKCON 0290  
      __end_of_I2C1_WaitForLastPacketToComplete 13BF       __size_of_I2C1_WaitForLastPacketToComplete 0005  
            ??_I2C1_WaitForLastPacketToComplete 0020               ?_I2C1_WaitForLastPacketToComplete 0076  
              _I2C1_WaitForLastPacketToComplete 13BA                          I2C1_MasterRead@trBlock 0142  
       EUSART1_SetErrorHandler@interruptHandler 0020                         BUTTONS_isClicked@button 0020  
                                      _DMX_Mode 13D8                                        _DMX_Task 0D43  
                                     clear_ram0 1458                                        _PIE0bits 0716  
                                      _LED_init 1746                                        _PIE1bits 0717  
                                      _PIE3bits 0719                                        _DMX_init 148C  
           __size_of_INTERRUPT_InterruptManager 0040                                        _PIR0bits 070C  
                                      _PIR1bits 070D                                        _PIR3bits 070F  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0076  
                      TM1650_fastPrintNum@array 0042                                        _SSP1CON1 0190  
                                      _SSP1CON3 0192                                    ??_animation1 00D3  
                                      _SSP1STAT 018F                             writeData@dataToSend 0033  
                      __size_of_CONTROLLER_init 000B                        __size_of_CONTROLLER_task 0065  
                                   _TM1650_init 13C5                                       _threshold 00E7  
                                    _ADCON0bits 0111                                      _ADCON1bits 0112  
                                    _ADCON2bits 0113                                      _ADCON3bits 0114  
                               i1_CLOCK_getTime 13BF                                       _writeData 15B8  
                    __size_of_BUTTONS_isClicked 0014                              __end_of_animation1 0AF9  
                            TM1650_setDigit@num 0035                    __size_of_adcThresholdHandler 0004  
                              BUTTONS_task@time 0026                             _TM1650_fastPrintNum 0097  
                                    _ADSTATbits 0115           __end_of_EUSART1_SetTxInterruptHandler 143A  
        __size_of_EUSART1_SetTxInterruptHandler 0009                   _EUSART1_SetTxInterruptHandler 1431  
                 __size_of_I2C1_BusCollisionISR 0003                                 ??_CLOCK_getTime 0022  
                        I2C1_ISR@i2c_bytes_left 00C2                         ??_OSCILLATOR_Initialize 0020  
                                   ??__Umul8_16 0022                                __size_of___fldiv 017A  
                              __size_of___flmul 022C                                __size_of___fltol 0066  
                   __size_of_EUSART1_Initialize 0045                                __size_of___lwdiv 0035  
                              __size_of___lwmod 002D                __end_of_I2C1_MasterWriteTRBBuild 15FC  
                          ?_TM1650_fastPrintNum 003B                                __size_of_handler 0035  
                     ??_EUSART1_SetErrorHandler 0022                                 BEAT_task@offset 0030  
                                 handler@dataIn 007A                             TM1650_enable@enable 0035  
           __end_of_EUSART1_DefaultErrorHandler 13AC                     _EUSART1_DefaultErrorHandler 13A9  
                                    _CLOCK_init 149B                                        ___xxtofl 09C7  
                                    _T0CON0bits 059E                                      _T0CON1bits 059F  
                      __size_of_ADCC_Initialize 0026                                 ___lwdiv@divisor 0026  
                           I2C1_ISR@i2c_address 0074                                 ___lwdiv@counter 002D  
                                      _detected 00BB                                      ?_writeData 002E  
                                      __ptext10 141F                                        __ptext11 1416  
                                      __ptext20 0961                                        __ptext12 15FC  
                                      __ptext21 0362                                        __ptext13 1746  
                                      __ptext30 147D                                        __ptext22 07E0  
                                      __ptext14 148C                                        __ptext31 0802  
                                      __ptext23 058E                                        __ptext15 140D  
                                      __ptext40 13BA                                        __ptext32 144D  
                                      __ptext24 13D8                                        __ptext16 0D43  
                                      __ptext41 149B                                        __ptext33 0097  
                                      __ptext25 1404                                        __ptext17 0A5D  
                                      __ptext50 13F2                                        __ptext42 0AF9  
                                      __ptext34 164C                                        __ptext26 08FC  
                                      __ptext18 0E9A                                        __ptext51 13E9  
                                      __ptext43 085F                                        __ptext35 0816  
                                      __ptext27 1545                                        __ptext19 09C7  
                                      __ptext60 13AC                                        __ptext52 13E0  
                                      __ptext44 1598                                        __ptext36 15B8  
                                      __ptext28 152D                                        __ptext61 157A  
                                      __ptext45 0708                                        __ptext37 1622  
                                      __ptext29 1515                                        __ptext62 13B6  
                                      __ptext54 13BF                                        __ptext46 1711  
                                      __ptext38 15D9                                        __ptext63 0003  
                                      __ptext55 16A8                                        __ptext47 13AF  
                                      __ptext39 08AA                                        __ptext64 13A9  
                                      __ptext56 16DC                                        __ptext48 13FB  
                                      __ptext65 14E5                                        __ptext57 0BF5  
                                      __ptext49 14CE                                        __ptext66 1470  
                                      __ptext58 14FD                                        __ptext67 0002  
                                      __ptext59 14AB                                        __ptext68 13B2  
                                  _SSP1CON1bits 0190                                    _SSP1CON2bits 0191  
                          BUTTONS_isHeld@button 0020                                        _dmx_mode 00EB  
                         __end_of_BEAT_detected 140D                                        _lastBeat 00AD  
                                      _lastTime 0140                                _TM1650_isEnabled 13AF  
                                 __size_of_main 003F                                   __size_of_init 0020  
                                  ?_address_dec 0076                                    ?_address_inc 0076  
                          _I2C1_MasterTRBInsert 08AA                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                    __end_of_ADCC_StartConversion 13FB  
                                      int$flags 007E                         __size_of_BUTTONS_isHeld 000F  
            __end_of_INTERRUPT_InterruptManager 0044                      _INTERRUPT_InterruptManager 0004  
                       __end_ofi1_CLOCK_getTime 13C5                          __size_of_TM1650_enable 0018  
                   _EUSART1_FramingErrorHandler 0150                             _EUSART1_Receive_ISR 16A8  
                         ??_TM1650_fastPrintNum 003D                                _ClockCurrentTime 00B5  
                             TM1650_setDigit@dp 0036                                      _INTCONbits 000B  
                             ??_CONTROLLER_init 0048                               ??_CONTROLLER_task 0048  
                                      init@port 0020            __end_of_ADCC_DefaultInterruptHandler 0003  
         __size_of_ADCC_DefaultInterruptHandler 0001                    _ADCC_DefaultInterruptHandler 0002  
                                      intlevel1 0000                                  _thresholdCount 013A  
                          ?_EUSART1_Receive_ISR 0076                                   writeData@data 002E  
                              ___lwmod@dividend 0022                         ?_PIN_MANAGER_Initialize 0076  
                      __end_of_I2C1_MasterWrite 164C                  __size_of_I2C1_FunctionComplete 0011  
        __end_of_EUSART1_SetOverrunErrorHandler 1431         __size_of_EUSART1_SetOverrunErrorHandler 0009  
                _EUSART1_SetOverrunErrorHandler 1428                   __end_of_I2C1_FunctionComplete 14BC  
                         ?_I2C1_MasterTRBInsert 0020                    __end_of_EUSART1_Transmit_ISR 1598  
                         CONTROLLER_task@active 004A                          TM1650_fastPrintNum@num 003B  
EUSART1_SetFramingErrorHandler@interruptHandler 0020                  ?_EUSART1_SetTxInterruptHandler 0020  
                               _TM1650_setDigit 0816                        __size_of_I2C1_Initialize 001C  
                            _eusart1RxLastError 00C8                                   __pstringtext1 1000  
                        __Umul8_16@multiplicand 0020                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                 ___lwmod@divisor 0020  
                                   ?_CLOCK_init 0076                                 ___lwmod@counter 0025  
                                   dmx@lastTime 0138                        _I2C1_MasterWriteTRBBuild 15D9  
                                   ??_writeData 002F                                      _TX1STAbits 011E  
                ??_ADCC_SetADTIInterruptHandler 0022                           ??_EUSART1_Receive_ISR 0077  
                __end_of_PIN_MANAGER_Initialize 16A8                               ??_ADCC_Initialize 0022  
                                 _TM1650_enable 1515                              __size_of_I2C1_Stop 0018  
                 ?_ADCC_DefaultInterruptHandler 0076                            __Umul8_16@multiplier 0028  
                       ??_EUSART1_RxDataHandler 0076                               __Umul8_16@product 0024  
              __end_ofTM1650_setDigit@charTable 1060  
