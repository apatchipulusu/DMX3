

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Apr 18 20:51:52 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	dabs	1,0xCA0,32
    56                           	dabs	1,0xC20,80
    57                           	dabs	1,0xBA0,80
    58                           	dabs	1,0xB20,80
    59                           	dabs	1,0xAA0,80
    60                           	dabs	1,0xA20,80
    61                           	dabs	1,0x9A0,80
    62                           	dabs	1,0x96F,1
    63                           	dabs	1,0x25EF,0,_input
    64                           	dabs	1,0x7E,2
    65  0000                     
    66                           ; Version 2.05
    67                           ; Generated 20/12/2018 GMT
    68                           ; 
    69                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC16F18446 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  0008                     	;# 
   109  0009                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000D                     	;# 
   114  000E                     	;# 
   115  0012                     	;# 
   116  0013                     	;# 
   117  0014                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  008C                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008E                     	;# 
   126  008F                     	;# 
   127  0090                     	;# 
   128  0090                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0094                     	;# 
   135  0095                     	;# 
   136  0096                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  010C                     	;# 
   150  010C                     	;# 
   151  010D                     	;# 
   152  010E                     	;# 
   153  010F                     	;# 
   154  010F                     	;# 
   155  0110                     	;# 
   156  0111                     	;# 
   157  0112                     	;# 
   158  0113                     	;# 
   159  0114                     	;# 
   160  0115                     	;# 
   161  0116                     	;# 
   162  0117                     	;# 
   163  0118                     	;# 
   164  0119                     	;# 
   165  0119                     	;# 
   166  0119                     	;# 
   167  011A                     	;# 
   168  011A                     	;# 
   169  011A                     	;# 
   170  011B                     	;# 
   171  011B                     	;# 
   172  011B                     	;# 
   173  011B                     	;# 
   174  011B                     	;# 
   175  011C                     	;# 
   176  011C                     	;# 
   177  011C                     	;# 
   178  011D                     	;# 
   179  011D                     	;# 
   180  011D                     	;# 
   181  011E                     	;# 
   182  011E                     	;# 
   183  011E                     	;# 
   184  011F                     	;# 
   185  011F                     	;# 
   186  011F                     	;# 
   187  011F                     	;# 
   188  011F                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  018E                     	;# 
   192  018F                     	;# 
   193  0190                     	;# 
   194  0191                     	;# 
   195  0192                     	;# 
   196  0196                     	;# 
   197  0197                     	;# 
   198  0198                     	;# 
   199  0199                     	;# 
   200  019A                     	;# 
   201  019B                     	;# 
   202  019C                     	;# 
   203  020C                     	;# 
   204  020D                     	;# 
   205  020E                     	;# 
   206  020E                     	;# 
   207  020F                     	;# 
   208  020F                     	;# 
   209  0210                     	;# 
   210  0210                     	;# 
   211  0211                     	;# 
   212  0211                     	;# 
   213  0212                     	;# 
   214  0213                     	;# 
   215  0214                     	;# 
   216  0214                     	;# 
   217  0215                     	;# 
   218  0215                     	;# 
   219  0216                     	;# 
   220  0216                     	;# 
   221  0217                     	;# 
   222  0217                     	;# 
   223  0218                     	;# 
   224  0219                     	;# 
   225  021A                     	;# 
   226  021A                     	;# 
   227  021B                     	;# 
   228  021B                     	;# 
   229  021C                     	;# 
   230  021C                     	;# 
   231  021D                     	;# 
   232  021D                     	;# 
   233  021E                     	;# 
   234  021F                     	;# 
   235  028C                     	;# 
   236  028C                     	;# 
   237  028D                     	;# 
   238  028D                     	;# 
   239  028E                     	;# 
   240  028F                     	;# 
   241  0290                     	;# 
   242  0291                     	;# 
   243  0292                     	;# 
   244  0292                     	;# 
   245  0293                     	;# 
   246  0293                     	;# 
   247  0294                     	;# 
   248  0295                     	;# 
   249  0296                     	;# 
   250  0297                     	;# 
   251  0298                     	;# 
   252  0298                     	;# 
   253  0299                     	;# 
   254  0299                     	;# 
   255  029A                     	;# 
   256  029B                     	;# 
   257  029C                     	;# 
   258  029D                     	;# 
   259  029F                     	;# 
   260  030C                     	;# 
   261  030C                     	;# 
   262  030D                     	;# 
   263  030E                     	;# 
   264  030F                     	;# 
   265  0310                     	;# 
   266  0310                     	;# 
   267  0311                     	;# 
   268  0312                     	;# 
   269  0313                     	;# 
   270  0314                     	;# 
   271  0314                     	;# 
   272  0315                     	;# 
   273  0316                     	;# 
   274  0317                     	;# 
   275  0318                     	;# 
   276  0318                     	;# 
   277  0319                     	;# 
   278  031A                     	;# 
   279  031B                     	;# 
   280  038C                     	;# 
   281  038C                     	;# 
   282  038D                     	;# 
   283  038E                     	;# 
   284  0390                     	;# 
   285  0390                     	;# 
   286  0391                     	;# 
   287  0392                     	;# 
   288  048C                     	;# 
   289  048C                     	;# 
   290  048D                     	;# 
   291  048E                     	;# 
   292  048F                     	;# 
   293  048F                     	;# 
   294  0490                     	;# 
   295  0491                     	;# 
   296  0492                     	;# 
   297  0492                     	;# 
   298  0493                     	;# 
   299  0494                     	;# 
   300  0495                     	;# 
   301  0495                     	;# 
   302  0496                     	;# 
   303  0497                     	;# 
   304  0498                     	;# 
   305  0499                     	;# 
   306  049A                     	;# 
   307  049B                     	;# 
   308  049C                     	;# 
   309  049D                     	;# 
   310  058C                     	;# 
   311  058C                     	;# 
   312  058D                     	;# 
   313  058E                     	;# 
   314  058F                     	;# 
   315  058F                     	;# 
   316  0590                     	;# 
   317  0591                     	;# 
   318  0592                     	;# 
   319  0593                     	;# 
   320  059C                     	;# 
   321  059C                     	;# 
   322  059D                     	;# 
   323  059D                     	;# 
   324  059E                     	;# 
   325  059F                     	;# 
   326  060C                     	;# 
   327  060C                     	;# 
   328  060D                     	;# 
   329  060D                     	;# 
   330  060E                     	;# 
   331  060F                     	;# 
   332  0610                     	;# 
   333  0611                     	;# 
   334  0612                     	;# 
   335  0613                     	;# 
   336  0614                     	;# 
   337  0616                     	;# 
   338  0616                     	;# 
   339  0617                     	;# 
   340  0617                     	;# 
   341  0618                     	;# 
   342  0619                     	;# 
   343  061A                     	;# 
   344  061B                     	;# 
   345  061C                     	;# 
   346  061D                     	;# 
   347  061E                     	;# 
   348  070C                     	;# 
   349  070D                     	;# 
   350  070E                     	;# 
   351  070F                     	;# 
   352  0710                     	;# 
   353  0711                     	;# 
   354  0712                     	;# 
   355  0713                     	;# 
   356  0714                     	;# 
   357  0716                     	;# 
   358  0717                     	;# 
   359  0718                     	;# 
   360  0719                     	;# 
   361  071A                     	;# 
   362  071B                     	;# 
   363  071C                     	;# 
   364  071D                     	;# 
   365  071E                     	;# 
   366  0796                     	;# 
   367  0797                     	;# 
   368  0798                     	;# 
   369  0799                     	;# 
   370  079A                     	;# 
   371  079B                     	;# 
   372  079C                     	;# 
   373  079D                     	;# 
   374  080C                     	;# 
   375  080D                     	;# 
   376  080E                     	;# 
   377  080F                     	;# 
   378  0810                     	;# 
   379  0811                     	;# 
   380  0812                     	;# 
   381  0813                     	;# 
   382  0814                     	;# 
   383  081A                     	;# 
   384  081A                     	;# 
   385  081B                     	;# 
   386  081C                     	;# 
   387  081C                     	;# 
   388  081D                     	;# 
   389  081E                     	;# 
   390  081F                     	;# 
   391  088C                     	;# 
   392  088D                     	;# 
   393  088E                     	;# 
   394  088F                     	;# 
   395  0890                     	;# 
   396  0891                     	;# 
   397  0892                     	;# 
   398  0893                     	;# 
   399  0895                     	;# 
   400  0896                     	;# 
   401  0897                     	;# 
   402  0898                     	;# 
   403  0899                     	;# 
   404  089A                     	;# 
   405  089B                     	;# 
   406  090C                     	;# 
   407  090E                     	;# 
   408  090F                     	;# 
   409  091F                     	;# 
   410  098F                     	;# 
   411  098F                     	;# 
   412  0990                     	;# 
   413  0991                     	;# 
   414  0992                     	;# 
   415  0993                     	;# 
   416  0994                     	;# 
   417  0995                     	;# 
   418  0996                     	;# 
   419  0997                     	;# 
   420  1E0F                     	;# 
   421  1E10                     	;# 
   422  1E11                     	;# 
   423  1E12                     	;# 
   424  1E13                     	;# 
   425  1E14                     	;# 
   426  1E15                     	;# 
   427  1E16                     	;# 
   428  1E17                     	;# 
   429  1E18                     	;# 
   430  1E19                     	;# 
   431  1E1A                     	;# 
   432  1E1B                     	;# 
   433  1E1C                     	;# 
   434  1E1D                     	;# 
   435  1E1E                     	;# 
   436  1E1F                     	;# 
   437  1E20                     	;# 
   438  1E21                     	;# 
   439  1E22                     	;# 
   440  1E23                     	;# 
   441  1E24                     	;# 
   442  1E25                     	;# 
   443  1E26                     	;# 
   444  1E27                     	;# 
   445  1E28                     	;# 
   446  1E29                     	;# 
   447  1E2A                     	;# 
   448  1E2B                     	;# 
   449  1E2C                     	;# 
   450  1E2D                     	;# 
   451  1E2E                     	;# 
   452  1E2F                     	;# 
   453  1E30                     	;# 
   454  1E31                     	;# 
   455  1E32                     	;# 
   456  1E33                     	;# 
   457  1E34                     	;# 
   458  1E35                     	;# 
   459  1E36                     	;# 
   460  1E37                     	;# 
   461  1E8F                     	;# 
   462  1E90                     	;# 
   463  1E91                     	;# 
   464  1E92                     	;# 
   465  1E93                     	;# 
   466  1E94                     	;# 
   467  1E95                     	;# 
   468  1E96                     	;# 
   469  1E97                     	;# 
   470  1E9C                     	;# 
   471  1E9D                     	;# 
   472  1E9E                     	;# 
   473  1EA1                     	;# 
   474  1EA2                     	;# 
   475  1EA3                     	;# 
   476  1EA4                     	;# 
   477  1EA9                     	;# 
   478  1EAA                     	;# 
   479  1EB1                     	;# 
   480  1EB2                     	;# 
   481  1EB8                     	;# 
   482  1EB9                     	;# 
   483  1EBA                     	;# 
   484  1EBB                     	;# 
   485  1EBC                     	;# 
   486  1EBD                     	;# 
   487  1EBE                     	;# 
   488  1EC3                     	;# 
   489  1EC5                     	;# 
   490  1EC6                     	;# 
   491  1EC7                     	;# 
   492  1EC8                     	;# 
   493  1EC9                     	;# 
   494  1ECA                     	;# 
   495  1ECB                     	;# 
   496  1ECB                     	;# 
   497  1ECB                     	;# 
   498  1ECC                     	;# 
   499  1ECC                     	;# 
   500  1ECC                     	;# 
   501  1F10                     	;# 
   502  1F11                     	;# 
   503  1F12                     	;# 
   504  1F14                     	;# 
   505  1F15                     	;# 
   506  1F1C                     	;# 
   507  1F1D                     	;# 
   508  1F1E                     	;# 
   509  1F1F                     	;# 
   510  1F20                     	;# 
   511  1F21                     	;# 
   512  1F22                     	;# 
   513  1F23                     	;# 
   514  1F24                     	;# 
   515  1F25                     	;# 
   516  1F26                     	;# 
   517  1F27                     	;# 
   518  1F38                     	;# 
   519  1F39                     	;# 
   520  1F3A                     	;# 
   521  1F3B                     	;# 
   522  1F3C                     	;# 
   523  1F3D                     	;# 
   524  1F3E                     	;# 
   525  1F3F                     	;# 
   526  1F43                     	;# 
   527  1F44                     	;# 
   528  1F45                     	;# 
   529  1F46                     	;# 
   530  1F47                     	;# 
   531  1F48                     	;# 
   532  1F49                     	;# 
   533  1F4A                     	;# 
   534  1F4E                     	;# 
   535  1F4F                     	;# 
   536  1F50                     	;# 
   537  1F51                     	;# 
   538  1F52                     	;# 
   539  1F53                     	;# 
   540  1F54                     	;# 
   541  1F55                     	;# 
   542  1FE4                     	;# 
   543  1FE5                     	;# 
   544  1FE6                     	;# 
   545  1FE7                     	;# 
   546  1FE8                     	;# 
   547  1FE8                     	;# 
   548  1FE9                     	;# 
   549  1FEA                     	;# 
   550  1FEB                     	;# 
   551  1FED                     	;# 
   552  1FEE                     	;# 
   553  1FEF                     	;# 
   554  0000                     	;# 
   555  0001                     	;# 
   556  0002                     	;# 
   557  0003                     	;# 
   558  0004                     	;# 
   559  0005                     	;# 
   560  0006                     	;# 
   561  0007                     	;# 
   562  0008                     	;# 
   563  0009                     	;# 
   564  000A                     	;# 
   565  000B                     	;# 
   566  000C                     	;# 
   567  000D                     	;# 
   568  000E                     	;# 
   569  0012                     	;# 
   570  0013                     	;# 
   571  0014                     	;# 
   572  0018                     	;# 
   573  0019                     	;# 
   574  001A                     	;# 
   575  008C                     	;# 
   576  008C                     	;# 
   577  008D                     	;# 
   578  008E                     	;# 
   579  008E                     	;# 
   580  008F                     	;# 
   581  0090                     	;# 
   582  0090                     	;# 
   583  0091                     	;# 
   584  0092                     	;# 
   585  0092                     	;# 
   586  0093                     	;# 
   587  0094                     	;# 
   588  0094                     	;# 
   589  0095                     	;# 
   590  0096                     	;# 
   591  0096                     	;# 
   592  0097                     	;# 
   593  0098                     	;# 
   594  0099                     	;# 
   595  009A                     	;# 
   596  009B                     	;# 
   597  009B                     	;# 
   598  009C                     	;# 
   599  009D                     	;# 
   600  009D                     	;# 
   601  009E                     	;# 
   602  009F                     	;# 
   603  010C                     	;# 
   604  010C                     	;# 
   605  010D                     	;# 
   606  010E                     	;# 
   607  010F                     	;# 
   608  010F                     	;# 
   609  0110                     	;# 
   610  0111                     	;# 
   611  0112                     	;# 
   612  0113                     	;# 
   613  0114                     	;# 
   614  0115                     	;# 
   615  0116                     	;# 
   616  0117                     	;# 
   617  0118                     	;# 
   618  0119                     	;# 
   619  0119                     	;# 
   620  0119                     	;# 
   621  011A                     	;# 
   622  011A                     	;# 
   623  011A                     	;# 
   624  011B                     	;# 
   625  011B                     	;# 
   626  011B                     	;# 
   627  011B                     	;# 
   628  011B                     	;# 
   629  011C                     	;# 
   630  011C                     	;# 
   631  011C                     	;# 
   632  011D                     	;# 
   633  011D                     	;# 
   634  011D                     	;# 
   635  011E                     	;# 
   636  011E                     	;# 
   637  011E                     	;# 
   638  011F                     	;# 
   639  011F                     	;# 
   640  011F                     	;# 
   641  011F                     	;# 
   642  011F                     	;# 
   643  018C                     	;# 
   644  018D                     	;# 
   645  018E                     	;# 
   646  018F                     	;# 
   647  0190                     	;# 
   648  0191                     	;# 
   649  0192                     	;# 
   650  0196                     	;# 
   651  0197                     	;# 
   652  0198                     	;# 
   653  0199                     	;# 
   654  019A                     	;# 
   655  019B                     	;# 
   656  019C                     	;# 
   657  020C                     	;# 
   658  020D                     	;# 
   659  020E                     	;# 
   660  020E                     	;# 
   661  020F                     	;# 
   662  020F                     	;# 
   663  0210                     	;# 
   664  0210                     	;# 
   665  0211                     	;# 
   666  0211                     	;# 
   667  0212                     	;# 
   668  0213                     	;# 
   669  0214                     	;# 
   670  0214                     	;# 
   671  0215                     	;# 
   672  0215                     	;# 
   673  0216                     	;# 
   674  0216                     	;# 
   675  0217                     	;# 
   676  0217                     	;# 
   677  0218                     	;# 
   678  0219                     	;# 
   679  021A                     	;# 
   680  021A                     	;# 
   681  021B                     	;# 
   682  021B                     	;# 
   683  021C                     	;# 
   684  021C                     	;# 
   685  021D                     	;# 
   686  021D                     	;# 
   687  021E                     	;# 
   688  021F                     	;# 
   689  028C                     	;# 
   690  028C                     	;# 
   691  028D                     	;# 
   692  028D                     	;# 
   693  028E                     	;# 
   694  028F                     	;# 
   695  0290                     	;# 
   696  0291                     	;# 
   697  0292                     	;# 
   698  0292                     	;# 
   699  0293                     	;# 
   700  0293                     	;# 
   701  0294                     	;# 
   702  0295                     	;# 
   703  0296                     	;# 
   704  0297                     	;# 
   705  0298                     	;# 
   706  0298                     	;# 
   707  0299                     	;# 
   708  0299                     	;# 
   709  029A                     	;# 
   710  029B                     	;# 
   711  029C                     	;# 
   712  029D                     	;# 
   713  029F                     	;# 
   714  030C                     	;# 
   715  030C                     	;# 
   716  030D                     	;# 
   717  030E                     	;# 
   718  030F                     	;# 
   719  0310                     	;# 
   720  0310                     	;# 
   721  0311                     	;# 
   722  0312                     	;# 
   723  0313                     	;# 
   724  0314                     	;# 
   725  0314                     	;# 
   726  0315                     	;# 
   727  0316                     	;# 
   728  0317                     	;# 
   729  0318                     	;# 
   730  0318                     	;# 
   731  0319                     	;# 
   732  031A                     	;# 
   733  031B                     	;# 
   734  038C                     	;# 
   735  038C                     	;# 
   736  038D                     	;# 
   737  038E                     	;# 
   738  0390                     	;# 
   739  0390                     	;# 
   740  0391                     	;# 
   741  0392                     	;# 
   742  048C                     	;# 
   743  048C                     	;# 
   744  048D                     	;# 
   745  048E                     	;# 
   746  048F                     	;# 
   747  048F                     	;# 
   748  0490                     	;# 
   749  0491                     	;# 
   750  0492                     	;# 
   751  0492                     	;# 
   752  0493                     	;# 
   753  0494                     	;# 
   754  0495                     	;# 
   755  0495                     	;# 
   756  0496                     	;# 
   757  0497                     	;# 
   758  0498                     	;# 
   759  0499                     	;# 
   760  049A                     	;# 
   761  049B                     	;# 
   762  049C                     	;# 
   763  049D                     	;# 
   764  058C                     	;# 
   765  058C                     	;# 
   766  058D                     	;# 
   767  058E                     	;# 
   768  058F                     	;# 
   769  058F                     	;# 
   770  0590                     	;# 
   771  0591                     	;# 
   772  0592                     	;# 
   773  0593                     	;# 
   774  059C                     	;# 
   775  059C                     	;# 
   776  059D                     	;# 
   777  059D                     	;# 
   778  059E                     	;# 
   779  059F                     	;# 
   780  060C                     	;# 
   781  060C                     	;# 
   782  060D                     	;# 
   783  060D                     	;# 
   784  060E                     	;# 
   785  060F                     	;# 
   786  0610                     	;# 
   787  0611                     	;# 
   788  0612                     	;# 
   789  0613                     	;# 
   790  0614                     	;# 
   791  0616                     	;# 
   792  0616                     	;# 
   793  0617                     	;# 
   794  0617                     	;# 
   795  0618                     	;# 
   796  0619                     	;# 
   797  061A                     	;# 
   798  061B                     	;# 
   799  061C                     	;# 
   800  061D                     	;# 
   801  061E                     	;# 
   802  070C                     	;# 
   803  070D                     	;# 
   804  070E                     	;# 
   805  070F                     	;# 
   806  0710                     	;# 
   807  0711                     	;# 
   808  0712                     	;# 
   809  0713                     	;# 
   810  0714                     	;# 
   811  0716                     	;# 
   812  0717                     	;# 
   813  0718                     	;# 
   814  0719                     	;# 
   815  071A                     	;# 
   816  071B                     	;# 
   817  071C                     	;# 
   818  071D                     	;# 
   819  071E                     	;# 
   820  0796                     	;# 
   821  0797                     	;# 
   822  0798                     	;# 
   823  0799                     	;# 
   824  079A                     	;# 
   825  079B                     	;# 
   826  079C                     	;# 
   827  079D                     	;# 
   828  080C                     	;# 
   829  080D                     	;# 
   830  080E                     	;# 
   831  080F                     	;# 
   832  0810                     	;# 
   833  0811                     	;# 
   834  0812                     	;# 
   835  0813                     	;# 
   836  0814                     	;# 
   837  081A                     	;# 
   838  081A                     	;# 
   839  081B                     	;# 
   840  081C                     	;# 
   841  081C                     	;# 
   842  081D                     	;# 
   843  081E                     	;# 
   844  081F                     	;# 
   845  088C                     	;# 
   846  088D                     	;# 
   847  088E                     	;# 
   848  088F                     	;# 
   849  0890                     	;# 
   850  0891                     	;# 
   851  0892                     	;# 
   852  0893                     	;# 
   853  0895                     	;# 
   854  0896                     	;# 
   855  0897                     	;# 
   856  0898                     	;# 
   857  0899                     	;# 
   858  089A                     	;# 
   859  089B                     	;# 
   860  090C                     	;# 
   861  090E                     	;# 
   862  090F                     	;# 
   863  091F                     	;# 
   864  098F                     	;# 
   865  098F                     	;# 
   866  0990                     	;# 
   867  0991                     	;# 
   868  0992                     	;# 
   869  0993                     	;# 
   870  0994                     	;# 
   871  0995                     	;# 
   872  0996                     	;# 
   873  0997                     	;# 
   874  1E0F                     	;# 
   875  1E10                     	;# 
   876  1E11                     	;# 
   877  1E12                     	;# 
   878  1E13                     	;# 
   879  1E14                     	;# 
   880  1E15                     	;# 
   881  1E16                     	;# 
   882  1E17                     	;# 
   883  1E18                     	;# 
   884  1E19                     	;# 
   885  1E1A                     	;# 
   886  1E1B                     	;# 
   887  1E1C                     	;# 
   888  1E1D                     	;# 
   889  1E1E                     	;# 
   890  1E1F                     	;# 
   891  1E20                     	;# 
   892  1E21                     	;# 
   893  1E22                     	;# 
   894  1E23                     	;# 
   895  1E24                     	;# 
   896  1E25                     	;# 
   897  1E26                     	;# 
   898  1E27                     	;# 
   899  1E28                     	;# 
   900  1E29                     	;# 
   901  1E2A                     	;# 
   902  1E2B                     	;# 
   903  1E2C                     	;# 
   904  1E2D                     	;# 
   905  1E2E                     	;# 
   906  1E2F                     	;# 
   907  1E30                     	;# 
   908  1E31                     	;# 
   909  1E32                     	;# 
   910  1E33                     	;# 
   911  1E34                     	;# 
   912  1E35                     	;# 
   913  1E36                     	;# 
   914  1E37                     	;# 
   915  1E8F                     	;# 
   916  1E90                     	;# 
   917  1E91                     	;# 
   918  1E92                     	;# 
   919  1E93                     	;# 
   920  1E94                     	;# 
   921  1E95                     	;# 
   922  1E96                     	;# 
   923  1E97                     	;# 
   924  1E9C                     	;# 
   925  1E9D                     	;# 
   926  1E9E                     	;# 
   927  1EA1                     	;# 
   928  1EA2                     	;# 
   929  1EA3                     	;# 
   930  1EA4                     	;# 
   931  1EA9                     	;# 
   932  1EAA                     	;# 
   933  1EB1                     	;# 
   934  1EB2                     	;# 
   935  1EB8                     	;# 
   936  1EB9                     	;# 
   937  1EBA                     	;# 
   938  1EBB                     	;# 
   939  1EBC                     	;# 
   940  1EBD                     	;# 
   941  1EBE                     	;# 
   942  1EC3                     	;# 
   943  1EC5                     	;# 
   944  1EC6                     	;# 
   945  1EC7                     	;# 
   946  1EC8                     	;# 
   947  1EC9                     	;# 
   948  1ECA                     	;# 
   949  1ECB                     	;# 
   950  1ECB                     	;# 
   951  1ECB                     	;# 
   952  1ECC                     	;# 
   953  1ECC                     	;# 
   954  1ECC                     	;# 
   955  1F10                     	;# 
   956  1F11                     	;# 
   957  1F12                     	;# 
   958  1F14                     	;# 
   959  1F15                     	;# 
   960  1F1C                     	;# 
   961  1F1D                     	;# 
   962  1F1E                     	;# 
   963  1F1F                     	;# 
   964  1F20                     	;# 
   965  1F21                     	;# 
   966  1F22                     	;# 
   967  1F23                     	;# 
   968  1F24                     	;# 
   969  1F25                     	;# 
   970  1F26                     	;# 
   971  1F27                     	;# 
   972  1F38                     	;# 
   973  1F39                     	;# 
   974  1F3A                     	;# 
   975  1F3B                     	;# 
   976  1F3C                     	;# 
   977  1F3D                     	;# 
   978  1F3E                     	;# 
   979  1F3F                     	;# 
   980  1F43                     	;# 
   981  1F44                     	;# 
   982  1F45                     	;# 
   983  1F46                     	;# 
   984  1F47                     	;# 
   985  1F48                     	;# 
   986  1F49                     	;# 
   987  1F4A                     	;# 
   988  1F4E                     	;# 
   989  1F4F                     	;# 
   990  1F50                     	;# 
   991  1F51                     	;# 
   992  1F52                     	;# 
   993  1F53                     	;# 
   994  1F54                     	;# 
   995  1F55                     	;# 
   996  1FE4                     	;# 
   997  1FE5                     	;# 
   998  1FE6                     	;# 
   999  1FE7                     	;# 
  1000  1FE8                     	;# 
  1001  1FE8                     	;# 
  1002  1FE9                     	;# 
  1003  1FEA                     	;# 
  1004  1FEB                     	;# 
  1005  1FED                     	;# 
  1006  1FEE                     	;# 
  1007  1FEF                     	;# 
  1008  0000                     	;# 
  1009  0001                     	;# 
  1010  0002                     	;# 
  1011  0003                     	;# 
  1012  0004                     	;# 
  1013  0005                     	;# 
  1014  0006                     	;# 
  1015  0007                     	;# 
  1016  0008                     	;# 
  1017  0009                     	;# 
  1018  000A                     	;# 
  1019  000B                     	;# 
  1020  000C                     	;# 
  1021  000D                     	;# 
  1022  000E                     	;# 
  1023  0012                     	;# 
  1024  0013                     	;# 
  1025  0014                     	;# 
  1026  0018                     	;# 
  1027  0019                     	;# 
  1028  001A                     	;# 
  1029  008C                     	;# 
  1030  008C                     	;# 
  1031  008D                     	;# 
  1032  008E                     	;# 
  1033  008E                     	;# 
  1034  008F                     	;# 
  1035  0090                     	;# 
  1036  0090                     	;# 
  1037  0091                     	;# 
  1038  0092                     	;# 
  1039  0092                     	;# 
  1040  0093                     	;# 
  1041  0094                     	;# 
  1042  0094                     	;# 
  1043  0095                     	;# 
  1044  0096                     	;# 
  1045  0096                     	;# 
  1046  0097                     	;# 
  1047  0098                     	;# 
  1048  0099                     	;# 
  1049  009A                     	;# 
  1050  009B                     	;# 
  1051  009B                     	;# 
  1052  009C                     	;# 
  1053  009D                     	;# 
  1054  009D                     	;# 
  1055  009E                     	;# 
  1056  009F                     	;# 
  1057  010C                     	;# 
  1058  010C                     	;# 
  1059  010D                     	;# 
  1060  010E                     	;# 
  1061  010F                     	;# 
  1062  010F                     	;# 
  1063  0110                     	;# 
  1064  0111                     	;# 
  1065  0112                     	;# 
  1066  0113                     	;# 
  1067  0114                     	;# 
  1068  0115                     	;# 
  1069  0116                     	;# 
  1070  0117                     	;# 
  1071  0118                     	;# 
  1072  0119                     	;# 
  1073  0119                     	;# 
  1074  0119                     	;# 
  1075  011A                     	;# 
  1076  011A                     	;# 
  1077  011A                     	;# 
  1078  011B                     	;# 
  1079  011B                     	;# 
  1080  011B                     	;# 
  1081  011B                     	;# 
  1082  011B                     	;# 
  1083  011C                     	;# 
  1084  011C                     	;# 
  1085  011C                     	;# 
  1086  011D                     	;# 
  1087  011D                     	;# 
  1088  011D                     	;# 
  1089  011E                     	;# 
  1090  011E                     	;# 
  1091  011E                     	;# 
  1092  011F                     	;# 
  1093  011F                     	;# 
  1094  011F                     	;# 
  1095  011F                     	;# 
  1096  011F                     	;# 
  1097  018C                     	;# 
  1098  018D                     	;# 
  1099  018E                     	;# 
  1100  018F                     	;# 
  1101  0190                     	;# 
  1102  0191                     	;# 
  1103  0192                     	;# 
  1104  0196                     	;# 
  1105  0197                     	;# 
  1106  0198                     	;# 
  1107  0199                     	;# 
  1108  019A                     	;# 
  1109  019B                     	;# 
  1110  019C                     	;# 
  1111  020C                     	;# 
  1112  020D                     	;# 
  1113  020E                     	;# 
  1114  020E                     	;# 
  1115  020F                     	;# 
  1116  020F                     	;# 
  1117  0210                     	;# 
  1118  0210                     	;# 
  1119  0211                     	;# 
  1120  0211                     	;# 
  1121  0212                     	;# 
  1122  0213                     	;# 
  1123  0214                     	;# 
  1124  0214                     	;# 
  1125  0215                     	;# 
  1126  0215                     	;# 
  1127  0216                     	;# 
  1128  0216                     	;# 
  1129  0217                     	;# 
  1130  0217                     	;# 
  1131  0218                     	;# 
  1132  0219                     	;# 
  1133  021A                     	;# 
  1134  021A                     	;# 
  1135  021B                     	;# 
  1136  021B                     	;# 
  1137  021C                     	;# 
  1138  021C                     	;# 
  1139  021D                     	;# 
  1140  021D                     	;# 
  1141  021E                     	;# 
  1142  021F                     	;# 
  1143  028C                     	;# 
  1144  028C                     	;# 
  1145  028D                     	;# 
  1146  028D                     	;# 
  1147  028E                     	;# 
  1148  028F                     	;# 
  1149  0290                     	;# 
  1150  0291                     	;# 
  1151  0292                     	;# 
  1152  0292                     	;# 
  1153  0293                     	;# 
  1154  0293                     	;# 
  1155  0294                     	;# 
  1156  0295                     	;# 
  1157  0296                     	;# 
  1158  0297                     	;# 
  1159  0298                     	;# 
  1160  0298                     	;# 
  1161  0299                     	;# 
  1162  0299                     	;# 
  1163  029A                     	;# 
  1164  029B                     	;# 
  1165  029C                     	;# 
  1166  029D                     	;# 
  1167  029F                     	;# 
  1168  030C                     	;# 
  1169  030C                     	;# 
  1170  030D                     	;# 
  1171  030E                     	;# 
  1172  030F                     	;# 
  1173  0310                     	;# 
  1174  0310                     	;# 
  1175  0311                     	;# 
  1176  0312                     	;# 
  1177  0313                     	;# 
  1178  0314                     	;# 
  1179  0314                     	;# 
  1180  0315                     	;# 
  1181  0316                     	;# 
  1182  0317                     	;# 
  1183  0318                     	;# 
  1184  0318                     	;# 
  1185  0319                     	;# 
  1186  031A                     	;# 
  1187  031B                     	;# 
  1188  038C                     	;# 
  1189  038C                     	;# 
  1190  038D                     	;# 
  1191  038E                     	;# 
  1192  0390                     	;# 
  1193  0390                     	;# 
  1194  0391                     	;# 
  1195  0392                     	;# 
  1196  048C                     	;# 
  1197  048C                     	;# 
  1198  048D                     	;# 
  1199  048E                     	;# 
  1200  048F                     	;# 
  1201  048F                     	;# 
  1202  0490                     	;# 
  1203  0491                     	;# 
  1204  0492                     	;# 
  1205  0492                     	;# 
  1206  0493                     	;# 
  1207  0494                     	;# 
  1208  0495                     	;# 
  1209  0495                     	;# 
  1210  0496                     	;# 
  1211  0497                     	;# 
  1212  0498                     	;# 
  1213  0499                     	;# 
  1214  049A                     	;# 
  1215  049B                     	;# 
  1216  049C                     	;# 
  1217  049D                     	;# 
  1218  058C                     	;# 
  1219  058C                     	;# 
  1220  058D                     	;# 
  1221  058E                     	;# 
  1222  058F                     	;# 
  1223  058F                     	;# 
  1224  0590                     	;# 
  1225  0591                     	;# 
  1226  0592                     	;# 
  1227  0593                     	;# 
  1228  059C                     	;# 
  1229  059C                     	;# 
  1230  059D                     	;# 
  1231  059D                     	;# 
  1232  059E                     	;# 
  1233  059F                     	;# 
  1234  060C                     	;# 
  1235  060C                     	;# 
  1236  060D                     	;# 
  1237  060D                     	;# 
  1238  060E                     	;# 
  1239  060F                     	;# 
  1240  0610                     	;# 
  1241  0611                     	;# 
  1242  0612                     	;# 
  1243  0613                     	;# 
  1244  0614                     	;# 
  1245  0616                     	;# 
  1246  0616                     	;# 
  1247  0617                     	;# 
  1248  0617                     	;# 
  1249  0618                     	;# 
  1250  0619                     	;# 
  1251  061A                     	;# 
  1252  061B                     	;# 
  1253  061C                     	;# 
  1254  061D                     	;# 
  1255  061E                     	;# 
  1256  070C                     	;# 
  1257  070D                     	;# 
  1258  070E                     	;# 
  1259  070F                     	;# 
  1260  0710                     	;# 
  1261  0711                     	;# 
  1262  0712                     	;# 
  1263  0713                     	;# 
  1264  0714                     	;# 
  1265  0716                     	;# 
  1266  0717                     	;# 
  1267  0718                     	;# 
  1268  0719                     	;# 
  1269  071A                     	;# 
  1270  071B                     	;# 
  1271  071C                     	;# 
  1272  071D                     	;# 
  1273  071E                     	;# 
  1274  0796                     	;# 
  1275  0797                     	;# 
  1276  0798                     	;# 
  1277  0799                     	;# 
  1278  079A                     	;# 
  1279  079B                     	;# 
  1280  079C                     	;# 
  1281  079D                     	;# 
  1282  080C                     	;# 
  1283  080D                     	;# 
  1284  080E                     	;# 
  1285  080F                     	;# 
  1286  0810                     	;# 
  1287  0811                     	;# 
  1288  0812                     	;# 
  1289  0813                     	;# 
  1290  0814                     	;# 
  1291  081A                     	;# 
  1292  081A                     	;# 
  1293  081B                     	;# 
  1294  081C                     	;# 
  1295  081C                     	;# 
  1296  081D                     	;# 
  1297  081E                     	;# 
  1298  081F                     	;# 
  1299  088C                     	;# 
  1300  088D                     	;# 
  1301  088E                     	;# 
  1302  088F                     	;# 
  1303  0890                     	;# 
  1304  0891                     	;# 
  1305  0892                     	;# 
  1306  0893                     	;# 
  1307  0895                     	;# 
  1308  0896                     	;# 
  1309  0897                     	;# 
  1310  0898                     	;# 
  1311  0899                     	;# 
  1312  089A                     	;# 
  1313  089B                     	;# 
  1314  090C                     	;# 
  1315  090E                     	;# 
  1316  090F                     	;# 
  1317  091F                     	;# 
  1318  098F                     	;# 
  1319  098F                     	;# 
  1320  0990                     	;# 
  1321  0991                     	;# 
  1322  0992                     	;# 
  1323  0993                     	;# 
  1324  0994                     	;# 
  1325  0995                     	;# 
  1326  0996                     	;# 
  1327  0997                     	;# 
  1328  1E0F                     	;# 
  1329  1E10                     	;# 
  1330  1E11                     	;# 
  1331  1E12                     	;# 
  1332  1E13                     	;# 
  1333  1E14                     	;# 
  1334  1E15                     	;# 
  1335  1E16                     	;# 
  1336  1E17                     	;# 
  1337  1E18                     	;# 
  1338  1E19                     	;# 
  1339  1E1A                     	;# 
  1340  1E1B                     	;# 
  1341  1E1C                     	;# 
  1342  1E1D                     	;# 
  1343  1E1E                     	;# 
  1344  1E1F                     	;# 
  1345  1E20                     	;# 
  1346  1E21                     	;# 
  1347  1E22                     	;# 
  1348  1E23                     	;# 
  1349  1E24                     	;# 
  1350  1E25                     	;# 
  1351  1E26                     	;# 
  1352  1E27                     	;# 
  1353  1E28                     	;# 
  1354  1E29                     	;# 
  1355  1E2A                     	;# 
  1356  1E2B                     	;# 
  1357  1E2C                     	;# 
  1358  1E2D                     	;# 
  1359  1E2E                     	;# 
  1360  1E2F                     	;# 
  1361  1E30                     	;# 
  1362  1E31                     	;# 
  1363  1E32                     	;# 
  1364  1E33                     	;# 
  1365  1E34                     	;# 
  1366  1E35                     	;# 
  1367  1E36                     	;# 
  1368  1E37                     	;# 
  1369  1E8F                     	;# 
  1370  1E90                     	;# 
  1371  1E91                     	;# 
  1372  1E92                     	;# 
  1373  1E93                     	;# 
  1374  1E94                     	;# 
  1375  1E95                     	;# 
  1376  1E96                     	;# 
  1377  1E97                     	;# 
  1378  1E9C                     	;# 
  1379  1E9D                     	;# 
  1380  1E9E                     	;# 
  1381  1EA1                     	;# 
  1382  1EA2                     	;# 
  1383  1EA3                     	;# 
  1384  1EA4                     	;# 
  1385  1EA9                     	;# 
  1386  1EAA                     	;# 
  1387  1EB1                     	;# 
  1388  1EB2                     	;# 
  1389  1EB8                     	;# 
  1390  1EB9                     	;# 
  1391  1EBA                     	;# 
  1392  1EBB                     	;# 
  1393  1EBC                     	;# 
  1394  1EBD                     	;# 
  1395  1EBE                     	;# 
  1396  1EC3                     	;# 
  1397  1EC5                     	;# 
  1398  1EC6                     	;# 
  1399  1EC7                     	;# 
  1400  1EC8                     	;# 
  1401  1EC9                     	;# 
  1402  1ECA                     	;# 
  1403  1ECB                     	;# 
  1404  1ECB                     	;# 
  1405  1ECB                     	;# 
  1406  1ECC                     	;# 
  1407  1ECC                     	;# 
  1408  1ECC                     	;# 
  1409  1F10                     	;# 
  1410  1F11                     	;# 
  1411  1F12                     	;# 
  1412  1F14                     	;# 
  1413  1F15                     	;# 
  1414  1F1C                     	;# 
  1415  1F1D                     	;# 
  1416  1F1E                     	;# 
  1417  1F1F                     	;# 
  1418  1F20                     	;# 
  1419  1F21                     	;# 
  1420  1F22                     	;# 
  1421  1F23                     	;# 
  1422  1F24                     	;# 
  1423  1F25                     	;# 
  1424  1F26                     	;# 
  1425  1F27                     	;# 
  1426  1F38                     	;# 
  1427  1F39                     	;# 
  1428  1F3A                     	;# 
  1429  1F3B                     	;# 
  1430  1F3C                     	;# 
  1431  1F3D                     	;# 
  1432  1F3E                     	;# 
  1433  1F3F                     	;# 
  1434  1F43                     	;# 
  1435  1F44                     	;# 
  1436  1F45                     	;# 
  1437  1F46                     	;# 
  1438  1F47                     	;# 
  1439  1F48                     	;# 
  1440  1F49                     	;# 
  1441  1F4A                     	;# 
  1442  1F4E                     	;# 
  1443  1F4F                     	;# 
  1444  1F50                     	;# 
  1445  1F51                     	;# 
  1446  1F52                     	;# 
  1447  1F53                     	;# 
  1448  1F54                     	;# 
  1449  1F55                     	;# 
  1450  1FE4                     	;# 
  1451  1FE5                     	;# 
  1452  1FE6                     	;# 
  1453  1FE7                     	;# 
  1454  1FE8                     	;# 
  1455  1FE8                     	;# 
  1456  1FE9                     	;# 
  1457  1FEA                     	;# 
  1458  1FEB                     	;# 
  1459  1FED                     	;# 
  1460  1FEE                     	;# 
  1461  1FEF                     	;# 
  1462  0000                     	;# 
  1463  0001                     	;# 
  1464  0002                     	;# 
  1465  0003                     	;# 
  1466  0004                     	;# 
  1467  0005                     	;# 
  1468  0006                     	;# 
  1469  0007                     	;# 
  1470  0008                     	;# 
  1471  0009                     	;# 
  1472  000A                     	;# 
  1473  000B                     	;# 
  1474  000C                     	;# 
  1475  000D                     	;# 
  1476  000E                     	;# 
  1477  0012                     	;# 
  1478  0013                     	;# 
  1479  0014                     	;# 
  1480  0018                     	;# 
  1481  0019                     	;# 
  1482  001A                     	;# 
  1483  008C                     	;# 
  1484  008C                     	;# 
  1485  008D                     	;# 
  1486  008E                     	;# 
  1487  008E                     	;# 
  1488  008F                     	;# 
  1489  0090                     	;# 
  1490  0090                     	;# 
  1491  0091                     	;# 
  1492  0092                     	;# 
  1493  0092                     	;# 
  1494  0093                     	;# 
  1495  0094                     	;# 
  1496  0094                     	;# 
  1497  0095                     	;# 
  1498  0096                     	;# 
  1499  0096                     	;# 
  1500  0097                     	;# 
  1501  0098                     	;# 
  1502  0099                     	;# 
  1503  009A                     	;# 
  1504  009B                     	;# 
  1505  009B                     	;# 
  1506  009C                     	;# 
  1507  009D                     	;# 
  1508  009D                     	;# 
  1509  009E                     	;# 
  1510  009F                     	;# 
  1511  010C                     	;# 
  1512  010C                     	;# 
  1513  010D                     	;# 
  1514  010E                     	;# 
  1515  010F                     	;# 
  1516  010F                     	;# 
  1517  0110                     	;# 
  1518  0111                     	;# 
  1519  0112                     	;# 
  1520  0113                     	;# 
  1521  0114                     	;# 
  1522  0115                     	;# 
  1523  0116                     	;# 
  1524  0117                     	;# 
  1525  0118                     	;# 
  1526  0119                     	;# 
  1527  0119                     	;# 
  1528  0119                     	;# 
  1529  011A                     	;# 
  1530  011A                     	;# 
  1531  011A                     	;# 
  1532  011B                     	;# 
  1533  011B                     	;# 
  1534  011B                     	;# 
  1535  011B                     	;# 
  1536  011B                     	;# 
  1537  011C                     	;# 
  1538  011C                     	;# 
  1539  011C                     	;# 
  1540  011D                     	;# 
  1541  011D                     	;# 
  1542  011D                     	;# 
  1543  011E                     	;# 
  1544  011E                     	;# 
  1545  011E                     	;# 
  1546  011F                     	;# 
  1547  011F                     	;# 
  1548  011F                     	;# 
  1549  011F                     	;# 
  1550  011F                     	;# 
  1551  018C                     	;# 
  1552  018D                     	;# 
  1553  018E                     	;# 
  1554  018F                     	;# 
  1555  0190                     	;# 
  1556  0191                     	;# 
  1557  0192                     	;# 
  1558  0196                     	;# 
  1559  0197                     	;# 
  1560  0198                     	;# 
  1561  0199                     	;# 
  1562  019A                     	;# 
  1563  019B                     	;# 
  1564  019C                     	;# 
  1565  020C                     	;# 
  1566  020D                     	;# 
  1567  020E                     	;# 
  1568  020E                     	;# 
  1569  020F                     	;# 
  1570  020F                     	;# 
  1571  0210                     	;# 
  1572  0210                     	;# 
  1573  0211                     	;# 
  1574  0211                     	;# 
  1575  0212                     	;# 
  1576  0213                     	;# 
  1577  0214                     	;# 
  1578  0214                     	;# 
  1579  0215                     	;# 
  1580  0215                     	;# 
  1581  0216                     	;# 
  1582  0216                     	;# 
  1583  0217                     	;# 
  1584  0217                     	;# 
  1585  0218                     	;# 
  1586  0219                     	;# 
  1587  021A                     	;# 
  1588  021A                     	;# 
  1589  021B                     	;# 
  1590  021B                     	;# 
  1591  021C                     	;# 
  1592  021C                     	;# 
  1593  021D                     	;# 
  1594  021D                     	;# 
  1595  021E                     	;# 
  1596  021F                     	;# 
  1597  028C                     	;# 
  1598  028C                     	;# 
  1599  028D                     	;# 
  1600  028D                     	;# 
  1601  028E                     	;# 
  1602  028F                     	;# 
  1603  0290                     	;# 
  1604  0291                     	;# 
  1605  0292                     	;# 
  1606  0292                     	;# 
  1607  0293                     	;# 
  1608  0293                     	;# 
  1609  0294                     	;# 
  1610  0295                     	;# 
  1611  0296                     	;# 
  1612  0297                     	;# 
  1613  0298                     	;# 
  1614  0298                     	;# 
  1615  0299                     	;# 
  1616  0299                     	;# 
  1617  029A                     	;# 
  1618  029B                     	;# 
  1619  029C                     	;# 
  1620  029D                     	;# 
  1621  029F                     	;# 
  1622  030C                     	;# 
  1623  030C                     	;# 
  1624  030D                     	;# 
  1625  030E                     	;# 
  1626  030F                     	;# 
  1627  0310                     	;# 
  1628  0310                     	;# 
  1629  0311                     	;# 
  1630  0312                     	;# 
  1631  0313                     	;# 
  1632  0314                     	;# 
  1633  0314                     	;# 
  1634  0315                     	;# 
  1635  0316                     	;# 
  1636  0317                     	;# 
  1637  0318                     	;# 
  1638  0318                     	;# 
  1639  0319                     	;# 
  1640  031A                     	;# 
  1641  031B                     	;# 
  1642  038C                     	;# 
  1643  038C                     	;# 
  1644  038D                     	;# 
  1645  038E                     	;# 
  1646  0390                     	;# 
  1647  0390                     	;# 
  1648  0391                     	;# 
  1649  0392                     	;# 
  1650  048C                     	;# 
  1651  048C                     	;# 
  1652  048D                     	;# 
  1653  048E                     	;# 
  1654  048F                     	;# 
  1655  048F                     	;# 
  1656  0490                     	;# 
  1657  0491                     	;# 
  1658  0492                     	;# 
  1659  0492                     	;# 
  1660  0493                     	;# 
  1661  0494                     	;# 
  1662  0495                     	;# 
  1663  0495                     	;# 
  1664  0496                     	;# 
  1665  0497                     	;# 
  1666  0498                     	;# 
  1667  0499                     	;# 
  1668  049A                     	;# 
  1669  049B                     	;# 
  1670  049C                     	;# 
  1671  049D                     	;# 
  1672  058C                     	;# 
  1673  058C                     	;# 
  1674  058D                     	;# 
  1675  058E                     	;# 
  1676  058F                     	;# 
  1677  058F                     	;# 
  1678  0590                     	;# 
  1679  0591                     	;# 
  1680  0592                     	;# 
  1681  0593                     	;# 
  1682  059C                     	;# 
  1683  059C                     	;# 
  1684  059D                     	;# 
  1685  059D                     	;# 
  1686  059E                     	;# 
  1687  059F                     	;# 
  1688  060C                     	;# 
  1689  060C                     	;# 
  1690  060D                     	;# 
  1691  060D                     	;# 
  1692  060E                     	;# 
  1693  060F                     	;# 
  1694  0610                     	;# 
  1695  0611                     	;# 
  1696  0612                     	;# 
  1697  0613                     	;# 
  1698  0614                     	;# 
  1699  0616                     	;# 
  1700  0616                     	;# 
  1701  0617                     	;# 
  1702  0617                     	;# 
  1703  0618                     	;# 
  1704  0619                     	;# 
  1705  061A                     	;# 
  1706  061B                     	;# 
  1707  061C                     	;# 
  1708  061D                     	;# 
  1709  061E                     	;# 
  1710  070C                     	;# 
  1711  070D                     	;# 
  1712  070E                     	;# 
  1713  070F                     	;# 
  1714  0710                     	;# 
  1715  0711                     	;# 
  1716  0712                     	;# 
  1717  0713                     	;# 
  1718  0714                     	;# 
  1719  0716                     	;# 
  1720  0717                     	;# 
  1721  0718                     	;# 
  1722  0719                     	;# 
  1723  071A                     	;# 
  1724  071B                     	;# 
  1725  071C                     	;# 
  1726  071D                     	;# 
  1727  071E                     	;# 
  1728  0796                     	;# 
  1729  0797                     	;# 
  1730  0798                     	;# 
  1731  0799                     	;# 
  1732  079A                     	;# 
  1733  079B                     	;# 
  1734  079C                     	;# 
  1735  079D                     	;# 
  1736  080C                     	;# 
  1737  080D                     	;# 
  1738  080E                     	;# 
  1739  080F                     	;# 
  1740  0810                     	;# 
  1741  0811                     	;# 
  1742  0812                     	;# 
  1743  0813                     	;# 
  1744  0814                     	;# 
  1745  081A                     	;# 
  1746  081A                     	;# 
  1747  081B                     	;# 
  1748  081C                     	;# 
  1749  081C                     	;# 
  1750  081D                     	;# 
  1751  081E                     	;# 
  1752  081F                     	;# 
  1753  088C                     	;# 
  1754  088D                     	;# 
  1755  088E                     	;# 
  1756  088F                     	;# 
  1757  0890                     	;# 
  1758  0891                     	;# 
  1759  0892                     	;# 
  1760  0893                     	;# 
  1761  0895                     	;# 
  1762  0896                     	;# 
  1763  0897                     	;# 
  1764  0898                     	;# 
  1765  0899                     	;# 
  1766  089A                     	;# 
  1767  089B                     	;# 
  1768  090C                     	;# 
  1769  090E                     	;# 
  1770  090F                     	;# 
  1771  091F                     	;# 
  1772  098F                     	;# 
  1773  098F                     	;# 
  1774  0990                     	;# 
  1775  0991                     	;# 
  1776  0992                     	;# 
  1777  0993                     	;# 
  1778  0994                     	;# 
  1779  0995                     	;# 
  1780  0996                     	;# 
  1781  0997                     	;# 
  1782  1E0F                     	;# 
  1783  1E10                     	;# 
  1784  1E11                     	;# 
  1785  1E12                     	;# 
  1786  1E13                     	;# 
  1787  1E14                     	;# 
  1788  1E15                     	;# 
  1789  1E16                     	;# 
  1790  1E17                     	;# 
  1791  1E18                     	;# 
  1792  1E19                     	;# 
  1793  1E1A                     	;# 
  1794  1E1B                     	;# 
  1795  1E1C                     	;# 
  1796  1E1D                     	;# 
  1797  1E1E                     	;# 
  1798  1E1F                     	;# 
  1799  1E20                     	;# 
  1800  1E21                     	;# 
  1801  1E22                     	;# 
  1802  1E23                     	;# 
  1803  1E24                     	;# 
  1804  1E25                     	;# 
  1805  1E26                     	;# 
  1806  1E27                     	;# 
  1807  1E28                     	;# 
  1808  1E29                     	;# 
  1809  1E2A                     	;# 
  1810  1E2B                     	;# 
  1811  1E2C                     	;# 
  1812  1E2D                     	;# 
  1813  1E2E                     	;# 
  1814  1E2F                     	;# 
  1815  1E30                     	;# 
  1816  1E31                     	;# 
  1817  1E32                     	;# 
  1818  1E33                     	;# 
  1819  1E34                     	;# 
  1820  1E35                     	;# 
  1821  1E36                     	;# 
  1822  1E37                     	;# 
  1823  1E8F                     	;# 
  1824  1E90                     	;# 
  1825  1E91                     	;# 
  1826  1E92                     	;# 
  1827  1E93                     	;# 
  1828  1E94                     	;# 
  1829  1E95                     	;# 
  1830  1E96                     	;# 
  1831  1E97                     	;# 
  1832  1E9C                     	;# 
  1833  1E9D                     	;# 
  1834  1E9E                     	;# 
  1835  1EA1                     	;# 
  1836  1EA2                     	;# 
  1837  1EA3                     	;# 
  1838  1EA4                     	;# 
  1839  1EA9                     	;# 
  1840  1EAA                     	;# 
  1841  1EB1                     	;# 
  1842  1EB2                     	;# 
  1843  1EB8                     	;# 
  1844  1EB9                     	;# 
  1845  1EBA                     	;# 
  1846  1EBB                     	;# 
  1847  1EBC                     	;# 
  1848  1EBD                     	;# 
  1849  1EBE                     	;# 
  1850  1EC3                     	;# 
  1851  1EC5                     	;# 
  1852  1EC6                     	;# 
  1853  1EC7                     	;# 
  1854  1EC8                     	;# 
  1855  1EC9                     	;# 
  1856  1ECA                     	;# 
  1857  1ECB                     	;# 
  1858  1ECB                     	;# 
  1859  1ECB                     	;# 
  1860  1ECC                     	;# 
  1861  1ECC                     	;# 
  1862  1ECC                     	;# 
  1863  1F10                     	;# 
  1864  1F11                     	;# 
  1865  1F12                     	;# 
  1866  1F14                     	;# 
  1867  1F15                     	;# 
  1868  1F1C                     	;# 
  1869  1F1D                     	;# 
  1870  1F1E                     	;# 
  1871  1F1F                     	;# 
  1872  1F20                     	;# 
  1873  1F21                     	;# 
  1874  1F22                     	;# 
  1875  1F23                     	;# 
  1876  1F24                     	;# 
  1877  1F25                     	;# 
  1878  1F26                     	;# 
  1879  1F27                     	;# 
  1880  1F38                     	;# 
  1881  1F39                     	;# 
  1882  1F3A                     	;# 
  1883  1F3B                     	;# 
  1884  1F3C                     	;# 
  1885  1F3D                     	;# 
  1886  1F3E                     	;# 
  1887  1F3F                     	;# 
  1888  1F43                     	;# 
  1889  1F44                     	;# 
  1890  1F45                     	;# 
  1891  1F46                     	;# 
  1892  1F47                     	;# 
  1893  1F48                     	;# 
  1894  1F49                     	;# 
  1895  1F4A                     	;# 
  1896  1F4E                     	;# 
  1897  1F4F                     	;# 
  1898  1F50                     	;# 
  1899  1F51                     	;# 
  1900  1F52                     	;# 
  1901  1F53                     	;# 
  1902  1F54                     	;# 
  1903  1F55                     	;# 
  1904  1FE4                     	;# 
  1905  1FE5                     	;# 
  1906  1FE6                     	;# 
  1907  1FE7                     	;# 
  1908  1FE8                     	;# 
  1909  1FE8                     	;# 
  1910  1FE9                     	;# 
  1911  1FEA                     	;# 
  1912  1FEB                     	;# 
  1913  1FED                     	;# 
  1914  1FEE                     	;# 
  1915  1FEF                     	;# 
  1916  0000                     	;# 
  1917  0001                     	;# 
  1918  0002                     	;# 
  1919  0003                     	;# 
  1920  0004                     	;# 
  1921  0005                     	;# 
  1922  0006                     	;# 
  1923  0007                     	;# 
  1924  0008                     	;# 
  1925  0009                     	;# 
  1926  000A                     	;# 
  1927  000B                     	;# 
  1928  000C                     	;# 
  1929  000D                     	;# 
  1930  000E                     	;# 
  1931  0012                     	;# 
  1932  0013                     	;# 
  1933  0014                     	;# 
  1934  0018                     	;# 
  1935  0019                     	;# 
  1936  001A                     	;# 
  1937  008C                     	;# 
  1938  008C                     	;# 
  1939  008D                     	;# 
  1940  008E                     	;# 
  1941  008E                     	;# 
  1942  008F                     	;# 
  1943  0090                     	;# 
  1944  0090                     	;# 
  1945  0091                     	;# 
  1946  0092                     	;# 
  1947  0092                     	;# 
  1948  0093                     	;# 
  1949  0094                     	;# 
  1950  0094                     	;# 
  1951  0095                     	;# 
  1952  0096                     	;# 
  1953  0096                     	;# 
  1954  0097                     	;# 
  1955  0098                     	;# 
  1956  0099                     	;# 
  1957  009A                     	;# 
  1958  009B                     	;# 
  1959  009B                     	;# 
  1960  009C                     	;# 
  1961  009D                     	;# 
  1962  009D                     	;# 
  1963  009E                     	;# 
  1964  009F                     	;# 
  1965  010C                     	;# 
  1966  010C                     	;# 
  1967  010D                     	;# 
  1968  010E                     	;# 
  1969  010F                     	;# 
  1970  010F                     	;# 
  1971  0110                     	;# 
  1972  0111                     	;# 
  1973  0112                     	;# 
  1974  0113                     	;# 
  1975  0114                     	;# 
  1976  0115                     	;# 
  1977  0116                     	;# 
  1978  0117                     	;# 
  1979  0118                     	;# 
  1980  0119                     	;# 
  1981  0119                     	;# 
  1982  0119                     	;# 
  1983  011A                     	;# 
  1984  011A                     	;# 
  1985  011A                     	;# 
  1986  011B                     	;# 
  1987  011B                     	;# 
  1988  011B                     	;# 
  1989  011B                     	;# 
  1990  011B                     	;# 
  1991  011C                     	;# 
  1992  011C                     	;# 
  1993  011C                     	;# 
  1994  011D                     	;# 
  1995  011D                     	;# 
  1996  011D                     	;# 
  1997  011E                     	;# 
  1998  011E                     	;# 
  1999  011E                     	;# 
  2000  011F                     	;# 
  2001  011F                     	;# 
  2002  011F                     	;# 
  2003  011F                     	;# 
  2004  011F                     	;# 
  2005  018C                     	;# 
  2006  018D                     	;# 
  2007  018E                     	;# 
  2008  018F                     	;# 
  2009  0190                     	;# 
  2010  0191                     	;# 
  2011  0192                     	;# 
  2012  0196                     	;# 
  2013  0197                     	;# 
  2014  0198                     	;# 
  2015  0199                     	;# 
  2016  019A                     	;# 
  2017  019B                     	;# 
  2018  019C                     	;# 
  2019  020C                     	;# 
  2020  020D                     	;# 
  2021  020E                     	;# 
  2022  020E                     	;# 
  2023  020F                     	;# 
  2024  020F                     	;# 
  2025  0210                     	;# 
  2026  0210                     	;# 
  2027  0211                     	;# 
  2028  0211                     	;# 
  2029  0212                     	;# 
  2030  0213                     	;# 
  2031  0214                     	;# 
  2032  0214                     	;# 
  2033  0215                     	;# 
  2034  0215                     	;# 
  2035  0216                     	;# 
  2036  0216                     	;# 
  2037  0217                     	;# 
  2038  0217                     	;# 
  2039  0218                     	;# 
  2040  0219                     	;# 
  2041  021A                     	;# 
  2042  021A                     	;# 
  2043  021B                     	;# 
  2044  021B                     	;# 
  2045  021C                     	;# 
  2046  021C                     	;# 
  2047  021D                     	;# 
  2048  021D                     	;# 
  2049  021E                     	;# 
  2050  021F                     	;# 
  2051  028C                     	;# 
  2052  028C                     	;# 
  2053  028D                     	;# 
  2054  028D                     	;# 
  2055  028E                     	;# 
  2056  028F                     	;# 
  2057  0290                     	;# 
  2058  0291                     	;# 
  2059  0292                     	;# 
  2060  0292                     	;# 
  2061  0293                     	;# 
  2062  0293                     	;# 
  2063  0294                     	;# 
  2064  0295                     	;# 
  2065  0296                     	;# 
  2066  0297                     	;# 
  2067  0298                     	;# 
  2068  0298                     	;# 
  2069  0299                     	;# 
  2070  0299                     	;# 
  2071  029A                     	;# 
  2072  029B                     	;# 
  2073  029C                     	;# 
  2074  029D                     	;# 
  2075  029F                     	;# 
  2076  030C                     	;# 
  2077  030C                     	;# 
  2078  030D                     	;# 
  2079  030E                     	;# 
  2080  030F                     	;# 
  2081  0310                     	;# 
  2082  0310                     	;# 
  2083  0311                     	;# 
  2084  0312                     	;# 
  2085  0313                     	;# 
  2086  0314                     	;# 
  2087  0314                     	;# 
  2088  0315                     	;# 
  2089  0316                     	;# 
  2090  0317                     	;# 
  2091  0318                     	;# 
  2092  0318                     	;# 
  2093  0319                     	;# 
  2094  031A                     	;# 
  2095  031B                     	;# 
  2096  038C                     	;# 
  2097  038C                     	;# 
  2098  038D                     	;# 
  2099  038E                     	;# 
  2100  0390                     	;# 
  2101  0390                     	;# 
  2102  0391                     	;# 
  2103  0392                     	;# 
  2104  048C                     	;# 
  2105  048C                     	;# 
  2106  048D                     	;# 
  2107  048E                     	;# 
  2108  048F                     	;# 
  2109  048F                     	;# 
  2110  0490                     	;# 
  2111  0491                     	;# 
  2112  0492                     	;# 
  2113  0492                     	;# 
  2114  0493                     	;# 
  2115  0494                     	;# 
  2116  0495                     	;# 
  2117  0495                     	;# 
  2118  0496                     	;# 
  2119  0497                     	;# 
  2120  0498                     	;# 
  2121  0499                     	;# 
  2122  049A                     	;# 
  2123  049B                     	;# 
  2124  049C                     	;# 
  2125  049D                     	;# 
  2126  058C                     	;# 
  2127  058C                     	;# 
  2128  058D                     	;# 
  2129  058E                     	;# 
  2130  058F                     	;# 
  2131  058F                     	;# 
  2132  0590                     	;# 
  2133  0591                     	;# 
  2134  0592                     	;# 
  2135  0593                     	;# 
  2136  059C                     	;# 
  2137  059C                     	;# 
  2138  059D                     	;# 
  2139  059D                     	;# 
  2140  059E                     	;# 
  2141  059F                     	;# 
  2142  060C                     	;# 
  2143  060C                     	;# 
  2144  060D                     	;# 
  2145  060D                     	;# 
  2146  060E                     	;# 
  2147  060F                     	;# 
  2148  0610                     	;# 
  2149  0611                     	;# 
  2150  0612                     	;# 
  2151  0613                     	;# 
  2152  0614                     	;# 
  2153  0616                     	;# 
  2154  0616                     	;# 
  2155  0617                     	;# 
  2156  0617                     	;# 
  2157  0618                     	;# 
  2158  0619                     	;# 
  2159  061A                     	;# 
  2160  061B                     	;# 
  2161  061C                     	;# 
  2162  061D                     	;# 
  2163  061E                     	;# 
  2164  070C                     	;# 
  2165  070D                     	;# 
  2166  070E                     	;# 
  2167  070F                     	;# 
  2168  0710                     	;# 
  2169  0711                     	;# 
  2170  0712                     	;# 
  2171  0713                     	;# 
  2172  0714                     	;# 
  2173  0716                     	;# 
  2174  0717                     	;# 
  2175  0718                     	;# 
  2176  0719                     	;# 
  2177  071A                     	;# 
  2178  071B                     	;# 
  2179  071C                     	;# 
  2180  071D                     	;# 
  2181  071E                     	;# 
  2182  0796                     	;# 
  2183  0797                     	;# 
  2184  0798                     	;# 
  2185  0799                     	;# 
  2186  079A                     	;# 
  2187  079B                     	;# 
  2188  079C                     	;# 
  2189  079D                     	;# 
  2190  080C                     	;# 
  2191  080D                     	;# 
  2192  080E                     	;# 
  2193  080F                     	;# 
  2194  0810                     	;# 
  2195  0811                     	;# 
  2196  0812                     	;# 
  2197  0813                     	;# 
  2198  0814                     	;# 
  2199  081A                     	;# 
  2200  081A                     	;# 
  2201  081B                     	;# 
  2202  081C                     	;# 
  2203  081C                     	;# 
  2204  081D                     	;# 
  2205  081E                     	;# 
  2206  081F                     	;# 
  2207  088C                     	;# 
  2208  088D                     	;# 
  2209  088E                     	;# 
  2210  088F                     	;# 
  2211  0890                     	;# 
  2212  0891                     	;# 
  2213  0892                     	;# 
  2214  0893                     	;# 
  2215  0895                     	;# 
  2216  0896                     	;# 
  2217  0897                     	;# 
  2218  0898                     	;# 
  2219  0899                     	;# 
  2220  089A                     	;# 
  2221  089B                     	;# 
  2222  090C                     	;# 
  2223  090E                     	;# 
  2224  090F                     	;# 
  2225  091F                     	;# 
  2226  098F                     	;# 
  2227  098F                     	;# 
  2228  0990                     	;# 
  2229  0991                     	;# 
  2230  0992                     	;# 
  2231  0993                     	;# 
  2232  0994                     	;# 
  2233  0995                     	;# 
  2234  0996                     	;# 
  2235  0997                     	;# 
  2236  1E0F                     	;# 
  2237  1E10                     	;# 
  2238  1E11                     	;# 
  2239  1E12                     	;# 
  2240  1E13                     	;# 
  2241  1E14                     	;# 
  2242  1E15                     	;# 
  2243  1E16                     	;# 
  2244  1E17                     	;# 
  2245  1E18                     	;# 
  2246  1E19                     	;# 
  2247  1E1A                     	;# 
  2248  1E1B                     	;# 
  2249  1E1C                     	;# 
  2250  1E1D                     	;# 
  2251  1E1E                     	;# 
  2252  1E1F                     	;# 
  2253  1E20                     	;# 
  2254  1E21                     	;# 
  2255  1E22                     	;# 
  2256  1E23                     	;# 
  2257  1E24                     	;# 
  2258  1E25                     	;# 
  2259  1E26                     	;# 
  2260  1E27                     	;# 
  2261  1E28                     	;# 
  2262  1E29                     	;# 
  2263  1E2A                     	;# 
  2264  1E2B                     	;# 
  2265  1E2C                     	;# 
  2266  1E2D                     	;# 
  2267  1E2E                     	;# 
  2268  1E2F                     	;# 
  2269  1E30                     	;# 
  2270  1E31                     	;# 
  2271  1E32                     	;# 
  2272  1E33                     	;# 
  2273  1E34                     	;# 
  2274  1E35                     	;# 
  2275  1E36                     	;# 
  2276  1E37                     	;# 
  2277  1E8F                     	;# 
  2278  1E90                     	;# 
  2279  1E91                     	;# 
  2280  1E92                     	;# 
  2281  1E93                     	;# 
  2282  1E94                     	;# 
  2283  1E95                     	;# 
  2284  1E96                     	;# 
  2285  1E97                     	;# 
  2286  1E9C                     	;# 
  2287  1E9D                     	;# 
  2288  1E9E                     	;# 
  2289  1EA1                     	;# 
  2290  1EA2                     	;# 
  2291  1EA3                     	;# 
  2292  1EA4                     	;# 
  2293  1EA9                     	;# 
  2294  1EAA                     	;# 
  2295  1EB1                     	;# 
  2296  1EB2                     	;# 
  2297  1EB8                     	;# 
  2298  1EB9                     	;# 
  2299  1EBA                     	;# 
  2300  1EBB                     	;# 
  2301  1EBC                     	;# 
  2302  1EBD                     	;# 
  2303  1EBE                     	;# 
  2304  1EC3                     	;# 
  2305  1EC5                     	;# 
  2306  1EC6                     	;# 
  2307  1EC7                     	;# 
  2308  1EC8                     	;# 
  2309  1EC9                     	;# 
  2310  1ECA                     	;# 
  2311  1ECB                     	;# 
  2312  1ECB                     	;# 
  2313  1ECB                     	;# 
  2314  1ECC                     	;# 
  2315  1ECC                     	;# 
  2316  1ECC                     	;# 
  2317  1F10                     	;# 
  2318  1F11                     	;# 
  2319  1F12                     	;# 
  2320  1F14                     	;# 
  2321  1F15                     	;# 
  2322  1F1C                     	;# 
  2323  1F1D                     	;# 
  2324  1F1E                     	;# 
  2325  1F1F                     	;# 
  2326  1F20                     	;# 
  2327  1F21                     	;# 
  2328  1F22                     	;# 
  2329  1F23                     	;# 
  2330  1F24                     	;# 
  2331  1F25                     	;# 
  2332  1F26                     	;# 
  2333  1F27                     	;# 
  2334  1F38                     	;# 
  2335  1F39                     	;# 
  2336  1F3A                     	;# 
  2337  1F3B                     	;# 
  2338  1F3C                     	;# 
  2339  1F3D                     	;# 
  2340  1F3E                     	;# 
  2341  1F3F                     	;# 
  2342  1F43                     	;# 
  2343  1F44                     	;# 
  2344  1F45                     	;# 
  2345  1F46                     	;# 
  2346  1F47                     	;# 
  2347  1F48                     	;# 
  2348  1F49                     	;# 
  2349  1F4A                     	;# 
  2350  1F4E                     	;# 
  2351  1F4F                     	;# 
  2352  1F50                     	;# 
  2353  1F51                     	;# 
  2354  1F52                     	;# 
  2355  1F53                     	;# 
  2356  1F54                     	;# 
  2357  1F55                     	;# 
  2358  1FE4                     	;# 
  2359  1FE5                     	;# 
  2360  1FE6                     	;# 
  2361  1FE7                     	;# 
  2362  1FE8                     	;# 
  2363  1FE8                     	;# 
  2364  1FE9                     	;# 
  2365  1FEA                     	;# 
  2366  1FEB                     	;# 
  2367  1FED                     	;# 
  2368  1FEE                     	;# 
  2369  1FEF                     	;# 
  2370  0000                     	;# 
  2371  0001                     	;# 
  2372  0002                     	;# 
  2373  0003                     	;# 
  2374  0004                     	;# 
  2375  0005                     	;# 
  2376  0006                     	;# 
  2377  0007                     	;# 
  2378  0008                     	;# 
  2379  0009                     	;# 
  2380  000A                     	;# 
  2381  000B                     	;# 
  2382  000C                     	;# 
  2383  000D                     	;# 
  2384  000E                     	;# 
  2385  0012                     	;# 
  2386  0013                     	;# 
  2387  0014                     	;# 
  2388  0018                     	;# 
  2389  0019                     	;# 
  2390  001A                     	;# 
  2391  008C                     	;# 
  2392  008C                     	;# 
  2393  008D                     	;# 
  2394  008E                     	;# 
  2395  008E                     	;# 
  2396  008F                     	;# 
  2397  0090                     	;# 
  2398  0090                     	;# 
  2399  0091                     	;# 
  2400  0092                     	;# 
  2401  0092                     	;# 
  2402  0093                     	;# 
  2403  0094                     	;# 
  2404  0094                     	;# 
  2405  0095                     	;# 
  2406  0096                     	;# 
  2407  0096                     	;# 
  2408  0097                     	;# 
  2409  0098                     	;# 
  2410  0099                     	;# 
  2411  009A                     	;# 
  2412  009B                     	;# 
  2413  009B                     	;# 
  2414  009C                     	;# 
  2415  009D                     	;# 
  2416  009D                     	;# 
  2417  009E                     	;# 
  2418  009F                     	;# 
  2419  010C                     	;# 
  2420  010C                     	;# 
  2421  010D                     	;# 
  2422  010E                     	;# 
  2423  010F                     	;# 
  2424  010F                     	;# 
  2425  0110                     	;# 
  2426  0111                     	;# 
  2427  0112                     	;# 
  2428  0113                     	;# 
  2429  0114                     	;# 
  2430  0115                     	;# 
  2431  0116                     	;# 
  2432  0117                     	;# 
  2433  0118                     	;# 
  2434  0119                     	;# 
  2435  0119                     	;# 
  2436  0119                     	;# 
  2437  011A                     	;# 
  2438  011A                     	;# 
  2439  011A                     	;# 
  2440  011B                     	;# 
  2441  011B                     	;# 
  2442  011B                     	;# 
  2443  011B                     	;# 
  2444  011B                     	;# 
  2445  011C                     	;# 
  2446  011C                     	;# 
  2447  011C                     	;# 
  2448  011D                     	;# 
  2449  011D                     	;# 
  2450  011D                     	;# 
  2451  011E                     	;# 
  2452  011E                     	;# 
  2453  011E                     	;# 
  2454  011F                     	;# 
  2455  011F                     	;# 
  2456  011F                     	;# 
  2457  011F                     	;# 
  2458  011F                     	;# 
  2459  018C                     	;# 
  2460  018D                     	;# 
  2461  018E                     	;# 
  2462  018F                     	;# 
  2463  0190                     	;# 
  2464  0191                     	;# 
  2465  0192                     	;# 
  2466  0196                     	;# 
  2467  0197                     	;# 
  2468  0198                     	;# 
  2469  0199                     	;# 
  2470  019A                     	;# 
  2471  019B                     	;# 
  2472  019C                     	;# 
  2473  020C                     	;# 
  2474  020D                     	;# 
  2475  020E                     	;# 
  2476  020E                     	;# 
  2477  020F                     	;# 
  2478  020F                     	;# 
  2479  0210                     	;# 
  2480  0210                     	;# 
  2481  0211                     	;# 
  2482  0211                     	;# 
  2483  0212                     	;# 
  2484  0213                     	;# 
  2485  0214                     	;# 
  2486  0214                     	;# 
  2487  0215                     	;# 
  2488  0215                     	;# 
  2489  0216                     	;# 
  2490  0216                     	;# 
  2491  0217                     	;# 
  2492  0217                     	;# 
  2493  0218                     	;# 
  2494  0219                     	;# 
  2495  021A                     	;# 
  2496  021A                     	;# 
  2497  021B                     	;# 
  2498  021B                     	;# 
  2499  021C                     	;# 
  2500  021C                     	;# 
  2501  021D                     	;# 
  2502  021D                     	;# 
  2503  021E                     	;# 
  2504  021F                     	;# 
  2505  028C                     	;# 
  2506  028C                     	;# 
  2507  028D                     	;# 
  2508  028D                     	;# 
  2509  028E                     	;# 
  2510  028F                     	;# 
  2511  0290                     	;# 
  2512  0291                     	;# 
  2513  0292                     	;# 
  2514  0292                     	;# 
  2515  0293                     	;# 
  2516  0293                     	;# 
  2517  0294                     	;# 
  2518  0295                     	;# 
  2519  0296                     	;# 
  2520  0297                     	;# 
  2521  0298                     	;# 
  2522  0298                     	;# 
  2523  0299                     	;# 
  2524  0299                     	;# 
  2525  029A                     	;# 
  2526  029B                     	;# 
  2527  029C                     	;# 
  2528  029D                     	;# 
  2529  029F                     	;# 
  2530  030C                     	;# 
  2531  030C                     	;# 
  2532  030D                     	;# 
  2533  030E                     	;# 
  2534  030F                     	;# 
  2535  0310                     	;# 
  2536  0310                     	;# 
  2537  0311                     	;# 
  2538  0312                     	;# 
  2539  0313                     	;# 
  2540  0314                     	;# 
  2541  0314                     	;# 
  2542  0315                     	;# 
  2543  0316                     	;# 
  2544  0317                     	;# 
  2545  0318                     	;# 
  2546  0318                     	;# 
  2547  0319                     	;# 
  2548  031A                     	;# 
  2549  031B                     	;# 
  2550  038C                     	;# 
  2551  038C                     	;# 
  2552  038D                     	;# 
  2553  038E                     	;# 
  2554  0390                     	;# 
  2555  0390                     	;# 
  2556  0391                     	;# 
  2557  0392                     	;# 
  2558  048C                     	;# 
  2559  048C                     	;# 
  2560  048D                     	;# 
  2561  048E                     	;# 
  2562  048F                     	;# 
  2563  048F                     	;# 
  2564  0490                     	;# 
  2565  0491                     	;# 
  2566  0492                     	;# 
  2567  0492                     	;# 
  2568  0493                     	;# 
  2569  0494                     	;# 
  2570  0495                     	;# 
  2571  0495                     	;# 
  2572  0496                     	;# 
  2573  0497                     	;# 
  2574  0498                     	;# 
  2575  0499                     	;# 
  2576  049A                     	;# 
  2577  049B                     	;# 
  2578  049C                     	;# 
  2579  049D                     	;# 
  2580  058C                     	;# 
  2581  058C                     	;# 
  2582  058D                     	;# 
  2583  058E                     	;# 
  2584  058F                     	;# 
  2585  058F                     	;# 
  2586  0590                     	;# 
  2587  0591                     	;# 
  2588  0592                     	;# 
  2589  0593                     	;# 
  2590  059C                     	;# 
  2591  059C                     	;# 
  2592  059D                     	;# 
  2593  059D                     	;# 
  2594  059E                     	;# 
  2595  059F                     	;# 
  2596  060C                     	;# 
  2597  060C                     	;# 
  2598  060D                     	;# 
  2599  060D                     	;# 
  2600  060E                     	;# 
  2601  060F                     	;# 
  2602  0610                     	;# 
  2603  0611                     	;# 
  2604  0612                     	;# 
  2605  0613                     	;# 
  2606  0614                     	;# 
  2607  0616                     	;# 
  2608  0616                     	;# 
  2609  0617                     	;# 
  2610  0617                     	;# 
  2611  0618                     	;# 
  2612  0619                     	;# 
  2613  061A                     	;# 
  2614  061B                     	;# 
  2615  061C                     	;# 
  2616  061D                     	;# 
  2617  061E                     	;# 
  2618  070C                     	;# 
  2619  070D                     	;# 
  2620  070E                     	;# 
  2621  070F                     	;# 
  2622  0710                     	;# 
  2623  0711                     	;# 
  2624  0712                     	;# 
  2625  0713                     	;# 
  2626  0714                     	;# 
  2627  0716                     	;# 
  2628  0717                     	;# 
  2629  0718                     	;# 
  2630  0719                     	;# 
  2631  071A                     	;# 
  2632  071B                     	;# 
  2633  071C                     	;# 
  2634  071D                     	;# 
  2635  071E                     	;# 
  2636  0796                     	;# 
  2637  0797                     	;# 
  2638  0798                     	;# 
  2639  0799                     	;# 
  2640  079A                     	;# 
  2641  079B                     	;# 
  2642  079C                     	;# 
  2643  079D                     	;# 
  2644  080C                     	;# 
  2645  080D                     	;# 
  2646  080E                     	;# 
  2647  080F                     	;# 
  2648  0810                     	;# 
  2649  0811                     	;# 
  2650  0812                     	;# 
  2651  0813                     	;# 
  2652  0814                     	;# 
  2653  081A                     	;# 
  2654  081A                     	;# 
  2655  081B                     	;# 
  2656  081C                     	;# 
  2657  081C                     	;# 
  2658  081D                     	;# 
  2659  081E                     	;# 
  2660  081F                     	;# 
  2661  088C                     	;# 
  2662  088D                     	;# 
  2663  088E                     	;# 
  2664  088F                     	;# 
  2665  0890                     	;# 
  2666  0891                     	;# 
  2667  0892                     	;# 
  2668  0893                     	;# 
  2669  0895                     	;# 
  2670  0896                     	;# 
  2671  0897                     	;# 
  2672  0898                     	;# 
  2673  0899                     	;# 
  2674  089A                     	;# 
  2675  089B                     	;# 
  2676  090C                     	;# 
  2677  090E                     	;# 
  2678  090F                     	;# 
  2679  091F                     	;# 
  2680  098F                     	;# 
  2681  098F                     	;# 
  2682  0990                     	;# 
  2683  0991                     	;# 
  2684  0992                     	;# 
  2685  0993                     	;# 
  2686  0994                     	;# 
  2687  0995                     	;# 
  2688  0996                     	;# 
  2689  0997                     	;# 
  2690  1E0F                     	;# 
  2691  1E10                     	;# 
  2692  1E11                     	;# 
  2693  1E12                     	;# 
  2694  1E13                     	;# 
  2695  1E14                     	;# 
  2696  1E15                     	;# 
  2697  1E16                     	;# 
  2698  1E17                     	;# 
  2699  1E18                     	;# 
  2700  1E19                     	;# 
  2701  1E1A                     	;# 
  2702  1E1B                     	;# 
  2703  1E1C                     	;# 
  2704  1E1D                     	;# 
  2705  1E1E                     	;# 
  2706  1E1F                     	;# 
  2707  1E20                     	;# 
  2708  1E21                     	;# 
  2709  1E22                     	;# 
  2710  1E23                     	;# 
  2711  1E24                     	;# 
  2712  1E25                     	;# 
  2713  1E26                     	;# 
  2714  1E27                     	;# 
  2715  1E28                     	;# 
  2716  1E29                     	;# 
  2717  1E2A                     	;# 
  2718  1E2B                     	;# 
  2719  1E2C                     	;# 
  2720  1E2D                     	;# 
  2721  1E2E                     	;# 
  2722  1E2F                     	;# 
  2723  1E30                     	;# 
  2724  1E31                     	;# 
  2725  1E32                     	;# 
  2726  1E33                     	;# 
  2727  1E34                     	;# 
  2728  1E35                     	;# 
  2729  1E36                     	;# 
  2730  1E37                     	;# 
  2731  1E8F                     	;# 
  2732  1E90                     	;# 
  2733  1E91                     	;# 
  2734  1E92                     	;# 
  2735  1E93                     	;# 
  2736  1E94                     	;# 
  2737  1E95                     	;# 
  2738  1E96                     	;# 
  2739  1E97                     	;# 
  2740  1E9C                     	;# 
  2741  1E9D                     	;# 
  2742  1E9E                     	;# 
  2743  1EA1                     	;# 
  2744  1EA2                     	;# 
  2745  1EA3                     	;# 
  2746  1EA4                     	;# 
  2747  1EA9                     	;# 
  2748  1EAA                     	;# 
  2749  1EB1                     	;# 
  2750  1EB2                     	;# 
  2751  1EB8                     	;# 
  2752  1EB9                     	;# 
  2753  1EBA                     	;# 
  2754  1EBB                     	;# 
  2755  1EBC                     	;# 
  2756  1EBD                     	;# 
  2757  1EBE                     	;# 
  2758  1EC3                     	;# 
  2759  1EC5                     	;# 
  2760  1EC6                     	;# 
  2761  1EC7                     	;# 
  2762  1EC8                     	;# 
  2763  1EC9                     	;# 
  2764  1ECA                     	;# 
  2765  1ECB                     	;# 
  2766  1ECB                     	;# 
  2767  1ECB                     	;# 
  2768  1ECC                     	;# 
  2769  1ECC                     	;# 
  2770  1ECC                     	;# 
  2771  1F10                     	;# 
  2772  1F11                     	;# 
  2773  1F12                     	;# 
  2774  1F14                     	;# 
  2775  1F15                     	;# 
  2776  1F1C                     	;# 
  2777  1F1D                     	;# 
  2778  1F1E                     	;# 
  2779  1F1F                     	;# 
  2780  1F20                     	;# 
  2781  1F21                     	;# 
  2782  1F22                     	;# 
  2783  1F23                     	;# 
  2784  1F24                     	;# 
  2785  1F25                     	;# 
  2786  1F26                     	;# 
  2787  1F27                     	;# 
  2788  1F38                     	;# 
  2789  1F39                     	;# 
  2790  1F3A                     	;# 
  2791  1F3B                     	;# 
  2792  1F3C                     	;# 
  2793  1F3D                     	;# 
  2794  1F3E                     	;# 
  2795  1F3F                     	;# 
  2796  1F43                     	;# 
  2797  1F44                     	;# 
  2798  1F45                     	;# 
  2799  1F46                     	;# 
  2800  1F47                     	;# 
  2801  1F48                     	;# 
  2802  1F49                     	;# 
  2803  1F4A                     	;# 
  2804  1F4E                     	;# 
  2805  1F4F                     	;# 
  2806  1F50                     	;# 
  2807  1F51                     	;# 
  2808  1F52                     	;# 
  2809  1F53                     	;# 
  2810  1F54                     	;# 
  2811  1F55                     	;# 
  2812  1FE4                     	;# 
  2813  1FE5                     	;# 
  2814  1FE6                     	;# 
  2815  1FE7                     	;# 
  2816  1FE8                     	;# 
  2817  1FE8                     	;# 
  2818  1FE9                     	;# 
  2819  1FEA                     	;# 
  2820  1FEB                     	;# 
  2821  1FED                     	;# 
  2822  1FEE                     	;# 
  2823  1FEF                     	;# 
  2824  0000                     	;# 
  2825  0001                     	;# 
  2826  0002                     	;# 
  2827  0003                     	;# 
  2828  0004                     	;# 
  2829  0005                     	;# 
  2830  0006                     	;# 
  2831  0007                     	;# 
  2832  0008                     	;# 
  2833  0009                     	;# 
  2834  000A                     	;# 
  2835  000B                     	;# 
  2836  000C                     	;# 
  2837  000D                     	;# 
  2838  000E                     	;# 
  2839  0012                     	;# 
  2840  0013                     	;# 
  2841  0014                     	;# 
  2842  0018                     	;# 
  2843  0019                     	;# 
  2844  001A                     	;# 
  2845  008C                     	;# 
  2846  008C                     	;# 
  2847  008D                     	;# 
  2848  008E                     	;# 
  2849  008E                     	;# 
  2850  008F                     	;# 
  2851  0090                     	;# 
  2852  0090                     	;# 
  2853  0091                     	;# 
  2854  0092                     	;# 
  2855  0092                     	;# 
  2856  0093                     	;# 
  2857  0094                     	;# 
  2858  0094                     	;# 
  2859  0095                     	;# 
  2860  0096                     	;# 
  2861  0096                     	;# 
  2862  0097                     	;# 
  2863  0098                     	;# 
  2864  0099                     	;# 
  2865  009A                     	;# 
  2866  009B                     	;# 
  2867  009B                     	;# 
  2868  009C                     	;# 
  2869  009D                     	;# 
  2870  009D                     	;# 
  2871  009E                     	;# 
  2872  009F                     	;# 
  2873  010C                     	;# 
  2874  010C                     	;# 
  2875  010D                     	;# 
  2876  010E                     	;# 
  2877  010F                     	;# 
  2878  010F                     	;# 
  2879  0110                     	;# 
  2880  0111                     	;# 
  2881  0112                     	;# 
  2882  0113                     	;# 
  2883  0114                     	;# 
  2884  0115                     	;# 
  2885  0116                     	;# 
  2886  0117                     	;# 
  2887  0118                     	;# 
  2888  0119                     	;# 
  2889  0119                     	;# 
  2890  0119                     	;# 
  2891  011A                     	;# 
  2892  011A                     	;# 
  2893  011A                     	;# 
  2894  011B                     	;# 
  2895  011B                     	;# 
  2896  011B                     	;# 
  2897  011B                     	;# 
  2898  011B                     	;# 
  2899  011C                     	;# 
  2900  011C                     	;# 
  2901  011C                     	;# 
  2902  011D                     	;# 
  2903  011D                     	;# 
  2904  011D                     	;# 
  2905  011E                     	;# 
  2906  011E                     	;# 
  2907  011E                     	;# 
  2908  011F                     	;# 
  2909  011F                     	;# 
  2910  011F                     	;# 
  2911  011F                     	;# 
  2912  011F                     	;# 
  2913  018C                     	;# 
  2914  018D                     	;# 
  2915  018E                     	;# 
  2916  018F                     	;# 
  2917  0190                     	;# 
  2918  0191                     	;# 
  2919  0192                     	;# 
  2920  0196                     	;# 
  2921  0197                     	;# 
  2922  0198                     	;# 
  2923  0199                     	;# 
  2924  019A                     	;# 
  2925  019B                     	;# 
  2926  019C                     	;# 
  2927  020C                     	;# 
  2928  020D                     	;# 
  2929  020E                     	;# 
  2930  020E                     	;# 
  2931  020F                     	;# 
  2932  020F                     	;# 
  2933  0210                     	;# 
  2934  0210                     	;# 
  2935  0211                     	;# 
  2936  0211                     	;# 
  2937  0212                     	;# 
  2938  0213                     	;# 
  2939  0214                     	;# 
  2940  0214                     	;# 
  2941  0215                     	;# 
  2942  0215                     	;# 
  2943  0216                     	;# 
  2944  0216                     	;# 
  2945  0217                     	;# 
  2946  0217                     	;# 
  2947  0218                     	;# 
  2948  0219                     	;# 
  2949  021A                     	;# 
  2950  021A                     	;# 
  2951  021B                     	;# 
  2952  021B                     	;# 
  2953  021C                     	;# 
  2954  021C                     	;# 
  2955  021D                     	;# 
  2956  021D                     	;# 
  2957  021E                     	;# 
  2958  021F                     	;# 
  2959  028C                     	;# 
  2960  028C                     	;# 
  2961  028D                     	;# 
  2962  028D                     	;# 
  2963  028E                     	;# 
  2964  028F                     	;# 
  2965  0290                     	;# 
  2966  0291                     	;# 
  2967  0292                     	;# 
  2968  0292                     	;# 
  2969  0293                     	;# 
  2970  0293                     	;# 
  2971  0294                     	;# 
  2972  0295                     	;# 
  2973  0296                     	;# 
  2974  0297                     	;# 
  2975  0298                     	;# 
  2976  0298                     	;# 
  2977  0299                     	;# 
  2978  0299                     	;# 
  2979  029A                     	;# 
  2980  029B                     	;# 
  2981  029C                     	;# 
  2982  029D                     	;# 
  2983  029F                     	;# 
  2984  030C                     	;# 
  2985  030C                     	;# 
  2986  030D                     	;# 
  2987  030E                     	;# 
  2988  030F                     	;# 
  2989  0310                     	;# 
  2990  0310                     	;# 
  2991  0311                     	;# 
  2992  0312                     	;# 
  2993  0313                     	;# 
  2994  0314                     	;# 
  2995  0314                     	;# 
  2996  0315                     	;# 
  2997  0316                     	;# 
  2998  0317                     	;# 
  2999  0318                     	;# 
  3000  0318                     	;# 
  3001  0319                     	;# 
  3002  031A                     	;# 
  3003  031B                     	;# 
  3004  038C                     	;# 
  3005  038C                     	;# 
  3006  038D                     	;# 
  3007  038E                     	;# 
  3008  0390                     	;# 
  3009  0390                     	;# 
  3010  0391                     	;# 
  3011  0392                     	;# 
  3012  048C                     	;# 
  3013  048C                     	;# 
  3014  048D                     	;# 
  3015  048E                     	;# 
  3016  048F                     	;# 
  3017  048F                     	;# 
  3018  0490                     	;# 
  3019  0491                     	;# 
  3020  0492                     	;# 
  3021  0492                     	;# 
  3022  0493                     	;# 
  3023  0494                     	;# 
  3024  0495                     	;# 
  3025  0495                     	;# 
  3026  0496                     	;# 
  3027  0497                     	;# 
  3028  0498                     	;# 
  3029  0499                     	;# 
  3030  049A                     	;# 
  3031  049B                     	;# 
  3032  049C                     	;# 
  3033  049D                     	;# 
  3034  058C                     	;# 
  3035  058C                     	;# 
  3036  058D                     	;# 
  3037  058E                     	;# 
  3038  058F                     	;# 
  3039  058F                     	;# 
  3040  0590                     	;# 
  3041  0591                     	;# 
  3042  0592                     	;# 
  3043  0593                     	;# 
  3044  059C                     	;# 
  3045  059C                     	;# 
  3046  059D                     	;# 
  3047  059D                     	;# 
  3048  059E                     	;# 
  3049  059F                     	;# 
  3050  060C                     	;# 
  3051  060C                     	;# 
  3052  060D                     	;# 
  3053  060D                     	;# 
  3054  060E                     	;# 
  3055  060F                     	;# 
  3056  0610                     	;# 
  3057  0611                     	;# 
  3058  0612                     	;# 
  3059  0613                     	;# 
  3060  0614                     	;# 
  3061  0616                     	;# 
  3062  0616                     	;# 
  3063  0617                     	;# 
  3064  0617                     	;# 
  3065  0618                     	;# 
  3066  0619                     	;# 
  3067  061A                     	;# 
  3068  061B                     	;# 
  3069  061C                     	;# 
  3070  061D                     	;# 
  3071  061E                     	;# 
  3072  070C                     	;# 
  3073  070D                     	;# 
  3074  070E                     	;# 
  3075  070F                     	;# 
  3076  0710                     	;# 
  3077  0711                     	;# 
  3078  0712                     	;# 
  3079  0713                     	;# 
  3080  0714                     	;# 
  3081  0716                     	;# 
  3082  0717                     	;# 
  3083  0718                     	;# 
  3084  0719                     	;# 
  3085  071A                     	;# 
  3086  071B                     	;# 
  3087  071C                     	;# 
  3088  071D                     	;# 
  3089  071E                     	;# 
  3090  0796                     	;# 
  3091  0797                     	;# 
  3092  0798                     	;# 
  3093  0799                     	;# 
  3094  079A                     	;# 
  3095  079B                     	;# 
  3096  079C                     	;# 
  3097  079D                     	;# 
  3098  080C                     	;# 
  3099  080D                     	;# 
  3100  080E                     	;# 
  3101  080F                     	;# 
  3102  0810                     	;# 
  3103  0811                     	;# 
  3104  0812                     	;# 
  3105  0813                     	;# 
  3106  0814                     	;# 
  3107  081A                     	;# 
  3108  081A                     	;# 
  3109  081B                     	;# 
  3110  081C                     	;# 
  3111  081C                     	;# 
  3112  081D                     	;# 
  3113  081E                     	;# 
  3114  081F                     	;# 
  3115  088C                     	;# 
  3116  088D                     	;# 
  3117  088E                     	;# 
  3118  088F                     	;# 
  3119  0890                     	;# 
  3120  0891                     	;# 
  3121  0892                     	;# 
  3122  0893                     	;# 
  3123  0895                     	;# 
  3124  0896                     	;# 
  3125  0897                     	;# 
  3126  0898                     	;# 
  3127  0899                     	;# 
  3128  089A                     	;# 
  3129  089B                     	;# 
  3130  090C                     	;# 
  3131  090E                     	;# 
  3132  090F                     	;# 
  3133  091F                     	;# 
  3134  098F                     	;# 
  3135  098F                     	;# 
  3136  0990                     	;# 
  3137  0991                     	;# 
  3138  0992                     	;# 
  3139  0993                     	;# 
  3140  0994                     	;# 
  3141  0995                     	;# 
  3142  0996                     	;# 
  3143  0997                     	;# 
  3144  1E0F                     	;# 
  3145  1E10                     	;# 
  3146  1E11                     	;# 
  3147  1E12                     	;# 
  3148  1E13                     	;# 
  3149  1E14                     	;# 
  3150  1E15                     	;# 
  3151  1E16                     	;# 
  3152  1E17                     	;# 
  3153  1E18                     	;# 
  3154  1E19                     	;# 
  3155  1E1A                     	;# 
  3156  1E1B                     	;# 
  3157  1E1C                     	;# 
  3158  1E1D                     	;# 
  3159  1E1E                     	;# 
  3160  1E1F                     	;# 
  3161  1E20                     	;# 
  3162  1E21                     	;# 
  3163  1E22                     	;# 
  3164  1E23                     	;# 
  3165  1E24                     	;# 
  3166  1E25                     	;# 
  3167  1E26                     	;# 
  3168  1E27                     	;# 
  3169  1E28                     	;# 
  3170  1E29                     	;# 
  3171  1E2A                     	;# 
  3172  1E2B                     	;# 
  3173  1E2C                     	;# 
  3174  1E2D                     	;# 
  3175  1E2E                     	;# 
  3176  1E2F                     	;# 
  3177  1E30                     	;# 
  3178  1E31                     	;# 
  3179  1E32                     	;# 
  3180  1E33                     	;# 
  3181  1E34                     	;# 
  3182  1E35                     	;# 
  3183  1E36                     	;# 
  3184  1E37                     	;# 
  3185  1E8F                     	;# 
  3186  1E90                     	;# 
  3187  1E91                     	;# 
  3188  1E92                     	;# 
  3189  1E93                     	;# 
  3190  1E94                     	;# 
  3191  1E95                     	;# 
  3192  1E96                     	;# 
  3193  1E97                     	;# 
  3194  1E9C                     	;# 
  3195  1E9D                     	;# 
  3196  1E9E                     	;# 
  3197  1EA1                     	;# 
  3198  1EA2                     	;# 
  3199  1EA3                     	;# 
  3200  1EA4                     	;# 
  3201  1EA9                     	;# 
  3202  1EAA                     	;# 
  3203  1EB1                     	;# 
  3204  1EB2                     	;# 
  3205  1EB8                     	;# 
  3206  1EB9                     	;# 
  3207  1EBA                     	;# 
  3208  1EBB                     	;# 
  3209  1EBC                     	;# 
  3210  1EBD                     	;# 
  3211  1EBE                     	;# 
  3212  1EC3                     	;# 
  3213  1EC5                     	;# 
  3214  1EC6                     	;# 
  3215  1EC7                     	;# 
  3216  1EC8                     	;# 
  3217  1EC9                     	;# 
  3218  1ECA                     	;# 
  3219  1ECB                     	;# 
  3220  1ECB                     	;# 
  3221  1ECB                     	;# 
  3222  1ECC                     	;# 
  3223  1ECC                     	;# 
  3224  1ECC                     	;# 
  3225  1F10                     	;# 
  3226  1F11                     	;# 
  3227  1F12                     	;# 
  3228  1F14                     	;# 
  3229  1F15                     	;# 
  3230  1F1C                     	;# 
  3231  1F1D                     	;# 
  3232  1F1E                     	;# 
  3233  1F1F                     	;# 
  3234  1F20                     	;# 
  3235  1F21                     	;# 
  3236  1F22                     	;# 
  3237  1F23                     	;# 
  3238  1F24                     	;# 
  3239  1F25                     	;# 
  3240  1F26                     	;# 
  3241  1F27                     	;# 
  3242  1F38                     	;# 
  3243  1F39                     	;# 
  3244  1F3A                     	;# 
  3245  1F3B                     	;# 
  3246  1F3C                     	;# 
  3247  1F3D                     	;# 
  3248  1F3E                     	;# 
  3249  1F3F                     	;# 
  3250  1F43                     	;# 
  3251  1F44                     	;# 
  3252  1F45                     	;# 
  3253  1F46                     	;# 
  3254  1F47                     	;# 
  3255  1F48                     	;# 
  3256  1F49                     	;# 
  3257  1F4A                     	;# 
  3258  1F4E                     	;# 
  3259  1F4F                     	;# 
  3260  1F50                     	;# 
  3261  1F51                     	;# 
  3262  1F52                     	;# 
  3263  1F53                     	;# 
  3264  1F54                     	;# 
  3265  1F55                     	;# 
  3266  1FE4                     	;# 
  3267  1FE5                     	;# 
  3268  1FE6                     	;# 
  3269  1FE7                     	;# 
  3270  1FE8                     	;# 
  3271  1FE8                     	;# 
  3272  1FE9                     	;# 
  3273  1FEA                     	;# 
  3274  1FEB                     	;# 
  3275  1FED                     	;# 
  3276  1FEE                     	;# 
  3277  1FEF                     	;# 
  3278  0000                     	;# 
  3279  0001                     	;# 
  3280  0002                     	;# 
  3281  0003                     	;# 
  3282  0004                     	;# 
  3283  0005                     	;# 
  3284  0006                     	;# 
  3285  0007                     	;# 
  3286  0008                     	;# 
  3287  0009                     	;# 
  3288  000A                     	;# 
  3289  000B                     	;# 
  3290  000C                     	;# 
  3291  000D                     	;# 
  3292  000E                     	;# 
  3293  0012                     	;# 
  3294  0013                     	;# 
  3295  0014                     	;# 
  3296  0018                     	;# 
  3297  0019                     	;# 
  3298  001A                     	;# 
  3299  008C                     	;# 
  3300  008C                     	;# 
  3301  008D                     	;# 
  3302  008E                     	;# 
  3303  008E                     	;# 
  3304  008F                     	;# 
  3305  0090                     	;# 
  3306  0090                     	;# 
  3307  0091                     	;# 
  3308  0092                     	;# 
  3309  0092                     	;# 
  3310  0093                     	;# 
  3311  0094                     	;# 
  3312  0094                     	;# 
  3313  0095                     	;# 
  3314  0096                     	;# 
  3315  0096                     	;# 
  3316  0097                     	;# 
  3317  0098                     	;# 
  3318  0099                     	;# 
  3319  009A                     	;# 
  3320  009B                     	;# 
  3321  009B                     	;# 
  3322  009C                     	;# 
  3323  009D                     	;# 
  3324  009D                     	;# 
  3325  009E                     	;# 
  3326  009F                     	;# 
  3327  010C                     	;# 
  3328  010C                     	;# 
  3329  010D                     	;# 
  3330  010E                     	;# 
  3331  010F                     	;# 
  3332  010F                     	;# 
  3333  0110                     	;# 
  3334  0111                     	;# 
  3335  0112                     	;# 
  3336  0113                     	;# 
  3337  0114                     	;# 
  3338  0115                     	;# 
  3339  0116                     	;# 
  3340  0117                     	;# 
  3341  0118                     	;# 
  3342  0119                     	;# 
  3343  0119                     	;# 
  3344  0119                     	;# 
  3345  011A                     	;# 
  3346  011A                     	;# 
  3347  011A                     	;# 
  3348  011B                     	;# 
  3349  011B                     	;# 
  3350  011B                     	;# 
  3351  011B                     	;# 
  3352  011B                     	;# 
  3353  011C                     	;# 
  3354  011C                     	;# 
  3355  011C                     	;# 
  3356  011D                     	;# 
  3357  011D                     	;# 
  3358  011D                     	;# 
  3359  011E                     	;# 
  3360  011E                     	;# 
  3361  011E                     	;# 
  3362  011F                     	;# 
  3363  011F                     	;# 
  3364  011F                     	;# 
  3365  011F                     	;# 
  3366  011F                     	;# 
  3367  018C                     	;# 
  3368  018D                     	;# 
  3369  018E                     	;# 
  3370  018F                     	;# 
  3371  0190                     	;# 
  3372  0191                     	;# 
  3373  0192                     	;# 
  3374  0196                     	;# 
  3375  0197                     	;# 
  3376  0198                     	;# 
  3377  0199                     	;# 
  3378  019A                     	;# 
  3379  019B                     	;# 
  3380  019C                     	;# 
  3381  020C                     	;# 
  3382  020D                     	;# 
  3383  020E                     	;# 
  3384  020E                     	;# 
  3385  020F                     	;# 
  3386  020F                     	;# 
  3387  0210                     	;# 
  3388  0210                     	;# 
  3389  0211                     	;# 
  3390  0211                     	;# 
  3391  0212                     	;# 
  3392  0213                     	;# 
  3393  0214                     	;# 
  3394  0214                     	;# 
  3395  0215                     	;# 
  3396  0215                     	;# 
  3397  0216                     	;# 
  3398  0216                     	;# 
  3399  0217                     	;# 
  3400  0217                     	;# 
  3401  0218                     	;# 
  3402  0219                     	;# 
  3403  021A                     	;# 
  3404  021A                     	;# 
  3405  021B                     	;# 
  3406  021B                     	;# 
  3407  021C                     	;# 
  3408  021C                     	;# 
  3409  021D                     	;# 
  3410  021D                     	;# 
  3411  021E                     	;# 
  3412  021F                     	;# 
  3413  028C                     	;# 
  3414  028C                     	;# 
  3415  028D                     	;# 
  3416  028D                     	;# 
  3417  028E                     	;# 
  3418  028F                     	;# 
  3419  0290                     	;# 
  3420  0291                     	;# 
  3421  0292                     	;# 
  3422  0292                     	;# 
  3423  0293                     	;# 
  3424  0293                     	;# 
  3425  0294                     	;# 
  3426  0295                     	;# 
  3427  0296                     	;# 
  3428  0297                     	;# 
  3429  0298                     	;# 
  3430  0298                     	;# 
  3431  0299                     	;# 
  3432  0299                     	;# 
  3433  029A                     	;# 
  3434  029B                     	;# 
  3435  029C                     	;# 
  3436  029D                     	;# 
  3437  029F                     	;# 
  3438  030C                     	;# 
  3439  030C                     	;# 
  3440  030D                     	;# 
  3441  030E                     	;# 
  3442  030F                     	;# 
  3443  0310                     	;# 
  3444  0310                     	;# 
  3445  0311                     	;# 
  3446  0312                     	;# 
  3447  0313                     	;# 
  3448  0314                     	;# 
  3449  0314                     	;# 
  3450  0315                     	;# 
  3451  0316                     	;# 
  3452  0317                     	;# 
  3453  0318                     	;# 
  3454  0318                     	;# 
  3455  0319                     	;# 
  3456  031A                     	;# 
  3457  031B                     	;# 
  3458  038C                     	;# 
  3459  038C                     	;# 
  3460  038D                     	;# 
  3461  038E                     	;# 
  3462  0390                     	;# 
  3463  0390                     	;# 
  3464  0391                     	;# 
  3465  0392                     	;# 
  3466  048C                     	;# 
  3467  048C                     	;# 
  3468  048D                     	;# 
  3469  048E                     	;# 
  3470  048F                     	;# 
  3471  048F                     	;# 
  3472  0490                     	;# 
  3473  0491                     	;# 
  3474  0492                     	;# 
  3475  0492                     	;# 
  3476  0493                     	;# 
  3477  0494                     	;# 
  3478  0495                     	;# 
  3479  0495                     	;# 
  3480  0496                     	;# 
  3481  0497                     	;# 
  3482  0498                     	;# 
  3483  0499                     	;# 
  3484  049A                     	;# 
  3485  049B                     	;# 
  3486  049C                     	;# 
  3487  049D                     	;# 
  3488  058C                     	;# 
  3489  058C                     	;# 
  3490  058D                     	;# 
  3491  058E                     	;# 
  3492  058F                     	;# 
  3493  058F                     	;# 
  3494  0590                     	;# 
  3495  0591                     	;# 
  3496  0592                     	;# 
  3497  0593                     	;# 
  3498  059C                     	;# 
  3499  059C                     	;# 
  3500  059D                     	;# 
  3501  059D                     	;# 
  3502  059E                     	;# 
  3503  059F                     	;# 
  3504  060C                     	;# 
  3505  060C                     	;# 
  3506  060D                     	;# 
  3507  060D                     	;# 
  3508  060E                     	;# 
  3509  060F                     	;# 
  3510  0610                     	;# 
  3511  0611                     	;# 
  3512  0612                     	;# 
  3513  0613                     	;# 
  3514  0614                     	;# 
  3515  0616                     	;# 
  3516  0616                     	;# 
  3517  0617                     	;# 
  3518  0617                     	;# 
  3519  0618                     	;# 
  3520  0619                     	;# 
  3521  061A                     	;# 
  3522  061B                     	;# 
  3523  061C                     	;# 
  3524  061D                     	;# 
  3525  061E                     	;# 
  3526  070C                     	;# 
  3527  070D                     	;# 
  3528  070E                     	;# 
  3529  070F                     	;# 
  3530  0710                     	;# 
  3531  0711                     	;# 
  3532  0712                     	;# 
  3533  0713                     	;# 
  3534  0714                     	;# 
  3535  0716                     	;# 
  3536  0717                     	;# 
  3537  0718                     	;# 
  3538  0719                     	;# 
  3539  071A                     	;# 
  3540  071B                     	;# 
  3541  071C                     	;# 
  3542  071D                     	;# 
  3543  071E                     	;# 
  3544  0796                     	;# 
  3545  0797                     	;# 
  3546  0798                     	;# 
  3547  0799                     	;# 
  3548  079A                     	;# 
  3549  079B                     	;# 
  3550  079C                     	;# 
  3551  079D                     	;# 
  3552  080C                     	;# 
  3553  080D                     	;# 
  3554  080E                     	;# 
  3555  080F                     	;# 
  3556  0810                     	;# 
  3557  0811                     	;# 
  3558  0812                     	;# 
  3559  0813                     	;# 
  3560  0814                     	;# 
  3561  081A                     	;# 
  3562  081A                     	;# 
  3563  081B                     	;# 
  3564  081C                     	;# 
  3565  081C                     	;# 
  3566  081D                     	;# 
  3567  081E                     	;# 
  3568  081F                     	;# 
  3569  088C                     	;# 
  3570  088D                     	;# 
  3571  088E                     	;# 
  3572  088F                     	;# 
  3573  0890                     	;# 
  3574  0891                     	;# 
  3575  0892                     	;# 
  3576  0893                     	;# 
  3577  0895                     	;# 
  3578  0896                     	;# 
  3579  0897                     	;# 
  3580  0898                     	;# 
  3581  0899                     	;# 
  3582  089A                     	;# 
  3583  089B                     	;# 
  3584  090C                     	;# 
  3585  090E                     	;# 
  3586  090F                     	;# 
  3587  091F                     	;# 
  3588  098F                     	;# 
  3589  098F                     	;# 
  3590  0990                     	;# 
  3591  0991                     	;# 
  3592  0992                     	;# 
  3593  0993                     	;# 
  3594  0994                     	;# 
  3595  0995                     	;# 
  3596  0996                     	;# 
  3597  0997                     	;# 
  3598  1E0F                     	;# 
  3599  1E10                     	;# 
  3600  1E11                     	;# 
  3601  1E12                     	;# 
  3602  1E13                     	;# 
  3603  1E14                     	;# 
  3604  1E15                     	;# 
  3605  1E16                     	;# 
  3606  1E17                     	;# 
  3607  1E18                     	;# 
  3608  1E19                     	;# 
  3609  1E1A                     	;# 
  3610  1E1B                     	;# 
  3611  1E1C                     	;# 
  3612  1E1D                     	;# 
  3613  1E1E                     	;# 
  3614  1E1F                     	;# 
  3615  1E20                     	;# 
  3616  1E21                     	;# 
  3617  1E22                     	;# 
  3618  1E23                     	;# 
  3619  1E24                     	;# 
  3620  1E25                     	;# 
  3621  1E26                     	;# 
  3622  1E27                     	;# 
  3623  1E28                     	;# 
  3624  1E29                     	;# 
  3625  1E2A                     	;# 
  3626  1E2B                     	;# 
  3627  1E2C                     	;# 
  3628  1E2D                     	;# 
  3629  1E2E                     	;# 
  3630  1E2F                     	;# 
  3631  1E30                     	;# 
  3632  1E31                     	;# 
  3633  1E32                     	;# 
  3634  1E33                     	;# 
  3635  1E34                     	;# 
  3636  1E35                     	;# 
  3637  1E36                     	;# 
  3638  1E37                     	;# 
  3639  1E8F                     	;# 
  3640  1E90                     	;# 
  3641  1E91                     	;# 
  3642  1E92                     	;# 
  3643  1E93                     	;# 
  3644  1E94                     	;# 
  3645  1E95                     	;# 
  3646  1E96                     	;# 
  3647  1E97                     	;# 
  3648  1E9C                     	;# 
  3649  1E9D                     	;# 
  3650  1E9E                     	;# 
  3651  1EA1                     	;# 
  3652  1EA2                     	;# 
  3653  1EA3                     	;# 
  3654  1EA4                     	;# 
  3655  1EA9                     	;# 
  3656  1EAA                     	;# 
  3657  1EB1                     	;# 
  3658  1EB2                     	;# 
  3659  1EB8                     	;# 
  3660  1EB9                     	;# 
  3661  1EBA                     	;# 
  3662  1EBB                     	;# 
  3663  1EBC                     	;# 
  3664  1EBD                     	;# 
  3665  1EBE                     	;# 
  3666  1EC3                     	;# 
  3667  1EC5                     	;# 
  3668  1EC6                     	;# 
  3669  1EC7                     	;# 
  3670  1EC8                     	;# 
  3671  1EC9                     	;# 
  3672  1ECA                     	;# 
  3673  1ECB                     	;# 
  3674  1ECB                     	;# 
  3675  1ECB                     	;# 
  3676  1ECC                     	;# 
  3677  1ECC                     	;# 
  3678  1ECC                     	;# 
  3679  1F10                     	;# 
  3680  1F11                     	;# 
  3681  1F12                     	;# 
  3682  1F14                     	;# 
  3683  1F15                     	;# 
  3684  1F1C                     	;# 
  3685  1F1D                     	;# 
  3686  1F1E                     	;# 
  3687  1F1F                     	;# 
  3688  1F20                     	;# 
  3689  1F21                     	;# 
  3690  1F22                     	;# 
  3691  1F23                     	;# 
  3692  1F24                     	;# 
  3693  1F25                     	;# 
  3694  1F26                     	;# 
  3695  1F27                     	;# 
  3696  1F38                     	;# 
  3697  1F39                     	;# 
  3698  1F3A                     	;# 
  3699  1F3B                     	;# 
  3700  1F3C                     	;# 
  3701  1F3D                     	;# 
  3702  1F3E                     	;# 
  3703  1F3F                     	;# 
  3704  1F43                     	;# 
  3705  1F44                     	;# 
  3706  1F45                     	;# 
  3707  1F46                     	;# 
  3708  1F47                     	;# 
  3709  1F48                     	;# 
  3710  1F49                     	;# 
  3711  1F4A                     	;# 
  3712  1F4E                     	;# 
  3713  1F4F                     	;# 
  3714  1F50                     	;# 
  3715  1F51                     	;# 
  3716  1F52                     	;# 
  3717  1F53                     	;# 
  3718  1F54                     	;# 
  3719  1F55                     	;# 
  3720  1FE4                     	;# 
  3721  1FE5                     	;# 
  3722  1FE6                     	;# 
  3723  1FE7                     	;# 
  3724  1FE8                     	;# 
  3725  1FE8                     	;# 
  3726  1FE9                     	;# 
  3727  1FEA                     	;# 
  3728  1FEB                     	;# 
  3729  1FED                     	;# 
  3730  1FEE                     	;# 
  3731  1FEF                     	;# 
  3732  0000                     	;# 
  3733  0001                     	;# 
  3734  0002                     	;# 
  3735  0003                     	;# 
  3736  0004                     	;# 
  3737  0005                     	;# 
  3738  0006                     	;# 
  3739  0007                     	;# 
  3740  0008                     	;# 
  3741  0009                     	;# 
  3742  000A                     	;# 
  3743  000B                     	;# 
  3744  000C                     	;# 
  3745  000D                     	;# 
  3746  000E                     	;# 
  3747  0012                     	;# 
  3748  0013                     	;# 
  3749  0014                     	;# 
  3750  0018                     	;# 
  3751  0019                     	;# 
  3752  001A                     	;# 
  3753  008C                     	;# 
  3754  008C                     	;# 
  3755  008D                     	;# 
  3756  008E                     	;# 
  3757  008E                     	;# 
  3758  008F                     	;# 
  3759  0090                     	;# 
  3760  0090                     	;# 
  3761  0091                     	;# 
  3762  0092                     	;# 
  3763  0092                     	;# 
  3764  0093                     	;# 
  3765  0094                     	;# 
  3766  0094                     	;# 
  3767  0095                     	;# 
  3768  0096                     	;# 
  3769  0096                     	;# 
  3770  0097                     	;# 
  3771  0098                     	;# 
  3772  0099                     	;# 
  3773  009A                     	;# 
  3774  009B                     	;# 
  3775  009B                     	;# 
  3776  009C                     	;# 
  3777  009D                     	;# 
  3778  009D                     	;# 
  3779  009E                     	;# 
  3780  009F                     	;# 
  3781  010C                     	;# 
  3782  010C                     	;# 
  3783  010D                     	;# 
  3784  010E                     	;# 
  3785  010F                     	;# 
  3786  010F                     	;# 
  3787  0110                     	;# 
  3788  0111                     	;# 
  3789  0112                     	;# 
  3790  0113                     	;# 
  3791  0114                     	;# 
  3792  0115                     	;# 
  3793  0116                     	;# 
  3794  0117                     	;# 
  3795  0118                     	;# 
  3796  0119                     	;# 
  3797  0119                     	;# 
  3798  0119                     	;# 
  3799  011A                     	;# 
  3800  011A                     	;# 
  3801  011A                     	;# 
  3802  011B                     	;# 
  3803  011B                     	;# 
  3804  011B                     	;# 
  3805  011B                     	;# 
  3806  011B                     	;# 
  3807  011C                     	;# 
  3808  011C                     	;# 
  3809  011C                     	;# 
  3810  011D                     	;# 
  3811  011D                     	;# 
  3812  011D                     	;# 
  3813  011E                     	;# 
  3814  011E                     	;# 
  3815  011E                     	;# 
  3816  011F                     	;# 
  3817  011F                     	;# 
  3818  011F                     	;# 
  3819  011F                     	;# 
  3820  011F                     	;# 
  3821  018C                     	;# 
  3822  018D                     	;# 
  3823  018E                     	;# 
  3824  018F                     	;# 
  3825  0190                     	;# 
  3826  0191                     	;# 
  3827  0192                     	;# 
  3828  0196                     	;# 
  3829  0197                     	;# 
  3830  0198                     	;# 
  3831  0199                     	;# 
  3832  019A                     	;# 
  3833  019B                     	;# 
  3834  019C                     	;# 
  3835  020C                     	;# 
  3836  020D                     	;# 
  3837  020E                     	;# 
  3838  020E                     	;# 
  3839  020F                     	;# 
  3840  020F                     	;# 
  3841  0210                     	;# 
  3842  0210                     	;# 
  3843  0211                     	;# 
  3844  0211                     	;# 
  3845  0212                     	;# 
  3846  0213                     	;# 
  3847  0214                     	;# 
  3848  0214                     	;# 
  3849  0215                     	;# 
  3850  0215                     	;# 
  3851  0216                     	;# 
  3852  0216                     	;# 
  3853  0217                     	;# 
  3854  0217                     	;# 
  3855  0218                     	;# 
  3856  0219                     	;# 
  3857  021A                     	;# 
  3858  021A                     	;# 
  3859  021B                     	;# 
  3860  021B                     	;# 
  3861  021C                     	;# 
  3862  021C                     	;# 
  3863  021D                     	;# 
  3864  021D                     	;# 
  3865  021E                     	;# 
  3866  021F                     	;# 
  3867  028C                     	;# 
  3868  028C                     	;# 
  3869  028D                     	;# 
  3870  028D                     	;# 
  3871  028E                     	;# 
  3872  028F                     	;# 
  3873  0290                     	;# 
  3874  0291                     	;# 
  3875  0292                     	;# 
  3876  0292                     	;# 
  3877  0293                     	;# 
  3878  0293                     	;# 
  3879  0294                     	;# 
  3880  0295                     	;# 
  3881  0296                     	;# 
  3882  0297                     	;# 
  3883  0298                     	;# 
  3884  0298                     	;# 
  3885  0299                     	;# 
  3886  0299                     	;# 
  3887  029A                     	;# 
  3888  029B                     	;# 
  3889  029C                     	;# 
  3890  029D                     	;# 
  3891  029F                     	;# 
  3892  030C                     	;# 
  3893  030C                     	;# 
  3894  030D                     	;# 
  3895  030E                     	;# 
  3896  030F                     	;# 
  3897  0310                     	;# 
  3898  0310                     	;# 
  3899  0311                     	;# 
  3900  0312                     	;# 
  3901  0313                     	;# 
  3902  0314                     	;# 
  3903  0314                     	;# 
  3904  0315                     	;# 
  3905  0316                     	;# 
  3906  0317                     	;# 
  3907  0318                     	;# 
  3908  0318                     	;# 
  3909  0319                     	;# 
  3910  031A                     	;# 
  3911  031B                     	;# 
  3912  038C                     	;# 
  3913  038C                     	;# 
  3914  038D                     	;# 
  3915  038E                     	;# 
  3916  0390                     	;# 
  3917  0390                     	;# 
  3918  0391                     	;# 
  3919  0392                     	;# 
  3920  048C                     	;# 
  3921  048C                     	;# 
  3922  048D                     	;# 
  3923  048E                     	;# 
  3924  048F                     	;# 
  3925  048F                     	;# 
  3926  0490                     	;# 
  3927  0491                     	;# 
  3928  0492                     	;# 
  3929  0492                     	;# 
  3930  0493                     	;# 
  3931  0494                     	;# 
  3932  0495                     	;# 
  3933  0495                     	;# 
  3934  0496                     	;# 
  3935  0497                     	;# 
  3936  0498                     	;# 
  3937  0499                     	;# 
  3938  049A                     	;# 
  3939  049B                     	;# 
  3940  049C                     	;# 
  3941  049D                     	;# 
  3942  058C                     	;# 
  3943  058C                     	;# 
  3944  058D                     	;# 
  3945  058E                     	;# 
  3946  058F                     	;# 
  3947  058F                     	;# 
  3948  0590                     	;# 
  3949  0591                     	;# 
  3950  0592                     	;# 
  3951  0593                     	;# 
  3952  059C                     	;# 
  3953  059C                     	;# 
  3954  059D                     	;# 
  3955  059D                     	;# 
  3956  059E                     	;# 
  3957  059F                     	;# 
  3958  060C                     	;# 
  3959  060C                     	;# 
  3960  060D                     	;# 
  3961  060D                     	;# 
  3962  060E                     	;# 
  3963  060F                     	;# 
  3964  0610                     	;# 
  3965  0611                     	;# 
  3966  0612                     	;# 
  3967  0613                     	;# 
  3968  0614                     	;# 
  3969  0616                     	;# 
  3970  0616                     	;# 
  3971  0617                     	;# 
  3972  0617                     	;# 
  3973  0618                     	;# 
  3974  0619                     	;# 
  3975  061A                     	;# 
  3976  061B                     	;# 
  3977  061C                     	;# 
  3978  061D                     	;# 
  3979  061E                     	;# 
  3980  070C                     	;# 
  3981  070D                     	;# 
  3982  070E                     	;# 
  3983  070F                     	;# 
  3984  0710                     	;# 
  3985  0711                     	;# 
  3986  0712                     	;# 
  3987  0713                     	;# 
  3988  0714                     	;# 
  3989  0716                     	;# 
  3990  0717                     	;# 
  3991  0718                     	;# 
  3992  0719                     	;# 
  3993  071A                     	;# 
  3994  071B                     	;# 
  3995  071C                     	;# 
  3996  071D                     	;# 
  3997  071E                     	;# 
  3998  0796                     	;# 
  3999  0797                     	;# 
  4000  0798                     	;# 
  4001  0799                     	;# 
  4002  079A                     	;# 
  4003  079B                     	;# 
  4004  079C                     	;# 
  4005  079D                     	;# 
  4006  080C                     	;# 
  4007  080D                     	;# 
  4008  080E                     	;# 
  4009  080F                     	;# 
  4010  0810                     	;# 
  4011  0811                     	;# 
  4012  0812                     	;# 
  4013  0813                     	;# 
  4014  0814                     	;# 
  4015  081A                     	;# 
  4016  081A                     	;# 
  4017  081B                     	;# 
  4018  081C                     	;# 
  4019  081C                     	;# 
  4020  081D                     	;# 
  4021  081E                     	;# 
  4022  081F                     	;# 
  4023  088C                     	;# 
  4024  088D                     	;# 
  4025  088E                     	;# 
  4026  088F                     	;# 
  4027  0890                     	;# 
  4028  0891                     	;# 
  4029  0892                     	;# 
  4030  0893                     	;# 
  4031  0895                     	;# 
  4032  0896                     	;# 
  4033  0897                     	;# 
  4034  0898                     	;# 
  4035  0899                     	;# 
  4036  089A                     	;# 
  4037  089B                     	;# 
  4038  090C                     	;# 
  4039  090E                     	;# 
  4040  090F                     	;# 
  4041  091F                     	;# 
  4042  098F                     	;# 
  4043  098F                     	;# 
  4044  0990                     	;# 
  4045  0991                     	;# 
  4046  0992                     	;# 
  4047  0993                     	;# 
  4048  0994                     	;# 
  4049  0995                     	;# 
  4050  0996                     	;# 
  4051  0997                     	;# 
  4052  1E0F                     	;# 
  4053  1E10                     	;# 
  4054  1E11                     	;# 
  4055  1E12                     	;# 
  4056  1E13                     	;# 
  4057  1E14                     	;# 
  4058  1E15                     	;# 
  4059  1E16                     	;# 
  4060  1E17                     	;# 
  4061  1E18                     	;# 
  4062  1E19                     	;# 
  4063  1E1A                     	;# 
  4064  1E1B                     	;# 
  4065  1E1C                     	;# 
  4066  1E1D                     	;# 
  4067  1E1E                     	;# 
  4068  1E1F                     	;# 
  4069  1E20                     	;# 
  4070  1E21                     	;# 
  4071  1E22                     	;# 
  4072  1E23                     	;# 
  4073  1E24                     	;# 
  4074  1E25                     	;# 
  4075  1E26                     	;# 
  4076  1E27                     	;# 
  4077  1E28                     	;# 
  4078  1E29                     	;# 
  4079  1E2A                     	;# 
  4080  1E2B                     	;# 
  4081  1E2C                     	;# 
  4082  1E2D                     	;# 
  4083  1E2E                     	;# 
  4084  1E2F                     	;# 
  4085  1E30                     	;# 
  4086  1E31                     	;# 
  4087  1E32                     	;# 
  4088  1E33                     	;# 
  4089  1E34                     	;# 
  4090  1E35                     	;# 
  4091  1E36                     	;# 
  4092  1E37                     	;# 
  4093  1E8F                     	;# 
  4094  1E90                     	;# 
  4095  1E91                     	;# 
  4096  1E92                     	;# 
  4097  1E93                     	;# 
  4098  1E94                     	;# 
  4099  1E95                     	;# 
  4100  1E96                     	;# 
  4101  1E97                     	;# 
  4102  1E9C                     	;# 
  4103  1E9D                     	;# 
  4104  1E9E                     	;# 
  4105  1EA1                     	;# 
  4106  1EA2                     	;# 
  4107  1EA3                     	;# 
  4108  1EA4                     	;# 
  4109  1EA9                     	;# 
  4110  1EAA                     	;# 
  4111  1EB1                     	;# 
  4112  1EB2                     	;# 
  4113  1EB8                     	;# 
  4114  1EB9                     	;# 
  4115  1EBA                     	;# 
  4116  1EBB                     	;# 
  4117  1EBC                     	;# 
  4118  1EBD                     	;# 
  4119  1EBE                     	;# 
  4120  1EC3                     	;# 
  4121  1EC5                     	;# 
  4122  1EC6                     	;# 
  4123  1EC7                     	;# 
  4124  1EC8                     	;# 
  4125  1EC9                     	;# 
  4126  1ECA                     	;# 
  4127  1ECB                     	;# 
  4128  1ECB                     	;# 
  4129  1ECB                     	;# 
  4130  1ECC                     	;# 
  4131  1ECC                     	;# 
  4132  1ECC                     	;# 
  4133  1F10                     	;# 
  4134  1F11                     	;# 
  4135  1F12                     	;# 
  4136  1F14                     	;# 
  4137  1F15                     	;# 
  4138  1F1C                     	;# 
  4139  1F1D                     	;# 
  4140  1F1E                     	;# 
  4141  1F1F                     	;# 
  4142  1F20                     	;# 
  4143  1F21                     	;# 
  4144  1F22                     	;# 
  4145  1F23                     	;# 
  4146  1F24                     	;# 
  4147  1F25                     	;# 
  4148  1F26                     	;# 
  4149  1F27                     	;# 
  4150  1F38                     	;# 
  4151  1F39                     	;# 
  4152  1F3A                     	;# 
  4153  1F3B                     	;# 
  4154  1F3C                     	;# 
  4155  1F3D                     	;# 
  4156  1F3E                     	;# 
  4157  1F3F                     	;# 
  4158  1F43                     	;# 
  4159  1F44                     	;# 
  4160  1F45                     	;# 
  4161  1F46                     	;# 
  4162  1F47                     	;# 
  4163  1F48                     	;# 
  4164  1F49                     	;# 
  4165  1F4A                     	;# 
  4166  1F4E                     	;# 
  4167  1F4F                     	;# 
  4168  1F50                     	;# 
  4169  1F51                     	;# 
  4170  1F52                     	;# 
  4171  1F53                     	;# 
  4172  1F54                     	;# 
  4173  1F55                     	;# 
  4174  1FE4                     	;# 
  4175  1FE5                     	;# 
  4176  1FE6                     	;# 
  4177  1FE7                     	;# 
  4178  1FE8                     	;# 
  4179  1FE8                     	;# 
  4180  1FE9                     	;# 
  4181  1FEA                     	;# 
  4182  1FEB                     	;# 
  4183  1FED                     	;# 
  4184  1FEE                     	;# 
  4185  1FEF                     	;# 
  4186  0000                     	;# 
  4187  0001                     	;# 
  4188  0002                     	;# 
  4189  0003                     	;# 
  4190  0004                     	;# 
  4191  0005                     	;# 
  4192  0006                     	;# 
  4193  0007                     	;# 
  4194  0008                     	;# 
  4195  0009                     	;# 
  4196  000A                     	;# 
  4197  000B                     	;# 
  4198  000C                     	;# 
  4199  000D                     	;# 
  4200  000E                     	;# 
  4201  0012                     	;# 
  4202  0013                     	;# 
  4203  0014                     	;# 
  4204  0018                     	;# 
  4205  0019                     	;# 
  4206  001A                     	;# 
  4207  008C                     	;# 
  4208  008C                     	;# 
  4209  008D                     	;# 
  4210  008E                     	;# 
  4211  008E                     	;# 
  4212  008F                     	;# 
  4213  0090                     	;# 
  4214  0090                     	;# 
  4215  0091                     	;# 
  4216  0092                     	;# 
  4217  0092                     	;# 
  4218  0093                     	;# 
  4219  0094                     	;# 
  4220  0094                     	;# 
  4221  0095                     	;# 
  4222  0096                     	;# 
  4223  0096                     	;# 
  4224  0097                     	;# 
  4225  0098                     	;# 
  4226  0099                     	;# 
  4227  009A                     	;# 
  4228  009B                     	;# 
  4229  009B                     	;# 
  4230  009C                     	;# 
  4231  009D                     	;# 
  4232  009D                     	;# 
  4233  009E                     	;# 
  4234  009F                     	;# 
  4235  010C                     	;# 
  4236  010C                     	;# 
  4237  010D                     	;# 
  4238  010E                     	;# 
  4239  010F                     	;# 
  4240  010F                     	;# 
  4241  0110                     	;# 
  4242  0111                     	;# 
  4243  0112                     	;# 
  4244  0113                     	;# 
  4245  0114                     	;# 
  4246  0115                     	;# 
  4247  0116                     	;# 
  4248  0117                     	;# 
  4249  0118                     	;# 
  4250  0119                     	;# 
  4251  0119                     	;# 
  4252  0119                     	;# 
  4253  011A                     	;# 
  4254  011A                     	;# 
  4255  011A                     	;# 
  4256  011B                     	;# 
  4257  011B                     	;# 
  4258  011B                     	;# 
  4259  011B                     	;# 
  4260  011B                     	;# 
  4261  011C                     	;# 
  4262  011C                     	;# 
  4263  011C                     	;# 
  4264  011D                     	;# 
  4265  011D                     	;# 
  4266  011D                     	;# 
  4267  011E                     	;# 
  4268  011E                     	;# 
  4269  011E                     	;# 
  4270  011F                     	;# 
  4271  011F                     	;# 
  4272  011F                     	;# 
  4273  011F                     	;# 
  4274  011F                     	;# 
  4275  018C                     	;# 
  4276  018D                     	;# 
  4277  018E                     	;# 
  4278  018F                     	;# 
  4279  0190                     	;# 
  4280  0191                     	;# 
  4281  0192                     	;# 
  4282  0196                     	;# 
  4283  0197                     	;# 
  4284  0198                     	;# 
  4285  0199                     	;# 
  4286  019A                     	;# 
  4287  019B                     	;# 
  4288  019C                     	;# 
  4289  020C                     	;# 
  4290  020D                     	;# 
  4291  020E                     	;# 
  4292  020E                     	;# 
  4293  020F                     	;# 
  4294  020F                     	;# 
  4295  0210                     	;# 
  4296  0210                     	;# 
  4297  0211                     	;# 
  4298  0211                     	;# 
  4299  0212                     	;# 
  4300  0213                     	;# 
  4301  0214                     	;# 
  4302  0214                     	;# 
  4303  0215                     	;# 
  4304  0215                     	;# 
  4305  0216                     	;# 
  4306  0216                     	;# 
  4307  0217                     	;# 
  4308  0217                     	;# 
  4309  0218                     	;# 
  4310  0219                     	;# 
  4311  021A                     	;# 
  4312  021A                     	;# 
  4313  021B                     	;# 
  4314  021B                     	;# 
  4315  021C                     	;# 
  4316  021C                     	;# 
  4317  021D                     	;# 
  4318  021D                     	;# 
  4319  021E                     	;# 
  4320  021F                     	;# 
  4321  028C                     	;# 
  4322  028C                     	;# 
  4323  028D                     	;# 
  4324  028D                     	;# 
  4325  028E                     	;# 
  4326  028F                     	;# 
  4327  0290                     	;# 
  4328  0291                     	;# 
  4329  0292                     	;# 
  4330  0292                     	;# 
  4331  0293                     	;# 
  4332  0293                     	;# 
  4333  0294                     	;# 
  4334  0295                     	;# 
  4335  0296                     	;# 
  4336  0297                     	;# 
  4337  0298                     	;# 
  4338  0298                     	;# 
  4339  0299                     	;# 
  4340  0299                     	;# 
  4341  029A                     	;# 
  4342  029B                     	;# 
  4343  029C                     	;# 
  4344  029D                     	;# 
  4345  029F                     	;# 
  4346  030C                     	;# 
  4347  030C                     	;# 
  4348  030D                     	;# 
  4349  030E                     	;# 
  4350  030F                     	;# 
  4351  0310                     	;# 
  4352  0310                     	;# 
  4353  0311                     	;# 
  4354  0312                     	;# 
  4355  0313                     	;# 
  4356  0314                     	;# 
  4357  0314                     	;# 
  4358  0315                     	;# 
  4359  0316                     	;# 
  4360  0317                     	;# 
  4361  0318                     	;# 
  4362  0318                     	;# 
  4363  0319                     	;# 
  4364  031A                     	;# 
  4365  031B                     	;# 
  4366  038C                     	;# 
  4367  038C                     	;# 
  4368  038D                     	;# 
  4369  038E                     	;# 
  4370  0390                     	;# 
  4371  0390                     	;# 
  4372  0391                     	;# 
  4373  0392                     	;# 
  4374  048C                     	;# 
  4375  048C                     	;# 
  4376  048D                     	;# 
  4377  048E                     	;# 
  4378  048F                     	;# 
  4379  048F                     	;# 
  4380  0490                     	;# 
  4381  0491                     	;# 
  4382  0492                     	;# 
  4383  0492                     	;# 
  4384  0493                     	;# 
  4385  0494                     	;# 
  4386  0495                     	;# 
  4387  0495                     	;# 
  4388  0496                     	;# 
  4389  0497                     	;# 
  4390  0498                     	;# 
  4391  0499                     	;# 
  4392  049A                     	;# 
  4393  049B                     	;# 
  4394  049C                     	;# 
  4395  049D                     	;# 
  4396  058C                     	;# 
  4397  058C                     	;# 
  4398  058D                     	;# 
  4399  058E                     	;# 
  4400  058F                     	;# 
  4401  058F                     	;# 
  4402  0590                     	;# 
  4403  0591                     	;# 
  4404  0592                     	;# 
  4405  0593                     	;# 
  4406  059C                     	;# 
  4407  059C                     	;# 
  4408  059D                     	;# 
  4409  059D                     	;# 
  4410  059E                     	;# 
  4411  059F                     	;# 
  4412  060C                     	;# 
  4413  060C                     	;# 
  4414  060D                     	;# 
  4415  060D                     	;# 
  4416  060E                     	;# 
  4417  060F                     	;# 
  4418  0610                     	;# 
  4419  0611                     	;# 
  4420  0612                     	;# 
  4421  0613                     	;# 
  4422  0614                     	;# 
  4423  0616                     	;# 
  4424  0616                     	;# 
  4425  0617                     	;# 
  4426  0617                     	;# 
  4427  0618                     	;# 
  4428  0619                     	;# 
  4429  061A                     	;# 
  4430  061B                     	;# 
  4431  061C                     	;# 
  4432  061D                     	;# 
  4433  061E                     	;# 
  4434  070C                     	;# 
  4435  070D                     	;# 
  4436  070E                     	;# 
  4437  070F                     	;# 
  4438  0710                     	;# 
  4439  0711                     	;# 
  4440  0712                     	;# 
  4441  0713                     	;# 
  4442  0714                     	;# 
  4443  0716                     	;# 
  4444  0717                     	;# 
  4445  0718                     	;# 
  4446  0719                     	;# 
  4447  071A                     	;# 
  4448  071B                     	;# 
  4449  071C                     	;# 
  4450  071D                     	;# 
  4451  071E                     	;# 
  4452  0796                     	;# 
  4453  0797                     	;# 
  4454  0798                     	;# 
  4455  0799                     	;# 
  4456  079A                     	;# 
  4457  079B                     	;# 
  4458  079C                     	;# 
  4459  079D                     	;# 
  4460  080C                     	;# 
  4461  080D                     	;# 
  4462  080E                     	;# 
  4463  080F                     	;# 
  4464  0810                     	;# 
  4465  0811                     	;# 
  4466  0812                     	;# 
  4467  0813                     	;# 
  4468  0814                     	;# 
  4469  081A                     	;# 
  4470  081A                     	;# 
  4471  081B                     	;# 
  4472  081C                     	;# 
  4473  081C                     	;# 
  4474  081D                     	;# 
  4475  081E                     	;# 
  4476  081F                     	;# 
  4477  088C                     	;# 
  4478  088D                     	;# 
  4479  088E                     	;# 
  4480  088F                     	;# 
  4481  0890                     	;# 
  4482  0891                     	;# 
  4483  0892                     	;# 
  4484  0893                     	;# 
  4485  0895                     	;# 
  4486  0896                     	;# 
  4487  0897                     	;# 
  4488  0898                     	;# 
  4489  0899                     	;# 
  4490  089A                     	;# 
  4491  089B                     	;# 
  4492  090C                     	;# 
  4493  090E                     	;# 
  4494  090F                     	;# 
  4495  091F                     	;# 
  4496  098F                     	;# 
  4497  098F                     	;# 
  4498  0990                     	;# 
  4499  0991                     	;# 
  4500  0992                     	;# 
  4501  0993                     	;# 
  4502  0994                     	;# 
  4503  0995                     	;# 
  4504  0996                     	;# 
  4505  0997                     	;# 
  4506  1E0F                     	;# 
  4507  1E10                     	;# 
  4508  1E11                     	;# 
  4509  1E12                     	;# 
  4510  1E13                     	;# 
  4511  1E14                     	;# 
  4512  1E15                     	;# 
  4513  1E16                     	;# 
  4514  1E17                     	;# 
  4515  1E18                     	;# 
  4516  1E19                     	;# 
  4517  1E1A                     	;# 
  4518  1E1B                     	;# 
  4519  1E1C                     	;# 
  4520  1E1D                     	;# 
  4521  1E1E                     	;# 
  4522  1E1F                     	;# 
  4523  1E20                     	;# 
  4524  1E21                     	;# 
  4525  1E22                     	;# 
  4526  1E23                     	;# 
  4527  1E24                     	;# 
  4528  1E25                     	;# 
  4529  1E26                     	;# 
  4530  1E27                     	;# 
  4531  1E28                     	;# 
  4532  1E29                     	;# 
  4533  1E2A                     	;# 
  4534  1E2B                     	;# 
  4535  1E2C                     	;# 
  4536  1E2D                     	;# 
  4537  1E2E                     	;# 
  4538  1E2F                     	;# 
  4539  1E30                     	;# 
  4540  1E31                     	;# 
  4541  1E32                     	;# 
  4542  1E33                     	;# 
  4543  1E34                     	;# 
  4544  1E35                     	;# 
  4545  1E36                     	;# 
  4546  1E37                     	;# 
  4547  1E8F                     	;# 
  4548  1E90                     	;# 
  4549  1E91                     	;# 
  4550  1E92                     	;# 
  4551  1E93                     	;# 
  4552  1E94                     	;# 
  4553  1E95                     	;# 
  4554  1E96                     	;# 
  4555  1E97                     	;# 
  4556  1E9C                     	;# 
  4557  1E9D                     	;# 
  4558  1E9E                     	;# 
  4559  1EA1                     	;# 
  4560  1EA2                     	;# 
  4561  1EA3                     	;# 
  4562  1EA4                     	;# 
  4563  1EA9                     	;# 
  4564  1EAA                     	;# 
  4565  1EB1                     	;# 
  4566  1EB2                     	;# 
  4567  1EB8                     	;# 
  4568  1EB9                     	;# 
  4569  1EBA                     	;# 
  4570  1EBB                     	;# 
  4571  1EBC                     	;# 
  4572  1EBD                     	;# 
  4573  1EBE                     	;# 
  4574  1EC3                     	;# 
  4575  1EC5                     	;# 
  4576  1EC6                     	;# 
  4577  1EC7                     	;# 
  4578  1EC8                     	;# 
  4579  1EC9                     	;# 
  4580  1ECA                     	;# 
  4581  1ECB                     	;# 
  4582  1ECB                     	;# 
  4583  1ECB                     	;# 
  4584  1ECC                     	;# 
  4585  1ECC                     	;# 
  4586  1ECC                     	;# 
  4587  1F10                     	;# 
  4588  1F11                     	;# 
  4589  1F12                     	;# 
  4590  1F14                     	;# 
  4591  1F15                     	;# 
  4592  1F1C                     	;# 
  4593  1F1D                     	;# 
  4594  1F1E                     	;# 
  4595  1F1F                     	;# 
  4596  1F20                     	;# 
  4597  1F21                     	;# 
  4598  1F22                     	;# 
  4599  1F23                     	;# 
  4600  1F24                     	;# 
  4601  1F25                     	;# 
  4602  1F26                     	;# 
  4603  1F27                     	;# 
  4604  1F38                     	;# 
  4605  1F39                     	;# 
  4606  1F3A                     	;# 
  4607  1F3B                     	;# 
  4608  1F3C                     	;# 
  4609  1F3D                     	;# 
  4610  1F3E                     	;# 
  4611  1F3F                     	;# 
  4612  1F43                     	;# 
  4613  1F44                     	;# 
  4614  1F45                     	;# 
  4615  1F46                     	;# 
  4616  1F47                     	;# 
  4617  1F48                     	;# 
  4618  1F49                     	;# 
  4619  1F4A                     	;# 
  4620  1F4E                     	;# 
  4621  1F4F                     	;# 
  4622  1F50                     	;# 
  4623  1F51                     	;# 
  4624  1F52                     	;# 
  4625  1F53                     	;# 
  4626  1F54                     	;# 
  4627  1F55                     	;# 
  4628  1FE4                     	;# 
  4629  1FE5                     	;# 
  4630  1FE6                     	;# 
  4631  1FE7                     	;# 
  4632  1FE8                     	;# 
  4633  1FE8                     	;# 
  4634  1FE9                     	;# 
  4635  1FEA                     	;# 
  4636  1FEB                     	;# 
  4637  1FED                     	;# 
  4638  1FEE                     	;# 
  4639  1FEF                     	;# 
  4640  0000                     	;# 
  4641  0001                     	;# 
  4642  0002                     	;# 
  4643  0003                     	;# 
  4644  0004                     	;# 
  4645  0005                     	;# 
  4646  0006                     	;# 
  4647  0007                     	;# 
  4648  0008                     	;# 
  4649  0009                     	;# 
  4650  000A                     	;# 
  4651  000B                     	;# 
  4652  000C                     	;# 
  4653  000D                     	;# 
  4654  000E                     	;# 
  4655  0012                     	;# 
  4656  0013                     	;# 
  4657  0014                     	;# 
  4658  0018                     	;# 
  4659  0019                     	;# 
  4660  001A                     	;# 
  4661  008C                     	;# 
  4662  008C                     	;# 
  4663  008D                     	;# 
  4664  008E                     	;# 
  4665  008E                     	;# 
  4666  008F                     	;# 
  4667  0090                     	;# 
  4668  0090                     	;# 
  4669  0091                     	;# 
  4670  0092                     	;# 
  4671  0092                     	;# 
  4672  0093                     	;# 
  4673  0094                     	;# 
  4674  0094                     	;# 
  4675  0095                     	;# 
  4676  0096                     	;# 
  4677  0096                     	;# 
  4678  0097                     	;# 
  4679  0098                     	;# 
  4680  0099                     	;# 
  4681  009A                     	;# 
  4682  009B                     	;# 
  4683  009B                     	;# 
  4684  009C                     	;# 
  4685  009D                     	;# 
  4686  009D                     	;# 
  4687  009E                     	;# 
  4688  009F                     	;# 
  4689  010C                     	;# 
  4690  010C                     	;# 
  4691  010D                     	;# 
  4692  010E                     	;# 
  4693  010F                     	;# 
  4694  010F                     	;# 
  4695  0110                     	;# 
  4696  0111                     	;# 
  4697  0112                     	;# 
  4698  0113                     	;# 
  4699  0114                     	;# 
  4700  0115                     	;# 
  4701  0116                     	;# 
  4702  0117                     	;# 
  4703  0118                     	;# 
  4704  0119                     	;# 
  4705  0119                     	;# 
  4706  0119                     	;# 
  4707  011A                     	;# 
  4708  011A                     	;# 
  4709  011A                     	;# 
  4710  011B                     	;# 
  4711  011B                     	;# 
  4712  011B                     	;# 
  4713  011B                     	;# 
  4714  011B                     	;# 
  4715  011C                     	;# 
  4716  011C                     	;# 
  4717  011C                     	;# 
  4718  011D                     	;# 
  4719  011D                     	;# 
  4720  011D                     	;# 
  4721  011E                     	;# 
  4722  011E                     	;# 
  4723  011E                     	;# 
  4724  011F                     	;# 
  4725  011F                     	;# 
  4726  011F                     	;# 
  4727  011F                     	;# 
  4728  011F                     	;# 
  4729  018C                     	;# 
  4730  018D                     	;# 
  4731  018E                     	;# 
  4732  018F                     	;# 
  4733  0190                     	;# 
  4734  0191                     	;# 
  4735  0192                     	;# 
  4736  0196                     	;# 
  4737  0197                     	;# 
  4738  0198                     	;# 
  4739  0199                     	;# 
  4740  019A                     	;# 
  4741  019B                     	;# 
  4742  019C                     	;# 
  4743  020C                     	;# 
  4744  020D                     	;# 
  4745  020E                     	;# 
  4746  020E                     	;# 
  4747  020F                     	;# 
  4748  020F                     	;# 
  4749  0210                     	;# 
  4750  0210                     	;# 
  4751  0211                     	;# 
  4752  0211                     	;# 
  4753  0212                     	;# 
  4754  0213                     	;# 
  4755  0214                     	;# 
  4756  0214                     	;# 
  4757  0215                     	;# 
  4758  0215                     	;# 
  4759  0216                     	;# 
  4760  0216                     	;# 
  4761  0217                     	;# 
  4762  0217                     	;# 
  4763  0218                     	;# 
  4764  0219                     	;# 
  4765  021A                     	;# 
  4766  021A                     	;# 
  4767  021B                     	;# 
  4768  021B                     	;# 
  4769  021C                     	;# 
  4770  021C                     	;# 
  4771  021D                     	;# 
  4772  021D                     	;# 
  4773  021E                     	;# 
  4774  021F                     	;# 
  4775  028C                     	;# 
  4776  028C                     	;# 
  4777  028D                     	;# 
  4778  028D                     	;# 
  4779  028E                     	;# 
  4780  028F                     	;# 
  4781  0290                     	;# 
  4782  0291                     	;# 
  4783  0292                     	;# 
  4784  0292                     	;# 
  4785  0293                     	;# 
  4786  0293                     	;# 
  4787  0294                     	;# 
  4788  0295                     	;# 
  4789  0296                     	;# 
  4790  0297                     	;# 
  4791  0298                     	;# 
  4792  0298                     	;# 
  4793  0299                     	;# 
  4794  0299                     	;# 
  4795  029A                     	;# 
  4796  029B                     	;# 
  4797  029C                     	;# 
  4798  029D                     	;# 
  4799  029F                     	;# 
  4800  030C                     	;# 
  4801  030C                     	;# 
  4802  030D                     	;# 
  4803  030E                     	;# 
  4804  030F                     	;# 
  4805  0310                     	;# 
  4806  0310                     	;# 
  4807  0311                     	;# 
  4808  0312                     	;# 
  4809  0313                     	;# 
  4810  0314                     	;# 
  4811  0314                     	;# 
  4812  0315                     	;# 
  4813  0316                     	;# 
  4814  0317                     	;# 
  4815  0318                     	;# 
  4816  0318                     	;# 
  4817  0319                     	;# 
  4818  031A                     	;# 
  4819  031B                     	;# 
  4820  038C                     	;# 
  4821  038C                     	;# 
  4822  038D                     	;# 
  4823  038E                     	;# 
  4824  0390                     	;# 
  4825  0390                     	;# 
  4826  0391                     	;# 
  4827  0392                     	;# 
  4828  048C                     	;# 
  4829  048C                     	;# 
  4830  048D                     	;# 
  4831  048E                     	;# 
  4832  048F                     	;# 
  4833  048F                     	;# 
  4834  0490                     	;# 
  4835  0491                     	;# 
  4836  0492                     	;# 
  4837  0492                     	;# 
  4838  0493                     	;# 
  4839  0494                     	;# 
  4840  0495                     	;# 
  4841  0495                     	;# 
  4842  0496                     	;# 
  4843  0497                     	;# 
  4844  0498                     	;# 
  4845  0499                     	;# 
  4846  049A                     	;# 
  4847  049B                     	;# 
  4848  049C                     	;# 
  4849  049D                     	;# 
  4850  058C                     	;# 
  4851  058C                     	;# 
  4852  058D                     	;# 
  4853  058E                     	;# 
  4854  058F                     	;# 
  4855  058F                     	;# 
  4856  0590                     	;# 
  4857  0591                     	;# 
  4858  0592                     	;# 
  4859  0593                     	;# 
  4860  059C                     	;# 
  4861  059C                     	;# 
  4862  059D                     	;# 
  4863  059D                     	;# 
  4864  059E                     	;# 
  4865  059F                     	;# 
  4866  060C                     	;# 
  4867  060C                     	;# 
  4868  060D                     	;# 
  4869  060D                     	;# 
  4870  060E                     	;# 
  4871  060F                     	;# 
  4872  0610                     	;# 
  4873  0611                     	;# 
  4874  0612                     	;# 
  4875  0613                     	;# 
  4876  0614                     	;# 
  4877  0616                     	;# 
  4878  0616                     	;# 
  4879  0617                     	;# 
  4880  0617                     	;# 
  4881  0618                     	;# 
  4882  0619                     	;# 
  4883  061A                     	;# 
  4884  061B                     	;# 
  4885  061C                     	;# 
  4886  061D                     	;# 
  4887  061E                     	;# 
  4888  070C                     	;# 
  4889  070D                     	;# 
  4890  070E                     	;# 
  4891  070F                     	;# 
  4892  0710                     	;# 
  4893  0711                     	;# 
  4894  0712                     	;# 
  4895  0713                     	;# 
  4896  0714                     	;# 
  4897  0716                     	;# 
  4898  0717                     	;# 
  4899  0718                     	;# 
  4900  0719                     	;# 
  4901  071A                     	;# 
  4902  071B                     	;# 
  4903  071C                     	;# 
  4904  071D                     	;# 
  4905  071E                     	;# 
  4906  0796                     	;# 
  4907  0797                     	;# 
  4908  0798                     	;# 
  4909  0799                     	;# 
  4910  079A                     	;# 
  4911  079B                     	;# 
  4912  079C                     	;# 
  4913  079D                     	;# 
  4914  080C                     	;# 
  4915  080D                     	;# 
  4916  080E                     	;# 
  4917  080F                     	;# 
  4918  0810                     	;# 
  4919  0811                     	;# 
  4920  0812                     	;# 
  4921  0813                     	;# 
  4922  0814                     	;# 
  4923  081A                     	;# 
  4924  081A                     	;# 
  4925  081B                     	;# 
  4926  081C                     	;# 
  4927  081C                     	;# 
  4928  081D                     	;# 
  4929  081E                     	;# 
  4930  081F                     	;# 
  4931  088C                     	;# 
  4932  088D                     	;# 
  4933  088E                     	;# 
  4934  088F                     	;# 
  4935  0890                     	;# 
  4936  0891                     	;# 
  4937  0892                     	;# 
  4938  0893                     	;# 
  4939  0895                     	;# 
  4940  0896                     	;# 
  4941  0897                     	;# 
  4942  0898                     	;# 
  4943  0899                     	;# 
  4944  089A                     	;# 
  4945  089B                     	;# 
  4946  090C                     	;# 
  4947  090E                     	;# 
  4948  090F                     	;# 
  4949  091F                     	;# 
  4950  098F                     	;# 
  4951  098F                     	;# 
  4952  0990                     	;# 
  4953  0991                     	;# 
  4954  0992                     	;# 
  4955  0993                     	;# 
  4956  0994                     	;# 
  4957  0995                     	;# 
  4958  0996                     	;# 
  4959  0997                     	;# 
  4960  1E0F                     	;# 
  4961  1E10                     	;# 
  4962  1E11                     	;# 
  4963  1E12                     	;# 
  4964  1E13                     	;# 
  4965  1E14                     	;# 
  4966  1E15                     	;# 
  4967  1E16                     	;# 
  4968  1E17                     	;# 
  4969  1E18                     	;# 
  4970  1E19                     	;# 
  4971  1E1A                     	;# 
  4972  1E1B                     	;# 
  4973  1E1C                     	;# 
  4974  1E1D                     	;# 
  4975  1E1E                     	;# 
  4976  1E1F                     	;# 
  4977  1E20                     	;# 
  4978  1E21                     	;# 
  4979  1E22                     	;# 
  4980  1E23                     	;# 
  4981  1E24                     	;# 
  4982  1E25                     	;# 
  4983  1E26                     	;# 
  4984  1E27                     	;# 
  4985  1E28                     	;# 
  4986  1E29                     	;# 
  4987  1E2A                     	;# 
  4988  1E2B                     	;# 
  4989  1E2C                     	;# 
  4990  1E2D                     	;# 
  4991  1E2E                     	;# 
  4992  1E2F                     	;# 
  4993  1E30                     	;# 
  4994  1E31                     	;# 
  4995  1E32                     	;# 
  4996  1E33                     	;# 
  4997  1E34                     	;# 
  4998  1E35                     	;# 
  4999  1E36                     	;# 
  5000  1E37                     	;# 
  5001  1E8F                     	;# 
  5002  1E90                     	;# 
  5003  1E91                     	;# 
  5004  1E92                     	;# 
  5005  1E93                     	;# 
  5006  1E94                     	;# 
  5007  1E95                     	;# 
  5008  1E96                     	;# 
  5009  1E97                     	;# 
  5010  1E9C                     	;# 
  5011  1E9D                     	;# 
  5012  1E9E                     	;# 
  5013  1EA1                     	;# 
  5014  1EA2                     	;# 
  5015  1EA3                     	;# 
  5016  1EA4                     	;# 
  5017  1EA9                     	;# 
  5018  1EAA                     	;# 
  5019  1EB1                     	;# 
  5020  1EB2                     	;# 
  5021  1EB8                     	;# 
  5022  1EB9                     	;# 
  5023  1EBA                     	;# 
  5024  1EBB                     	;# 
  5025  1EBC                     	;# 
  5026  1EBD                     	;# 
  5027  1EBE                     	;# 
  5028  1EC3                     	;# 
  5029  1EC5                     	;# 
  5030  1EC6                     	;# 
  5031  1EC7                     	;# 
  5032  1EC8                     	;# 
  5033  1EC9                     	;# 
  5034  1ECA                     	;# 
  5035  1ECB                     	;# 
  5036  1ECB                     	;# 
  5037  1ECB                     	;# 
  5038  1ECC                     	;# 
  5039  1ECC                     	;# 
  5040  1ECC                     	;# 
  5041  1F10                     	;# 
  5042  1F11                     	;# 
  5043  1F12                     	;# 
  5044  1F14                     	;# 
  5045  1F15                     	;# 
  5046  1F1C                     	;# 
  5047  1F1D                     	;# 
  5048  1F1E                     	;# 
  5049  1F1F                     	;# 
  5050  1F20                     	;# 
  5051  1F21                     	;# 
  5052  1F22                     	;# 
  5053  1F23                     	;# 
  5054  1F24                     	;# 
  5055  1F25                     	;# 
  5056  1F26                     	;# 
  5057  1F27                     	;# 
  5058  1F38                     	;# 
  5059  1F39                     	;# 
  5060  1F3A                     	;# 
  5061  1F3B                     	;# 
  5062  1F3C                     	;# 
  5063  1F3D                     	;# 
  5064  1F3E                     	;# 
  5065  1F3F                     	;# 
  5066  1F43                     	;# 
  5067  1F44                     	;# 
  5068  1F45                     	;# 
  5069  1F46                     	;# 
  5070  1F47                     	;# 
  5071  1F48                     	;# 
  5072  1F49                     	;# 
  5073  1F4A                     	;# 
  5074  1F4E                     	;# 
  5075  1F4F                     	;# 
  5076  1F50                     	;# 
  5077  1F51                     	;# 
  5078  1F52                     	;# 
  5079  1F53                     	;# 
  5080  1F54                     	;# 
  5081  1F55                     	;# 
  5082  1FE4                     	;# 
  5083  1FE5                     	;# 
  5084  1FE6                     	;# 
  5085  1FE7                     	;# 
  5086  1FE8                     	;# 
  5087  1FE8                     	;# 
  5088  1FE9                     	;# 
  5089  1FEA                     	;# 
  5090  1FEB                     	;# 
  5091  1FED                     	;# 
  5092  1FEE                     	;# 
  5093  1FEF                     	;# 
  5094  0000                     	;# 
  5095  0001                     	;# 
  5096  0002                     	;# 
  5097  0003                     	;# 
  5098  0004                     	;# 
  5099  0005                     	;# 
  5100  0006                     	;# 
  5101  0007                     	;# 
  5102  0008                     	;# 
  5103  0009                     	;# 
  5104  000A                     	;# 
  5105  000B                     	;# 
  5106  000C                     	;# 
  5107  000D                     	;# 
  5108  000E                     	;# 
  5109  0012                     	;# 
  5110  0013                     	;# 
  5111  0014                     	;# 
  5112  0018                     	;# 
  5113  0019                     	;# 
  5114  001A                     	;# 
  5115  008C                     	;# 
  5116  008C                     	;# 
  5117  008D                     	;# 
  5118  008E                     	;# 
  5119  008E                     	;# 
  5120  008F                     	;# 
  5121  0090                     	;# 
  5122  0090                     	;# 
  5123  0091                     	;# 
  5124  0092                     	;# 
  5125  0092                     	;# 
  5126  0093                     	;# 
  5127  0094                     	;# 
  5128  0094                     	;# 
  5129  0095                     	;# 
  5130  0096                     	;# 
  5131  0096                     	;# 
  5132  0097                     	;# 
  5133  0098                     	;# 
  5134  0099                     	;# 
  5135  009A                     	;# 
  5136  009B                     	;# 
  5137  009B                     	;# 
  5138  009C                     	;# 
  5139  009D                     	;# 
  5140  009D                     	;# 
  5141  009E                     	;# 
  5142  009F                     	;# 
  5143  010C                     	;# 
  5144  010C                     	;# 
  5145  010D                     	;# 
  5146  010E                     	;# 
  5147  010F                     	;# 
  5148  010F                     	;# 
  5149  0110                     	;# 
  5150  0111                     	;# 
  5151  0112                     	;# 
  5152  0113                     	;# 
  5153  0114                     	;# 
  5154  0115                     	;# 
  5155  0116                     	;# 
  5156  0117                     	;# 
  5157  0118                     	;# 
  5158  0119                     	;# 
  5159  0119                     	;# 
  5160  0119                     	;# 
  5161  011A                     	;# 
  5162  011A                     	;# 
  5163  011A                     	;# 
  5164  011B                     	;# 
  5165  011B                     	;# 
  5166  011B                     	;# 
  5167  011B                     	;# 
  5168  011B                     	;# 
  5169  011C                     	;# 
  5170  011C                     	;# 
  5171  011C                     	;# 
  5172  011D                     	;# 
  5173  011D                     	;# 
  5174  011D                     	;# 
  5175  011E                     	;# 
  5176  011E                     	;# 
  5177  011E                     	;# 
  5178  011F                     	;# 
  5179  011F                     	;# 
  5180  011F                     	;# 
  5181  011F                     	;# 
  5182  011F                     	;# 
  5183  018C                     	;# 
  5184  018D                     	;# 
  5185  018E                     	;# 
  5186  018F                     	;# 
  5187  0190                     	;# 
  5188  0191                     	;# 
  5189  0192                     	;# 
  5190  0196                     	;# 
  5191  0197                     	;# 
  5192  0198                     	;# 
  5193  0199                     	;# 
  5194  019A                     	;# 
  5195  019B                     	;# 
  5196  019C                     	;# 
  5197  020C                     	;# 
  5198  020D                     	;# 
  5199  020E                     	;# 
  5200  020E                     	;# 
  5201  020F                     	;# 
  5202  020F                     	;# 
  5203  0210                     	;# 
  5204  0210                     	;# 
  5205  0211                     	;# 
  5206  0211                     	;# 
  5207  0212                     	;# 
  5208  0213                     	;# 
  5209  0214                     	;# 
  5210  0214                     	;# 
  5211  0215                     	;# 
  5212  0215                     	;# 
  5213  0216                     	;# 
  5214  0216                     	;# 
  5215  0217                     	;# 
  5216  0217                     	;# 
  5217  0218                     	;# 
  5218  0219                     	;# 
  5219  021A                     	;# 
  5220  021A                     	;# 
  5221  021B                     	;# 
  5222  021B                     	;# 
  5223  021C                     	;# 
  5224  021C                     	;# 
  5225  021D                     	;# 
  5226  021D                     	;# 
  5227  021E                     	;# 
  5228  021F                     	;# 
  5229  028C                     	;# 
  5230  028C                     	;# 
  5231  028D                     	;# 
  5232  028D                     	;# 
  5233  028E                     	;# 
  5234  028F                     	;# 
  5235  0290                     	;# 
  5236  0291                     	;# 
  5237  0292                     	;# 
  5238  0292                     	;# 
  5239  0293                     	;# 
  5240  0293                     	;# 
  5241  0294                     	;# 
  5242  0295                     	;# 
  5243  0296                     	;# 
  5244  0297                     	;# 
  5245  0298                     	;# 
  5246  0298                     	;# 
  5247  0299                     	;# 
  5248  0299                     	;# 
  5249  029A                     	;# 
  5250  029B                     	;# 
  5251  029C                     	;# 
  5252  029D                     	;# 
  5253  029F                     	;# 
  5254  030C                     	;# 
  5255  030C                     	;# 
  5256  030D                     	;# 
  5257  030E                     	;# 
  5258  030F                     	;# 
  5259  0310                     	;# 
  5260  0310                     	;# 
  5261  0311                     	;# 
  5262  0312                     	;# 
  5263  0313                     	;# 
  5264  0314                     	;# 
  5265  0314                     	;# 
  5266  0315                     	;# 
  5267  0316                     	;# 
  5268  0317                     	;# 
  5269  0318                     	;# 
  5270  0318                     	;# 
  5271  0319                     	;# 
  5272  031A                     	;# 
  5273  031B                     	;# 
  5274  038C                     	;# 
  5275  038C                     	;# 
  5276  038D                     	;# 
  5277  038E                     	;# 
  5278  0390                     	;# 
  5279  0390                     	;# 
  5280  0391                     	;# 
  5281  0392                     	;# 
  5282  048C                     	;# 
  5283  048C                     	;# 
  5284  048D                     	;# 
  5285  048E                     	;# 
  5286  048F                     	;# 
  5287  048F                     	;# 
  5288  0490                     	;# 
  5289  0491                     	;# 
  5290  0492                     	;# 
  5291  0492                     	;# 
  5292  0493                     	;# 
  5293  0494                     	;# 
  5294  0495                     	;# 
  5295  0495                     	;# 
  5296  0496                     	;# 
  5297  0497                     	;# 
  5298  0498                     	;# 
  5299  0499                     	;# 
  5300  049A                     	;# 
  5301  049B                     	;# 
  5302  049C                     	;# 
  5303  049D                     	;# 
  5304  058C                     	;# 
  5305  058C                     	;# 
  5306  058D                     	;# 
  5307  058E                     	;# 
  5308  058F                     	;# 
  5309  058F                     	;# 
  5310  0590                     	;# 
  5311  0591                     	;# 
  5312  0592                     	;# 
  5313  0593                     	;# 
  5314  059C                     	;# 
  5315  059C                     	;# 
  5316  059D                     	;# 
  5317  059D                     	;# 
  5318  059E                     	;# 
  5319  059F                     	;# 
  5320  060C                     	;# 
  5321  060C                     	;# 
  5322  060D                     	;# 
  5323  060D                     	;# 
  5324  060E                     	;# 
  5325  060F                     	;# 
  5326  0610                     	;# 
  5327  0611                     	;# 
  5328  0612                     	;# 
  5329  0613                     	;# 
  5330  0614                     	;# 
  5331  0616                     	;# 
  5332  0616                     	;# 
  5333  0617                     	;# 
  5334  0617                     	;# 
  5335  0618                     	;# 
  5336  0619                     	;# 
  5337  061A                     	;# 
  5338  061B                     	;# 
  5339  061C                     	;# 
  5340  061D                     	;# 
  5341  061E                     	;# 
  5342  070C                     	;# 
  5343  070D                     	;# 
  5344  070E                     	;# 
  5345  070F                     	;# 
  5346  0710                     	;# 
  5347  0711                     	;# 
  5348  0712                     	;# 
  5349  0713                     	;# 
  5350  0714                     	;# 
  5351  0716                     	;# 
  5352  0717                     	;# 
  5353  0718                     	;# 
  5354  0719                     	;# 
  5355  071A                     	;# 
  5356  071B                     	;# 
  5357  071C                     	;# 
  5358  071D                     	;# 
  5359  071E                     	;# 
  5360  0796                     	;# 
  5361  0797                     	;# 
  5362  0798                     	;# 
  5363  0799                     	;# 
  5364  079A                     	;# 
  5365  079B                     	;# 
  5366  079C                     	;# 
  5367  079D                     	;# 
  5368  080C                     	;# 
  5369  080D                     	;# 
  5370  080E                     	;# 
  5371  080F                     	;# 
  5372  0810                     	;# 
  5373  0811                     	;# 
  5374  0812                     	;# 
  5375  0813                     	;# 
  5376  0814                     	;# 
  5377  081A                     	;# 
  5378  081A                     	;# 
  5379  081B                     	;# 
  5380  081C                     	;# 
  5381  081C                     	;# 
  5382  081D                     	;# 
  5383  081E                     	;# 
  5384  081F                     	;# 
  5385  088C                     	;# 
  5386  088D                     	;# 
  5387  088E                     	;# 
  5388  088F                     	;# 
  5389  0890                     	;# 
  5390  0891                     	;# 
  5391  0892                     	;# 
  5392  0893                     	;# 
  5393  0895                     	;# 
  5394  0896                     	;# 
  5395  0897                     	;# 
  5396  0898                     	;# 
  5397  0899                     	;# 
  5398  089A                     	;# 
  5399  089B                     	;# 
  5400  090C                     	;# 
  5401  090E                     	;# 
  5402  090F                     	;# 
  5403  091F                     	;# 
  5404  098F                     	;# 
  5405  098F                     	;# 
  5406  0990                     	;# 
  5407  0991                     	;# 
  5408  0992                     	;# 
  5409  0993                     	;# 
  5410  0994                     	;# 
  5411  0995                     	;# 
  5412  0996                     	;# 
  5413  0997                     	;# 
  5414  1E0F                     	;# 
  5415  1E10                     	;# 
  5416  1E11                     	;# 
  5417  1E12                     	;# 
  5418  1E13                     	;# 
  5419  1E14                     	;# 
  5420  1E15                     	;# 
  5421  1E16                     	;# 
  5422  1E17                     	;# 
  5423  1E18                     	;# 
  5424  1E19                     	;# 
  5425  1E1A                     	;# 
  5426  1E1B                     	;# 
  5427  1E1C                     	;# 
  5428  1E1D                     	;# 
  5429  1E1E                     	;# 
  5430  1E1F                     	;# 
  5431  1E20                     	;# 
  5432  1E21                     	;# 
  5433  1E22                     	;# 
  5434  1E23                     	;# 
  5435  1E24                     	;# 
  5436  1E25                     	;# 
  5437  1E26                     	;# 
  5438  1E27                     	;# 
  5439  1E28                     	;# 
  5440  1E29                     	;# 
  5441  1E2A                     	;# 
  5442  1E2B                     	;# 
  5443  1E2C                     	;# 
  5444  1E2D                     	;# 
  5445  1E2E                     	;# 
  5446  1E2F                     	;# 
  5447  1E30                     	;# 
  5448  1E31                     	;# 
  5449  1E32                     	;# 
  5450  1E33                     	;# 
  5451  1E34                     	;# 
  5452  1E35                     	;# 
  5453  1E36                     	;# 
  5454  1E37                     	;# 
  5455  1E8F                     	;# 
  5456  1E90                     	;# 
  5457  1E91                     	;# 
  5458  1E92                     	;# 
  5459  1E93                     	;# 
  5460  1E94                     	;# 
  5461  1E95                     	;# 
  5462  1E96                     	;# 
  5463  1E97                     	;# 
  5464  1E9C                     	;# 
  5465  1E9D                     	;# 
  5466  1E9E                     	;# 
  5467  1EA1                     	;# 
  5468  1EA2                     	;# 
  5469  1EA3                     	;# 
  5470  1EA4                     	;# 
  5471  1EA9                     	;# 
  5472  1EAA                     	;# 
  5473  1EB1                     	;# 
  5474  1EB2                     	;# 
  5475  1EB8                     	;# 
  5476  1EB9                     	;# 
  5477  1EBA                     	;# 
  5478  1EBB                     	;# 
  5479  1EBC                     	;# 
  5480  1EBD                     	;# 
  5481  1EBE                     	;# 
  5482  1EC3                     	;# 
  5483  1EC5                     	;# 
  5484  1EC6                     	;# 
  5485  1EC7                     	;# 
  5486  1EC8                     	;# 
  5487  1EC9                     	;# 
  5488  1ECA                     	;# 
  5489  1ECB                     	;# 
  5490  1ECB                     	;# 
  5491  1ECB                     	;# 
  5492  1ECC                     	;# 
  5493  1ECC                     	;# 
  5494  1ECC                     	;# 
  5495  1F10                     	;# 
  5496  1F11                     	;# 
  5497  1F12                     	;# 
  5498  1F14                     	;# 
  5499  1F15                     	;# 
  5500  1F1C                     	;# 
  5501  1F1D                     	;# 
  5502  1F1E                     	;# 
  5503  1F1F                     	;# 
  5504  1F20                     	;# 
  5505  1F21                     	;# 
  5506  1F22                     	;# 
  5507  1F23                     	;# 
  5508  1F24                     	;# 
  5509  1F25                     	;# 
  5510  1F26                     	;# 
  5511  1F27                     	;# 
  5512  1F38                     	;# 
  5513  1F39                     	;# 
  5514  1F3A                     	;# 
  5515  1F3B                     	;# 
  5516  1F3C                     	;# 
  5517  1F3D                     	;# 
  5518  1F3E                     	;# 
  5519  1F3F                     	;# 
  5520  1F43                     	;# 
  5521  1F44                     	;# 
  5522  1F45                     	;# 
  5523  1F46                     	;# 
  5524  1F47                     	;# 
  5525  1F48                     	;# 
  5526  1F49                     	;# 
  5527  1F4A                     	;# 
  5528  1F4E                     	;# 
  5529  1F4F                     	;# 
  5530  1F50                     	;# 
  5531  1F51                     	;# 
  5532  1F52                     	;# 
  5533  1F53                     	;# 
  5534  1F54                     	;# 
  5535  1F55                     	;# 
  5536  1FE4                     	;# 
  5537  1FE5                     	;# 
  5538  1FE6                     	;# 
  5539  1FE7                     	;# 
  5540  1FE8                     	;# 
  5541  1FE8                     	;# 
  5542  1FE9                     	;# 
  5543  1FEA                     	;# 
  5544  1FEB                     	;# 
  5545  1FED                     	;# 
  5546  1FEE                     	;# 
  5547  1FEF                     	;_input
  5548                           
  5549 ;; Function _EUSART1_Transmit_ISR is unused but had its address taken
  5550  0000                     
  5551 ;; Function _EUSART1_Receive_ISR is unused but had its address taken
  5552  0000                     
  5553 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
  5554  0000                     
  5555 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
  5556  0000                     
  5557 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
  5558  0000                     
  5559                           	psect	idataCOMMON
  5560  0002                     __pidataCOMMON:	
  5561                           
  5562                           ;initializer for _address
  5563  0002  3401               	retlw	1
  5564  0003  3400               	retlw	0
  5565                           
  5566                           	psect	stringtext1
  5567  1000                     __pstringtext1:	
  5568  1000                     TM1650_setDigit@charTable:	
  5569  1000  3400               	retlw	0
  5570  1001  3482               	retlw	130
  5571  1002  3421               	retlw	33
  5572  1003  3400               	retlw	0
  5573  1004  3400               	retlw	0
  5574  1005  3400               	retlw	0
  5575  1006  3400               	retlw	0
  5576  1007  3402               	retlw	2
  5577  1008  3439               	retlw	57
  5578  1009  340F               	retlw	15
  5579  100A  3400               	retlw	0
  5580  100B  3400               	retlw	0
  5581  100C  3400               	retlw	0
  5582  100D  3440               	retlw	64
  5583  100E  3480               	retlw	128
  5584  100F  3400               	retlw	0
  5585  1010  343F               	retlw	63
  5586  1011  3406               	retlw	6
  5587  1012  345B               	retlw	91
  5588  1013  344F               	retlw	79
  5589  1014  3466               	retlw	102
  5590  1015  346D               	retlw	109
  5591  1016  347D               	retlw	125
  5592  1017  3407               	retlw	7
  5593  1018  347F               	retlw	127
  5594  1019  346F               	retlw	111
  5595  101A  3400               	retlw	0
  5596  101B  3400               	retlw	0
  5597  101C  3400               	retlw	0
  5598  101D  3448               	retlw	72
  5599  101E  3400               	retlw	0
  5600  101F  3453               	retlw	83
  5601  1020  3400               	retlw	0
  5602  1021  3477               	retlw	119
  5603  1022  347C               	retlw	124
  5604  1023  3439               	retlw	57
  5605  1024  345E               	retlw	94
  5606  1025  3479               	retlw	121
  5607  1026  3471               	retlw	113
  5608  1027  346F               	retlw	111
  5609  1028  3476               	retlw	118
  5610  1029  3406               	retlw	6
  5611  102A  341E               	retlw	30
  5612  102B  3400               	retlw	0
  5613  102C  3438               	retlw	56
  5614  102D  3400               	retlw	0
  5615  102E  3454               	retlw	84
  5616  102F  343F               	retlw	63
  5617  1030  3473               	retlw	115
  5618  1031  3467               	retlw	103
  5619  1032  3450               	retlw	80
  5620  1033  346D               	retlw	109
  5621  1034  3478               	retlw	120
  5622  1035  343E               	retlw	62
  5623  1036  3400               	retlw	0
  5624  1037  3400               	retlw	0
  5625  1038  3400               	retlw	0
  5626  1039  346E               	retlw	110
  5627  103A  3400               	retlw	0
  5628  103B  3439               	retlw	57
  5629  103C  3400               	retlw	0
  5630  103D  340F               	retlw	15
  5631  103E  3400               	retlw	0
  5632  103F  3408               	retlw	8
  5633  1040  3463               	retlw	99
  5634  1041  345F               	retlw	95
  5635  1042  347C               	retlw	124
  5636  1043  3458               	retlw	88
  5637  1044  345E               	retlw	94
  5638  1045  347B               	retlw	123
  5639  1046  3471               	retlw	113
  5640  1047  346F               	retlw	111
  5641  1048  3474               	retlw	116
  5642  1049  3402               	retlw	2
  5643  104A  341E               	retlw	30
  5644  104B  3400               	retlw	0
  5645  104C  3406               	retlw	6
  5646  104D  3400               	retlw	0
  5647  104E  3454               	retlw	84
  5648  104F  345C               	retlw	92
  5649  1050  3473               	retlw	115
  5650  1051  3467               	retlw	103
  5651  1052  3450               	retlw	80
  5652  1053  346D               	retlw	109
  5653  1054  3478               	retlw	120
  5654  1055  341C               	retlw	28
  5655  1056  3400               	retlw	0
  5656  1057  3400               	retlw	0
  5657  1058  3400               	retlw	0
  5658  1059  346E               	retlw	110
  5659  105A  3400               	retlw	0
  5660  105B  3439               	retlw	57
  5661  105C  3430               	retlw	48
  5662  105D  340F               	retlw	15
  5663  105E  3400               	retlw	0
  5664  105F  3400               	retlw	0
  5665  1060                     __end_ofTM1650_setDigit@charTable:	
  5666  0014                     _TRISC	set	20
  5667  0013                     _TRISB	set	19
  5668  0012                     _TRISA	set	18
  5669  001A                     _LATC	set	26
  5670  0019                     _LATB	set	25
  5671  0018                     _LATA	set	24
  5672  000B                     _INTCONbits	set	11
  5673  000C                     _PORTA	set	12
  5674  000E                     _PORTC	set	14
  5675  00A4                     _TRISC4	set	164
  5676  00A3                     _TRISC3	set	163
  5677  00A6                     _TRISC6	set	166
  5678  00A7                     _TRISC7	set	167
  5679  009C                     _TRISB4	set	156
  5680  011B                     _SP1BRG	set	283
  5681  011F                     _BAUD1CONbits	set	287
  5682  0119                     _RC1REG	set	281
  5683  011D                     _RC1STAbits	set	285
  5684  011A                     _TX1REG	set	282
  5685  011E                     _TX1STAbits	set	286
  5686  011C                     _SP1BRGH	set	284
  5687  011B                     _SP1BRGL	set	283
  5688  011E                     _TX1STA	set	286
  5689  011D                     _RC1STA	set	285
  5690  011F                     _BAUD1CON	set	287
  5691  018C                     _SSP1BUF	set	396
  5692  0191                     _SSP1CON2bits	set	401
  5693  0190                     _SSP1CON1bits	set	400
  5694  018D                     _SSP1ADD	set	397
  5695  0192                     _SSP1CON3	set	402
  5696  0190                     _SSP1CON1	set	400
  5697  018F                     _SSP1STAT	set	399
  5698  028E                     _T2CONbits	set	654
  5699  0290                     _T2CLKCON	set	656
  5700  0318                     _CCPR4L	set	792
  5701  0319                     _CCPR4H	set	793
  5702  0314                     _CCPR3L	set	788
  5703  0315                     _CCPR3H	set	789
  5704  0310                     _CCPR2L	set	784
  5705  0311                     _CCPR2H	set	785
  5706  030C                     _CCPR1L	set	780
  5707  030D                     _CCPR1H	set	781
  5708  031A                     _CCP4CONbits	set	794
  5709  0316                     _CCP3CONbits	set	790
  5710  0312                     _CCP2CONbits	set	786
  5711  030E                     _CCP1CONbits	set	782
  5712  059E                     _T0CON0bits	set	1438
  5713  059D                     _TMR0H	set	1437
  5714  059F                     _T0CON1bits	set	1439
  5715  0716                     _PIE0bits	set	1814
  5716  070C                     _PIR0bits	set	1804
  5717  070F                     _PIR3bits	set	1807
  5718  0719                     _PIE3bits	set	1817
  5719  079D                     _PMD7	set	1949
  5720  079C                     _PMD6	set	1948
  5721  079B                     _PMD5	set	1947
  5722  079A                     _PMD4	set	1946
  5723  0799                     _PMD3	set	1945
  5724  0798                     _PMD2	set	1944
  5725  0797                     _PMD1	set	1943
  5726  0796                     _PMD0	set	1942
  5727  0892                     _OSCTUNE	set	2194
  5728  0893                     _OSCFRQ	set	2195
  5729  0891                     _OSCEN	set	2193
  5730  088F                     _OSCCON3	set	2191
  5731  088D                     _OSCCON1	set	2189
  5732  1ECB                     _RX1PPS	set	7883
  5733  1ECB                     _RX1DTPPS	set	7883
  5734  1EC6                     _SSP1DATPPS	set	7878
  5735  1EC5                     _SSP1CLKPPS	set	7877
  5736  1F24                     _RC4PPS	set	7972
  5737  1F23                     _RC3PPS	set	7971
  5738  1F26                     _RC6PPS	set	7974
  5739  1F27                     _RC7PPS	set	7975
  5740  1F15                     _RA5PPS	set	7957
  5741  1F1F                     _RB7PPS	set	7967
  5742  1F14                     _RA4PPS	set	7956
  5743  1F51                     _SLRCONC	set	8017
  5744  1F46                     _SLRCONB	set	8006
  5745  1F3B                     _SLRCONA	set	7995
  5746  1F50                     _ODCONC	set	8016
  5747  1F45                     _ODCONB	set	8005
  5748  1F3A                     _ODCONA	set	7994
  5749  1F4F                     _WPUC	set	8015
  5750  1F39                     _WPUA	set	7993
  5751  1F44                     _WPUB	set	8004
  5752  1F38                     _ANSELA	set	7992
  5753  1F43                     _ANSELB	set	8003
  5754  1F4E                     _ANSELC	set	8014
  5755                           
  5756                           ; #config settings
  5757  0000                     
  5758                           	psect	cinit
  5759  0054                     start_initialization:	
  5760  0054                     __initialization:		;BIGRAM
  5761                           
  5762                           ; Initialize objects allocated to COMMON
  5763  0054  3180  2002  3180   	fcall	__pidataCOMMON	;fetch initializer
  5764  0057  00FB               	movwf	__pdataCOMMON& (0+127)
  5765  0058  3180  2003  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  5766  005B  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
  5767                           
  5768                           ; Clear objects allocated to BIGRAM
  5769  005C  30EF               	movlw	low (0+9711)
  5770  005D  0084               	movwf	4
  5771  005E  3025               	movlw	high (0+9711)
  5772  005F  0085               	movwf	5
  5773  0060  3001               	movlw	1
  5774  0061  00FE               	movwf	btemp
  5775  0062  3002               	movlw	2
  5776  0063  00FF               	movwf	btemp+1
  5777  0064  3188  20BB  3180   	fcall	clear_ram0
  5778                           
  5779                           ; Clear objects allocated to COMMON
  5780  0067  01FD               	clrf	__pbssCOMMON& (0+127)
  5781                           
  5782                           ; Clear objects allocated to BANK1
  5783  0068  30A0               	movlw	low __pbssBANK1
  5784  0069  0084               	movwf	4
  5785  006A  3000               	movlw	high __pbssBANK1
  5786  006B  0085               	movwf	5
  5787  006C  303D               	movlw	61
  5788  006D  00FE               	movwf	btemp
  5789  006E  3000               	movlw	0
  5790  006F  00FF               	movwf	btemp+1
  5791  0070  3188  20BB  3180   	fcall	clear_ram0
  5792                           
  5793                           ; Clear objects allocated to BANK2
  5794  0073  3020               	movlw	low __pbssBANK2
  5795  0074  0084               	movwf	4
  5796  0075  3001               	movlw	high __pbssBANK2
  5797  0076  0085               	movwf	5
  5798  0077  3030               	movlw	48
  5799  0078  00FE               	movwf	btemp
  5800  0079  3000               	movlw	0
  5801  007A  00FF               	movwf	btemp+1
  5802  007B  3188  20BB         	fcall	clear_ram0
  5803  007D                     end_of_initialization:	
  5804                           ;End of C runtime variable initialization code
  5805                           
  5806  007D                     __end_of__initialization:	
  5807  007D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5808  007E  0140               	movlb	0
  5809  007F  318B  2BF4         	ljmp	_main	;jump to C main() function
  5810                           
  5811                           	psect	bssCOMMON
  5812  007D                     __pbssCOMMON:	
  5813  007D                     _eusart1RxHead:	
  5814  007D                     	ds	1
  5815                           
  5816                           	psect	dataCOMMON
  5817  007B                     __pdataCOMMON:	
  5818  007B                     _address:	
  5819  007B                     	ds	2
  5820                           
  5821                           	psect	bssBANK1
  5822  00A0                     __pbssBANK1:	
  5823  00A0                     _eusart1RxStatusBuffer:	
  5824  00A0                     	ds	8
  5825  00A8                     _i2c1_object:	
  5826  00A8                     	ds	5
  5827  00AD                     _lastTime:	
  5828  00AD                     	ds	2
  5829  00AF                     _EUSART1_ErrorHandler:	
  5830  00AF                     	ds	2
  5831  00B1                     _EUSART1_OverrunErrorHandler:	
  5832  00B1                     	ds	2
  5833  00B3                     _EUSART1_FramingErrorHandler:	
  5834  00B3                     	ds	2
  5835  00B5                     _ClockCurrentTime:	
  5836  00B5                     	ds	2
  5837  00B7                     _point:	
  5838  00B7                     	ds	2
  5839  00B9                     _count:	
  5840  00B9                     	ds	2
  5841  00BB                     _EUSART1_RxDefaultInterruptHandler:	
  5842  00BB                     	ds	2
  5843  00BD                     _EUSART1_TxDefaultInterruptHandler:	
  5844  00BD                     	ds	2
  5845  00BF                     I2C1_ISR@i2c_10bit_address_restart:	
  5846  00BF                     	ds	1
  5847  00C0                     I2C1_ISR@i2c_bytes_left:	
  5848  00C0                     	ds	1
  5849  00C1                     I2C1_ISR@pi2c_buf_ptr:	
  5850  00C1                     	ds	1
  5851  00C2                     _p_i2c1_current:	
  5852  00C2                     	ds	1
  5853  00C3                     _p_i2c1_trb_current:	
  5854  00C3                     	ds	1
  5855  00C4                     _i2c1_trb_count:	
  5856  00C4                     	ds	1
  5857  00C5                     _i2c1_state:	
  5858  00C5                     	ds	1
  5859  00C6                     _eusart1RxLastError:	
  5860  00C6                     	ds	1
  5861  00C7                     _eusart1RxCount:	
  5862  00C7                     	ds	1
  5863  00C8                     _eusart1RxTail:	
  5864  00C8                     	ds	1
  5865  00C9                     _eusart1TxBufferRemaining:	
  5866  00C9                     	ds	1
  5867  00CA                     _eusart1TxTail:	
  5868  00CA                     	ds	1
  5869  00CB                     _eusart1TxHead:	
  5870  00CB                     	ds	1
  5871  00CC                     _menu:	
  5872  00CC                     	ds	1
  5873  00CD                     _enter:	
  5874  00CD                     	ds	1
  5875  00CE                     _down:	
  5876  00CE                     	ds	1
  5877  00CF                     _up:	
  5878  00CF                     	ds	1
  5879  00D0                     I2C1_MasterRead@trBlock:	
  5880  00D0                     	ds	4
  5881  00D4                     I2C1_MasterWrite@trBlock:	
  5882  00D4                     	ds	4
  5883  00D8                     _i2c1_tr_queue:	
  5884  00D8                     	ds	3
  5885  00DB                     I2C1_ISR@i2c_address:	
  5886  00DB                     	ds	2
  5887                           
  5888                           	psect	bssBANK2
  5889  0120                     __pbssBANK2:	
  5890  0120                     _eusart1RxBuffer:	
  5891  0120                     	ds	8
  5892  0128                     _eusart1TxBuffer:	
  5893  0128                     	ds	8
  5894  0130                     _buttons:	
  5895  0130                     	ds	32
  5896                           
  5897                           	psect	clrtext
  5898  08BB                     clear_ram0:	
  5899                           ;	Called with FSR0 containing the base address, and
  5900                           ;	btemp/btemp+1 has the size to clear
  5901                           
  5902  08BB  0064               	clrwdt	;clear the watchdog before getting into this loop
  5903  08BC                     clrloop0:	
  5904  08BC  0180               	clrf	0	;clear RAM location pointed to by FSR
  5905  08BD  3101               	addfsr 0,1
  5906  08BE  3001               	movlw	1
  5907  08BF  02FE               	subwf	126,f
  5908  08C0  3000               	movlw	0
  5909  08C1  3BFF               	subwfb	127,f
  5910  08C2  087F               	movf	127,w
  5911  08C3  047E               	iorwf	126,w
  5912  08C4  1903               	btfsc	3,2
  5913  08C5  3400               	retlw	0	;all done for this memory range, return
  5914  08C6  28BC               	goto	clrloop0	;have we reached the end yet?
  5915                           
  5916                           	psect	cstackBANK1
  5917  00DD                     __pcstackBANK1:	
  5918  00DD                     ??_LED_setColor:	
  5919                           
  5920                           ; 1 bytes @ 0x0
  5921  00DD                     	ds	5
  5922  00E2                     LED_setColor@R:	
  5923                           
  5924                           ; 1 bytes @ 0x5
  5925  00E2                     	ds	1
  5926  00E3                     ??_main:	
  5927                           
  5928                           ; 1 bytes @ 0x6
  5929  00E3                     	ds	11
  5930                           
  5931                           	psect	cstackCOMMON
  5932  0070                     __pcstackCOMMON:	
  5933  0070                     ?_TM1650_init:	
  5934  0070                     ?_UART_init:	
  5935                           ; 1 bytes @ 0x0
  5936                           
  5937  0070                     ?_LED_init:	
  5938                           ; 1 bytes @ 0x0
  5939                           
  5940  0070                     ?_CLOCK_init:	
  5941                           ; 1 bytes @ 0x0
  5942                           
  5943  0070                     ?_BUTTONS_init:	
  5944                           ; 1 bytes @ 0x0
  5945                           
  5946  0070                     ?_CONTROLLER_init:	
  5947                           ; 1 bytes @ 0x0
  5948                           
  5949  0070                     ?_BUTTONS_task:	
  5950                           ; 1 bytes @ 0x0
  5951                           
  5952  0070                     ?_CONTROLLER_task:	
  5953                           ; 1 bytes @ 0x0
  5954                           
  5955  0070                     ?_I2C1_BusCollisionISR:	
  5956                           ; 1 bytes @ 0x0
  5957                           
  5958  0070                     ??_I2C1_BusCollisionISR:	
  5959                           ; 1 bytes @ 0x0
  5960                           
  5961  0070                     ?_I2C1_ISR:	
  5962                           ; 1 bytes @ 0x0
  5963                           
  5964  0070                     ?_PMD_Initialize:	
  5965                           ; 1 bytes @ 0x0
  5966                           
  5967  0070                     ?_PIN_MANAGER_Initialize:	
  5968                           ; 1 bytes @ 0x0
  5969                           
  5970  0070                     ?_OSCILLATOR_Initialize:	
  5971                           ; 1 bytes @ 0x0
  5972                           
  5973  0070                     ?_I2C1_Initialize:	
  5974                           ; 1 bytes @ 0x0
  5975                           
  5976  0070                     ?_I2C1_Stop:	
  5977                           ; 1 bytes @ 0x0
  5978                           
  5979  0070                     ??_I2C1_Stop:	
  5980                           ; 1 bytes @ 0x0
  5981                           
  5982  0070                     ?_I2C1_FunctionComplete:	
  5983                           ; 1 bytes @ 0x0
  5984                           
  5985  0070                     ??_I2C1_FunctionComplete:	
  5986                           ; 1 bytes @ 0x0
  5987                           
  5988  0070                     ?_main:	
  5989                           ; 1 bytes @ 0x0
  5990                           
  5991  0070                     ?_INTERRUPT_InterruptManager:	
  5992                           ; 1 bytes @ 0x0
  5993                           
  5994  0070                     ?_SYSTEM_Initialize:	
  5995                           ; 1 bytes @ 0x0
  5996                           
  5997  0070                     ?_I2C1_WaitForLastPacketToComplete:	
  5998                           ; 1 bytes @ 0x0
  5999                           
  6000  0070                     ?_BUTTONS_isClicked:	
  6001                           ; 1 bytes @ 0x0
  6002                           
  6003  0070                     ?_BUTTONS_isHeld:	
  6004                           ; 1 bytes @ 0x0
  6005                           
  6006  0070                     ?_address_inc:	
  6007                           ; 1 bytes @ 0x0
  6008                           
  6009  0070                     ?_address_dec:	
  6010                           ; 1 bytes @ 0x0
  6011                           
  6012                           
  6013                           ; 1 bytes @ 0x0
  6014  0070                     	ds	1
  6015  0071                     I2C1_Stop@completion_code:	
  6016                           
  6017                           ; 1 bytes @ 0x1
  6018  0071                     	ds	1
  6019  0072                     ??_I2C1_ISR:	
  6020                           
  6021                           ; 1 bytes @ 0x2
  6022  0072                     	ds	4
  6023  0076                     ??_INTERRUPT_InterruptManager:	
  6024                           
  6025                           ; 1 bytes @ 0x6
  6026  0076                     	ds	4
  6027  007A                     INTERRUPT_InterruptManager@dataIn:	
  6028                           
  6029                           ; 1 bytes @ 0xA
  6030  007A                     	ds	1
  6031                           
  6032                           	psect	cstackBANK0
  6033  0020                     __pcstackBANK0:	
  6034  0020                     ??_UART_init:	
  6035  0020                     ??_LED_init:	
  6036                           ; 1 bytes @ 0x0
  6037                           
  6038  0020                     ??_CLOCK_init:	
  6039                           ; 1 bytes @ 0x0
  6040                           
  6041  0020                     ??_PMD_Initialize:	
  6042                           ; 1 bytes @ 0x0
  6043                           
  6044  0020                     ??_PIN_MANAGER_Initialize:	
  6045                           ; 1 bytes @ 0x0
  6046                           
  6047  0020                     ??_OSCILLATOR_Initialize:	
  6048                           ; 1 bytes @ 0x0
  6049                           
  6050  0020                     ??_I2C1_Initialize:	
  6051                           ; 1 bytes @ 0x0
  6052                           
  6053  0020                     ?_I2C1_MasterWriteTRBBuild:	
  6054                           ; 1 bytes @ 0x0
  6055                           
  6056  0020                     ?_I2C1_MasterTRBInsert:	
  6057                           ; 1 bytes @ 0x0
  6058                           
  6059  0020                     ??_I2C1_WaitForLastPacketToComplete:	
  6060                           ; 1 bytes @ 0x0
  6061                           
  6062  0020                     ?_init:	
  6063                           ; 1 bytes @ 0x0
  6064                           
  6065  0020                     ??_BUTTONS_isClicked:	
  6066                           ; 1 bytes @ 0x0
  6067                           
  6068  0020                     ??_BUTTONS_isHeld:	
  6069                           ; 1 bytes @ 0x0
  6070                           
  6071  0020                     ?__Umul8_16:	
  6072                           ; 1 bytes @ 0x0
  6073                           
  6074  0020                     ?_CLOCK_getTime:	
  6075                           ; 2 bytes @ 0x0
  6076                           
  6077  0020                     ?___lwmod:	
  6078                           ; 2 bytes @ 0x0
  6079                           
  6080  0020                     ?___xxtofl:	
  6081                           ; 2 bytes @ 0x0
  6082                           
  6083  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  6084                           ; 4 bytes @ 0x0
  6085                           
  6086  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  6087                           ; 1 bytes @ 0x0
  6088                           
  6089  0020                     BUTTONS_isClicked@button:	
  6090                           ; 1 bytes @ 0x0
  6091                           
  6092  0020                     BUTTONS_isHeld@button:	
  6093                           ; 1 bytes @ 0x0
  6094                           
  6095  0020                     __Umul8_16@multiplicand:	
  6096                           ; 1 bytes @ 0x0
  6097                           
  6098  0020                     init@port:	
  6099                           ; 1 bytes @ 0x0
  6100                           
  6101  0020                     ___lwmod@divisor:	
  6102                           ; 2 bytes @ 0x0
  6103                           
  6104  0020                     ___xxtofl@val:	
  6105                           ; 2 bytes @ 0x0
  6106                           
  6107                           
  6108                           ; 4 bytes @ 0x0
  6109  0020                     	ds	1
  6110  0021                     ??_SYSTEM_Initialize:	
  6111  0021                     I2C1_MasterTRBInsert@pflag:	
  6112                           ; 1 bytes @ 0x1
  6113                           
  6114  0021                     I2C1_MasterWriteTRBBuild@length:	
  6115                           ; 1 bytes @ 0x1
  6116                           
  6117                           
  6118                           ; 1 bytes @ 0x1
  6119  0021                     	ds	1
  6120  0022                     ??_BUTTONS_task:	
  6121  0022                     ??_I2C1_MasterTRBInsert:	
  6122                           ; 1 bytes @ 0x2
  6123                           
  6124  0022                     ??__Umul8_16:	
  6125                           ; 1 bytes @ 0x2
  6126                           
  6127  0022                     ??_CLOCK_getTime:	
  6128                           ; 1 bytes @ 0x2
  6129                           
  6130  0022                     init@pin:	
  6131                           ; 1 bytes @ 0x2
  6132                           
  6133  0022                     I2C1_MasterWriteTRBBuild@address:	
  6134                           ; 1 bytes @ 0x2
  6135                           
  6136  0022                     ___lwmod@dividend:	
  6137                           ; 2 bytes @ 0x2
  6138                           
  6139                           
  6140                           ; 2 bytes @ 0x2
  6141  0022                     	ds	1
  6142  0023                     ??_init:	
  6143  0023                     I2C1_MasterTRBInsert@count:	
  6144                           ; 1 bytes @ 0x3
  6145                           
  6146                           
  6147                           ; 1 bytes @ 0x3
  6148  0023                     	ds	1
  6149  0024                     ??_I2C1_MasterWriteTRBBuild:	
  6150  0024                     ??___lwmod:	
  6151                           ; 1 bytes @ 0x4
  6152                           
  6153  0024                     ??___xxtofl:	
  6154                           ; 1 bytes @ 0x4
  6155                           
  6156  0024                     init@btn:	
  6157                           ; 1 bytes @ 0x4
  6158                           
  6159  0024                     __Umul8_16@product:	
  6160                           ; 1 bytes @ 0x4
  6161                           
  6162                           
  6163                           ; 2 bytes @ 0x4
  6164  0024                     	ds	1
  6165  0025                     ??_BUTTONS_init:	
  6166  0025                     BUTTONS_task@i:	
  6167                           ; 1 bytes @ 0x5
  6168                           
  6169  0025                     ___lwmod@counter:	
  6170                           ; 1 bytes @ 0x5
  6171                           
  6172                           
  6173                           ; 1 bytes @ 0x5
  6174  0025                     	ds	1
  6175  0026                     ?___lwdiv:	
  6176  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  6177                           ; 2 bytes @ 0x6
  6178                           
  6179  0026                     BUTTONS_task@time:	
  6180                           ; 1 bytes @ 0x6
  6181                           
  6182  0026                     ___lwdiv@divisor:	
  6183                           ; 2 bytes @ 0x6
  6184                           
  6185  0026                     __Umul8_16@word_mpld:	
  6186                           ; 2 bytes @ 0x6
  6187                           
  6188                           
  6189                           ; 2 bytes @ 0x6
  6190  0026                     	ds	1
  6191  0027                     ?_I2C1_MasterWrite:	
  6192  0027                     I2C1_MasterWrite@length:	
  6193                           ; 1 bytes @ 0x7
  6194                           
  6195                           
  6196                           ; 1 bytes @ 0x7
  6197  0027                     	ds	1
  6198  0028                     BUTTONS_task@btn:	
  6199  0028                     ___xxtofl@sign:	
  6200                           ; 1 bytes @ 0x8
  6201                           
  6202  0028                     __Umul8_16@multiplier:	
  6203                           ; 1 bytes @ 0x8
  6204                           
  6205  0028                     I2C1_MasterWrite@address:	
  6206                           ; 1 bytes @ 0x8
  6207                           
  6208  0028                     ___lwdiv@dividend:	
  6209                           ; 2 bytes @ 0x8
  6210                           
  6211                           
  6212                           ; 2 bytes @ 0x8
  6213  0028                     	ds	1
  6214  0029                     ___xxtofl@exp:	
  6215                           
  6216                           ; 1 bytes @ 0x9
  6217  0029                     	ds	1
  6218  002A                     ??___lwdiv:	
  6219  002A                     I2C1_MasterWrite@pflag:	
  6220                           ; 1 bytes @ 0xA
  6221                           
  6222  002A                     ___xxtofl@arg:	
  6223                           ; 1 bytes @ 0xA
  6224                           
  6225                           
  6226                           ; 4 bytes @ 0xA
  6227  002A                     	ds	1
  6228  002B                     ??_I2C1_MasterWrite:	
  6229  002B                     ___lwdiv@quotient:	
  6230                           ; 1 bytes @ 0xB
  6231                           
  6232                           
  6233                           ; 2 bytes @ 0xB
  6234  002B                     	ds	2
  6235  002D                     I2C1_MasterWrite@pdata:	
  6236  002D                     ___lwdiv@counter:	
  6237                           ; 1 bytes @ 0xD
  6238                           
  6239                           
  6240                           ; 1 bytes @ 0xD
  6241  002D                     	ds	1
  6242  002E                     ?_writeData:	
  6243  002E                     ?___fldiv:	
  6244                           ; 1 bytes @ 0xE
  6245                           
  6246  002E                     writeData@data:	
  6247                           ; 4 bytes @ 0xE
  6248                           
  6249  002E                     ___fldiv@a:	
  6250                           ; 1 bytes @ 0xE
  6251                           
  6252                           
  6253                           ; 4 bytes @ 0xE
  6254  002E                     	ds	1
  6255  002F                     ??_writeData:	
  6256                           
  6257                           ; 1 bytes @ 0xF
  6258  002F                     	ds	3
  6259  0032                     writeData@address:	
  6260  0032                     ___fldiv@b:	
  6261                           ; 1 bytes @ 0x12
  6262                           
  6263                           
  6264                           ; 4 bytes @ 0x12
  6265  0032                     	ds	1
  6266  0033                     writeData@dataToSend:	
  6267                           
  6268                           ; 1 bytes @ 0x13
  6269  0033                     	ds	1
  6270  0034                     writeData@status:	
  6271                           
  6272                           ; 1 bytes @ 0x14
  6273  0034                     	ds	1
  6274  0035                     ??_TM1650_init:	
  6275  0035                     ?_TM1650_setDigit:	
  6276                           ; 1 bytes @ 0x15
  6277                           
  6278  0035                     TM1650_setDigit@num:	
  6279                           ; 1 bytes @ 0x15
  6280                           
  6281                           
  6282                           ; 1 bytes @ 0x15
  6283  0035                     	ds	1
  6284  0036                     ??___fldiv:	
  6285  0036                     TM1650_setDigit@dp:	
  6286                           ; 1 bytes @ 0x16
  6287                           
  6288                           
  6289                           ; 1 bytes @ 0x16
  6290  0036                     	ds	1
  6291  0037                     ??_TM1650_setDigit:	
  6292                           
  6293                           ; 1 bytes @ 0x17
  6294  0037                     	ds	2
  6295  0039                     TM1650_setDigit@digit:	
  6296                           
  6297                           ; 1 bytes @ 0x19
  6298  0039                     	ds	1
  6299  003A                     TM1650_setDigit@data:	
  6300                           
  6301                           ; 1 bytes @ 0x1A
  6302  003A                     	ds	1
  6303  003B                     ?_TM1650_fastPrintNum:	
  6304  003B                     TM1650_fastPrintNum@num:	
  6305                           ; 1 bytes @ 0x1B
  6306                           
  6307  003B                     ___fldiv@rem:	
  6308                           ; 2 bytes @ 0x1B
  6309                           
  6310                           
  6311                           ; 4 bytes @ 0x1B
  6312  003B                     	ds	2
  6313  003D                     ??_TM1650_fastPrintNum:	
  6314                           
  6315                           ; 1 bytes @ 0x1D
  6316  003D                     	ds	1
  6317  003E                     _TM1650_fastPrintNum$2184:	
  6318                           
  6319                           ; 2 bytes @ 0x1E
  6320  003E                     	ds	1
  6321  003F                     ___fldiv@sign:	
  6322                           
  6323                           ; 1 bytes @ 0x1F
  6324  003F                     	ds	1
  6325  0040                     ___fldiv@new_exp:	
  6326  0040                     _TM1650_fastPrintNum$2183:	
  6327                           ; 2 bytes @ 0x20
  6328                           
  6329                           
  6330                           ; 2 bytes @ 0x20
  6331  0040                     	ds	2
  6332  0042                     TM1650_fastPrintNum@array:	
  6333  0042                     ___fldiv@grs:	
  6334                           ; 4 bytes @ 0x22
  6335                           
  6336                           
  6337                           ; 4 bytes @ 0x22
  6338  0042                     	ds	4
  6339  0046                     ___fldiv@bexp:	
  6340  0046                     _TM1650_fastPrintNum$2182:	
  6341                           ; 1 bytes @ 0x26
  6342                           
  6343                           
  6344                           ; 2 bytes @ 0x26
  6345  0046                     	ds	1
  6346  0047                     ___fldiv@aexp:	
  6347                           
  6348                           ; 1 bytes @ 0x27
  6349  0047                     	ds	1
  6350  0048                     ??_CONTROLLER_init:	
  6351  0048                     ??_CONTROLLER_task:	
  6352                           ; 1 bytes @ 0x28
  6353                           
  6354  0048                     ??_address_inc:	
  6355                           ; 1 bytes @ 0x28
  6356                           
  6357  0048                     ??_address_dec:	
  6358                           ; 1 bytes @ 0x28
  6359                           
  6360  0048                     ?___flmul:	
  6361                           ; 1 bytes @ 0x28
  6362                           
  6363  0048                     ___flmul@b:	
  6364                           ; 4 bytes @ 0x28
  6365                           
  6366                           
  6367                           ; 4 bytes @ 0x28
  6368  0048                     	ds	4
  6369  004C                     ___flmul@a:	
  6370                           
  6371                           ; 4 bytes @ 0x2C
  6372  004C                     	ds	4
  6373  0050                     ??___flmul:	
  6374                           
  6375                           ; 1 bytes @ 0x30
  6376  0050                     	ds	5
  6377  0055                     ___flmul@sign:	
  6378                           
  6379                           ; 1 bytes @ 0x35
  6380  0055                     	ds	1
  6381  0056                     ___flmul@grs:	
  6382                           
  6383                           ; 4 bytes @ 0x36
  6384  0056                     	ds	4
  6385  005A                     ___flmul@aexp:	
  6386                           
  6387                           ; 1 bytes @ 0x3A
  6388  005A                     	ds	1
  6389  005B                     ___flmul@bexp:	
  6390                           
  6391                           ; 1 bytes @ 0x3B
  6392  005B                     	ds	1
  6393  005C                     ___flmul@prod:	
  6394                           
  6395                           ; 4 bytes @ 0x3C
  6396  005C                     	ds	4
  6397  0060                     ___flmul@temp:	
  6398                           
  6399                           ; 2 bytes @ 0x40
  6400  0060                     	ds	2
  6401  0062                     ?___fltol:	
  6402  0062                     ___fltol@f1:	
  6403                           ; 4 bytes @ 0x42
  6404                           
  6405                           
  6406                           ; 4 bytes @ 0x42
  6407  0062                     	ds	4
  6408  0066                     ??___fltol:	
  6409                           
  6410                           ; 1 bytes @ 0x46
  6411  0066                     	ds	5
  6412  006B                     ___fltol@sign1:	
  6413                           
  6414                           ; 1 bytes @ 0x4B
  6415  006B                     	ds	1
  6416  006C                     ___fltol@exp1:	
  6417                           
  6418                           ; 1 bytes @ 0x4C
  6419  006C                     	ds	1
  6420  006D                     ?_LED_setColor:	
  6421  006D                     LED_setColor@G:	
  6422                           ; 1 bytes @ 0x4D
  6423                           
  6424                           
  6425                           ; 1 bytes @ 0x4D
  6426  006D                     	ds	1
  6427  006E                     LED_setColor@B:	
  6428                           
  6429                           ; 1 bytes @ 0x4E
  6430  006E                     	ds	1
  6431  006F                     LED_setColor@W:	
  6432                           
  6433                           ; 1 bytes @ 0x4F
  6434  006F                     	ds	1
  6435                           
  6436                           	psect	maintext
  6437  0BF4                     __pmaintext:	
  6438 ;;
  6439 ;;Main: autosize = 0, tempsize = 11, incstack = 0, save=0
  6440 ;;
  6441 ;; *************** function _main *****************
  6442 ;; Defined at:
  6443 ;;		line 53 in file "main.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;		None
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;		None
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  1    wreg      void 
  6450 ;; Registers used:
  6451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6452 ;; Tracked objects:
  6453 ;;		On entry : B3F/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6459 ;;      Temps:          0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6460 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6461 ;;Total ram usage:       11 bytes
  6462 ;; Hardware stack levels required when called:   11
  6463 ;; This function calls:
  6464 ;;		_BUTTONS_init
  6465 ;;		_BUTTONS_task
  6466 ;;		_CLOCK_init
  6467 ;;		_CONTROLLER_init
  6468 ;;		_CONTROLLER_task
  6469 ;;		_LED_init
  6470 ;;		_LED_setColor
  6471 ;;		_TM1650_fastPrintNum
  6472 ;;		_TM1650_init
  6473 ;;		_UART_init
  6474 ;; This function is called by:
  6475 ;;		Startup code after reset
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           
  6480                           ;psect for function _main
  6481  0BF4                     _main:	
  6482                           
  6483                           ;main.c: 55:     TM1650_init();
  6484                           
  6485                           ;incstack = 0
  6486                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6487  0BF4  3188  20AF  318B   	fcall	_TM1650_init
  6488                           
  6489                           ;main.c: 56:     UART_init();
  6490  0BF7  3189  2159  318B   	fcall	_UART_init
  6491                           
  6492                           ;main.c: 57:     LED_init();
  6493  0BFA  318A  22D8  318B   	fcall	_LED_init
  6494                           
  6495                           ;main.c: 58:     CLOCK_init();
  6496  0BFD  3188  20D6  318B   	fcall	_CLOCK_init
  6497                           
  6498                           ;main.c: 59:     BUTTONS_init();
  6499  0C00  318B  2357  318B   	fcall	_BUTTONS_init
  6500                           
  6501                           ;main.c: 60:     CONTROLLER_init();
  6502  0C03  3188  207F  318B   	fcall	_CONTROLLER_init
  6503  0C06                     l3651:	
  6504                           
  6505                           ;main.c: 62:     {;main.c: 63:         BUTTONS_task();
  6506  0C06  3186  26F2  318B   	fcall	_BUTTONS_task
  6507                           
  6508                           ;main.c: 64:         CONTROLLER_task();
  6509  0C09  3189  21F6  318B   	fcall	_CONTROLLER_task
  6510                           
  6511                           ;main.c: 65:         TM1650_fastPrintNum(address);
  6512  0C0C  087C               	movf	_address+1,w
  6513  0C0D  0140               	movlb	0	; select bank0
  6514  0C0E  00BC               	movwf	TM1650_fastPrintNum@num+1
  6515  0C0F  087B               	movf	_address,w
  6516  0C10  00BB               	movwf	TM1650_fastPrintNum@num
  6517  0C11  3180  2081  318B   	fcall	_TM1650_fastPrintNum
  6518                           
  6519                           ;main.c: 66:         LED_setColor(input[address],input[address+1],input[address+2],input
      +                          [address+3]);
  6520  0C14  30F0               	movlw	240
  6521  0C15  0141               	movlb	1	; select bank1
  6522  0C16  00E3               	movwf	??_main^(0+128)
  6523  0C17  3025               	movlw	37
  6524  0C18  00E4               	movwf	(??_main^(0+128)+1)
  6525  0C19  087B               	movf	_address,w
  6526  0C1A  0763               	addwf	??_main^(0+128),w
  6527  0C1B  0086               	movwf	6
  6528  0C1C  087C               	movf	_address+1,w
  6529  0C1D  3D64               	addwfc	(??_main+1)^(0+128),w
  6530  0C1E  0087               	movwf	7
  6531  0C1F  0801               	movf	1,w
  6532  0C20  00E5               	movwf	(??_main+2)^(0+128)
  6533  0C21  0865               	movf	(??_main+2)^(0+128),w
  6534  0C22  0140               	movlb	0	; select bank0
  6535  0C23  00ED               	movwf	LED_setColor@G
  6536  0C24  30F1               	movlw	241
  6537  0C25  0141               	movlb	1	; select bank1
  6538  0C26  00E6               	movwf	(??_main+3)^(0+128)
  6539  0C27  3025               	movlw	37
  6540  0C28  00E7               	movwf	((??_main+3)^(0+128)+1)
  6541  0C29  087B               	movf	_address,w
  6542  0C2A  0766               	addwf	(??_main+3)^(0+128),w
  6543  0C2B  0086               	movwf	6
  6544  0C2C  087C               	movf	_address+1,w
  6545  0C2D  3D67               	addwfc	(??_main+4)^(0+128),w
  6546  0C2E  0087               	movwf	7
  6547  0C2F  0801               	movf	1,w
  6548  0C30  00E8               	movwf	(??_main+5)^(0+128)
  6549  0C31  0868               	movf	(??_main+5)^(0+128),w
  6550  0C32  0140               	movlb	0	; select bank0
  6551  0C33  00EE               	movwf	LED_setColor@B
  6552  0C34  30F2               	movlw	242
  6553  0C35  0141               	movlb	1	; select bank1
  6554  0C36  00E9               	movwf	(??_main+6)^(0+128)
  6555  0C37  3025               	movlw	37
  6556  0C38  00EA               	movwf	((??_main+6)^(0+128)+1)
  6557  0C39  087B               	movf	_address,w
  6558  0C3A  0769               	addwf	(??_main+6)^(0+128),w
  6559  0C3B  0086               	movwf	6
  6560  0C3C  087C               	movf	_address+1,w
  6561  0C3D  3D6A               	addwfc	(??_main+7)^(0+128),w
  6562  0C3E  0087               	movwf	7
  6563  0C3F  0801               	movf	1,w
  6564  0C40  00EB               	movwf	(??_main+8)^(0+128)
  6565  0C41  086B               	movf	(??_main+8)^(0+128),w
  6566  0C42  0140               	movlb	0	; select bank0
  6567  0C43  00EF               	movwf	LED_setColor@W
  6568  0C44  30EF               	movlw	239
  6569  0C45  0141               	movlb	1	; select bank1
  6570  0C46  00EC               	movwf	(??_main+9)^(0+128)
  6571  0C47  3025               	movlw	37
  6572  0C48  00ED               	movwf	((??_main+9)^(0+128)+1)
  6573  0C49  087B               	movf	_address,w
  6574  0C4A  076C               	addwf	(??_main+9)^(0+128),w
  6575  0C4B  0086               	movwf	6
  6576  0C4C  087C               	movf	_address+1,w
  6577  0C4D  3D6D               	addwfc	(??_main+10)^(0+128),w
  6578  0C4E  0087               	movwf	7
  6579  0C4F  0801               	movf	1,w
  6580  0C50  318E  269A  318B   	fcall	_LED_setColor
  6581  0C53  2C06               	goto	l3651
  6582  0C54                     __end_of_main:	
  6583                           
  6584                           	psect	text1
  6585  0959                     __ptext1:	
  6586 ;; *************** function _UART_init *****************
  6587 ;; Defined at:
  6588 ;;		line 13 in file "DMX_Source.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;		None
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;		None
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  1    wreg      void 
  6595 ;; Registers used:
  6596 ;;		wreg, status,2
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6606 ;;Total ram usage:        0 bytes
  6607 ;; Hardware stack levels used:    1
  6608 ;; Hardware stack levels required when called:    3
  6609 ;; This function calls:
  6610 ;;		Nothing
  6611 ;; This function is called by:
  6612 ;;		_main
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           
  6617                           ;psect for function _UART_init
  6618  0959                     _UART_init:	
  6619                           
  6620                           ;DMX_Source.c: 14:     SP1BRG = 0x03;
  6621                           
  6622                           ;incstack = 0
  6623                           ; Regs used in _UART_init: [wreg+status,2]
  6624  0959  3000               	movlw	0
  6625  095A  0142               	movlb	2	; select bank2
  6626  095B  009C               	movwf	28	;volatile
  6627  095C  3003               	movlw	3
  6628  095D  009B               	movwf	27	;volatile
  6629                           
  6630                           ;DMX_Source.c: 16:     TX1STAbits.BRGH = 1;
  6631  095E  151E               	bsf	30,2	;volatile
  6632                           
  6633                           ;DMX_Source.c: 17:     BAUD1CONbits.BRG16 = 1;
  6634  095F  159F               	bsf	31,3	;volatile
  6635                           
  6636                           ;DMX_Source.c: 20:     RX1PPS = 0b00001100;
  6637  0960  300C               	movlw	12
  6638  0961  017D               	movlb	61	; select bank61
  6639  0962  00CB               	movwf	75	;volatile
  6640                           
  6641                           ;DMX_Source.c: 22:     TX1STAbits.SYNC = 0;
  6642  0963  0142               	movlb	2	; select bank2
  6643  0964  121E               	bcf	30,4	;volatile
  6644                           
  6645                           ;DMX_Source.c: 24:     RC1STAbits.SPEN = 1;
  6646  0965  179D               	bsf	29,7	;volatile
  6647                           
  6648                           ;DMX_Source.c: 26:     RC1STAbits.RX9 = 0;
  6649  0966  131D               	bcf	29,6	;volatile
  6650                           
  6651                           ;DMX_Source.c: 27:     RC1STAbits.CREN = 1;
  6652  0967  161D               	bsf	29,4	;volatile
  6653                           
  6654                           ;DMX_Source.c: 28:     TX1STAbits.TXEN = 0;
  6655  0968  129E               	bcf	30,5	;volatile
  6656                           
  6657                           ;DMX_Source.c: 30:     TRISB4 = 1;
  6658  0969  0140               	movlb	0	; select bank0
  6659  096A  1613               	bsf	19,4	;volatile
  6660                           
  6661                           ;DMX_Source.c: 31:     ANSELB = 0x00;
  6662  096B  017E               	movlb	62	; select bank62
  6663  096C  01C3               	clrf	67	;volatile
  6664                           
  6665                           ;DMX_Source.c: 33:     point = 0;
  6666  096D  0141               	movlb	1	; select bank1
  6667  096E  01B7               	clrf	_point^(0+128)
  6668  096F  01B8               	clrf	(_point+1)^(0+128)
  6669                           
  6670                           ;DMX_Source.c: 34:     PIE3bits.RC1IE = 1;
  6671  0970  014E               	movlb	14	; select bank14
  6672  0971  1699               	bsf	25,5	;volatile
  6673                           
  6674                           ;DMX_Source.c: 35:     (INTCONbits.GIE = 1);
  6675  0972  178B               	bsf	11,7	;volatile
  6676                           
  6677                           ;DMX_Source.c: 36:     (INTCONbits.PEIE = 1);
  6678  0973  170B               	bsf	11,6	;volatile
  6679  0974  0008               	return
  6680  0975                     __end_of_UART_init:	
  6681                           
  6682                           	psect	text2
  6683  08AF                     __ptext2:	
  6684 ;; *************** function _TM1650_init *****************
  6685 ;; Defined at:
  6686 ;;		line 12 in file "tm1650.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;		None
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;		None
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  1    wreg      void 
  6693 ;; Registers used:
  6694 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6704 ;;Total ram usage:        0 bytes
  6705 ;; Hardware stack levels used:    1
  6706 ;; Hardware stack levels required when called:    7
  6707 ;; This function calls:
  6708 ;;		_SYSTEM_Initialize
  6709 ;;		_writeData
  6710 ;; This function is called by:
  6711 ;;		_main
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           
  6716                           ;psect for function _TM1650_init
  6717  08AF                     _TM1650_init:	
  6718                           
  6719                           ;tm1650.c: 13:     SYSTEM_Initialize();
  6720                           
  6721                           ;incstack = 0
  6722                           ; Regs used in _TM1650_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6723  08AF  3188  20A3  3188   	fcall	_SYSTEM_Initialize
  6724                           
  6725                           ;tm1650.c: 14:     (INTCONbits.GIE = 1);
  6726  08B2  178B               	bsf	11,7	;volatile
  6727                           
  6728                           ;tm1650.c: 15:     (INTCONbits.PEIE = 1);
  6729  08B3  170B               	bsf	11,6	;volatile
  6730                           
  6731                           ;tm1650.c: 16:     writeData(0x24, 0x01);
  6732  08B4  0140               	movlb	0	; select bank0
  6733  08B5  01AE               	clrf	writeData@data
  6734  08B6  0AAE               	incf	writeData@data,f
  6735  08B7  3024               	movlw	36
  6736  08B8  3189  21D5         	fcall	_writeData
  6737  08BA  0008               	return
  6738  08BB                     __end_of_TM1650_init:	
  6739                           
  6740                           	psect	text3
  6741  08A3                     __ptext3:	
  6742 ;; *************** function _SYSTEM_Initialize *****************
  6743 ;; Defined at:
  6744 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6745 ;; Parameters:    Size  Location     Type
  6746 ;;		None
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;		None
  6749 ;; Return value:  Size  Location     Type
  6750 ;;                  1    wreg      void 
  6751 ;; Registers used:
  6752 ;;		wreg, status,2, status,0, pclath, cstack
  6753 ;; Tracked objects:
  6754 ;;		On entry : 0/0
  6755 ;;		On exit  : 0/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6762 ;;Total ram usage:        0 bytes
  6763 ;; Hardware stack levels used:    1
  6764 ;; Hardware stack levels required when called:    4
  6765 ;; This function calls:
  6766 ;;		_I2C1_Initialize
  6767 ;;		_OSCILLATOR_Initialize
  6768 ;;		_PIN_MANAGER_Initialize
  6769 ;;		_PMD_Initialize
  6770 ;; This function is called by:
  6771 ;;		_TM1650_init
  6772 ;; This function uses a non-reentrant model
  6773 ;;
  6774                           
  6775                           
  6776                           ;psect for function _SYSTEM_Initialize
  6777  08A3                     _SYSTEM_Initialize:	
  6778                           
  6779                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  6780                           
  6781                           ;incstack = 0
  6782                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6783  08A3  3188  2099  3188   	fcall	_PMD_Initialize
  6784                           
  6785                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6786  08A6  318A  2274  3188   	fcall	_PIN_MANAGER_Initialize
  6787                           
  6788                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6789  08A9  3188  2090  3188   	fcall	_OSCILLATOR_Initialize
  6790                           
  6791                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
  6792  08AC  3189  213D         	fcall	_I2C1_Initialize
  6793  08AE  0008               	return
  6794  08AF                     __end_of_SYSTEM_Initialize:	
  6795                           
  6796                           	psect	text4
  6797  0899                     __ptext4:	
  6798 ;; *************** function _PMD_Initialize *****************
  6799 ;; Defined at:
  6800 ;;		line 73 in file "mcc_generated_files/mcc.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;		None
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;		None
  6805 ;; Return value:  Size  Location     Type
  6806 ;;                  1    wreg      void 
  6807 ;; Registers used:
  6808 ;;		status,2
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6818 ;;Total ram usage:        0 bytes
  6819 ;; Hardware stack levels used:    1
  6820 ;; Hardware stack levels required when called:    3
  6821 ;; This function calls:
  6822 ;;		Nothing
  6823 ;; This function is called by:
  6824 ;;		_SYSTEM_Initialize
  6825 ;; This function uses a non-reentrant model
  6826 ;;
  6827                           
  6828                           
  6829                           ;psect for function _PMD_Initialize
  6830  0899                     _PMD_Initialize:	
  6831                           
  6832                           ;mcc_generated_files/mcc.c: 76:     PMD0 = 0x00;
  6833                           
  6834                           ;incstack = 0
  6835                           ; Regs used in _PMD_Initialize: [status,2]
  6836  0899  014F               	movlb	15	; select bank15
  6837  089A  0196               	clrf	22	;volatile
  6838                           
  6839                           ;mcc_generated_files/mcc.c: 78:     PMD1 = 0x00;
  6840  089B  0197               	clrf	23	;volatile
  6841                           
  6842                           ;mcc_generated_files/mcc.c: 80:     PMD2 = 0x00;
  6843  089C  0198               	clrf	24	;volatile
  6844                           
  6845                           ;mcc_generated_files/mcc.c: 82:     PMD3 = 0x00;
  6846  089D  0199               	clrf	25	;volatile
  6847                           
  6848                           ;mcc_generated_files/mcc.c: 84:     PMD4 = 0x00;
  6849  089E  019A               	clrf	26	;volatile
  6850                           
  6851                           ;mcc_generated_files/mcc.c: 86:     PMD5 = 0x00;
  6852  089F  019B               	clrf	27	;volatile
  6853                           
  6854                           ;mcc_generated_files/mcc.c: 88:     PMD6 = 0x00;
  6855  08A0  019C               	clrf	28	;volatile
  6856                           
  6857                           ;mcc_generated_files/mcc.c: 90:     PMD7 = 0x00;
  6858  08A1  019D               	clrf	29	;volatile
  6859  08A2  0008               	return
  6860  08A3                     __end_of_PMD_Initialize:	
  6861                           
  6862                           	psect	text5
  6863  0A74                     __ptext5:	
  6864 ;; *************** function _PIN_MANAGER_Initialize *****************
  6865 ;; Defined at:
  6866 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;		None
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;		None
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  1    wreg      void 
  6873 ;; Registers used:
  6874 ;;		wreg, status,2
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6884 ;;Total ram usage:        0 bytes
  6885 ;; Hardware stack levels used:    1
  6886 ;; Hardware stack levels required when called:    3
  6887 ;; This function calls:
  6888 ;;		Nothing
  6889 ;; This function is called by:
  6890 ;;		_SYSTEM_Initialize
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           
  6895                           ;psect for function _PIN_MANAGER_Initialize
  6896  0A74                     _PIN_MANAGER_Initialize:	
  6897                           
  6898                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  6899                           
  6900                           ;incstack = 0
  6901                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6902  0A74  0140               	movlb	0	; select bank0
  6903  0A75  0198               	clrf	24	;volatile
  6904                           
  6905                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  6906  0A76  0199               	clrf	25	;volatile
  6907                           
  6908                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  6909  0A77  019A               	clrf	26	;volatile
  6910                           
  6911                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  6912  0A78  303F               	movlw	63
  6913  0A79  0092               	movwf	18	;volatile
  6914                           
  6915                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  6916  0A7A  3070               	movlw	112
  6917  0A7B  0093               	movwf	19	;volatile
  6918                           
  6919                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  6920  0A7C  30FF               	movlw	255
  6921  0A7D  0094               	movwf	20	;volatile
  6922                           
  6923                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xF8;
  6924  0A7E  30F8               	movlw	248
  6925  0A7F  017E               	movlb	62	; select bank62
  6926  0A80  00CE               	movwf	78	;volatile
  6927                           
  6928                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
  6929  0A81  30E0               	movlw	224
  6930  0A82  00C3               	movwf	67	;volatile
  6931                           
  6932                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x03;
  6933  0A83  3003               	movlw	3
  6934  0A84  00B8               	movwf	56	;volatile
  6935                           
  6936                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  6937  0A85  01C4               	clrf	68	;volatile
  6938                           
  6939                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x04;
  6940  0A86  3004               	movlw	4
  6941  0A87  00B9               	movwf	57	;volatile
  6942                           
  6943                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x07;
  6944  0A88  3007               	movlw	7
  6945  0A89  00CF               	movwf	79	;volatile
  6946                           
  6947                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  6948  0A8A  01BA               	clrf	58	;volatile
  6949                           
  6950                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  6951  0A8B  01C5               	clrf	69	;volatile
  6952                           
  6953                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  6954  0A8C  01D0               	clrf	80	;volatile
  6955                           
  6956                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  6957  0A8D  3037               	movlw	55
  6958  0A8E  00BB               	movwf	59	;volatile
  6959                           
  6960                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  6961  0A8F  30F0               	movlw	240
  6962  0A90  00C6               	movwf	70	;volatile
  6963                           
  6964                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  6965  0A91  30FF               	movlw	255
  6966  0A92  00D1               	movwf	81	;volatile
  6967                           
  6968                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
  6969  0A93  3005               	movlw	5
  6970  0A94  017D               	movlb	61	; select bank61
  6971  0A95  00C5               	movwf	69	;volatile
  6972                           
  6973                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
  6974  0A96  3014               	movlw	20
  6975  0A97  017E               	movlb	62	; select bank62
  6976  0A98  0094               	movwf	20	;volatile
  6977                           
  6978                           ;mcc_generated_files/pin_manager.c: 108:     RB7PPS = 0x0F;
  6979  0A99  300F               	movlw	15
  6980  0A9A  009F               	movwf	31	;volatile
  6981                           
  6982                           ;mcc_generated_files/pin_manager.c: 109:     RA5PPS = 0x13;
  6983  0A9B  3013               	movlw	19
  6984  0A9C  0095               	movwf	21	;volatile
  6985                           
  6986                           ;mcc_generated_files/pin_manager.c: 110:     SSP1DATPPS = 0x04;
  6987  0A9D  3004               	movlw	4
  6988  0A9E  017D               	movlb	61	; select bank61
  6989  0A9F  00C6               	movwf	70	;volatile
  6990                           
  6991                           ;mcc_generated_files/pin_manager.c: 111:     RX1DTPPS = 0x0C;
  6992  0AA0  300C               	movlw	12
  6993  0AA1  00CB               	movwf	75	;volatile
  6994  0AA2  0008               	return
  6995  0AA3                     __end_of_PIN_MANAGER_Initialize:	
  6996                           
  6997                           	psect	text6
  6998  0890                     __ptext6:	
  6999 ;; *************** function _OSCILLATOR_Initialize *****************
  7000 ;; Defined at:
  7001 ;;		line 59 in file "mcc_generated_files/mcc.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;		None
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;		None
  7006 ;; Return value:  Size  Location     Type
  7007 ;;                  1    wreg      void 
  7008 ;; Registers used:
  7009 ;;		wreg, status,2
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7019 ;;Total ram usage:        0 bytes
  7020 ;; Hardware stack levels used:    1
  7021 ;; Hardware stack levels required when called:    3
  7022 ;; This function calls:
  7023 ;;		Nothing
  7024 ;; This function is called by:
  7025 ;;		_SYSTEM_Initialize
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029                           
  7030                           ;psect for function _OSCILLATOR_Initialize
  7031  0890                     _OSCILLATOR_Initialize:	
  7032                           
  7033                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x60;
  7034                           
  7035                           ;incstack = 0
  7036                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7037  0890  3060               	movlw	96
  7038  0891  0151               	movlb	17	; select bank17
  7039  0892  008D               	movwf	13	;volatile
  7040                           
  7041                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  7042  0893  018F               	clrf	15	;volatile
  7043                           
  7044                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  7045  0894  0191               	clrf	17	;volatile
  7046                           
  7047                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x02;
  7048  0895  3002               	movlw	2
  7049  0896  0093               	movwf	19	;volatile
  7050                           
  7051                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  7052  0897  0192               	clrf	18	;volatile
  7053  0898  0008               	return
  7054  0899                     __end_of_OSCILLATOR_Initialize:	
  7055                           
  7056                           	psect	text7
  7057  093D                     __ptext7:	
  7058 ;; *************** function _I2C1_Initialize *****************
  7059 ;; Defined at:
  7060 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  7061 ;; Parameters:    Size  Location     Type
  7062 ;;		None
  7063 ;; Auto vars:     Size  Location     Type
  7064 ;;		None
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  1    wreg      void 
  7067 ;; Registers used:
  7068 ;;		wreg, status,2
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7076 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7077 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7078 ;;Total ram usage:        1 bytes
  7079 ;; Hardware stack levels used:    1
  7080 ;; Hardware stack levels required when called:    3
  7081 ;; This function calls:
  7082 ;;		Nothing
  7083 ;; This function is called by:
  7084 ;;		_SYSTEM_Initialize
  7085 ;; This function uses a non-reentrant model
  7086 ;;
  7087                           
  7088                           
  7089                           ;psect for function _I2C1_Initialize
  7090  093D                     _I2C1_Initialize:	
  7091                           
  7092                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
  7093                           
  7094                           ;incstack = 0
  7095                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  7096  093D  30D8               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  7097  093E  0140               	movlb	0	; select bank0
  7098  093F  00A0               	movwf	??_I2C1_Initialize
  7099  0940  0820               	movf	??_I2C1_Initialize,w
  7100  0941  0141               	movlb	1	; select bank1
  7101  0942  00A9               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
  7102                           
  7103                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
  7104  0943  30D8               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  7105  0944  0140               	movlb	0	; select bank0
  7106  0945  00A0               	movwf	??_I2C1_Initialize
  7107  0946  0820               	movf	??_I2C1_Initialize,w
  7108  0947  0141               	movlb	1	; select bank1
  7109  0948  00A8               	movwf	_i2c1_object^(0+128)
  7110                           
  7111                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
  7112  0949  14AA               	bsf	(_i2c1_object^(0+128)+2),1
  7113                           
  7114                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
  7115  094A  102A               	bcf	(_i2c1_object^(0+128)+2),0
  7116                           
  7117                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
  7118  094B  01AC               	clrf	(_i2c1_object^(0+128)+4)
  7119                           
  7120                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
  7121  094C  0143               	movlb	3	; select bank3
  7122  094D  018F               	clrf	15	;volatile
  7123                           
  7124                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
  7125  094E  3028               	movlw	40
  7126  094F  0090               	movwf	16	;volatile
  7127                           
  7128                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
  7129  0950  0192               	clrf	18	;volatile
  7130                           
  7131                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x27;
  7132  0951  3027               	movlw	39
  7133  0952  008D               	movwf	13	;volatile
  7134                           
  7135                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
  7136  0953  014E               	movlb	14	; select bank14
  7137  0954  100F               	bcf	15,0	;volatile
  7138                           
  7139                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
  7140  0955  108F               	bcf	15,1	;volatile
  7141                           
  7142                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
  7143  0956  1419               	bsf	25,0	;volatile
  7144                           
  7145                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
  7146  0957  1499               	bsf	25,1	;volatile
  7147  0958  0008               	return
  7148  0959                     __end_of_I2C1_Initialize:	
  7149                           
  7150                           	psect	text8
  7151  0E9A                     __ptext8:	
  7152 ;; *************** function _LED_setColor *****************
  7153 ;; Defined at:
  7154 ;;		line 72 in file "DMX_Source.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;  R               1    wreg     unsigned char 
  7157 ;;  G               1   77[BANK0 ] unsigned char 
  7158 ;;  B               1   78[BANK0 ] unsigned char 
  7159 ;;  W               1   79[BANK0 ] unsigned char 
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;  R               1    5[BANK1 ] unsigned char 
  7162 ;; Return value:  Size  Location     Type
  7163 ;;                  1    wreg      void 
  7164 ;; Registers used:
  7165 ;;		wreg, status,2, status,0, pclath, cstack
  7166 ;; Tracked objects:
  7167 ;;		On entry : 0/0
  7168 ;;		On exit  : 0/0
  7169 ;;		Unchanged: 0/0
  7170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7171 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7172 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7173 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7174 ;;      Totals:         0       3       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7175 ;;Total ram usage:        9 bytes
  7176 ;; Hardware stack levels used:    1
  7177 ;; Hardware stack levels required when called:    5
  7178 ;; This function calls:
  7179 ;;		___fldiv
  7180 ;;		___flmul
  7181 ;;		___fltol
  7182 ;;		___xxtofl
  7183 ;; This function is called by:
  7184 ;;		_main
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188                           
  7189                           ;psect for function _LED_setColor
  7190  0E9A                     _LED_setColor:	
  7191                           
  7192                           ;incstack = 0
  7193                           ; Regs used in _LED_setColor: [wreg+status,2+status,0+pclath+cstack]
  7194                           ;LED_setColor@R stored from wreg
  7195  0E9A  0141               	movlb	1	; select bank1
  7196  0E9B  00E2               	movwf	LED_setColor@R^(0+128)
  7197                           
  7198                           ;DMX_Source.c: 74:     R = ((float)R/2048)*(4000000/(122 * 32));
  7199  0E9C  0862               	movf	LED_setColor@R^(0+128),w
  7200  0E9D  00DD               	movwf	??_LED_setColor^(0+128)
  7201  0E9E  01DE               	clrf	(??_LED_setColor^(0+128)+1)
  7202  0E9F  01DF               	clrf	(??_LED_setColor^(0+128)+2)
  7203  0EA0  01E0               	clrf	(??_LED_setColor^(0+128)+3)
  7204  0EA1  0860               	movf	(??_LED_setColor+3)^(0+128),w
  7205  0EA2  0140               	movlb	0	; select bank0
  7206  0EA3  00A3               	movwf	___xxtofl@val+3
  7207  0EA4  0141               	movlb	1	; select bank1
  7208  0EA5  085F               	movf	(??_LED_setColor+2)^(0+128),w
  7209  0EA6  0140               	movlb	0	; select bank0
  7210  0EA7  00A2               	movwf	___xxtofl@val+2
  7211  0EA8  0141               	movlb	1	; select bank1
  7212  0EA9  085E               	movf	(??_LED_setColor+1)^(0+128),w
  7213  0EAA  0140               	movlb	0	; select bank0
  7214  0EAB  00A1               	movwf	___xxtofl@val+1
  7215  0EAC  0141               	movlb	1	; select bank1
  7216  0EAD  085D               	movf	??_LED_setColor^(0+128),w
  7217  0EAE  0140               	movlb	0	; select bank0
  7218  0EAF  00A0               	movwf	___xxtofl@val
  7219  0EB0  3000               	movlw	0
  7220  0EB1  318C  24BA  318E   	fcall	___xxtofl
  7221  0EB4  0140               	movlb	0	; select bank0
  7222  0EB5  0823               	movf	?___xxtofl+3,w
  7223  0EB6  00B5               	movwf	___fldiv@b+3
  7224  0EB7  0822               	movf	?___xxtofl+2,w
  7225  0EB8  00B4               	movwf	___fldiv@b+2
  7226  0EB9  0821               	movf	?___xxtofl+1,w
  7227  0EBA  00B3               	movwf	___fldiv@b+1
  7228  0EBB  0820               	movf	?___xxtofl,w
  7229  0EBC  00B2               	movwf	___fldiv@b
  7230  0EBD  3045               	movlw	69
  7231  0EBE  00B1               	movwf	___fldiv@a+3
  7232  0EBF  3000               	movlw	0
  7233  0EC0  00B0               	movwf	___fldiv@a+2
  7234  0EC1  3000               	movlw	0
  7235  0EC2  00AF               	movwf	___fldiv@a+1
  7236  0EC3  3000               	movlw	0
  7237  0EC4  00AE               	movwf	___fldiv@a
  7238  0EC5  3185  2578  318E   	fcall	___fldiv
  7239  0EC8  0140               	movlb	0	; select bank0
  7240  0EC9  0831               	movf	?___fldiv+3,w
  7241  0ECA  00CF               	movwf	___flmul@a+3
  7242  0ECB  0830               	movf	?___fldiv+2,w
  7243  0ECC  00CE               	movwf	___flmul@a+2
  7244  0ECD  082F               	movf	?___fldiv+1,w
  7245  0ECE  00CD               	movwf	___flmul@a+1
  7246  0ECF  082E               	movf	?___fldiv,w
  7247  0ED0  00CC               	movwf	___flmul@a
  7248  0ED1  3044               	movlw	68
  7249  0ED2  00CB               	movwf	___flmul@b+3
  7250  0ED3  3080               	movlw	128
  7251  0ED4  00CA               	movwf	___flmul@b+2
  7252  0ED5  3000               	movlw	0
  7253  0ED6  00C9               	movwf	___flmul@b+1
  7254  0ED7  3000               	movlw	0
  7255  0ED8  00C8               	movwf	___flmul@b
  7256  0ED9  3183  234C  318E   	fcall	___flmul
  7257  0EDC  0140               	movlb	0	; select bank0
  7258  0EDD  084B               	movf	?___flmul+3,w
  7259  0EDE  00E5               	movwf	___fltol@f1+3
  7260  0EDF  084A               	movf	?___flmul+2,w
  7261  0EE0  00E4               	movwf	___fltol@f1+2
  7262  0EE1  0849               	movf	?___flmul+1,w
  7263  0EE2  00E3               	movwf	___fltol@f1+1
  7264  0EE3  0848               	movf	?___flmul,w
  7265  0EE4  00E2               	movwf	___fltol@f1
  7266  0EE5  318C  2454  318E   	fcall	___fltol
  7267  0EE8  0140               	movlb	0	; select bank0
  7268  0EE9  0862               	movf	?___fltol,w
  7269  0EEA  0141               	movlb	1	; select bank1
  7270  0EEB  00E1               	movwf	(??_LED_setColor+4)^(0+128)
  7271  0EEC  0861               	movf	(??_LED_setColor+4)^(0+128),w
  7272  0EED  00E2               	movwf	LED_setColor@R^(0+128)
  7273                           
  7274                           ;DMX_Source.c: 75:     G = ((float)G/2048)*(4000000/(122 * 32));
  7275  0EEE  0140               	movlb	0	; select bank0
  7276  0EEF  086D               	movf	LED_setColor@G,w
  7277  0EF0  0141               	movlb	1	; select bank1
  7278  0EF1  00DD               	movwf	??_LED_setColor^(0+128)
  7279  0EF2  01DE               	clrf	(??_LED_setColor^(0+128)+1)
  7280  0EF3  01DF               	clrf	(??_LED_setColor^(0+128)+2)
  7281  0EF4  01E0               	clrf	(??_LED_setColor^(0+128)+3)
  7282  0EF5  0860               	movf	(??_LED_setColor+3)^(0+128),w
  7283  0EF6  0140               	movlb	0	; select bank0
  7284  0EF7  00A3               	movwf	___xxtofl@val+3
  7285  0EF8  0141               	movlb	1	; select bank1
  7286  0EF9  085F               	movf	(??_LED_setColor+2)^(0+128),w
  7287  0EFA  0140               	movlb	0	; select bank0
  7288  0EFB  00A2               	movwf	___xxtofl@val+2
  7289  0EFC  0141               	movlb	1	; select bank1
  7290  0EFD  085E               	movf	(??_LED_setColor+1)^(0+128),w
  7291  0EFE  0140               	movlb	0	; select bank0
  7292  0EFF  00A1               	movwf	___xxtofl@val+1
  7293  0F00  0141               	movlb	1	; select bank1
  7294  0F01  085D               	movf	??_LED_setColor^(0+128),w
  7295  0F02  0140               	movlb	0	; select bank0
  7296  0F03  00A0               	movwf	___xxtofl@val
  7297  0F04  3000               	movlw	0
  7298  0F05  318C  24BA  318E   	fcall	___xxtofl
  7299  0F08  0140               	movlb	0	; select bank0
  7300  0F09  0823               	movf	?___xxtofl+3,w
  7301  0F0A  00B5               	movwf	___fldiv@b+3
  7302  0F0B  0822               	movf	?___xxtofl+2,w
  7303  0F0C  00B4               	movwf	___fldiv@b+2
  7304  0F0D  0821               	movf	?___xxtofl+1,w
  7305  0F0E  00B3               	movwf	___fldiv@b+1
  7306  0F0F  0820               	movf	?___xxtofl,w
  7307  0F10  00B2               	movwf	___fldiv@b
  7308  0F11  3045               	movlw	69
  7309  0F12  00B1               	movwf	___fldiv@a+3
  7310  0F13  3000               	movlw	0
  7311  0F14  00B0               	movwf	___fldiv@a+2
  7312  0F15  3000               	movlw	0
  7313  0F16  00AF               	movwf	___fldiv@a+1
  7314  0F17  3000               	movlw	0
  7315  0F18  00AE               	movwf	___fldiv@a
  7316  0F19  3185  2578  318E   	fcall	___fldiv
  7317  0F1C  0140               	movlb	0	; select bank0
  7318  0F1D  0831               	movf	?___fldiv+3,w
  7319  0F1E  00CF               	movwf	___flmul@a+3
  7320  0F1F  0830               	movf	?___fldiv+2,w
  7321  0F20  00CE               	movwf	___flmul@a+2
  7322  0F21  082F               	movf	?___fldiv+1,w
  7323  0F22  00CD               	movwf	___flmul@a+1
  7324  0F23  082E               	movf	?___fldiv,w
  7325  0F24  00CC               	movwf	___flmul@a
  7326  0F25  3044               	movlw	68
  7327  0F26  00CB               	movwf	___flmul@b+3
  7328  0F27  3080               	movlw	128
  7329  0F28  00CA               	movwf	___flmul@b+2
  7330  0F29  3000               	movlw	0
  7331  0F2A  00C9               	movwf	___flmul@b+1
  7332  0F2B  3000               	movlw	0
  7333  0F2C  00C8               	movwf	___flmul@b
  7334  0F2D  3183  234C  318E   	fcall	___flmul
  7335  0F30  0140               	movlb	0	; select bank0
  7336  0F31  084B               	movf	?___flmul+3,w
  7337  0F32  00E5               	movwf	___fltol@f1+3
  7338  0F33  084A               	movf	?___flmul+2,w
  7339  0F34  00E4               	movwf	___fltol@f1+2
  7340  0F35  0849               	movf	?___flmul+1,w
  7341  0F36  00E3               	movwf	___fltol@f1+1
  7342  0F37  0848               	movf	?___flmul,w
  7343  0F38  00E2               	movwf	___fltol@f1
  7344  0F39  318C  2454  318E   	fcall	___fltol
  7345  0F3C  0140               	movlb	0	; select bank0
  7346  0F3D  0862               	movf	?___fltol,w
  7347  0F3E  0141               	movlb	1	; select bank1
  7348  0F3F  00E1               	movwf	(??_LED_setColor+4)^(0+128)
  7349  0F40  0861               	movf	(??_LED_setColor+4)^(0+128),w
  7350  0F41  0140               	movlb	0	; select bank0
  7351  0F42  00ED               	movwf	LED_setColor@G
  7352                           
  7353                           ;DMX_Source.c: 76:     B = ((float)B/2048)*(4000000/(122 * 32));
  7354  0F43  086E               	movf	LED_setColor@B,w
  7355  0F44  0141               	movlb	1	; select bank1
  7356  0F45  00DD               	movwf	??_LED_setColor^(0+128)
  7357  0F46  01DE               	clrf	(??_LED_setColor^(0+128)+1)
  7358  0F47  01DF               	clrf	(??_LED_setColor^(0+128)+2)
  7359  0F48  01E0               	clrf	(??_LED_setColor^(0+128)+3)
  7360  0F49  0860               	movf	(??_LED_setColor+3)^(0+128),w
  7361  0F4A  0140               	movlb	0	; select bank0
  7362  0F4B  00A3               	movwf	___xxtofl@val+3
  7363  0F4C  0141               	movlb	1	; select bank1
  7364  0F4D  085F               	movf	(??_LED_setColor+2)^(0+128),w
  7365  0F4E  0140               	movlb	0	; select bank0
  7366  0F4F  00A2               	movwf	___xxtofl@val+2
  7367  0F50  0141               	movlb	1	; select bank1
  7368  0F51  085E               	movf	(??_LED_setColor+1)^(0+128),w
  7369  0F52  0140               	movlb	0	; select bank0
  7370  0F53  00A1               	movwf	___xxtofl@val+1
  7371  0F54  0141               	movlb	1	; select bank1
  7372  0F55  085D               	movf	??_LED_setColor^(0+128),w
  7373  0F56  0140               	movlb	0	; select bank0
  7374  0F57  00A0               	movwf	___xxtofl@val
  7375  0F58  3000               	movlw	0
  7376  0F59  318C  24BA  318E   	fcall	___xxtofl
  7377  0F5C  0140               	movlb	0	; select bank0
  7378  0F5D  0823               	movf	?___xxtofl+3,w
  7379  0F5E  00B5               	movwf	___fldiv@b+3
  7380  0F5F  0822               	movf	?___xxtofl+2,w
  7381  0F60  00B4               	movwf	___fldiv@b+2
  7382  0F61  0821               	movf	?___xxtofl+1,w
  7383  0F62  00B3               	movwf	___fldiv@b+1
  7384  0F63  0820               	movf	?___xxtofl,w
  7385  0F64  00B2               	movwf	___fldiv@b
  7386  0F65  3045               	movlw	69
  7387  0F66  00B1               	movwf	___fldiv@a+3
  7388  0F67  3000               	movlw	0
  7389  0F68  00B0               	movwf	___fldiv@a+2
  7390  0F69  3000               	movlw	0
  7391  0F6A  00AF               	movwf	___fldiv@a+1
  7392  0F6B  3000               	movlw	0
  7393  0F6C  00AE               	movwf	___fldiv@a
  7394  0F6D  3185  2578  318E   	fcall	___fldiv
  7395  0F70  0140               	movlb	0	; select bank0
  7396  0F71  0831               	movf	?___fldiv+3,w
  7397  0F72  00CF               	movwf	___flmul@a+3
  7398  0F73  0830               	movf	?___fldiv+2,w
  7399  0F74  00CE               	movwf	___flmul@a+2
  7400  0F75  082F               	movf	?___fldiv+1,w
  7401  0F76  00CD               	movwf	___flmul@a+1
  7402  0F77  082E               	movf	?___fldiv,w
  7403  0F78  00CC               	movwf	___flmul@a
  7404  0F79  3044               	movlw	68
  7405  0F7A  00CB               	movwf	___flmul@b+3
  7406  0F7B  3080               	movlw	128
  7407  0F7C  00CA               	movwf	___flmul@b+2
  7408  0F7D  3000               	movlw	0
  7409  0F7E  00C9               	movwf	___flmul@b+1
  7410  0F7F  3000               	movlw	0
  7411  0F80  00C8               	movwf	___flmul@b
  7412  0F81  3183  234C  318E   	fcall	___flmul
  7413  0F84  0140               	movlb	0	; select bank0
  7414  0F85  084B               	movf	?___flmul+3,w
  7415  0F86  00E5               	movwf	___fltol@f1+3
  7416  0F87  084A               	movf	?___flmul+2,w
  7417  0F88  00E4               	movwf	___fltol@f1+2
  7418  0F89  0849               	movf	?___flmul+1,w
  7419  0F8A  00E3               	movwf	___fltol@f1+1
  7420  0F8B  0848               	movf	?___flmul,w
  7421  0F8C  00E2               	movwf	___fltol@f1
  7422  0F8D  318C  2454  318E   	fcall	___fltol
  7423  0F90  0140               	movlb	0	; select bank0
  7424  0F91  0862               	movf	?___fltol,w
  7425  0F92  0141               	movlb	1	; select bank1
  7426  0F93  00E1               	movwf	(??_LED_setColor+4)^(0+128)
  7427  0F94  0861               	movf	(??_LED_setColor+4)^(0+128),w
  7428  0F95  0140               	movlb	0	; select bank0
  7429  0F96  00EE               	movwf	LED_setColor@B
  7430                           
  7431                           ;DMX_Source.c: 77:     W = ((float)W/2048)*(4000000/(122 * 32));
  7432  0F97  086F               	movf	LED_setColor@W,w
  7433  0F98  0141               	movlb	1	; select bank1
  7434  0F99  00DD               	movwf	??_LED_setColor^(0+128)
  7435  0F9A  01DE               	clrf	(??_LED_setColor^(0+128)+1)
  7436  0F9B  01DF               	clrf	(??_LED_setColor^(0+128)+2)
  7437  0F9C  01E0               	clrf	(??_LED_setColor^(0+128)+3)
  7438  0F9D  0860               	movf	(??_LED_setColor+3)^(0+128),w
  7439  0F9E  0140               	movlb	0	; select bank0
  7440  0F9F  00A3               	movwf	___xxtofl@val+3
  7441  0FA0  0141               	movlb	1	; select bank1
  7442  0FA1  085F               	movf	(??_LED_setColor+2)^(0+128),w
  7443  0FA2  0140               	movlb	0	; select bank0
  7444  0FA3  00A2               	movwf	___xxtofl@val+2
  7445  0FA4  0141               	movlb	1	; select bank1
  7446  0FA5  085E               	movf	(??_LED_setColor+1)^(0+128),w
  7447  0FA6  0140               	movlb	0	; select bank0
  7448  0FA7  00A1               	movwf	___xxtofl@val+1
  7449  0FA8  0141               	movlb	1	; select bank1
  7450  0FA9  085D               	movf	??_LED_setColor^(0+128),w
  7451  0FAA  0140               	movlb	0	; select bank0
  7452  0FAB  00A0               	movwf	___xxtofl@val
  7453  0FAC  3000               	movlw	0
  7454  0FAD  318C  24BA  318E   	fcall	___xxtofl
  7455  0FB0  0140               	movlb	0	; select bank0
  7456  0FB1  0823               	movf	?___xxtofl+3,w
  7457  0FB2  00B5               	movwf	___fldiv@b+3
  7458  0FB3  0822               	movf	?___xxtofl+2,w
  7459  0FB4  00B4               	movwf	___fldiv@b+2
  7460  0FB5  0821               	movf	?___xxtofl+1,w
  7461  0FB6  00B3               	movwf	___fldiv@b+1
  7462  0FB7  0820               	movf	?___xxtofl,w
  7463  0FB8  00B2               	movwf	___fldiv@b
  7464  0FB9  3045               	movlw	69
  7465  0FBA  00B1               	movwf	___fldiv@a+3
  7466  0FBB  3000               	movlw	0
  7467  0FBC  00B0               	movwf	___fldiv@a+2
  7468  0FBD  3000               	movlw	0
  7469  0FBE  00AF               	movwf	___fldiv@a+1
  7470  0FBF  3000               	movlw	0
  7471  0FC0  00AE               	movwf	___fldiv@a
  7472  0FC1  3185  2578  318E   	fcall	___fldiv
  7473  0FC4  0140               	movlb	0	; select bank0
  7474  0FC5  0831               	movf	?___fldiv+3,w
  7475  0FC6  00CF               	movwf	___flmul@a+3
  7476  0FC7  0830               	movf	?___fldiv+2,w
  7477  0FC8  00CE               	movwf	___flmul@a+2
  7478  0FC9  082F               	movf	?___fldiv+1,w
  7479  0FCA  00CD               	movwf	___flmul@a+1
  7480  0FCB  082E               	movf	?___fldiv,w
  7481  0FCC  00CC               	movwf	___flmul@a
  7482  0FCD  3044               	movlw	68
  7483  0FCE  00CB               	movwf	___flmul@b+3
  7484  0FCF  3080               	movlw	128
  7485  0FD0  00CA               	movwf	___flmul@b+2
  7486  0FD1  3000               	movlw	0
  7487  0FD2  00C9               	movwf	___flmul@b+1
  7488  0FD3  3000               	movlw	0
  7489  0FD4  00C8               	movwf	___flmul@b
  7490  0FD5  3183  234C  318E   	fcall	___flmul
  7491  0FD8  0140               	movlb	0	; select bank0
  7492  0FD9  084B               	movf	?___flmul+3,w
  7493  0FDA  00E5               	movwf	___fltol@f1+3
  7494  0FDB  084A               	movf	?___flmul+2,w
  7495  0FDC  00E4               	movwf	___fltol@f1+2
  7496  0FDD  0849               	movf	?___flmul+1,w
  7497  0FDE  00E3               	movwf	___fltol@f1+1
  7498  0FDF  0848               	movf	?___flmul,w
  7499  0FE0  00E2               	movwf	___fltol@f1
  7500  0FE1  318C  2454         	fcall	___fltol
  7501  0FE3  0140               	movlb	0	; select bank0
  7502  0FE4  0862               	movf	?___fltol,w
  7503  0FE5  0141               	movlb	1	; select bank1
  7504  0FE6  00E1               	movwf	(??_LED_setColor+4)^(0+128)
  7505  0FE7  0861               	movf	(??_LED_setColor+4)^(0+128),w
  7506  0FE8  0140               	movlb	0	; select bank0
  7507  0FE9  00EF               	movwf	LED_setColor@W
  7508                           
  7509                           ;DMX_Source.c: 78:     CCPR1H = R >> 8;
  7510  0FEA  0146               	movlb	6	; select bank6
  7511  0FEB  018D               	clrf	13	;volatile
  7512                           
  7513                           ;DMX_Source.c: 79:     CCPR1L = R;
  7514  0FEC  0141               	movlb	1	; select bank1
  7515  0FED  0862               	movf	LED_setColor@R^(0+128),w
  7516  0FEE  0146               	movlb	6	; select bank6
  7517  0FEF  008C               	movwf	12	;volatile
  7518                           
  7519                           ;DMX_Source.c: 80:     CCPR2H = G >> 8;
  7520  0FF0  0191               	clrf	17	;volatile
  7521                           
  7522                           ;DMX_Source.c: 81:     CCPR2L = G;
  7523  0FF1  0140               	movlb	0	; select bank0
  7524  0FF2  086D               	movf	LED_setColor@G,w
  7525  0FF3  0146               	movlb	6	; select bank6
  7526  0FF4  0090               	movwf	16	;volatile
  7527                           
  7528                           ;DMX_Source.c: 82:     CCPR3H = B >> 8;
  7529  0FF5  0195               	clrf	21	;volatile
  7530                           
  7531                           ;DMX_Source.c: 83:     CCPR3L = B;
  7532  0FF6  0140               	movlb	0	; select bank0
  7533  0FF7  086E               	movf	LED_setColor@B,w
  7534  0FF8  0146               	movlb	6	; select bank6
  7535  0FF9  0094               	movwf	20	;volatile
  7536                           
  7537                           ;DMX_Source.c: 84:     CCPR4H = W >> 8;
  7538  0FFA  0199               	clrf	25	;volatile
  7539                           
  7540                           ;DMX_Source.c: 85:     CCPR4L = W;
  7541  0FFB  0140               	movlb	0	; select bank0
  7542  0FFC  086F               	movf	LED_setColor@W,w
  7543  0FFD  0146               	movlb	6	; select bank6
  7544  0FFE  0098               	movwf	24	;volatile
  7545  0FFF  0008               	return
  7546  1000                     __end_of_LED_setColor:	
  7547                           
  7548                           	psect	text9
  7549  0CBA                     __ptext9:	
  7550 ;; *************** function ___xxtofl *****************
  7551 ;; Defined at:
  7552 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  sign            1    wreg     unsigned char 
  7555 ;;  val             4    0[BANK0 ] long 
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;  sign            1    8[BANK0 ] unsigned char 
  7558 ;;  arg             4   10[BANK0 ] unsigned long 
  7559 ;;  exp             1    9[BANK0 ] unsigned char 
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  4    0[BANK0 ] unsigned char 
  7562 ;; Registers used:
  7563 ;;		wreg, status,2, status,0
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7569 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7570 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7571 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7572 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7573 ;;Total ram usage:       14 bytes
  7574 ;; Hardware stack levels used:    1
  7575 ;; Hardware stack levels required when called:    3
  7576 ;; This function calls:
  7577 ;;		Nothing
  7578 ;; This function is called by:
  7579 ;;		_LED_setColor
  7580 ;;		_LED_setBrightness
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           
  7585                           ;psect for function ___xxtofl
  7586  0CBA                     ___xxtofl:	
  7587                           
  7588                           ;incstack = 0
  7589                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7590                           ;___xxtofl@sign stored from wreg
  7591  0CBA  0140               	movlb	0	; select bank0
  7592  0CBB  00A8               	movwf	___xxtofl@sign
  7593  0CBC  0828               	movf	___xxtofl@sign,w
  7594  0CBD  1D03               	btfss	3,2
  7595  0CBE  1FA3               	btfss	___xxtofl@val+3,7
  7596  0CBF  2CD0               	goto	l3265
  7597  0CC0  0920               	comf	___xxtofl@val,w
  7598  0CC1  00AA               	movwf	___xxtofl@arg
  7599  0CC2  0921               	comf	___xxtofl@val+1,w
  7600  0CC3  00AB               	movwf	___xxtofl@arg+1
  7601  0CC4  0922               	comf	___xxtofl@val+2,w
  7602  0CC5  00AC               	movwf	___xxtofl@arg+2
  7603  0CC6  0923               	comf	___xxtofl@val+3,w
  7604  0CC7  00AD               	movwf	___xxtofl@arg+3
  7605  0CC8  0AAA               	incf	___xxtofl@arg,f
  7606  0CC9  1903               	skipnz
  7607  0CCA  0AAB               	incf	___xxtofl@arg+1,f
  7608  0CCB  1903               	skipnz
  7609  0CCC  0AAC               	incf	___xxtofl@arg+2,f
  7610  0CCD  1903               	skipnz
  7611  0CCE  0AAD               	incf	___xxtofl@arg+3,f
  7612  0CCF  2CD8               	goto	l1324
  7613  0CD0                     l3265:	
  7614  0CD0  0823               	movf	___xxtofl@val+3,w
  7615  0CD1  00AD               	movwf	___xxtofl@arg+3
  7616  0CD2  0822               	movf	___xxtofl@val+2,w
  7617  0CD3  00AC               	movwf	___xxtofl@arg+2
  7618  0CD4  0821               	movf	___xxtofl@val+1,w
  7619  0CD5  00AB               	movwf	___xxtofl@arg+1
  7620  0CD6  0820               	movf	___xxtofl@val,w
  7621  0CD7  00AA               	movwf	___xxtofl@arg
  7622  0CD8                     l1324:	
  7623  0CD8  0823               	movf	___xxtofl@val+3,w
  7624  0CD9  0422               	iorwf	___xxtofl@val+2,w
  7625  0CDA  0421               	iorwf	___xxtofl@val+1,w
  7626  0CDB  0420               	iorwf	___xxtofl@val,w
  7627  0CDC  1D03               	skipz
  7628  0CDD  2CE7               	goto	l3271
  7629  0CDE  3000               	movlw	0
  7630  0CDF  00A3               	movwf	?___xxtofl+3
  7631  0CE0  3000               	movlw	0
  7632  0CE1  00A2               	movwf	?___xxtofl+2
  7633  0CE2  3000               	movlw	0
  7634  0CE3  00A1               	movwf	?___xxtofl+1
  7635  0CE4  3000               	movlw	0
  7636  0CE5  00A0               	movwf	?___xxtofl
  7637  0CE6  0008               	return
  7638  0CE7                     l3271:	
  7639  0CE7  3096               	movlw	150
  7640  0CE8  00A4               	movwf	??___xxtofl
  7641  0CE9  0824               	movf	??___xxtofl,w
  7642  0CEA  00A9               	movwf	___xxtofl@exp
  7643  0CEB                     l3275:	
  7644  0CEB  30FE               	movlw	254
  7645  0CEC  052D               	andwf	___xxtofl@arg+3,w
  7646  0CED  1903               	btfsc	3,2
  7647  0CEE  2D0E               	goto	l1330
  7648  0CEF  3001               	movlw	1
  7649  0CF0  00A4               	movwf	??___xxtofl
  7650  0CF1  0824               	movf	??___xxtofl,w
  7651  0CF2  07A9               	addwf	___xxtofl@exp,f
  7652  0CF3  3001               	movlw	1
  7653  0CF4                     u2785:	
  7654  0CF4  36AD               	lsrf	___xxtofl@arg+3,f
  7655  0CF5  0CAC               	rrf	___xxtofl@arg+2,f
  7656  0CF6  0CAB               	rrf	___xxtofl@arg+1,f
  7657  0CF7  0CAA               	rrf	___xxtofl@arg,f
  7658  0CF8  0B89               	decfsz	9,f
  7659  0CF9  2CF4               	goto	u2785
  7660  0CFA  2CEB               	goto	l3275
  7661  0CFB                     l3277:	
  7662  0CFB  3001               	movlw	1
  7663  0CFC  00A4               	movwf	??___xxtofl
  7664  0CFD  0824               	movf	??___xxtofl,w
  7665  0CFE  07A9               	addwf	___xxtofl@exp,f
  7666  0CFF  3001               	movlw	1
  7667  0D00  07AA               	addwf	___xxtofl@arg,f
  7668  0D01  3000               	movlw	0
  7669  0D02  3DAB               	addwfc	___xxtofl@arg+1,f
  7670  0D03  3000               	movlw	0
  7671  0D04  3DAC               	addwfc	___xxtofl@arg+2,f
  7672  0D05  3000               	movlw	0
  7673  0D06  3DAD               	addwfc	___xxtofl@arg+3,f
  7674  0D07  3001               	movlw	1
  7675  0D08                     u2805:	
  7676  0D08  36AD               	lsrf	___xxtofl@arg+3,f
  7677  0D09  0CAC               	rrf	___xxtofl@arg+2,f
  7678  0D0A  0CAB               	rrf	___xxtofl@arg+1,f
  7679  0D0B  0CAA               	rrf	___xxtofl@arg,f
  7680  0D0C  0B89               	decfsz	9,f
  7681  0D0D  2D08               	goto	u2805
  7682  0D0E                     l1330:	
  7683  0D0E  30FF               	movlw	255
  7684  0D0F  052D               	andwf	___xxtofl@arg+3,w
  7685  0D10  1903               	btfsc	3,2
  7686  0D11  2D20               	goto	l3285
  7687  0D12  2CFB               	goto	l3277
  7688  0D13                     l3287:	
  7689  0D13  3002               	movlw	2
  7690  0D14  0229               	subwf	___xxtofl@exp,w
  7691  0D15  1C03               	btfss	3,0
  7692  0D16  2D22               	goto	l1337
  7693  0D17  3001               	movlw	1
  7694  0D18  02A9               	subwf	___xxtofl@exp,f
  7695  0D19  3001               	movlw	1
  7696  0D1A                     u2825:	
  7697  0D1A  35AA               	lslf	___xxtofl@arg,f
  7698  0D1B  0DAB               	rlf	___xxtofl@arg+1,f
  7699  0D1C  0DAC               	rlf	___xxtofl@arg+2,f
  7700  0D1D  0DAD               	rlf	___xxtofl@arg+3,f
  7701  0D1E  0B89               	decfsz	9,f
  7702  0D1F  2D1A               	goto	u2825
  7703  0D20                     l3285:	
  7704  0D20  1FAC               	btfss	___xxtofl@arg+2,7
  7705  0D21  2D13               	goto	l3287
  7706  0D22                     l1337:	
  7707  0D22  1829               	btfsc	___xxtofl@exp,0
  7708  0D23  2D2C               	goto	l1338
  7709  0D24  30FF               	movlw	255
  7710  0D25  05AA               	andwf	___xxtofl@arg,f
  7711  0D26  30FF               	movlw	255
  7712  0D27  05AB               	andwf	___xxtofl@arg+1,f
  7713  0D28  307F               	movlw	127
  7714  0D29  05AC               	andwf	___xxtofl@arg+2,f
  7715  0D2A  30FF               	movlw	255
  7716  0D2B  05AD               	andwf	___xxtofl@arg+3,f
  7717  0D2C                     l1338:	
  7718  0D2C  1003               	clrc
  7719  0D2D  0CA9               	rrf	___xxtofl@exp,f
  7720  0D2E  0829               	movf	___xxtofl@exp,w
  7721  0D2F  00A4               	movwf	??___xxtofl
  7722  0D30  01A5               	clrf	??___xxtofl+1
  7723  0D31  01A6               	clrf	??___xxtofl+2
  7724  0D32  01A7               	clrf	??___xxtofl+3
  7725  0D33  3018               	movlw	24
  7726  0D34                     u2865:	
  7727  0D34  35A4               	lslf	??___xxtofl,f
  7728  0D35  0DA5               	rlf	??___xxtofl+1,f
  7729  0D36  0DA6               	rlf	??___xxtofl+2,f
  7730  0D37  0DA7               	rlf	??___xxtofl+3,f
  7731  0D38  0B89               	decfsz	9,f
  7732  0D39  2D34               	goto	u2865
  7733  0D3A  0824               	movf	??___xxtofl,w
  7734  0D3B  04AA               	iorwf	___xxtofl@arg,f
  7735  0D3C  0825               	movf	??___xxtofl+1,w
  7736  0D3D  04AB               	iorwf	___xxtofl@arg+1,f
  7737  0D3E  0826               	movf	??___xxtofl+2,w
  7738  0D3F  04AC               	iorwf	___xxtofl@arg+2,f
  7739  0D40  0827               	movf	??___xxtofl+3,w
  7740  0D41  04AD               	iorwf	___xxtofl@arg+3,f
  7741  0D42  0828               	movf	___xxtofl@sign,w
  7742  0D43  1D03               	btfss	3,2
  7743  0D44  1FA3               	btfss	___xxtofl@val+3,7
  7744  0D45  2D47               	goto	l3299
  7745  0D46  17AD               	bsf	___xxtofl@arg+3,7
  7746  0D47                     l3299:	
  7747  0D47  082D               	movf	___xxtofl@arg+3,w
  7748  0D48  00A3               	movwf	?___xxtofl+3
  7749  0D49  082C               	movf	___xxtofl@arg+2,w
  7750  0D4A  00A2               	movwf	?___xxtofl+2
  7751  0D4B  082B               	movf	___xxtofl@arg+1,w
  7752  0D4C  00A1               	movwf	?___xxtofl+1
  7753  0D4D  082A               	movf	___xxtofl@arg,w
  7754  0D4E  00A0               	movwf	?___xxtofl
  7755  0D4F  0008               	return
  7756  0D50                     __end_of___xxtofl:	
  7757                           
  7758                           	psect	text10
  7759  0C54                     __ptext10:	
  7760 ;; *************** function ___fltol *****************
  7761 ;; Defined at:
  7762 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  f1              4   66[BANK0 ] unsigned char 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  exp1            1   76[BANK0 ] unsigned char 
  7767 ;;  sign1           1   75[BANK0 ] unsigned char 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  4   66[BANK0 ] long 
  7770 ;; Registers used:
  7771 ;;		wreg, status,2, status,0
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7777 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7778 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7779 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7780 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7781 ;;Total ram usage:       11 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:    3
  7784 ;; This function calls:
  7785 ;;		Nothing
  7786 ;; This function is called by:
  7787 ;;		_LED_setColor
  7788 ;;		_LED_setBrightness
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           
  7793                           ;psect for function ___fltol
  7794  0C54                     ___fltol:	
  7795                           
  7796                           ;incstack = 0
  7797                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7798  0C54  1003               	clrc
  7799  0C55  0140               	movlb	0	; select bank0
  7800  0C56  0D64               	rlf	___fltol@f1+2,w
  7801  0C57  0D65               	rlf	___fltol@f1+3,w
  7802  0C58  00E6               	movwf	??___fltol
  7803  0C59  0866               	movf	??___fltol,w
  7804  0C5A  00EC               	movwf	___fltol@exp1
  7805  0C5B  086C               	movf	___fltol@exp1,w
  7806  0C5C  1D03               	btfss	3,2
  7807  0C5D  2C67               	goto	l2949
  7808  0C5E                     l2945:	
  7809  0C5E  3000               	movlw	0
  7810  0C5F  00E5               	movwf	?___fltol+3
  7811  0C60  3000               	movlw	0
  7812  0C61  00E4               	movwf	?___fltol+2
  7813  0C62  3000               	movlw	0
  7814  0C63  00E3               	movwf	?___fltol+1
  7815  0C64  3000               	movlw	0
  7816  0C65  00E2               	movwf	?___fltol
  7817  0C66  0008               	return
  7818  0C67                     l2949:	
  7819  0C67  0862               	movf	___fltol@f1,w
  7820  0C68  00E6               	movwf	??___fltol
  7821  0C69  0863               	movf	___fltol@f1+1,w
  7822  0C6A  00E7               	movwf	??___fltol+1
  7823  0C6B  0864               	movf	___fltol@f1+2,w
  7824  0C6C  00E8               	movwf	??___fltol+2
  7825  0C6D  0865               	movf	___fltol@f1+3,w
  7826  0C6E  00E9               	movwf	??___fltol+3
  7827  0C6F  301F               	movlw	31
  7828  0C70                     u2115:	
  7829  0C70  36E9               	lsrf	??___fltol+3,f
  7830  0C71  0CE8               	rrf	??___fltol+2,f
  7831  0C72  0CE7               	rrf	??___fltol+1,f
  7832  0C73  0CE6               	rrf	??___fltol,f
  7833  0C74  0B89               	decfsz	9,f
  7834  0C75  2C70               	goto	u2115
  7835  0C76  0866               	movf	??___fltol,w
  7836  0C77  00EA               	movwf	??___fltol+4
  7837  0C78  086A               	movf	??___fltol+4,w
  7838  0C79  00EB               	movwf	___fltol@sign1
  7839  0C7A  17E4               	bsf	___fltol@f1+2,7
  7840  0C7B  30FF               	movlw	255
  7841  0C7C  05E2               	andwf	___fltol@f1,f
  7842  0C7D  30FF               	movlw	255
  7843  0C7E  05E3               	andwf	___fltol@f1+1,f
  7844  0C7F  30FF               	movlw	255
  7845  0C80  05E4               	andwf	___fltol@f1+2,f
  7846  0C81  3000               	movlw	0
  7847  0C82  05E5               	andwf	___fltol@f1+3,f
  7848  0C83  3096               	movlw	150
  7849  0C84  02EC               	subwf	___fltol@exp1,f
  7850  0C85  1FEC               	btfss	___fltol@exp1,7
  7851  0C86  2C9A               	goto	l2967
  7852  0C87  086C               	movf	___fltol@exp1,w
  7853  0C88  3A80               	xorlw	128
  7854  0C89  3E97               	addlw	151
  7855  0C8A  1C03               	btfss	3,0
  7856  0C8B  2C5E               	goto	l2945
  7857  0C8C                     l2965:	
  7858  0C8C  3001               	movlw	1
  7859  0C8D                     u2145:	
  7860  0C8D  36E5               	lsrf	___fltol@f1+3,f
  7861  0C8E  0CE4               	rrf	___fltol@f1+2,f
  7862  0C8F  0CE3               	rrf	___fltol@f1+1,f
  7863  0C90  0CE2               	rrf	___fltol@f1,f
  7864  0C91  0B89               	decfsz	9,f
  7865  0C92  2C8D               	goto	u2145
  7866  0C93  3001               	movlw	1
  7867  0C94  00E6               	movwf	??___fltol
  7868  0C95  0866               	movf	??___fltol,w
  7869  0C96  07EC               	addwf	___fltol@exp1,f
  7870  0C97  1903               	btfsc	3,2
  7871  0C98  2CAB               	goto	l2975
  7872  0C99  2C8C               	goto	l2965
  7873  0C9A                     l2967:	
  7874  0C9A  3020               	movlw	32
  7875  0C9B  026C               	subwf	___fltol@exp1,w
  7876  0C9C  1803               	btfsc	3,0
  7877  0C9D  2C5E               	goto	l2945
  7878  0C9E                     l1090:	
  7879  0C9E  086C               	movf	___fltol@exp1,w
  7880  0C9F  1903               	btfsc	3,2
  7881  0CA0  2CAB               	goto	l2975
  7882  0CA1  3001               	movlw	1
  7883  0CA2                     u2175:	
  7884  0CA2  35E2               	lslf	___fltol@f1,f
  7885  0CA3  0DE3               	rlf	___fltol@f1+1,f
  7886  0CA4  0DE4               	rlf	___fltol@f1+2,f
  7887  0CA5  0DE5               	rlf	___fltol@f1+3,f
  7888  0CA6  0B89               	decfsz	9,f
  7889  0CA7  2CA2               	goto	u2175
  7890  0CA8  3001               	movlw	1
  7891  0CA9  02EC               	subwf	___fltol@exp1,f
  7892  0CAA  2C9E               	goto	l1090
  7893  0CAB                     l2975:	
  7894  0CAB  086B               	movf	___fltol@sign1,w
  7895  0CAC  1903               	btfsc	3,2
  7896  0CAD  0008               	return
  7897  0CAE  09E2               	comf	___fltol@f1,f
  7898  0CAF  09E3               	comf	___fltol@f1+1,f
  7899  0CB0  09E4               	comf	___fltol@f1+2,f
  7900  0CB1  09E5               	comf	___fltol@f1+3,f
  7901  0CB2  0AE2               	incf	___fltol@f1,f
  7902  0CB3  1903               	skipnz
  7903  0CB4  0AE3               	incf	___fltol@f1+1,f
  7904  0CB5  1903               	skipnz
  7905  0CB6  0AE4               	incf	___fltol@f1+2,f
  7906  0CB7  1903               	skipnz
  7907  0CB8  0AE5               	incf	___fltol@f1+3,f
  7908  0CB9  0008               	return
  7909  0CBA                     __end_of___fltol:	
  7910                           
  7911                           	psect	text11
  7912  034C                     __ptext11:	
  7913 ;; *************** function ___flmul *****************
  7914 ;; Defined at:
  7915 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;  b               4   40[BANK0 ] long 
  7918 ;;  a               4   44[BANK0 ] long 
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;  prod            4   60[BANK0 ] struct .
  7921 ;;  grs             4   54[BANK0 ] unsigned long 
  7922 ;;  temp            2   64[BANK0 ] struct .
  7923 ;;  bexp            1   59[BANK0 ] unsigned char 
  7924 ;;  aexp            1   58[BANK0 ] unsigned char 
  7925 ;;  sign            1   53[BANK0 ] unsigned char 
  7926 ;; Return value:  Size  Location     Type
  7927 ;;                  4   40[BANK0 ] unsigned char 
  7928 ;; Registers used:
  7929 ;;		wreg, status,2, status,0, pclath, cstack
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/0
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7935 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7936 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7937 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7938 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7939 ;;Total ram usage:       26 bytes
  7940 ;; Hardware stack levels used:    1
  7941 ;; Hardware stack levels required when called:    4
  7942 ;; This function calls:
  7943 ;;		__Umul8_16
  7944 ;; This function is called by:
  7945 ;;		_LED_setColor
  7946 ;;		_LED_setBrightness
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           
  7951                           ;psect for function ___flmul
  7952  034C                     ___flmul:	
  7953                           
  7954                           ;incstack = 0
  7955                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  7956  034C  0140               	movlb	0	; select bank0
  7957  034D  084B               	movf	___flmul@b+3,w
  7958  034E  3980               	andlw	128
  7959  034F  00D0               	movwf	??___flmul
  7960  0350  0850               	movf	??___flmul,w
  7961  0351  00D5               	movwf	___flmul@sign
  7962  0352  354B               	lslf	___flmul@b+3,w
  7963  0353  00D0               	movwf	??___flmul
  7964  0354  0850               	movf	??___flmul,w
  7965  0355  00DB               	movwf	___flmul@bexp
  7966  0356  1BCA               	btfsc	___flmul@b+2,7
  7967  0357  145B               	bsf	___flmul@bexp,0
  7968  0358  085B               	movf	___flmul@bexp,w
  7969  0359  1903               	btfsc	3,2
  7970  035A  2B68               	goto	l3135
  7971  035B  0A5B               	incf	___flmul@bexp,w
  7972  035C  1D03               	btfss	3,2
  7973  035D  2B66               	goto	l3133
  7974  035E  3000               	movlw	0
  7975  035F  00CB               	movwf	___flmul@b+3
  7976  0360  3000               	movlw	0
  7977  0361  00CA               	movwf	___flmul@b+2
  7978  0362  3000               	movlw	0
  7979  0363  00C9               	movwf	___flmul@b+1
  7980  0364  3000               	movlw	0
  7981  0365  00C8               	movwf	___flmul@b
  7982  0366                     l3133:	
  7983  0366  17CA               	bsf	___flmul@b+2,7
  7984  0367  2B70               	goto	l3137
  7985  0368                     l3135:	
  7986  0368  3000               	movlw	0
  7987  0369  00CB               	movwf	___flmul@b+3
  7988  036A  3000               	movlw	0
  7989  036B  00CA               	movwf	___flmul@b+2
  7990  036C  3000               	movlw	0
  7991  036D  00C9               	movwf	___flmul@b+1
  7992  036E  3000               	movlw	0
  7993  036F  00C8               	movwf	___flmul@b
  7994  0370                     l3137:	
  7995  0370  084F               	movf	___flmul@a+3,w
  7996  0371  3980               	andlw	128
  7997  0372  00D0               	movwf	??___flmul
  7998  0373  0850               	movf	??___flmul,w
  7999  0374  06D5               	xorwf	___flmul@sign,f
  8000  0375  354F               	lslf	___flmul@a+3,w
  8001  0376  00D0               	movwf	??___flmul
  8002  0377  0850               	movf	??___flmul,w
  8003  0378  00DA               	movwf	___flmul@aexp
  8004  0379  1BCE               	btfsc	___flmul@a+2,7
  8005  037A  145A               	bsf	___flmul@aexp,0
  8006  037B  085A               	movf	___flmul@aexp,w
  8007  037C  1903               	btfsc	3,2
  8008  037D  2B8B               	goto	l3153
  8009  037E  0A5A               	incf	___flmul@aexp,w
  8010  037F  1D03               	btfss	3,2
  8011  0380  2B89               	goto	l3151
  8012  0381  3000               	movlw	0
  8013  0382  00CF               	movwf	___flmul@a+3
  8014  0383  3000               	movlw	0
  8015  0384  00CE               	movwf	___flmul@a+2
  8016  0385  3000               	movlw	0
  8017  0386  00CD               	movwf	___flmul@a+1
  8018  0387  3000               	movlw	0
  8019  0388  00CC               	movwf	___flmul@a
  8020  0389                     l3151:	
  8021  0389  17CE               	bsf	___flmul@a+2,7
  8022  038A  2B93               	goto	l3155
  8023  038B                     l3153:	
  8024  038B  3000               	movlw	0
  8025  038C  00CF               	movwf	___flmul@a+3
  8026  038D  3000               	movlw	0
  8027  038E  00CE               	movwf	___flmul@a+2
  8028  038F  3000               	movlw	0
  8029  0390  00CD               	movwf	___flmul@a+1
  8030  0391  3000               	movlw	0
  8031  0392  00CC               	movwf	___flmul@a
  8032  0393                     l3155:	
  8033  0393  085A               	movf	___flmul@aexp,w
  8034  0394  1D03               	btfss	3,2
  8035  0395  085B               	movf	___flmul@bexp,w
  8036  0396  1D03               	btfss	3,2
  8037  0397  2BA1               	goto	l3163
  8038  0398  3000               	movlw	0
  8039  0399  00CB               	movwf	?___flmul+3
  8040  039A  3000               	movlw	0
  8041  039B  00CA               	movwf	?___flmul+2
  8042  039C  3000               	movlw	0
  8043  039D  00C9               	movwf	?___flmul+1
  8044  039E  3000               	movlw	0
  8045  039F  00C8               	movwf	?___flmul
  8046  03A0  0008               	return
  8047  03A1                     l3163:	
  8048  03A1  0848               	movf	___flmul@b,w
  8049  03A2  00D0               	movwf	??___flmul
  8050  03A3  0850               	movf	??___flmul,w
  8051  03A4  00A0               	movwf	__Umul8_16@multiplicand
  8052  03A5  084E               	movf	___flmul@a+2,w
  8053  03A6  3189  21B5  3183   	fcall	__Umul8_16
  8054  03A9  0140               	movlb	0	; select bank0
  8055  03AA  0821               	movf	?__Umul8_16+1,w
  8056  03AB  00E1               	movwf	___flmul@temp+1
  8057  03AC  0820               	movf	?__Umul8_16,w
  8058  03AD  00E0               	movwf	___flmul@temp
  8059  03AE  0860               	movf	___flmul@temp,w
  8060  03AF  00D0               	movwf	??___flmul
  8061  03B0  01D1               	clrf	??___flmul+1
  8062  03B1  01D2               	clrf	??___flmul+2
  8063  03B2  01D3               	clrf	??___flmul+3
  8064  03B3  0853               	movf	??___flmul+3,w
  8065  03B4  00D9               	movwf	___flmul@grs+3
  8066  03B5  0852               	movf	??___flmul+2,w
  8067  03B6  00D8               	movwf	___flmul@grs+2
  8068  03B7  0851               	movf	??___flmul+1,w
  8069  03B8  00D7               	movwf	___flmul@grs+1
  8070  03B9  0850               	movf	??___flmul,w
  8071  03BA  00D6               	movwf	___flmul@grs
  8072  03BB  0861               	movf	___flmul@temp+1,w
  8073  03BC  00D0               	movwf	??___flmul
  8074  03BD  01D1               	clrf	??___flmul+1
  8075  03BE  01D2               	clrf	??___flmul+2
  8076  03BF  01D3               	clrf	??___flmul+3
  8077  03C0  0853               	movf	??___flmul+3,w
  8078  03C1  00DF               	movwf	___flmul@prod+3
  8079  03C2  0852               	movf	??___flmul+2,w
  8080  03C3  00DE               	movwf	___flmul@prod+2
  8081  03C4  0851               	movf	??___flmul+1,w
  8082  03C5  00DD               	movwf	___flmul@prod+1
  8083  03C6  0850               	movf	??___flmul,w
  8084  03C7  00DC               	movwf	___flmul@prod
  8085  03C8  0849               	movf	___flmul@b+1,w
  8086  03C9  00D0               	movwf	??___flmul
  8087  03CA  0850               	movf	??___flmul,w
  8088  03CB  00A0               	movwf	__Umul8_16@multiplicand
  8089  03CC  084D               	movf	___flmul@a+1,w
  8090  03CD  3189  21B5  3183   	fcall	__Umul8_16
  8091  03D0  0140               	movlb	0	; select bank0
  8092  03D1  0821               	movf	?__Umul8_16+1,w
  8093  03D2  00E1               	movwf	___flmul@temp+1
  8094  03D3  0820               	movf	?__Umul8_16,w
  8095  03D4  00E0               	movwf	___flmul@temp
  8096  03D5  0860               	movf	___flmul@temp,w
  8097  03D6  00D0               	movwf	??___flmul
  8098  03D7  01D1               	clrf	??___flmul+1
  8099  03D8  01D2               	clrf	??___flmul+2
  8100  03D9  01D3               	clrf	??___flmul+3
  8101  03DA  0850               	movf	??___flmul,w
  8102  03DB  07D6               	addwf	___flmul@grs,f
  8103  03DC  0851               	movf	??___flmul+1,w
  8104  03DD  3DD7               	addwfc	___flmul@grs+1,f
  8105  03DE  0852               	movf	??___flmul+2,w
  8106  03DF  3DD8               	addwfc	___flmul@grs+2,f
  8107  03E0  0853               	movf	??___flmul+3,w
  8108  03E1  3DD9               	addwfc	___flmul@grs+3,f
  8109  03E2  0861               	movf	___flmul@temp+1,w
  8110  03E3  00D0               	movwf	??___flmul
  8111  03E4  01D1               	clrf	??___flmul+1
  8112  03E5  01D2               	clrf	??___flmul+2
  8113  03E6  01D3               	clrf	??___flmul+3
  8114  03E7  0850               	movf	??___flmul,w
  8115  03E8  07DC               	addwf	___flmul@prod,f
  8116  03E9  0851               	movf	??___flmul+1,w
  8117  03EA  3DDD               	addwfc	___flmul@prod+1,f
  8118  03EB  0852               	movf	??___flmul+2,w
  8119  03EC  3DDE               	addwfc	___flmul@prod+2,f
  8120  03ED  0853               	movf	??___flmul+3,w
  8121  03EE  3DDF               	addwfc	___flmul@prod+3,f
  8122  03EF  084A               	movf	___flmul@b+2,w
  8123  03F0  00D0               	movwf	??___flmul
  8124  03F1  0850               	movf	??___flmul,w
  8125  03F2  00A0               	movwf	__Umul8_16@multiplicand
  8126  03F3  084C               	movf	___flmul@a,w
  8127  03F4  3189  21B5  3183   	fcall	__Umul8_16
  8128  03F7  0140               	movlb	0	; select bank0
  8129  03F8  0821               	movf	?__Umul8_16+1,w
  8130  03F9  00E1               	movwf	___flmul@temp+1
  8131  03FA  0820               	movf	?__Umul8_16,w
  8132  03FB  00E0               	movwf	___flmul@temp
  8133  03FC  0860               	movf	___flmul@temp,w
  8134  03FD  00D0               	movwf	??___flmul
  8135  03FE  01D1               	clrf	??___flmul+1
  8136  03FF  01D2               	clrf	??___flmul+2
  8137  0400  01D3               	clrf	??___flmul+3
  8138  0401  0850               	movf	??___flmul,w
  8139  0402  07D6               	addwf	___flmul@grs,f
  8140  0403  0851               	movf	??___flmul+1,w
  8141  0404  3DD7               	addwfc	___flmul@grs+1,f
  8142  0405  0852               	movf	??___flmul+2,w
  8143  0406  3DD8               	addwfc	___flmul@grs+2,f
  8144  0407  0853               	movf	??___flmul+3,w
  8145  0408  3DD9               	addwfc	___flmul@grs+3,f
  8146  0409  0861               	movf	___flmul@temp+1,w
  8147  040A  00D0               	movwf	??___flmul
  8148  040B  01D1               	clrf	??___flmul+1
  8149  040C  01D2               	clrf	??___flmul+2
  8150  040D  01D3               	clrf	??___flmul+3
  8151  040E  0850               	movf	??___flmul,w
  8152  040F  07DC               	addwf	___flmul@prod,f
  8153  0410  0851               	movf	??___flmul+1,w
  8154  0411  3DDD               	addwfc	___flmul@prod+1,f
  8155  0412  0852               	movf	??___flmul+2,w
  8156  0413  3DDE               	addwfc	___flmul@prod+2,f
  8157  0414  0853               	movf	??___flmul+3,w
  8158  0415  3DDF               	addwfc	___flmul@prod+3,f
  8159  0416  3008               	movlw	8
  8160  0417                     u2575:	
  8161  0417  35D6               	lslf	___flmul@grs,f
  8162  0418  0DD7               	rlf	___flmul@grs+1,f
  8163  0419  0DD8               	rlf	___flmul@grs+2,f
  8164  041A  0DD9               	rlf	___flmul@grs+3,f
  8165  041B  0B89               	decfsz	9,f
  8166  041C  2C17               	goto	u2575
  8167  041D  0849               	movf	___flmul@b+1,w
  8168  041E  00D0               	movwf	??___flmul
  8169  041F  0850               	movf	??___flmul,w
  8170  0420  00A0               	movwf	__Umul8_16@multiplicand
  8171  0421  084C               	movf	___flmul@a,w
  8172  0422  3189  21B5  3183   	fcall	__Umul8_16
  8173  0425  0140               	movlb	0	; select bank0
  8174  0426  0821               	movf	?__Umul8_16+1,w
  8175  0427  00E1               	movwf	___flmul@temp+1
  8176  0428  0820               	movf	?__Umul8_16,w
  8177  0429  00E0               	movwf	___flmul@temp
  8178  042A  0860               	movf	___flmul@temp,w
  8179  042B  07D6               	addwf	___flmul@grs,f
  8180  042C  0861               	movf	___flmul@temp+1,w
  8181  042D  3DD7               	addwfc	___flmul@grs+1,f
  8182  042E  3000               	movlw	0
  8183  042F  3DD8               	addwfc	___flmul@grs+2,f
  8184  0430  3DD9               	addwfc	___flmul@grs+3,f
  8185  0431  0848               	movf	___flmul@b,w
  8186  0432  00D0               	movwf	??___flmul
  8187  0433  0850               	movf	??___flmul,w
  8188  0434  00A0               	movwf	__Umul8_16@multiplicand
  8189  0435  084D               	movf	___flmul@a+1,w
  8190  0436  3189  21B5  3183   	fcall	__Umul8_16
  8191  0439  0140               	movlb	0	; select bank0
  8192  043A  0821               	movf	?__Umul8_16+1,w
  8193  043B  00E1               	movwf	___flmul@temp+1
  8194  043C  0820               	movf	?__Umul8_16,w
  8195  043D  00E0               	movwf	___flmul@temp
  8196  043E  0860               	movf	___flmul@temp,w
  8197  043F  07D6               	addwf	___flmul@grs,f
  8198  0440  0861               	movf	___flmul@temp+1,w
  8199  0441  3DD7               	addwfc	___flmul@grs+1,f
  8200  0442  3000               	movlw	0
  8201  0443  3DD8               	addwfc	___flmul@grs+2,f
  8202  0444  3DD9               	addwfc	___flmul@grs+3,f
  8203  0445  3008               	movlw	8
  8204  0446                     u2585:	
  8205  0446  35D6               	lslf	___flmul@grs,f
  8206  0447  0DD7               	rlf	___flmul@grs+1,f
  8207  0448  0DD8               	rlf	___flmul@grs+2,f
  8208  0449  0DD9               	rlf	___flmul@grs+3,f
  8209  044A  0B89               	decfsz	9,f
  8210  044B  2C46               	goto	u2585
  8211  044C  0848               	movf	___flmul@b,w
  8212  044D  00D0               	movwf	??___flmul
  8213  044E  0850               	movf	??___flmul,w
  8214  044F  00A0               	movwf	__Umul8_16@multiplicand
  8215  0450  084C               	movf	___flmul@a,w
  8216  0451  3189  21B5  3183   	fcall	__Umul8_16
  8217  0454  0140               	movlb	0	; select bank0
  8218  0455  0821               	movf	?__Umul8_16+1,w
  8219  0456  00E1               	movwf	___flmul@temp+1
  8220  0457  0820               	movf	?__Umul8_16,w
  8221  0458  00E0               	movwf	___flmul@temp
  8222  0459  0860               	movf	___flmul@temp,w
  8223  045A  07D6               	addwf	___flmul@grs,f
  8224  045B  0861               	movf	___flmul@temp+1,w
  8225  045C  3DD7               	addwfc	___flmul@grs+1,f
  8226  045D  3000               	movlw	0
  8227  045E  3DD8               	addwfc	___flmul@grs+2,f
  8228  045F  3DD9               	addwfc	___flmul@grs+3,f
  8229  0460  0849               	movf	___flmul@b+1,w
  8230  0461  00D0               	movwf	??___flmul
  8231  0462  0850               	movf	??___flmul,w
  8232  0463  00A0               	movwf	__Umul8_16@multiplicand
  8233  0464  084E               	movf	___flmul@a+2,w
  8234  0465  3189  21B5  3183   	fcall	__Umul8_16
  8235  0468  0140               	movlb	0	; select bank0
  8236  0469  0821               	movf	?__Umul8_16+1,w
  8237  046A  00E1               	movwf	___flmul@temp+1
  8238  046B  0820               	movf	?__Umul8_16,w
  8239  046C  00E0               	movwf	___flmul@temp
  8240  046D  0860               	movf	___flmul@temp,w
  8241  046E  07DC               	addwf	___flmul@prod,f
  8242  046F  0861               	movf	___flmul@temp+1,w
  8243  0470  3DDD               	addwfc	___flmul@prod+1,f
  8244  0471  3000               	movlw	0
  8245  0472  3DDE               	addwfc	___flmul@prod+2,f
  8246  0473  3DDF               	addwfc	___flmul@prod+3,f
  8247  0474  084A               	movf	___flmul@b+2,w
  8248  0475  00D0               	movwf	??___flmul
  8249  0476  0850               	movf	??___flmul,w
  8250  0477  00A0               	movwf	__Umul8_16@multiplicand
  8251  0478  084D               	movf	___flmul@a+1,w
  8252  0479  3189  21B5  3183   	fcall	__Umul8_16
  8253  047C  0140               	movlb	0	; select bank0
  8254  047D  0821               	movf	?__Umul8_16+1,w
  8255  047E  00E1               	movwf	___flmul@temp+1
  8256  047F  0820               	movf	?__Umul8_16,w
  8257  0480  00E0               	movwf	___flmul@temp
  8258  0481  0860               	movf	___flmul@temp,w
  8259  0482  07DC               	addwf	___flmul@prod,f
  8260  0483  0861               	movf	___flmul@temp+1,w
  8261  0484  3DDD               	addwfc	___flmul@prod+1,f
  8262  0485  3000               	movlw	0
  8263  0486  3DDE               	addwfc	___flmul@prod+2,f
  8264  0487  3DDF               	addwfc	___flmul@prod+3,f
  8265  0488  084A               	movf	___flmul@b+2,w
  8266  0489  00D0               	movwf	??___flmul
  8267  048A  0850               	movf	??___flmul,w
  8268  048B  00A0               	movwf	__Umul8_16@multiplicand
  8269  048C  084E               	movf	___flmul@a+2,w
  8270  048D  3189  21B5  3183   	fcall	__Umul8_16
  8271  0490  0140               	movlb	0	; select bank0
  8272  0491  0821               	movf	?__Umul8_16+1,w
  8273  0492  00E1               	movwf	___flmul@temp+1
  8274  0493  0820               	movf	?__Umul8_16,w
  8275  0494  00E0               	movwf	___flmul@temp
  8276  0495  0860               	movf	___flmul@temp,w
  8277  0496  00D0               	movwf	??___flmul
  8278  0497  0861               	movf	___flmul@temp+1,w
  8279  0498  00D1               	movwf	??___flmul+1
  8280  0499  01D2               	clrf	??___flmul+2
  8281  049A  01D3               	clrf	??___flmul+3
  8282  049B  3008               	movlw	8
  8283  049C                     u2595:	
  8284  049C  35D0               	lslf	??___flmul,f
  8285  049D  0DD1               	rlf	??___flmul+1,f
  8286  049E  0DD2               	rlf	??___flmul+2,f
  8287  049F  0DD3               	rlf	??___flmul+3,f
  8288  04A0  0B89               	decfsz	9,f
  8289  04A1  2C9C               	goto	u2595
  8290  04A2  0850               	movf	??___flmul,w
  8291  04A3  07DC               	addwf	___flmul@prod,f
  8292  04A4  0851               	movf	??___flmul+1,w
  8293  04A5  3DDD               	addwfc	___flmul@prod+1,f
  8294  04A6  0852               	movf	??___flmul+2,w
  8295  04A7  3DDE               	addwfc	___flmul@prod+2,f
  8296  04A8  0853               	movf	??___flmul+3,w
  8297  04A9  3DDF               	addwfc	___flmul@prod+3,f
  8298  04AA  0856               	movf	___flmul@grs,w
  8299  04AB  00D0               	movwf	??___flmul
  8300  04AC  0857               	movf	___flmul@grs+1,w
  8301  04AD  00D1               	movwf	??___flmul+1
  8302  04AE  0858               	movf	___flmul@grs+2,w
  8303  04AF  00D2               	movwf	??___flmul+2
  8304  04B0  0859               	movf	___flmul@grs+3,w
  8305  04B1  00D3               	movwf	??___flmul+3
  8306  04B2  3018               	movlw	24
  8307  04B3                     u2605:	
  8308  04B3  36D3               	lsrf	??___flmul+3,f
  8309  04B4  0CD2               	rrf	??___flmul+2,f
  8310  04B5  0CD1               	rrf	??___flmul+1,f
  8311  04B6  0CD0               	rrf	??___flmul,f
  8312  04B7  0B89               	decfsz	9,f
  8313  04B8  2CB3               	goto	u2605
  8314  04B9  0850               	movf	??___flmul,w
  8315  04BA  07DC               	addwf	___flmul@prod,f
  8316  04BB  0851               	movf	??___flmul+1,w
  8317  04BC  3DDD               	addwfc	___flmul@prod+1,f
  8318  04BD  0852               	movf	??___flmul+2,w
  8319  04BE  3DDE               	addwfc	___flmul@prod+2,f
  8320  04BF  0853               	movf	??___flmul+3,w
  8321  04C0  3DDF               	addwfc	___flmul@prod+3,f
  8322  04C1  3008               	movlw	8
  8323  04C2                     u2615:	
  8324  04C2  35D6               	lslf	___flmul@grs,f
  8325  04C3  0DD7               	rlf	___flmul@grs+1,f
  8326  04C4  0DD8               	rlf	___flmul@grs+2,f
  8327  04C5  0DD9               	rlf	___flmul@grs+3,f
  8328  04C6  0B89               	decfsz	9,f
  8329  04C7  2CC2               	goto	u2615
  8330  04C8  085B               	movf	___flmul@bexp,w
  8331  04C9  075A               	addwf	___flmul@aexp,w
  8332  04CA  00D0               	movwf	??___flmul
  8333  04CB  01D1               	clrf	??___flmul+1
  8334  04CC  0DD1               	rlf	??___flmul+1,f
  8335  04CD  0850               	movf	??___flmul,w
  8336  04CE  3E82               	addlw	130
  8337  04CF  00E0               	movwf	___flmul@temp
  8338  04D0  30FF               	movlw	255
  8339  04D1  3D51               	addwfc	??___flmul+1,w
  8340  04D2  00E1               	movwf	___flmul@temp+1
  8341  04D3                     l3215:	
  8342  04D3  1BDE               	btfsc	___flmul@prod+2,7
  8343  04D4  2CEA               	goto	l3217
  8344  04D5  3001               	movlw	1
  8345  04D6                     u2625:	
  8346  04D6  35DC               	lslf	___flmul@prod,f
  8347  04D7  0DDD               	rlf	___flmul@prod+1,f
  8348  04D8  0DDE               	rlf	___flmul@prod+2,f
  8349  04D9  0DDF               	rlf	___flmul@prod+3,f
  8350  04DA  0B89               	decfsz	9,f
  8351  04DB  2CD6               	goto	u2625
  8352  04DC  1BD9               	btfsc	___flmul@grs+3,7
  8353  04DD  145C               	bsf	___flmul@prod,0
  8354  04DE  3001               	movlw	1
  8355  04DF                     u2645:	
  8356  04DF  35D6               	lslf	___flmul@grs,f
  8357  04E0  0DD7               	rlf	___flmul@grs+1,f
  8358  04E1  0DD8               	rlf	___flmul@grs+2,f
  8359  04E2  0DD9               	rlf	___flmul@grs+3,f
  8360  04E3  0B89               	decfsz	9,f
  8361  04E4  2CDF               	goto	u2645
  8362  04E5  30FF               	movlw	255
  8363  04E6  07E0               	addwf	___flmul@temp,f
  8364  04E7  30FF               	movlw	255
  8365  04E8  3DE1               	addwfc	___flmul@temp+1,f
  8366  04E9  2CD3               	goto	l3215
  8367  04EA                     l3217:	
  8368  04EA  01DA               	clrf	___flmul@aexp
  8369  04EB  1FD9               	btfss	___flmul@grs+3,7
  8370  04EC  2D03               	goto	l3227
  8371  04ED  30FF               	movlw	255
  8372  04EE  0556               	andwf	___flmul@grs,w
  8373  04EF  00D0               	movwf	??___flmul
  8374  04F0  30FF               	movlw	255
  8375  04F1  0557               	andwf	___flmul@grs+1,w
  8376  04F2  00D1               	movwf	??___flmul+1
  8377  04F3  30FF               	movlw	255
  8378  04F4  0558               	andwf	___flmul@grs+2,w
  8379  04F5  00D2               	movwf	??___flmul+2
  8380  04F6  307F               	movlw	127
  8381  04F7  0559               	andwf	___flmul@grs+3,w
  8382  04F8  00D3               	movwf	??___flmul+3
  8383  04F9  0853               	movf	??___flmul+3,w
  8384  04FA  0452               	iorwf	??___flmul+2,w
  8385  04FB  0451               	iorwf	??___flmul+1,w
  8386  04FC  0450               	iorwf	??___flmul,w
  8387  04FD  1903               	skipnz
  8388  04FE  185C               	btfsc	___flmul@prod,0
  8389  04FF  2D01               	goto	l3223
  8390  0500  2D03               	goto	l3227
  8391  0501                     l3223:	
  8392  0501  01DA               	clrf	___flmul@aexp
  8393  0502  0ADA               	incf	___flmul@aexp,f
  8394  0503                     l3227:	
  8395  0503  085A               	movf	___flmul@aexp,w
  8396  0504  1903               	btfsc	3,2
  8397  0505  2D2C               	goto	l3237
  8398  0506  3001               	movlw	1
  8399  0507  07DC               	addwf	___flmul@prod,f
  8400  0508  3000               	movlw	0
  8401  0509  3DDD               	addwfc	___flmul@prod+1,f
  8402  050A  3000               	movlw	0
  8403  050B  3DDE               	addwfc	___flmul@prod+2,f
  8404  050C  3000               	movlw	0
  8405  050D  3DDF               	addwfc	___flmul@prod+3,f
  8406  050E  1C5F               	btfss	___flmul@prod+3,0
  8407  050F  2D2C               	goto	l3237
  8408  0510  085C               	movf	___flmul@prod,w
  8409  0511  00D0               	movwf	??___flmul
  8410  0512  085D               	movf	___flmul@prod+1,w
  8411  0513  00D1               	movwf	??___flmul+1
  8412  0514  085E               	movf	___flmul@prod+2,w
  8413  0515  00D2               	movwf	??___flmul+2
  8414  0516  085F               	movf	___flmul@prod+3,w
  8415  0517  00D3               	movwf	??___flmul+3
  8416  0518  3001               	movlw	1
  8417  0519  00D4               	movwf	??___flmul+4
  8418  051A                     u2715:	
  8419  051A  37D3               	asrf	??___flmul+3,f
  8420  051B  0CD2               	rrf	??___flmul+2,f
  8421  051C  0CD1               	rrf	??___flmul+1,f
  8422  051D  0CD0               	rrf	??___flmul,f
  8423  051E  0BD4               	decfsz	??___flmul+4,f
  8424  051F  2D1A               	goto	u2715
  8425  0520  0853               	movf	??___flmul+3,w
  8426  0521  00DF               	movwf	___flmul@prod+3
  8427  0522  0852               	movf	??___flmul+2,w
  8428  0523  00DE               	movwf	___flmul@prod+2
  8429  0524  0851               	movf	??___flmul+1,w
  8430  0525  00DD               	movwf	___flmul@prod+1
  8431  0526  0850               	movf	??___flmul,w
  8432  0527  00DC               	movwf	___flmul@prod
  8433  0528  3001               	movlw	1
  8434  0529  07E0               	addwf	___flmul@temp,f
  8435  052A  3000               	movlw	0
  8436  052B  3DE1               	addwfc	___flmul@temp+1,f
  8437  052C                     l3237:	
  8438  052C  0861               	movf	___flmul@temp+1,w
  8439  052D  3A80               	xorlw	128
  8440  052E  00D0               	movwf	??___flmul
  8441  052F  3080               	movlw	128
  8442  0530  0250               	subwf	??___flmul,w
  8443  0531  1D03               	skipz
  8444  0532  2D35               	goto	u2725
  8445  0533  30FF               	movlw	255
  8446  0534  0260               	subwf	___flmul@temp,w
  8447  0535                     u2725:	
  8448  0535  1C03               	skipc
  8449  0536  2D41               	goto	l3241
  8450  0537  307F               	movlw	127
  8451  0538  0140               	movlb	0	; select bank0
  8452  0539  00DF               	movwf	___flmul@prod+3
  8453  053A  3080               	movlw	128
  8454  053B  00DE               	movwf	___flmul@prod+2
  8455  053C  3000               	movlw	0
  8456  053D  00DD               	movwf	___flmul@prod+1
  8457  053E  3000               	movlw	0
  8458  053F  00DC               	movwf	___flmul@prod
  8459  0540  2D6B               	goto	l1298
  8460  0541                     l3241:	
  8461  0541  0140               	movlb	0	; select bank0
  8462  0542  0861               	movf	___flmul@temp+1,w
  8463  0543  3A80               	xorlw	128
  8464  0544  00D0               	movwf	??___flmul
  8465  0545  3080               	movlw	128
  8466  0546  0250               	subwf	??___flmul,w
  8467  0547  1D03               	skipz
  8468  0548  2D4B               	goto	u2735
  8469  0549  3001               	movlw	1
  8470  054A  0260               	subwf	___flmul@temp,w
  8471  054B                     u2735:	
  8472  054B  1803               	skipnc
  8473  054C  2D58               	goto	l3247
  8474  054D  3000               	movlw	0
  8475  054E  0140               	movlb	0	; select bank0
  8476  054F  00DF               	movwf	___flmul@prod+3
  8477  0550  3000               	movlw	0
  8478  0551  00DE               	movwf	___flmul@prod+2
  8479  0552  3000               	movlw	0
  8480  0553  00DD               	movwf	___flmul@prod+1
  8481  0554  3000               	movlw	0
  8482  0555  00DC               	movwf	___flmul@prod
  8483  0556  01D5               	clrf	___flmul@sign
  8484  0557  2D6B               	goto	l1298
  8485  0558                     l3247:	
  8486  0558  0140               	movlb	0	; select bank0
  8487  0559  0860               	movf	___flmul@temp,w
  8488  055A  00D0               	movwf	??___flmul
  8489  055B  0850               	movf	??___flmul,w
  8490  055C  00DB               	movwf	___flmul@bexp
  8491  055D  30FF               	movlw	255
  8492  055E  05DC               	andwf	___flmul@prod,f
  8493  055F  30FF               	movlw	255
  8494  0560  05DD               	andwf	___flmul@prod+1,f
  8495  0561  307F               	movlw	127
  8496  0562  05DE               	andwf	___flmul@prod+2,f
  8497  0563  3000               	movlw	0
  8498  0564  05DF               	andwf	___flmul@prod+3,f
  8499  0565  185B               	btfsc	___flmul@bexp,0
  8500  0566  17DE               	bsf	___flmul@prod+2,7
  8501  0567  365B               	lsrf	___flmul@bexp,w
  8502  0568  00D0               	movwf	??___flmul
  8503  0569  0850               	movf	??___flmul,w
  8504  056A  00DF               	movwf	___flmul@prod+3
  8505  056B                     l1298:	
  8506  056B  0855               	movf	___flmul@sign,w
  8507  056C  00D0               	movwf	??___flmul
  8508  056D  0850               	movf	??___flmul,w
  8509  056E  04DF               	iorwf	___flmul@prod+3,f
  8510  056F  085F               	movf	___flmul@prod+3,w
  8511  0570  00CB               	movwf	?___flmul+3
  8512  0571  085E               	movf	___flmul@prod+2,w
  8513  0572  00CA               	movwf	?___flmul+2
  8514  0573  085D               	movf	___flmul@prod+1,w
  8515  0574  00C9               	movwf	?___flmul+1
  8516  0575  085C               	movf	___flmul@prod,w
  8517  0576  00C8               	movwf	?___flmul
  8518  0577  0008               	return
  8519  0578                     __end_of___flmul:	
  8520                           
  8521                           	psect	text12
  8522  09B5                     __ptext12:	
  8523 ;; *************** function __Umul8_16 *****************
  8524 ;; Defined at:
  8525 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;  multiplier      1    wreg     unsigned char 
  8528 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;  multiplier      1    8[BANK0 ] unsigned char 
  8531 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  8532 ;;  product         2    4[BANK0 ] unsigned int 
  8533 ;; Return value:  Size  Location     Type
  8534 ;;                  2    0[BANK0 ] unsigned int 
  8535 ;; Registers used:
  8536 ;;		wreg, status,2, status,0
  8537 ;; Tracked objects:
  8538 ;;		On entry : 0/0
  8539 ;;		On exit  : 0/0
  8540 ;;		Unchanged: 0/0
  8541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8542 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8543 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8544 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8545 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8546 ;;Total ram usage:        9 bytes
  8547 ;; Hardware stack levels used:    1
  8548 ;; Hardware stack levels required when called:    3
  8549 ;; This function calls:
  8550 ;;		Nothing
  8551 ;; This function is called by:
  8552 ;;		___flmul
  8553 ;; This function uses a non-reentrant model
  8554 ;;
  8555                           
  8556                           
  8557                           ;psect for function __Umul8_16
  8558  09B5                     __Umul8_16:	
  8559                           
  8560                           ;incstack = 0
  8561                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8562                           ;__Umul8_16@multiplier stored from wreg
  8563  09B5  0140               	movlb	0	; select bank0
  8564  09B6  00A8               	movwf	__Umul8_16@multiplier
  8565  09B7  01A4               	clrf	__Umul8_16@product
  8566  09B8  01A5               	clrf	__Umul8_16@product+1
  8567  09B9  0820               	movf	__Umul8_16@multiplicand,w
  8568  09BA  00A2               	movwf	??__Umul8_16
  8569  09BB  01A3               	clrf	??__Umul8_16+1
  8570  09BC  0822               	movf	??__Umul8_16,w
  8571  09BD  00A6               	movwf	__Umul8_16@word_mpld
  8572  09BE  0823               	movf	??__Umul8_16+1,w
  8573  09BF  00A7               	movwf	__Umul8_16@word_mpld+1
  8574  09C0                     l2863:	
  8575  09C0  1C28               	btfss	__Umul8_16@multiplier,0
  8576  09C1  29C6               	goto	l1343
  8577  09C2  0826               	movf	__Umul8_16@word_mpld,w
  8578  09C3  07A4               	addwf	__Umul8_16@product,f
  8579  09C4  0827               	movf	__Umul8_16@word_mpld+1,w
  8580  09C5  3DA5               	addwfc	__Umul8_16@product+1,f
  8581  09C6                     l1343:	
  8582  09C6  3001               	movlw	1
  8583  09C7                     u2025:	
  8584  09C7  35A6               	lslf	__Umul8_16@word_mpld,f
  8585  09C8  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  8586  09C9  0B89               	decfsz	9,f
  8587  09CA  29C7               	goto	u2025
  8588  09CB  1003               	clrc
  8589  09CC  0CA8               	rrf	__Umul8_16@multiplier,f
  8590  09CD  0828               	movf	__Umul8_16@multiplier,w
  8591  09CE  1D03               	btfss	3,2
  8592  09CF  29C0               	goto	l2863
  8593  09D0  0825               	movf	__Umul8_16@product+1,w
  8594  09D1  00A1               	movwf	?__Umul8_16+1
  8595  09D2  0824               	movf	__Umul8_16@product,w
  8596  09D3  00A0               	movwf	?__Umul8_16
  8597  09D4  0008               	return
  8598  09D5                     __end_of__Umul8_16:	
  8599                           
  8600                           	psect	text13
  8601  0578                     __ptext13:	
  8602 ;; *************** function ___fldiv *****************
  8603 ;; Defined at:
  8604 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;  a               4   14[BANK0 ] unsigned int 
  8607 ;;  b               4   18[BANK0 ] unsigned int 
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;  grs             4   34[BANK0 ] unsigned long 
  8610 ;;  rem             4   27[BANK0 ] unsigned long 
  8611 ;;  new_exp         2   32[BANK0 ] int 
  8612 ;;  aexp            1   39[BANK0 ] unsigned char 
  8613 ;;  bexp            1   38[BANK0 ] unsigned char 
  8614 ;;  sign            1   31[BANK0 ] unsigned char 
  8615 ;; Return value:  Size  Location     Type
  8616 ;;                  4   14[BANK0 ] unsigned char 
  8617 ;; Registers used:
  8618 ;;		wreg, status,2, status,0
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/0
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8624 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8625 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8626 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8627 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8628 ;;Total ram usage:       26 bytes
  8629 ;; Hardware stack levels used:    1
  8630 ;; Hardware stack levels required when called:    3
  8631 ;; This function calls:
  8632 ;;		Nothing
  8633 ;; This function is called by:
  8634 ;;		_LED_setColor
  8635 ;;		_LED_setBrightness
  8636 ;; This function uses a non-reentrant model
  8637 ;;
  8638                           
  8639                           
  8640                           ;psect for function ___fldiv
  8641  0578                     ___fldiv:	
  8642                           
  8643                           ;incstack = 0
  8644                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  8645  0578  0140               	movlb	0	; select bank0
  8646  0579  0835               	movf	___fldiv@b+3,w
  8647  057A  3980               	andlw	128
  8648  057B  00B6               	movwf	??___fldiv
  8649  057C  0836               	movf	??___fldiv,w
  8650  057D  00BF               	movwf	___fldiv@sign
  8651  057E  3535               	lslf	___fldiv@b+3,w
  8652  057F  00B6               	movwf	??___fldiv
  8653  0580  0836               	movf	??___fldiv,w
  8654  0581  00C6               	movwf	___fldiv@bexp
  8655  0582  1BB4               	btfsc	___fldiv@b+2,7
  8656  0583  1446               	bsf	___fldiv@bexp,0
  8657  0584  0846               	movf	___fldiv@bexp,w
  8658  0585  1903               	btfsc	3,2
  8659  0586  2D95               	goto	l2997
  8660  0587  0A46               	incf	___fldiv@bexp,w
  8661  0588  1D03               	btfss	3,2
  8662  0589  2D92               	goto	l2993
  8663  058A  3000               	movlw	0
  8664  058B  00B5               	movwf	___fldiv@b+3
  8665  058C  3000               	movlw	0
  8666  058D  00B4               	movwf	___fldiv@b+2
  8667  058E  3000               	movlw	0
  8668  058F  00B3               	movwf	___fldiv@b+1
  8669  0590  3000               	movlw	0
  8670  0591  00B2               	movwf	___fldiv@b
  8671  0592                     l2993:	
  8672  0592  17B4               	bsf	___fldiv@b+2,7
  8673  0593  01B5               	clrf	___fldiv@b+3
  8674  0594  2D9D               	goto	l2999
  8675  0595                     l2997:	
  8676  0595  3000               	movlw	0
  8677  0596  00B5               	movwf	___fldiv@b+3
  8678  0597  3000               	movlw	0
  8679  0598  00B4               	movwf	___fldiv@b+2
  8680  0599  3000               	movlw	0
  8681  059A  00B3               	movwf	___fldiv@b+1
  8682  059B  3000               	movlw	0
  8683  059C  00B2               	movwf	___fldiv@b
  8684  059D                     l2999:	
  8685  059D  0831               	movf	___fldiv@a+3,w
  8686  059E  3980               	andlw	128
  8687  059F  00B6               	movwf	??___fldiv
  8688  05A0  0836               	movf	??___fldiv,w
  8689  05A1  06BF               	xorwf	___fldiv@sign,f
  8690  05A2  3531               	lslf	___fldiv@a+3,w
  8691  05A3  00B6               	movwf	??___fldiv
  8692  05A4  0836               	movf	??___fldiv,w
  8693  05A5  00C7               	movwf	___fldiv@aexp
  8694  05A6  1BB0               	btfsc	___fldiv@a+2,7
  8695  05A7  1447               	bsf	___fldiv@aexp,0
  8696  05A8  0847               	movf	___fldiv@aexp,w
  8697  05A9  1903               	btfsc	3,2
  8698  05AA  2DB9               	goto	l3017
  8699  05AB  0A47               	incf	___fldiv@aexp,w
  8700  05AC  1D03               	btfss	3,2
  8701  05AD  2DB6               	goto	l3013
  8702  05AE  3000               	movlw	0
  8703  05AF  00B1               	movwf	___fldiv@a+3
  8704  05B0  3000               	movlw	0
  8705  05B1  00B0               	movwf	___fldiv@a+2
  8706  05B2  3000               	movlw	0
  8707  05B3  00AF               	movwf	___fldiv@a+1
  8708  05B4  3000               	movlw	0
  8709  05B5  00AE               	movwf	___fldiv@a
  8710  05B6                     l3013:	
  8711  05B6  17B0               	bsf	___fldiv@a+2,7
  8712  05B7  01B1               	clrf	___fldiv@a+3
  8713  05B8  2DC1               	goto	l1246
  8714  05B9                     l3017:	
  8715  05B9  3000               	movlw	0
  8716  05BA  00B1               	movwf	___fldiv@a+3
  8717  05BB  3000               	movlw	0
  8718  05BC  00B0               	movwf	___fldiv@a+2
  8719  05BD  3000               	movlw	0
  8720  05BE  00AF               	movwf	___fldiv@a+1
  8721  05BF  3000               	movlw	0
  8722  05C0  00AE               	movwf	___fldiv@a
  8723  05C1                     l1246:	
  8724  05C1  0831               	movf	___fldiv@a+3,w
  8725  05C2  0430               	iorwf	___fldiv@a+2,w
  8726  05C3  042F               	iorwf	___fldiv@a+1,w
  8727  05C4  042E               	iorwf	___fldiv@a,w
  8728  05C5  1D03               	skipz
  8729  05C6  2DE0               	goto	l3027
  8730  05C7  3000               	movlw	0
  8731  05C8  00B5               	movwf	___fldiv@b+3
  8732  05C9  3000               	movlw	0
  8733  05CA  00B4               	movwf	___fldiv@b+2
  8734  05CB  3000               	movlw	0
  8735  05CC  00B3               	movwf	___fldiv@b+1
  8736  05CD  3000               	movlw	0
  8737  05CE  00B2               	movwf	___fldiv@b
  8738  05CF  3080               	movlw	128
  8739  05D0  04B4               	iorwf	___fldiv@b+2,f
  8740  05D1  307F               	movlw	127
  8741  05D2  04B5               	iorwf	___fldiv@b+3,f
  8742  05D3                     L1:	
  8743  05D3  083F               	movf	___fldiv@sign,w
  8744  05D4  00B6               	movwf	??___fldiv
  8745  05D5  0836               	movf	??___fldiv,w
  8746  05D6  04B5               	iorwf	___fldiv@b+3,f
  8747  05D7  0835               	movf	___fldiv@b+3,w
  8748  05D8  00B1               	movwf	?___fldiv+3
  8749  05D9  0834               	movf	___fldiv@b+2,w
  8750  05DA  00B0               	movwf	?___fldiv+2
  8751  05DB  0833               	movf	___fldiv@b+1,w
  8752  05DC  00AF               	movwf	?___fldiv+1
  8753  05DD  0832               	movf	___fldiv@b,w
  8754  05DE  00AE               	movwf	?___fldiv
  8755  05DF  0008               	return
  8756  05E0                     l3027:	
  8757  05E0  0846               	movf	___fldiv@bexp,w
  8758  05E1  1D03               	btfss	3,2
  8759  05E2  2DEC               	goto	l3033
  8760  05E3  3000               	movlw	0
  8761  05E4  00B1               	movwf	?___fldiv+3
  8762  05E5  3000               	movlw	0
  8763  05E6  00B0               	movwf	?___fldiv+2
  8764  05E7  3000               	movlw	0
  8765  05E8  00AF               	movwf	?___fldiv+1
  8766  05E9  3000               	movlw	0
  8767  05EA  00AE               	movwf	?___fldiv
  8768  05EB  0008               	return
  8769  05EC                     l3033:	
  8770  05EC  0846               	movf	___fldiv@bexp,w
  8771  05ED  00B6               	movwf	??___fldiv
  8772  05EE  01B7               	clrf	??___fldiv+1
  8773  05EF  0837               	movf	??___fldiv+1,w
  8774  05F0  00B9               	movwf	??___fldiv+3
  8775  05F1  0847               	movf	___fldiv@aexp,w
  8776  05F2  0236               	subwf	??___fldiv,w
  8777  05F3  00B8               	movwf	??___fldiv+2
  8778  05F4  1C03               	skipc
  8779  05F5  03B9               	decf	??___fldiv+3,f
  8780  05F6  0838               	movf	??___fldiv+2,w
  8781  05F7  3E7F               	addlw	127
  8782  05F8  00C0               	movwf	___fldiv@new_exp
  8783  05F9  3000               	movlw	0
  8784  05FA  3D39               	addwfc	??___fldiv+3,w
  8785  05FB  00C1               	movwf	___fldiv@new_exp+1
  8786  05FC  0835               	movf	___fldiv@b+3,w
  8787  05FD  00BE               	movwf	___fldiv@rem+3
  8788  05FE  0834               	movf	___fldiv@b+2,w
  8789  05FF  00BD               	movwf	___fldiv@rem+2
  8790  0600  0833               	movf	___fldiv@b+1,w
  8791  0601  00BC               	movwf	___fldiv@rem+1
  8792  0602  0832               	movf	___fldiv@b,w
  8793  0603  00BB               	movwf	___fldiv@rem
  8794  0604  3000               	movlw	0
  8795  0605  00B5               	movwf	___fldiv@b+3
  8796  0606  3000               	movlw	0
  8797  0607  00B4               	movwf	___fldiv@b+2
  8798  0608  3000               	movlw	0
  8799  0609  00B3               	movwf	___fldiv@b+1
  8800  060A  3000               	movlw	0
  8801  060B  00B2               	movwf	___fldiv@b
  8802  060C  3000               	movlw	0
  8803  060D  00C5               	movwf	___fldiv@grs+3
  8804  060E  3000               	movlw	0
  8805  060F  00C4               	movwf	___fldiv@grs+2
  8806  0610  3000               	movlw	0
  8807  0611  00C3               	movwf	___fldiv@grs+1
  8808  0612  3000               	movlw	0
  8809  0613  00C2               	movwf	___fldiv@grs
  8810  0614  01C7               	clrf	___fldiv@aexp
  8811  0615                     l3061:	
  8812  0615  301A               	movlw	26
  8813  0616  0247               	subwf	___fldiv@aexp,w
  8814  0617  1803               	btfsc	3,0
  8815  0618  2E51               	goto	l3063
  8816  0619  0847               	movf	___fldiv@aexp,w
  8817  061A  1903               	btfsc	3,2
  8818  061B  2E33               	goto	l3053
  8819  061C  3001               	movlw	1
  8820  061D                     u2295:	
  8821  061D  35BB               	lslf	___fldiv@rem,f
  8822  061E  0DBC               	rlf	___fldiv@rem+1,f
  8823  061F  0DBD               	rlf	___fldiv@rem+2,f
  8824  0620  0DBE               	rlf	___fldiv@rem+3,f
  8825  0621  0B89               	decfsz	9,f
  8826  0622  2E1D               	goto	u2295
  8827  0623  3001               	movlw	1
  8828  0624                     u2305:	
  8829  0624  35B2               	lslf	___fldiv@b,f
  8830  0625  0DB3               	rlf	___fldiv@b+1,f
  8831  0626  0DB4               	rlf	___fldiv@b+2,f
  8832  0627  0DB5               	rlf	___fldiv@b+3,f
  8833  0628  0B89               	decfsz	9,f
  8834  0629  2E24               	goto	u2305
  8835  062A  1BC5               	btfsc	___fldiv@grs+3,7
  8836  062B  1432               	bsf	___fldiv@b,0
  8837  062C  3001               	movlw	1
  8838  062D                     u2325:	
  8839  062D  35C2               	lslf	___fldiv@grs,f
  8840  062E  0DC3               	rlf	___fldiv@grs+1,f
  8841  062F  0DC4               	rlf	___fldiv@grs+2,f
  8842  0630  0DC5               	rlf	___fldiv@grs+3,f
  8843  0631  0B89               	decfsz	9,f
  8844  0632  2E2D               	goto	u2325
  8845  0633                     l3053:	
  8846  0633  0831               	movf	___fldiv@a+3,w
  8847  0634  023E               	subwf	___fldiv@rem+3,w
  8848  0635  1D03               	skipz
  8849  0636  2E41               	goto	u2335
  8850  0637  0830               	movf	___fldiv@a+2,w
  8851  0638  023D               	subwf	___fldiv@rem+2,w
  8852  0639  1D03               	skipz
  8853  063A  2E41               	goto	u2335
  8854  063B  082F               	movf	___fldiv@a+1,w
  8855  063C  023C               	subwf	___fldiv@rem+1,w
  8856  063D  1D03               	skipz
  8857  063E  2E41               	goto	u2335
  8858  063F  082E               	movf	___fldiv@a,w
  8859  0640  023B               	subwf	___fldiv@rem,w
  8860  0641                     u2335:	
  8861  0641  1C03               	skipc
  8862  0642  2E4C               	goto	l3059
  8863  0643  1745               	bsf	___fldiv@grs+3,6
  8864  0644  082E               	movf	___fldiv@a,w
  8865  0645  02BB               	subwf	___fldiv@rem,f
  8866  0646  082F               	movf	___fldiv@a+1,w
  8867  0647  3BBC               	subwfb	___fldiv@rem+1,f
  8868  0648  0830               	movf	___fldiv@a+2,w
  8869  0649  3BBD               	subwfb	___fldiv@rem+2,f
  8870  064A  0831               	movf	___fldiv@a+3,w
  8871  064B  3BBE               	subwfb	___fldiv@rem+3,f
  8872  064C                     l3059:	
  8873  064C  3001               	movlw	1
  8874  064D  00B6               	movwf	??___fldiv
  8875  064E  0836               	movf	??___fldiv,w
  8876  064F  07C7               	addwf	___fldiv@aexp,f
  8877  0650  2E15               	goto	l3061
  8878  0651                     l3063:	
  8879  0651  083E               	movf	___fldiv@rem+3,w
  8880  0652  043D               	iorwf	___fldiv@rem+2,w
  8881  0653  043C               	iorwf	___fldiv@rem+1,w
  8882  0654  043B               	iorwf	___fldiv@rem,w
  8883  0655  1D03               	btfss	3,2
  8884  0656  1442               	bsf	___fldiv@grs,0
  8885  0657                     l3077:	
  8886  0657  1BB4               	btfsc	___fldiv@b+2,7
  8887  0658  2E6E               	goto	l3079
  8888  0659  3001               	movlw	1
  8889  065A                     u2365:	
  8890  065A  35B2               	lslf	___fldiv@b,f
  8891  065B  0DB3               	rlf	___fldiv@b+1,f
  8892  065C  0DB4               	rlf	___fldiv@b+2,f
  8893  065D  0DB5               	rlf	___fldiv@b+3,f
  8894  065E  0B89               	decfsz	9,f
  8895  065F  2E5A               	goto	u2365
  8896  0660  1BC5               	btfsc	___fldiv@grs+3,7
  8897  0661  1432               	bsf	___fldiv@b,0
  8898  0662  3001               	movlw	1
  8899  0663                     u2385:	
  8900  0663  35C2               	lslf	___fldiv@grs,f
  8901  0664  0DC3               	rlf	___fldiv@grs+1,f
  8902  0665  0DC4               	rlf	___fldiv@grs+2,f
  8903  0666  0DC5               	rlf	___fldiv@grs+3,f
  8904  0667  0B89               	decfsz	9,f
  8905  0668  2E63               	goto	u2385
  8906  0669  30FF               	movlw	255
  8907  066A  07C0               	addwf	___fldiv@new_exp,f
  8908  066B  30FF               	movlw	255
  8909  066C  3DC1               	addwfc	___fldiv@new_exp+1,f
  8910  066D  2E57               	goto	l3077
  8911  066E                     l3079:	
  8912  066E  01C7               	clrf	___fldiv@aexp
  8913  066F  1FC5               	btfss	___fldiv@grs+3,7
  8914  0670  2E87               	goto	l3089
  8915  0671  30FF               	movlw	255
  8916  0672  0542               	andwf	___fldiv@grs,w
  8917  0673  00B6               	movwf	??___fldiv
  8918  0674  30FF               	movlw	255
  8919  0675  0543               	andwf	___fldiv@grs+1,w
  8920  0676  00B7               	movwf	??___fldiv+1
  8921  0677  30FF               	movlw	255
  8922  0678  0544               	andwf	___fldiv@grs+2,w
  8923  0679  00B8               	movwf	??___fldiv+2
  8924  067A  307F               	movlw	127
  8925  067B  0545               	andwf	___fldiv@grs+3,w
  8926  067C  00B9               	movwf	??___fldiv+3
  8927  067D  0839               	movf	??___fldiv+3,w
  8928  067E  0438               	iorwf	??___fldiv+2,w
  8929  067F  0437               	iorwf	??___fldiv+1,w
  8930  0680  0436               	iorwf	??___fldiv,w
  8931  0681  1903               	skipnz
  8932  0682  1832               	btfsc	___fldiv@b,0
  8933  0683  2E85               	goto	l3085
  8934  0684  2E87               	goto	l3089
  8935  0685                     l3085:	
  8936  0685  01C7               	clrf	___fldiv@aexp
  8937  0686  0AC7               	incf	___fldiv@aexp,f
  8938  0687                     l3089:	
  8939  0687  0847               	movf	___fldiv@aexp,w
  8940  0688  1903               	btfsc	3,2
  8941  0689  2EB0               	goto	l3099
  8942  068A  3001               	movlw	1
  8943  068B  07B2               	addwf	___fldiv@b,f
  8944  068C  3000               	movlw	0
  8945  068D  3DB3               	addwfc	___fldiv@b+1,f
  8946  068E  3000               	movlw	0
  8947  068F  3DB4               	addwfc	___fldiv@b+2,f
  8948  0690  3000               	movlw	0
  8949  0691  3DB5               	addwfc	___fldiv@b+3,f
  8950  0692  1C35               	btfss	___fldiv@b+3,0
  8951  0693  2EB0               	goto	l3099
  8952  0694  0832               	movf	___fldiv@b,w
  8953  0695  00B6               	movwf	??___fldiv
  8954  0696  0833               	movf	___fldiv@b+1,w
  8955  0697  00B7               	movwf	??___fldiv+1
  8956  0698  0834               	movf	___fldiv@b+2,w
  8957  0699  00B8               	movwf	??___fldiv+2
  8958  069A  0835               	movf	___fldiv@b+3,w
  8959  069B  00B9               	movwf	??___fldiv+3
  8960  069C  3001               	movlw	1
  8961  069D  00BA               	movwf	??___fldiv+4
  8962  069E                     u2455:	
  8963  069E  37B9               	asrf	??___fldiv+3,f
  8964  069F  0CB8               	rrf	??___fldiv+2,f
  8965  06A0  0CB7               	rrf	??___fldiv+1,f
  8966  06A1  0CB6               	rrf	??___fldiv,f
  8967  06A2  0BBA               	decfsz	??___fldiv+4,f
  8968  06A3  2E9E               	goto	u2455
  8969  06A4  0839               	movf	??___fldiv+3,w
  8970  06A5  00B5               	movwf	___fldiv@b+3
  8971  06A6  0838               	movf	??___fldiv+2,w
  8972  06A7  00B4               	movwf	___fldiv@b+2
  8973  06A8  0837               	movf	??___fldiv+1,w
  8974  06A9  00B3               	movwf	___fldiv@b+1
  8975  06AA  0836               	movf	??___fldiv,w
  8976  06AB  00B2               	movwf	___fldiv@b
  8977  06AC  3001               	movlw	1
  8978  06AD  07C0               	addwf	___fldiv@new_exp,f
  8979  06AE  3000               	movlw	0
  8980  06AF  3DC1               	addwfc	___fldiv@new_exp+1,f
  8981  06B0                     l3099:	
  8982  06B0  0841               	movf	___fldiv@new_exp+1,w
  8983  06B1  3A80               	xorlw	128
  8984  06B2  00B6               	movwf	??___fldiv
  8985  06B3  3080               	movlw	128
  8986  06B4  0236               	subwf	??___fldiv,w
  8987  06B5  1D03               	skipz
  8988  06B6  2EB9               	goto	u2465
  8989  06B7  30FF               	movlw	255
  8990  06B8  0240               	subwf	___fldiv@new_exp,w
  8991  06B9                     u2465:	
  8992  06B9  1C03               	skipc
  8993  06BA  2EC8               	goto	l1267
  8994  06BB  30FF               	movlw	255
  8995  06BC  0140               	movlb	0	; select bank0
  8996  06BD  00C0               	movwf	___fldiv@new_exp
  8997  06BE  3000               	movlw	0
  8998  06BF  00C1               	movwf	___fldiv@new_exp+1
  8999  06C0  3000               	movlw	0
  9000  06C1  00B5               	movwf	___fldiv@b+3
  9001  06C2  3000               	movlw	0
  9002  06C3  00B4               	movwf	___fldiv@b+2
  9003  06C4  3000               	movlw	0
  9004  06C5  00B3               	movwf	___fldiv@b+1
  9005  06C6  3000               	movlw	0
  9006  06C7  00B2               	movwf	___fldiv@b
  9007  06C8                     l1267:	
  9008  06C8  0140               	movlb	0	; select bank0
  9009  06C9  0841               	movf	___fldiv@new_exp+1,w
  9010  06CA  3A80               	xorlw	128
  9011  06CB  00B6               	movwf	??___fldiv
  9012  06CC  3080               	movlw	128
  9013  06CD  0236               	subwf	??___fldiv,w
  9014  06CE  1D03               	skipz
  9015  06CF  2ED2               	goto	u2475
  9016  06D0  3001               	movlw	1
  9017  06D1  0240               	subwf	___fldiv@new_exp,w
  9018  06D2                     u2475:	
  9019  06D2  1803               	skipnc
  9020  06D3  2EE0               	goto	l1268
  9021  06D4  0140               	movlb	0	; select bank0
  9022  06D5  01C0               	clrf	___fldiv@new_exp
  9023  06D6  01C1               	clrf	___fldiv@new_exp+1
  9024  06D7  3000               	movlw	0
  9025  06D8  00B5               	movwf	___fldiv@b+3
  9026  06D9  3000               	movlw	0
  9027  06DA  00B4               	movwf	___fldiv@b+2
  9028  06DB  3000               	movlw	0
  9029  06DC  00B3               	movwf	___fldiv@b+1
  9030  06DD  3000               	movlw	0
  9031  06DE  00B2               	movwf	___fldiv@b
  9032  06DF  01BF               	clrf	___fldiv@sign
  9033  06E0                     l1268:	
  9034  06E0  0140               	movlb	0	; select bank0
  9035  06E1  0840               	movf	___fldiv@new_exp,w
  9036  06E2  00B6               	movwf	??___fldiv
  9037  06E3  0836               	movf	??___fldiv,w
  9038  06E4  00C6               	movwf	___fldiv@bexp
  9039  06E5  1C46               	btfss	___fldiv@bexp,0
  9040  06E6  2EE9               	goto	l3113
  9041  06E7  17B4               	bsf	___fldiv@b+2,7
  9042  06E8  2EED               	goto	l1270
  9043  06E9                     l3113:	
  9044  06E9  307F               	movlw	127
  9045  06EA  00B6               	movwf	??___fldiv
  9046  06EB  0836               	movf	??___fldiv,w
  9047  06EC  05B4               	andwf	___fldiv@b+2,f
  9048  06ED                     l1270:	
  9049  06ED  3646               	lsrf	___fldiv@bexp,w
  9050  06EE  00B6               	movwf	??___fldiv
  9051  06EF  0836               	movf	??___fldiv,w
  9052  06F0  00B5               	movwf	___fldiv@b+3
  9053  06F1  2DD3               	goto	L1
  9054  06F2                     __end_of___fldiv:	
  9055                           
  9056                           	psect	text14
  9057  0AD8                     __ptext14:	
  9058 ;; *************** function _LED_init *****************
  9059 ;; Defined at:
  9060 ;;		line 39 in file "DMX_Source.c"
  9061 ;; Parameters:    Size  Location     Type
  9062 ;;		None
  9063 ;; Auto vars:     Size  Location     Type
  9064 ;;		None
  9065 ;; Return value:  Size  Location     Type
  9066 ;;                  1    wreg      void 
  9067 ;; Registers used:
  9068 ;;		wreg, status,2, status,0
  9069 ;; Tracked objects:
  9070 ;;		On entry : 0/0
  9071 ;;		On exit  : 0/0
  9072 ;;		Unchanged: 0/0
  9073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9078 ;;Total ram usage:        0 bytes
  9079 ;; Hardware stack levels used:    1
  9080 ;; Hardware stack levels required when called:    3
  9081 ;; This function calls:
  9082 ;;		Nothing
  9083 ;; This function is called by:
  9084 ;;		_main
  9085 ;; This function uses a non-reentrant model
  9086 ;;
  9087                           
  9088                           
  9089                           ;psect for function _LED_init
  9090  0AD8                     _LED_init:	
  9091                           
  9092                           ;DMX_Source.c: 40:     CCP1CONbits.MODE = 0b1100;
  9093                           
  9094                           ;incstack = 0
  9095                           ; Regs used in _LED_init: [wreg+status,2+status,0]
  9096  0AD8  0146               	movlb	6	; select bank6
  9097  0AD9  080E               	movf	14,w	;volatile
  9098  0ADA  39F0               	andlw	-16
  9099  0ADB  380C               	iorlw	12
  9100  0ADC  008E               	movwf	14	;volatile
  9101                           
  9102                           ;DMX_Source.c: 41:     CCP2CONbits.MODE = 0b1100;
  9103  0ADD  0812               	movf	18,w	;volatile
  9104  0ADE  39F0               	andlw	-16
  9105  0ADF  380C               	iorlw	12
  9106  0AE0  0092               	movwf	18	;volatile
  9107                           
  9108                           ;DMX_Source.c: 42:     CCP3CONbits.MODE = 0b1100;
  9109  0AE1  0816               	movf	22,w	;volatile
  9110  0AE2  39F0               	andlw	-16
  9111  0AE3  380C               	iorlw	12
  9112  0AE4  0096               	movwf	22	;volatile
  9113                           
  9114                           ;DMX_Source.c: 43:     CCP4CONbits.MODE = 0b1100;
  9115  0AE5  081A               	movf	26,w	;volatile
  9116  0AE6  39F0               	andlw	-16
  9117  0AE7  380C               	iorlw	12
  9118  0AE8  009A               	movwf	26	;volatile
  9119                           
  9120                           ;DMX_Source.c: 45:     CCP1CONbits.CCP1EN = 1;
  9121  0AE9  178E               	bsf	14,7	;volatile
  9122                           
  9123                           ;DMX_Source.c: 46:     CCP2CONbits.CCP2EN = 1;
  9124  0AEA  1792               	bsf	18,7	;volatile
  9125                           
  9126                           ;DMX_Source.c: 47:     CCP3CONbits.CCP3EN = 1;
  9127  0AEB  1796               	bsf	22,7	;volatile
  9128                           
  9129                           ;DMX_Source.c: 48:     CCP4CONbits.CCP4EN = 1;
  9130  0AEC  179A               	bsf	26,7	;volatile
  9131                           
  9132                           ;DMX_Source.c: 49:     T2CLKCON = 0x01;
  9133  0AED  3001               	movlw	1
  9134  0AEE  0145               	movlb	5	; select bank5
  9135  0AEF  0090               	movwf	16	;volatile
  9136                           
  9137                           ;DMX_Source.c: 51:     TRISC7 = 0;
  9138  0AF0  0140               	movlb	0	; select bank0
  9139  0AF1  1394               	bcf	20,7	;volatile
  9140                           
  9141                           ;DMX_Source.c: 52:     TRISC6 = 0;
  9142  0AF2  1314               	bcf	20,6	;volatile
  9143                           
  9144                           ;DMX_Source.c: 53:     TRISC3 = 0;
  9145  0AF3  1194               	bcf	20,3	;volatile
  9146                           
  9147                           ;DMX_Source.c: 54:     TRISC4 = 0;
  9148  0AF4  1214               	bcf	20,4	;volatile
  9149                           
  9150                           ;DMX_Source.c: 56:     RC7PPS = 0x09;
  9151  0AF5  3009               	movlw	9
  9152  0AF6  017E               	movlb	62	; select bank62
  9153  0AF7  00A7               	movwf	39	;volatile
  9154                           
  9155                           ;DMX_Source.c: 57:     RC6PPS = 0x0A;
  9156  0AF8  300A               	movlw	10
  9157  0AF9  00A6               	movwf	38	;volatile
  9158                           
  9159                           ;DMX_Source.c: 58:     RC3PPS = 0x0B;
  9160  0AFA  300B               	movlw	11
  9161  0AFB  00A3               	movwf	35	;volatile
  9162                           
  9163                           ;DMX_Source.c: 59:     RC4PPS = 0x0C;
  9164  0AFC  300C               	movlw	12
  9165  0AFD  00A4               	movwf	36	;volatile
  9166                           
  9167                           ;DMX_Source.c: 61:     CCPR1H = 0x00;
  9168  0AFE  0146               	movlb	6	; select bank6
  9169  0AFF  018D               	clrf	13	;volatile
  9170                           
  9171                           ;DMX_Source.c: 62:     CCPR1L = 0x04;
  9172  0B00  3004               	movlw	4
  9173  0B01  008C               	movwf	12	;volatile
  9174                           
  9175                           ;DMX_Source.c: 63:     CCPR2H = 0x00;
  9176  0B02  0191               	clrf	17	;volatile
  9177                           
  9178                           ;DMX_Source.c: 64:     CCPR2L = 0x04;
  9179  0B03  3004               	movlw	4
  9180  0B04  0090               	movwf	16	;volatile
  9181                           
  9182                           ;DMX_Source.c: 65:     CCPR3H = 0x00;
  9183  0B05  0195               	clrf	21	;volatile
  9184                           
  9185                           ;DMX_Source.c: 66:     CCPR3L = 0x04;
  9186  0B06  3004               	movlw	4
  9187  0B07  0094               	movwf	20	;volatile
  9188                           
  9189                           ;DMX_Source.c: 67:     CCPR4H = 0x00;
  9190  0B08  0199               	clrf	25	;volatile
  9191                           
  9192                           ;DMX_Source.c: 68:     CCPR4L = 0x04;
  9193  0B09  3004               	movlw	4
  9194  0B0A  0098               	movwf	24	;volatile
  9195                           
  9196                           ;DMX_Source.c: 69:     T2CONbits.ON = 1;
  9197  0B0B  0145               	movlb	5	; select bank5
  9198  0B0C  178E               	bsf	14,7	;volatile
  9199  0B0D  0008               	return
  9200  0B0E                     __end_of_LED_init:	
  9201                           
  9202                           	psect	text15
  9203  09F6                     __ptext15:	
  9204 ;; *************** function _CONTROLLER_task *****************
  9205 ;; Defined at:
  9206 ;;		line 45 in file "controller.c"
  9207 ;; Parameters:    Size  Location     Type
  9208 ;;		None
  9209 ;; Auto vars:     Size  Location     Type
  9210 ;;		None
  9211 ;; Return value:  Size  Location     Type
  9212 ;;                  1    wreg      void 
  9213 ;; Registers used:
  9214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9215 ;; Tracked objects:
  9216 ;;		On entry : 0/0
  9217 ;;		On exit  : 0/0
  9218 ;;		Unchanged: 0/0
  9219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9224 ;;Total ram usage:        0 bytes
  9225 ;; Hardware stack levels used:    1
  9226 ;; Hardware stack levels required when called:   10
  9227 ;; This function calls:
  9228 ;;		_BUTTONS_isClicked
  9229 ;;		_BUTTONS_isHeld
  9230 ;;		_address_dec
  9231 ;;		_address_inc
  9232 ;; This function is called by:
  9233 ;;		_main
  9234 ;; This function uses a non-reentrant model
  9235 ;;
  9236                           
  9237                           
  9238                           ;psect for function _CONTROLLER_task
  9239  09F6                     _CONTROLLER_task:	
  9240                           
  9241                           ;controller.c: 46:     if (BUTTONS_isClicked(up)) {
  9242                           
  9243                           ;incstack = 0
  9244                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9245  09F6  0141               	movlb	1	; select bank1
  9246  09F7  084F               	movf	_up^(0+128),w
  9247  09F8  3188  20E6  3189   	fcall	_BUTTONS_isClicked
  9248  09FB  3A00               	xorlw	0
  9249  09FC  1903               	skipnz
  9250  09FD  2A01               	goto	l3453
  9251  09FE                     l3451:	
  9252                           
  9253                           ;controller.c: 47:         address_inc();
  9254  09FE  3189  210F         	fcall	_address_inc
  9255                           
  9256                           ;controller.c: 48:     }else if(BUTTONS_isHeld(up)){
  9257  0A00  0008               	return
  9258  0A01                     l3453:	
  9259  0A01  0141               	movlb	1	; select bank1
  9260  0A02  084F               	movf	_up^(0+128),w
  9261  0A03  3188  20C7  3189   	fcall	_BUTTONS_isHeld
  9262  0A06  3A00               	xorlw	0
  9263  0A07  1D03               	btfss	3,2
  9264  0A08  29FE               	goto	l3451
  9265  0A09  0141               	movlb	1	; select bank1
  9266  0A0A  084E               	movf	_down^(0+128),w
  9267  0A0B  3188  20E6  3189   	fcall	_BUTTONS_isClicked
  9268  0A0E  3A00               	xorlw	0
  9269  0A0F  1903               	skipnz
  9270  0A10  2A14               	goto	l3461
  9271  0A11                     l3459:	
  9272                           
  9273                           ;controller.c: 51:         address_dec();
  9274  0A11  3188  20FA         	fcall	_address_dec
  9275                           
  9276                           ;controller.c: 52:     }else if(BUTTONS_isHeld(down)){
  9277  0A13  0008               	return
  9278  0A14                     l3461:	
  9279  0A14  0141               	movlb	1	; select bank1
  9280  0A15  084E               	movf	_down^(0+128),w
  9281  0A16  3188  20C7  3189   	fcall	_BUTTONS_isHeld
  9282  0A19  3A00               	xorlw	0
  9283  0A1A  1903               	skipnz
  9284  0A1B  0008               	return
  9285  0A1C  2A11               	goto	l3459
  9286  0A1D                     __end_of_CONTROLLER_task:	
  9287                           
  9288                           	psect	text16
  9289  090F                     __ptext16:	
  9290 ;; *************** function _address_inc *****************
  9291 ;; Defined at:
  9292 ;;		line 20 in file "controller.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;		None
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;		None
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  1    wreg      void 
  9299 ;; Registers used:
  9300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 0/0
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9310 ;;Total ram usage:        0 bytes
  9311 ;; Hardware stack levels used:    1
  9312 ;; Hardware stack levels required when called:    9
  9313 ;; This function calls:
  9314 ;;		_TM1650_fastPrintNum
  9315 ;; This function is called by:
  9316 ;;		_CONTROLLER_task
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           
  9321                           ;psect for function _address_inc
  9322  090F                     _address_inc:	
  9323                           
  9324                           ;controller.c: 22:     if(address == 512)
  9325                           
  9326                           ;incstack = 0
  9327                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9328  090F  3002               	movlw	2
  9329  0910  067C               	xorwf	_address+1,w
  9330  0911  047B               	iorwf	_address,w
  9331  0912  1D03               	btfss	3,2
  9332  0913  2919               	goto	l2931
  9333                           
  9334                           ;controller.c: 23:         address = 1;
  9335  0914  3001               	movlw	1
  9336  0915  00FB               	movwf	_address
  9337  0916  3000               	movlw	0
  9338  0917  00FC               	movwf	_address+1
  9339  0918  291D               	goto	l2933
  9340  0919                     l2931:	
  9341                           
  9342                           ;controller.c: 25:         address++;
  9343  0919  3001               	movlw	1
  9344  091A  07FB               	addwf	_address,f
  9345  091B  3000               	movlw	0
  9346  091C  3DFC               	addwfc	_address+1,f
  9347  091D                     l2933:	
  9348                           
  9349                           ;controller.c: 28:     TM1650_fastPrintNum(address);
  9350  091D  087C               	movf	_address+1,w
  9351  091E  0140               	movlb	0	; select bank0
  9352  091F  00BC               	movwf	TM1650_fastPrintNum@num+1
  9353  0920  087B               	movf	_address,w
  9354  0921  00BB               	movwf	TM1650_fastPrintNum@num
  9355  0922  3180  2081         	fcall	_TM1650_fastPrintNum
  9356  0924  0008               	return
  9357  0925                     __end_of_address_inc:	
  9358                           
  9359                           	psect	text17
  9360  08FA                     __ptext17:	
  9361 ;; *************** function _address_dec *****************
  9362 ;; Defined at:
  9363 ;;		line 34 in file "controller.c"
  9364 ;; Parameters:    Size  Location     Type
  9365 ;;		None
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;		None
  9368 ;; Return value:  Size  Location     Type
  9369 ;;                  1    wreg      void 
  9370 ;; Registers used:
  9371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9372 ;; Tracked objects:
  9373 ;;		On entry : 0/0
  9374 ;;		On exit  : 0/0
  9375 ;;		Unchanged: 0/0
  9376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9381 ;;Total ram usage:        0 bytes
  9382 ;; Hardware stack levels used:    1
  9383 ;; Hardware stack levels required when called:    9
  9384 ;; This function calls:
  9385 ;;		_TM1650_fastPrintNum
  9386 ;; This function is called by:
  9387 ;;		_CONTROLLER_task
  9388 ;; This function uses a non-reentrant model
  9389 ;;
  9390                           
  9391                           
  9392                           ;psect for function _address_dec
  9393  08FA                     _address_dec:	
  9394                           
  9395                           ;controller.c: 36:     if(address == 1)
  9396                           
  9397                           ;incstack = 0
  9398                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9399  08FA  037B               	decf	_address,w
  9400  08FB  047C               	iorwf	_address+1,w
  9401  08FC  1D03               	btfss	3,2
  9402  08FD  2903               	goto	l2939
  9403                           
  9404                           ;controller.c: 37:         address = 512;
  9405  08FE  3000               	movlw	0
  9406  08FF  00FB               	movwf	_address
  9407  0900  3002               	movlw	2
  9408  0901  00FC               	movwf	_address+1
  9409  0902  2907               	goto	l2941
  9410  0903                     l2939:	
  9411                           
  9412                           ;controller.c: 39:         address--;
  9413  0903  3001               	movlw	1
  9414  0904  02FB               	subwf	_address,f
  9415  0905  3000               	movlw	0
  9416  0906  3BFC               	subwfb	_address+1,f
  9417  0907                     l2941:	
  9418                           
  9419                           ;controller.c: 42:     TM1650_fastPrintNum(address);
  9420  0907  087C               	movf	_address+1,w
  9421  0908  0140               	movlb	0	; select bank0
  9422  0909  00BC               	movwf	TM1650_fastPrintNum@num+1
  9423  090A  087B               	movf	_address,w
  9424  090B  00BB               	movwf	TM1650_fastPrintNum@num
  9425  090C  3180  2081         	fcall	_TM1650_fastPrintNum
  9426  090E  0008               	return
  9427  090F                     __end_of_address_dec:	
  9428                           
  9429                           	psect	text18
  9430  08C7                     __ptext18:	
  9431 ;; *************** function _BUTTONS_isHeld *****************
  9432 ;; Defined at:
  9433 ;;		line 87 in file "buttons.c"
  9434 ;; Parameters:    Size  Location     Type
  9435 ;;  button          1    wreg     PTR struct .
  9436 ;;		 -> buttons(32), NULL(0), 
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;  button          1    0[BANK0 ] PTR struct .
  9439 ;;		 -> buttons(32), NULL(0), 
  9440 ;; Return value:  Size  Location     Type
  9441 ;;                  1    wreg      _Bool 
  9442 ;; Registers used:
  9443 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9444 ;; Tracked objects:
  9445 ;;		On entry : 0/0
  9446 ;;		On exit  : 0/0
  9447 ;;		Unchanged: 0/0
  9448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9450 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9452 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9453 ;;Total ram usage:        1 bytes
  9454 ;; Hardware stack levels used:    1
  9455 ;; Hardware stack levels required when called:    3
  9456 ;; This function calls:
  9457 ;;		Nothing
  9458 ;; This function is called by:
  9459 ;;		_CONTROLLER_task
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           
  9463                           
  9464                           ;psect for function _BUTTONS_isHeld
  9465  08C7                     _BUTTONS_isHeld:	
  9466                           
  9467                           ;incstack = 0
  9468                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
  9469                           ;BUTTONS_isHeld@button stored from wreg
  9470  08C7  0140               	movlb	0	; select bank0
  9471  08C8  00A0               	movwf	BUTTONS_isHeld@button
  9472                           
  9473                           ;buttons.c: 88:     if(button->event == EVENT_HELD){
  9474  08C9  0820               	movf	BUTTONS_isHeld@button,w
  9475  08CA  3E05               	addlw	5
  9476  08CB  0086               	movwf	6
  9477  08CC  3001               	movlw	1	; select bank2/3
  9478  08CD  0087               	movwf	7
  9479  08CE  3002               	movlw	2
  9480  08CF  0601               	xorwf	1,w
  9481  08D0  1D03               	btfss	3,2
  9482  08D1  28D4               	goto	l2923
  9483                           
  9484                           ;buttons.c: 90:         return 1;
  9485  08D2  3001               	movlw	1
  9486  08D3  0008               	return
  9487  08D4                     l2923:	
  9488                           
  9489                           ;buttons.c: 92:     return 0;
  9490  08D4  3000               	movlw	0
  9491  08D5  0008               	return
  9492  08D6                     __end_of_BUTTONS_isHeld:	
  9493                           
  9494                           	psect	text19
  9495  08E6                     __ptext19:	
  9496 ;; *************** function _BUTTONS_isClicked *****************
  9497 ;; Defined at:
  9498 ;;		line 78 in file "buttons.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;  button          1    wreg     PTR struct .
  9501 ;;		 -> buttons(32), NULL(0), 
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;  button          1    0[BANK0 ] PTR struct .
  9504 ;;		 -> buttons(32), NULL(0), 
  9505 ;; Return value:  Size  Location     Type
  9506 ;;                  1    wreg      _Bool 
  9507 ;; Registers used:
  9508 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9515 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9517 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9518 ;;Total ram usage:        1 bytes
  9519 ;; Hardware stack levels used:    1
  9520 ;; Hardware stack levels required when called:    3
  9521 ;; This function calls:
  9522 ;;		Nothing
  9523 ;; This function is called by:
  9524 ;;		_CONTROLLER_task
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528                           
  9529                           ;psect for function _BUTTONS_isClicked
  9530  08E6                     _BUTTONS_isClicked:	
  9531                           
  9532                           ;incstack = 0
  9533                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
  9534                           ;BUTTONS_isClicked@button stored from wreg
  9535  08E6  0140               	movlb	0	; select bank0
  9536  08E7  00A0               	movwf	BUTTONS_isClicked@button
  9537                           
  9538                           ;buttons.c: 79:     if (button->event == EVENT_PRESSED) {
  9539  08E8  0820               	movf	BUTTONS_isClicked@button,w
  9540  08E9  3E05               	addlw	5
  9541  08EA  0086               	movwf	6
  9542  08EB  3001               	movlw	1	; select bank2/3
  9543  08EC  0087               	movwf	7
  9544  08ED  0301               	decf	1,w
  9545  08EE  1D03               	btfss	3,2
  9546  08EF  28F8               	goto	l2913
  9547                           
  9548                           ;buttons.c: 80:         button->event = EVENT_IDLE;
  9549  08F0  0820               	movf	BUTTONS_isClicked@button,w
  9550  08F1  3E05               	addlw	5
  9551  08F2  0086               	movwf	6
  9552  08F3  3001               	movlw	1	; select bank2/3
  9553  08F4  0087               	movwf	7
  9554  08F5  0181               	clrf	1
  9555                           
  9556                           ;buttons.c: 81:         return 1;
  9557  08F6  3001               	movlw	1
  9558  08F7  0008               	return
  9559  08F8                     l2913:	
  9560                           
  9561                           ;buttons.c: 84:     return 0;
  9562  08F8  3000               	movlw	0
  9563  08F9  0008               	return
  9564  08FA                     __end_of_BUTTONS_isClicked:	
  9565                           
  9566                           	psect	text20
  9567  087F                     __ptext20:	
  9568 ;; *************** function _CONTROLLER_init *****************
  9569 ;; Defined at:
  9570 ;;		line 13 in file "controller.c"
  9571 ;; Parameters:    Size  Location     Type
  9572 ;;		None
  9573 ;; Auto vars:     Size  Location     Type
  9574 ;;		None
  9575 ;; Return value:  Size  Location     Type
  9576 ;;                  1    wreg      void 
  9577 ;; Registers used:
  9578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9579 ;; Tracked objects:
  9580 ;;		On entry : 0/0
  9581 ;;		On exit  : 0/0
  9582 ;;		Unchanged: 0/0
  9583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9588 ;;Total ram usage:        0 bytes
  9589 ;; Hardware stack levels used:    1
  9590 ;; Hardware stack levels required when called:    9
  9591 ;; This function calls:
  9592 ;;		_TM1650_fastPrintNum
  9593 ;; This function is called by:
  9594 ;;		_main
  9595 ;; This function uses a non-reentrant model
  9596 ;;
  9597                           
  9598                           
  9599                           ;psect for function _CONTROLLER_init
  9600  087F                     _CONTROLLER_init:	
  9601                           
  9602                           ;controller.c: 14:     TM1650_fastPrintNum(address);
  9603                           
  9604                           ;incstack = 0
  9605                           ; Regs used in _CONTROLLER_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9606  087F  087C               	movf	_address+1,w
  9607  0880  0140               	movlb	0	; select bank0
  9608  0881  00BC               	movwf	TM1650_fastPrintNum@num+1
  9609  0882  087B               	movf	_address,w
  9610  0883  00BB               	movwf	TM1650_fastPrintNum@num
  9611  0884  3180  2081         	fcall	_TM1650_fastPrintNum
  9612  0886  0008               	return
  9613  0887                     __end_of_CONTROLLER_init:	
  9614                           
  9615                           	psect	text21
  9616  0081                     __ptext21:	
  9617 ;; *************** function _TM1650_fastPrintNum *****************
  9618 ;; Defined at:
  9619 ;;		line 72 in file "tm1650.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;  num             2   27[BANK0 ] unsigned short 
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;  array           4   34[BANK0 ] unsigned char [4]
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  1    wreg      void 
  9626 ;; Registers used:
  9627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9633 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9634 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9635 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9636 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9637 ;;Total ram usage:       13 bytes
  9638 ;; Hardware stack levels used:    1
  9639 ;; Hardware stack levels required when called:    8
  9640 ;; This function calls:
  9641 ;;		_TM1650_setDigit
  9642 ;;		___lwdiv
  9643 ;;		___lwmod
  9644 ;; This function is called by:
  9645 ;;		_main
  9646 ;;		_CONTROLLER_init
  9647 ;;		_address_inc
  9648 ;;		_address_dec
  9649 ;; This function uses a non-reentrant model
  9650 ;;
  9651                           
  9652                           
  9653                           ;psect for function _TM1650_fastPrintNum
  9654  0081                     _TM1650_fastPrintNum:	
  9655                           
  9656                           ;tm1650.c: 73:     char array[4];;tm1650.c: 74:     if(num < 10){
  9657                           
  9658                           ;incstack = 0
  9659                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9660  0081  3000               	movlw	0
  9661  0082  0140               	movlb	0	; select bank0
  9662  0083  023C               	subwf	TM1650_fastPrintNum@num+1,w
  9663  0084  300A               	movlw	10
  9664  0085  1903               	skipnz
  9665  0086  023B               	subwf	TM1650_fastPrintNum@num,w
  9666  0087  1803               	skipnc
  9667  0088  28C1               	goto	l2747
  9668                           
  9669                           ;tm1650.c: 75:         array[0] = (num % 10) + 48;
  9670  0089  300A               	movlw	10
  9671  008A  00A0               	movwf	___lwmod@divisor
  9672  008B  3000               	movlw	0
  9673  008C  00A1               	movwf	___lwmod@divisor+1
  9674  008D  083C               	movf	TM1650_fastPrintNum@num+1,w
  9675  008E  00A3               	movwf	___lwmod@dividend+1
  9676  008F  083B               	movf	TM1650_fastPrintNum@num,w
  9677  0090  00A2               	movwf	___lwmod@dividend
  9678  0091  318A  2247  3180   	fcall	___lwmod
  9679  0094  0140               	movlb	0	; select bank0
  9680  0095  0820               	movf	?___lwmod,w
  9681  0096  3E30               	addlw	48
  9682  0097  00BD               	movwf	??_TM1650_fastPrintNum
  9683  0098  083D               	movf	??_TM1650_fastPrintNum,w
  9684  0099  00C2               	movwf	TM1650_fastPrintNum@array
  9685                           
  9686                           ;tm1650.c: 76:         TM1650_setDigit(0,' ', 0);
  9687  009A  3020               	movlw	32
  9688  009B  00BD               	movwf	??_TM1650_fastPrintNum
  9689  009C  083D               	movf	??_TM1650_fastPrintNum,w
  9690  009D  00B5               	movwf	TM1650_setDigit@num
  9691  009E  01B6               	clrf	TM1650_setDigit@dp
  9692  009F  3000               	movlw	0
  9693  00A0  318B  230E  3180   	fcall	_TM1650_setDigit
  9694                           
  9695                           ;tm1650.c: 77:         TM1650_setDigit(1,' ', 0);
  9696  00A3  3020               	movlw	32
  9697  00A4  0140               	movlb	0	; select bank0
  9698  00A5  00BD               	movwf	??_TM1650_fastPrintNum
  9699  00A6  083D               	movf	??_TM1650_fastPrintNum,w
  9700  00A7  00B5               	movwf	TM1650_setDigit@num
  9701  00A8  01B6               	clrf	TM1650_setDigit@dp
  9702  00A9  3001               	movlw	1
  9703  00AA  318B  230E  3180   	fcall	_TM1650_setDigit
  9704                           
  9705                           ;tm1650.c: 78:         TM1650_setDigit(2,' ', 0);
  9706  00AD  3020               	movlw	32
  9707  00AE  0140               	movlb	0	; select bank0
  9708  00AF  00BD               	movwf	??_TM1650_fastPrintNum
  9709  00B0  083D               	movf	??_TM1650_fastPrintNum,w
  9710  00B1  00B5               	movwf	TM1650_setDigit@num
  9711  00B2  01B6               	clrf	TM1650_setDigit@dp
  9712  00B3  3002               	movlw	2
  9713  00B4  318B  230E  3180   	fcall	_TM1650_setDigit
  9714                           
  9715                           ;tm1650.c: 79:         TM1650_setDigit(3,array[0], 0);
  9716  00B7  0140               	movlb	0	; select bank0
  9717  00B8  0842               	movf	TM1650_fastPrintNum@array,w
  9718  00B9  00BD               	movwf	??_TM1650_fastPrintNum
  9719  00BA  083D               	movf	??_TM1650_fastPrintNum,w
  9720  00BB  00B5               	movwf	TM1650_setDigit@num
  9721  00BC  01B6               	clrf	TM1650_setDigit@dp
  9722  00BD  3003               	movlw	3
  9723  00BE  318B  230E         	fcall	_TM1650_setDigit
  9724                           
  9725                           ;tm1650.c: 80:     }else if(num < 100 && num >= 10){
  9726  00C0  0008               	return
  9727  00C1                     l2747:	
  9728  00C1  3000               	movlw	0
  9729  00C2  023C               	subwf	TM1650_fastPrintNum@num+1,w
  9730  00C3  3064               	movlw	100
  9731  00C4  1903               	skipnz
  9732  00C5  023B               	subwf	TM1650_fastPrintNum@num,w
  9733  00C6  1803               	skipnc
  9734  00C7  2936               	goto	l2761
  9735  00C8  3000               	movlw	0
  9736  00C9  023C               	subwf	TM1650_fastPrintNum@num+1,w
  9737  00CA  300A               	movlw	10
  9738  00CB  1903               	skipnz
  9739  00CC  023B               	subwf	TM1650_fastPrintNum@num,w
  9740  00CD  1C03               	skipc
  9741  00CE  2936               	goto	l2761
  9742                           
  9743                           ;tm1650.c: 81:         array[0] = (num % 10) + 48;
  9744  00CF  300A               	movlw	10
  9745  00D0  00A0               	movwf	___lwmod@divisor
  9746  00D1  3000               	movlw	0
  9747  00D2  00A1               	movwf	___lwmod@divisor+1
  9748  00D3  083C               	movf	TM1650_fastPrintNum@num+1,w
  9749  00D4  00A3               	movwf	___lwmod@dividend+1
  9750  00D5  083B               	movf	TM1650_fastPrintNum@num,w
  9751  00D6  00A2               	movwf	___lwmod@dividend
  9752  00D7  318A  2247  3180   	fcall	___lwmod
  9753  00DA  0140               	movlb	0	; select bank0
  9754  00DB  0820               	movf	?___lwmod,w
  9755  00DC  3E30               	addlw	48
  9756  00DD  00BD               	movwf	??_TM1650_fastPrintNum
  9757  00DE  083D               	movf	??_TM1650_fastPrintNum,w
  9758  00DF  00C2               	movwf	TM1650_fastPrintNum@array
  9759                           
  9760                           ;tm1650.c: 82:         array[1] = (((num - (num % 10))/10) % 10) + 48;
  9761  00E0  300A               	movlw	10
  9762  00E1  00A6               	movwf	___lwdiv@divisor
  9763  00E2  3000               	movlw	0
  9764  00E3  00A7               	movwf	___lwdiv@divisor+1
  9765  00E4  300A               	movlw	10
  9766  00E5  00A0               	movwf	___lwmod@divisor
  9767  00E6  3000               	movlw	0
  9768  00E7  00A1               	movwf	___lwmod@divisor+1
  9769  00E8  083C               	movf	TM1650_fastPrintNum@num+1,w
  9770  00E9  00A3               	movwf	___lwmod@dividend+1
  9771  00EA  083B               	movf	TM1650_fastPrintNum@num,w
  9772  00EB  00A2               	movwf	___lwmod@dividend
  9773  00EC  318A  2247  3180   	fcall	___lwmod
  9774  00EF  0140               	movlb	0	; select bank0
  9775  00F0  0820               	movf	?___lwmod,w
  9776  00F1  023B               	subwf	TM1650_fastPrintNum@num,w
  9777  00F2  00A8               	movwf	___lwdiv@dividend
  9778  00F3  0821               	movf	?___lwmod+1,w
  9779  00F4  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
  9780  00F5  00A9               	movwf	___lwdiv@dividend+1
  9781  00F6  318A  22A3  3180   	fcall	___lwdiv
  9782  00F9  0140               	movlb	0	; select bank0
  9783  00FA  0827               	movf	?___lwdiv+1,w
  9784  00FB  00C7               	movwf	_TM1650_fastPrintNum$2182+1
  9785  00FC  0826               	movf	?___lwdiv,w
  9786  00FD  00C6               	movwf	_TM1650_fastPrintNum$2182
  9787                           
  9788                           ;tm1650.c: 82:         array[1] = (((num - (num % 10))/10) % 10) + 48;
  9789  00FE  300A               	movlw	10
  9790  00FF  00A0               	movwf	___lwmod@divisor
  9791  0100  3000               	movlw	0
  9792  0101  00A1               	movwf	___lwmod@divisor+1
  9793  0102  0847               	movf	_TM1650_fastPrintNum$2182+1,w
  9794  0103  00A3               	movwf	___lwmod@dividend+1
  9795  0104  0846               	movf	_TM1650_fastPrintNum$2182,w
  9796  0105  00A2               	movwf	___lwmod@dividend
  9797  0106  318A  2247  3180   	fcall	___lwmod
  9798  0109  0140               	movlb	0	; select bank0
  9799  010A  0820               	movf	?___lwmod,w
  9800  010B  3E30               	addlw	48
  9801  010C  00BD               	movwf	??_TM1650_fastPrintNum
  9802  010D  083D               	movf	??_TM1650_fastPrintNum,w
  9803  010E  00C3               	movwf	TM1650_fastPrintNum@array+1
  9804                           
  9805                           ;tm1650.c: 83:         TM1650_setDigit(0,' ', 0);
  9806  010F  3020               	movlw	32
  9807  0110  00BD               	movwf	??_TM1650_fastPrintNum
  9808  0111  083D               	movf	??_TM1650_fastPrintNum,w
  9809  0112  00B5               	movwf	TM1650_setDigit@num
  9810  0113  01B6               	clrf	TM1650_setDigit@dp
  9811  0114  3000               	movlw	0
  9812  0115  318B  230E  3180   	fcall	_TM1650_setDigit
  9813                           
  9814                           ;tm1650.c: 84:         TM1650_setDigit(1,' ', 0);
  9815  0118  3020               	movlw	32
  9816  0119  0140               	movlb	0	; select bank0
  9817  011A  00BD               	movwf	??_TM1650_fastPrintNum
  9818  011B  083D               	movf	??_TM1650_fastPrintNum,w
  9819  011C  00B5               	movwf	TM1650_setDigit@num
  9820  011D  01B6               	clrf	TM1650_setDigit@dp
  9821  011E  3001               	movlw	1
  9822  011F  318B  230E  3180   	fcall	_TM1650_setDigit
  9823                           
  9824                           ;tm1650.c: 85:         TM1650_setDigit(2,array[1], 0);
  9825  0122  0140               	movlb	0	; select bank0
  9826  0123  0843               	movf	TM1650_fastPrintNum@array+1,w
  9827  0124  00BD               	movwf	??_TM1650_fastPrintNum
  9828  0125  083D               	movf	??_TM1650_fastPrintNum,w
  9829  0126  00B5               	movwf	TM1650_setDigit@num
  9830  0127  01B6               	clrf	TM1650_setDigit@dp
  9831  0128  3002               	movlw	2
  9832  0129  318B  230E  3180   	fcall	_TM1650_setDigit
  9833                           
  9834                           ;tm1650.c: 86:         TM1650_setDigit(3,array[0], 0);
  9835  012C  0140               	movlb	0	; select bank0
  9836  012D  0842               	movf	TM1650_fastPrintNum@array,w
  9837  012E  00BD               	movwf	??_TM1650_fastPrintNum
  9838  012F  083D               	movf	??_TM1650_fastPrintNum,w
  9839  0130  00B5               	movwf	TM1650_setDigit@num
  9840  0131  01B6               	clrf	TM1650_setDigit@dp
  9841  0132  3003               	movlw	3
  9842  0133  318B  230E         	fcall	_TM1650_setDigit
  9843                           
  9844                           ;tm1650.c: 87:     }else if(num < 1000 && num >= 100){
  9845  0135  0008               	return
  9846  0136                     l2761:	
  9847  0136  3003               	movlw	3
  9848  0137  023C               	subwf	TM1650_fastPrintNum@num+1,w
  9849  0138  30E8               	movlw	232
  9850  0139  1903               	skipnz
  9851  013A  023B               	subwf	TM1650_fastPrintNum@num,w
  9852  013B  1803               	skipnc
  9853  013C  29F8               	goto	l2775
  9854  013D  3000               	movlw	0
  9855  013E  023C               	subwf	TM1650_fastPrintNum@num+1,w
  9856  013F  3064               	movlw	100
  9857  0140  1903               	skipnz
  9858  0141  023B               	subwf	TM1650_fastPrintNum@num,w
  9859  0142  1C03               	skipc
  9860  0143  29F8               	goto	l2775
  9861                           
  9862                           ;tm1650.c: 88:         array[0] = (num % 10) + 48;
  9863  0144  300A               	movlw	10
  9864  0145  00A0               	movwf	___lwmod@divisor
  9865  0146  3000               	movlw	0
  9866  0147  00A1               	movwf	___lwmod@divisor+1
  9867  0148  083C               	movf	TM1650_fastPrintNum@num+1,w
  9868  0149  00A3               	movwf	___lwmod@dividend+1
  9869  014A  083B               	movf	TM1650_fastPrintNum@num,w
  9870  014B  00A2               	movwf	___lwmod@dividend
  9871  014C  318A  2247  3180   	fcall	___lwmod
  9872  014F  0140               	movlb	0	; select bank0
  9873  0150  0820               	movf	?___lwmod,w
  9874  0151  3E30               	addlw	48
  9875  0152  00BD               	movwf	??_TM1650_fastPrintNum
  9876  0153  083D               	movf	??_TM1650_fastPrintNum,w
  9877  0154  00C2               	movwf	TM1650_fastPrintNum@array
  9878                           
  9879                           ;tm1650.c: 89:         array[1] = ((num - (num % 10))/10) % 10 + 48;
  9880  0155  300A               	movlw	10
  9881  0156  00A6               	movwf	___lwdiv@divisor
  9882  0157  3000               	movlw	0
  9883  0158  00A7               	movwf	___lwdiv@divisor+1
  9884  0159  300A               	movlw	10
  9885  015A  00A0               	movwf	___lwmod@divisor
  9886  015B  3000               	movlw	0
  9887  015C  00A1               	movwf	___lwmod@divisor+1
  9888  015D  083C               	movf	TM1650_fastPrintNum@num+1,w
  9889  015E  00A3               	movwf	___lwmod@dividend+1
  9890  015F  083B               	movf	TM1650_fastPrintNum@num,w
  9891  0160  00A2               	movwf	___lwmod@dividend
  9892  0161  318A  2247  3180   	fcall	___lwmod
  9893  0164  0140               	movlb	0	; select bank0
  9894  0165  0820               	movf	?___lwmod,w
  9895  0166  023B               	subwf	TM1650_fastPrintNum@num,w
  9896  0167  00A8               	movwf	___lwdiv@dividend
  9897  0168  0821               	movf	?___lwmod+1,w
  9898  0169  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
  9899  016A  00A9               	movwf	___lwdiv@dividend+1
  9900  016B  318A  22A3  3180   	fcall	___lwdiv
  9901  016E  0140               	movlb	0	; select bank0
  9902  016F  0827               	movf	?___lwdiv+1,w
  9903  0170  00C7               	movwf	_TM1650_fastPrintNum$2182+1
  9904  0171  0826               	movf	?___lwdiv,w
  9905  0172  00C6               	movwf	_TM1650_fastPrintNum$2182
  9906                           
  9907                           ;tm1650.c: 89:         array[1] = ((num - (num % 10))/10) % 10 + 48;
  9908  0173  300A               	movlw	10
  9909  0174  00A0               	movwf	___lwmod@divisor
  9910  0175  3000               	movlw	0
  9911  0176  00A1               	movwf	___lwmod@divisor+1
  9912  0177  0847               	movf	_TM1650_fastPrintNum$2182+1,w
  9913  0178  00A3               	movwf	___lwmod@dividend+1
  9914  0179  0846               	movf	_TM1650_fastPrintNum$2182,w
  9915  017A  00A2               	movwf	___lwmod@dividend
  9916  017B  318A  2247  3180   	fcall	___lwmod
  9917  017E  0140               	movlb	0	; select bank0
  9918  017F  0820               	movf	?___lwmod,w
  9919  0180  3E30               	addlw	48
  9920  0181  00BD               	movwf	??_TM1650_fastPrintNum
  9921  0182  083D               	movf	??_TM1650_fastPrintNum,w
  9922  0183  00C3               	movwf	TM1650_fastPrintNum@array+1
  9923                           
  9924                           ;tm1650.c: 90:         array[2] = ((num - (((num - (num % 10))/10) % 10))/100) %10 + 48;
  9925  0184  300A               	movlw	10
  9926  0185  00A6               	movwf	___lwdiv@divisor
  9927  0186  3000               	movlw	0
  9928  0187  00A7               	movwf	___lwdiv@divisor+1
  9929  0188  300A               	movlw	10
  9930  0189  00A0               	movwf	___lwmod@divisor
  9931  018A  3000               	movlw	0
  9932  018B  00A1               	movwf	___lwmod@divisor+1
  9933  018C  083C               	movf	TM1650_fastPrintNum@num+1,w
  9934  018D  00A3               	movwf	___lwmod@dividend+1
  9935  018E  083B               	movf	TM1650_fastPrintNum@num,w
  9936  018F  00A2               	movwf	___lwmod@dividend
  9937  0190  318A  2247  3180   	fcall	___lwmod
  9938  0193  0140               	movlb	0	; select bank0
  9939  0194  0820               	movf	?___lwmod,w
  9940  0195  023B               	subwf	TM1650_fastPrintNum@num,w
  9941  0196  00A8               	movwf	___lwdiv@dividend
  9942  0197  0821               	movf	?___lwmod+1,w
  9943  0198  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
  9944  0199  00A9               	movwf	___lwdiv@dividend+1
  9945  019A  318A  22A3  3180   	fcall	___lwdiv
  9946  019D  0140               	movlb	0	; select bank0
  9947  019E  0827               	movf	?___lwdiv+1,w
  9948  019F  00C7               	movwf	_TM1650_fastPrintNum$2182+1
  9949  01A0  0826               	movf	?___lwdiv,w
  9950  01A1  00C6               	movwf	_TM1650_fastPrintNum$2182
  9951                           
  9952                           ;tm1650.c: 90:         array[2] = ((num - (((num - (num % 10))/10) % 10))/100) %10 + 48;
  9953  01A2  3064               	movlw	100
  9954  01A3  00A6               	movwf	___lwdiv@divisor
  9955  01A4  3000               	movlw	0
  9956  01A5  00A7               	movwf	___lwdiv@divisor+1
  9957  01A6  300A               	movlw	10
  9958  01A7  00A0               	movwf	___lwmod@divisor
  9959  01A8  3000               	movlw	0
  9960  01A9  00A1               	movwf	___lwmod@divisor+1
  9961  01AA  0847               	movf	_TM1650_fastPrintNum$2182+1,w
  9962  01AB  00A3               	movwf	___lwmod@dividend+1
  9963  01AC  0846               	movf	_TM1650_fastPrintNum$2182,w
  9964  01AD  00A2               	movwf	___lwmod@dividend
  9965  01AE  318A  2247  3180   	fcall	___lwmod
  9966  01B1  0140               	movlb	0	; select bank0
  9967  01B2  0820               	movf	?___lwmod,w
  9968  01B3  023B               	subwf	TM1650_fastPrintNum@num,w
  9969  01B4  00A8               	movwf	___lwdiv@dividend
  9970  01B5  0821               	movf	?___lwmod+1,w
  9971  01B6  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
  9972  01B7  00A9               	movwf	___lwdiv@dividend+1
  9973  01B8  318A  22A3  3180   	fcall	___lwdiv
  9974  01BB  0140               	movlb	0	; select bank0
  9975  01BC  0827               	movf	?___lwdiv+1,w
  9976  01BD  00C1               	movwf	_TM1650_fastPrintNum$2183+1
  9977  01BE  0826               	movf	?___lwdiv,w
  9978  01BF  00C0               	movwf	_TM1650_fastPrintNum$2183
  9979                           
  9980                           ;tm1650.c: 90:         array[2] = ((num - (((num - (num % 10))/10) % 10))/100) %10 + 48;
  9981  01C0  300A               	movlw	10
  9982  01C1  00A0               	movwf	___lwmod@divisor
  9983  01C2  3000               	movlw	0
  9984  01C3  00A1               	movwf	___lwmod@divisor+1
  9985  01C4  0841               	movf	_TM1650_fastPrintNum$2183+1,w
  9986  01C5  00A3               	movwf	___lwmod@dividend+1
  9987  01C6  0840               	movf	_TM1650_fastPrintNum$2183,w
  9988  01C7  00A2               	movwf	___lwmod@dividend
  9989  01C8  318A  2247  3180   	fcall	___lwmod
  9990  01CB  0140               	movlb	0	; select bank0
  9991  01CC  0820               	movf	?___lwmod,w
  9992  01CD  3E30               	addlw	48
  9993  01CE  00BD               	movwf	??_TM1650_fastPrintNum
  9994  01CF  083D               	movf	??_TM1650_fastPrintNum,w
  9995  01D0  00C4               	movwf	TM1650_fastPrintNum@array+2
  9996                           
  9997                           ;tm1650.c: 91:         TM1650_setDigit(0,' ', 0);
  9998  01D1  3020               	movlw	32
  9999  01D2  00BD               	movwf	??_TM1650_fastPrintNum
 10000  01D3  083D               	movf	??_TM1650_fastPrintNum,w
 10001  01D4  00B5               	movwf	TM1650_setDigit@num
 10002  01D5  01B6               	clrf	TM1650_setDigit@dp
 10003  01D6  3000               	movlw	0
 10004  01D7  318B  230E  3180   	fcall	_TM1650_setDigit
 10005                           
 10006                           ;tm1650.c: 92:         TM1650_setDigit(1, array[2], 0);
 10007  01DA  0140               	movlb	0	; select bank0
 10008  01DB  0844               	movf	TM1650_fastPrintNum@array+2,w
 10009  01DC  00BD               	movwf	??_TM1650_fastPrintNum
 10010  01DD  083D               	movf	??_TM1650_fastPrintNum,w
 10011  01DE  00B5               	movwf	TM1650_setDigit@num
 10012  01DF  01B6               	clrf	TM1650_setDigit@dp
 10013  01E0  3001               	movlw	1
 10014  01E1  318B  230E  3180   	fcall	_TM1650_setDigit
 10015                           
 10016                           ;tm1650.c: 93:         TM1650_setDigit(2, array[1], 0);
 10017  01E4  0140               	movlb	0	; select bank0
 10018  01E5  0843               	movf	TM1650_fastPrintNum@array+1,w
 10019  01E6  00BD               	movwf	??_TM1650_fastPrintNum
 10020  01E7  083D               	movf	??_TM1650_fastPrintNum,w
 10021  01E8  00B5               	movwf	TM1650_setDigit@num
 10022  01E9  01B6               	clrf	TM1650_setDigit@dp
 10023  01EA  3002               	movlw	2
 10024  01EB  318B  230E  3180   	fcall	_TM1650_setDigit
 10025                           
 10026                           ;tm1650.c: 94:         TM1650_setDigit(3, array[0], 0);
 10027  01EE  0140               	movlb	0	; select bank0
 10028  01EF  0842               	movf	TM1650_fastPrintNum@array,w
 10029  01F0  00BD               	movwf	??_TM1650_fastPrintNum
 10030  01F1  083D               	movf	??_TM1650_fastPrintNum,w
 10031  01F2  00B5               	movwf	TM1650_setDigit@num
 10032  01F3  01B6               	clrf	TM1650_setDigit@dp
 10033  01F4  3003               	movlw	3
 10034  01F5  318B  230E         	fcall	_TM1650_setDigit
 10035                           
 10036                           ;tm1650.c: 95:     }else if(num < 10000 && num >= 1000){
 10037  01F7  0008               	return
 10038  01F8                     l2775:	
 10039  01F8  3027               	movlw	39
 10040  01F9  023C               	subwf	TM1650_fastPrintNum@num+1,w
 10041  01FA  3010               	movlw	16
 10042  01FB  1903               	skipnz
 10043  01FC  023B               	subwf	TM1650_fastPrintNum@num,w
 10044  01FD  1803               	skipnc
 10045  01FE  2B25               	goto	l2789
 10046  01FF  3003               	movlw	3
 10047  0200  023C               	subwf	TM1650_fastPrintNum@num+1,w
 10048  0201  30E8               	movlw	232
 10049  0202  1903               	skipnz
 10050  0203  023B               	subwf	TM1650_fastPrintNum@num,w
 10051  0204  1C03               	skipc
 10052  0205  2B25               	goto	l2789
 10053                           
 10054                           ;tm1650.c: 96:         array[0] = (num % 10) + 48;
 10055  0206  300A               	movlw	10
 10056  0207  00A0               	movwf	___lwmod@divisor
 10057  0208  3000               	movlw	0
 10058  0209  00A1               	movwf	___lwmod@divisor+1
 10059  020A  083C               	movf	TM1650_fastPrintNum@num+1,w
 10060  020B  00A3               	movwf	___lwmod@dividend+1
 10061  020C  083B               	movf	TM1650_fastPrintNum@num,w
 10062  020D  00A2               	movwf	___lwmod@dividend
 10063  020E  318A  2247  3180   	fcall	___lwmod
 10064  0211  0140               	movlb	0	; select bank0
 10065  0212  0820               	movf	?___lwmod,w
 10066  0213  3E30               	addlw	48
 10067  0214  00BD               	movwf	??_TM1650_fastPrintNum
 10068  0215  083D               	movf	??_TM1650_fastPrintNum,w
 10069  0216  00C2               	movwf	TM1650_fastPrintNum@array
 10070                           
 10071                           ;tm1650.c: 97:         array[1] = ((num - (num % 10))/10) % 10 + 48;
 10072  0217  300A               	movlw	10
 10073  0218  00A6               	movwf	___lwdiv@divisor
 10074  0219  3000               	movlw	0
 10075  021A  00A7               	movwf	___lwdiv@divisor+1
 10076  021B  300A               	movlw	10
 10077  021C  00A0               	movwf	___lwmod@divisor
 10078  021D  3000               	movlw	0
 10079  021E  00A1               	movwf	___lwmod@divisor+1
 10080  021F  083C               	movf	TM1650_fastPrintNum@num+1,w
 10081  0220  00A3               	movwf	___lwmod@dividend+1
 10082  0221  083B               	movf	TM1650_fastPrintNum@num,w
 10083  0222  00A2               	movwf	___lwmod@dividend
 10084  0223  318A  2247  3180   	fcall	___lwmod
 10085  0226  0140               	movlb	0	; select bank0
 10086  0227  0820               	movf	?___lwmod,w
 10087  0228  023B               	subwf	TM1650_fastPrintNum@num,w
 10088  0229  00A8               	movwf	___lwdiv@dividend
 10089  022A  0821               	movf	?___lwmod+1,w
 10090  022B  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 10091  022C  00A9               	movwf	___lwdiv@dividend+1
 10092  022D  318A  22A3  3180   	fcall	___lwdiv
 10093  0230  0140               	movlb	0	; select bank0
 10094  0231  0827               	movf	?___lwdiv+1,w
 10095  0232  00C7               	movwf	_TM1650_fastPrintNum$2182+1
 10096  0233  0826               	movf	?___lwdiv,w
 10097  0234  00C6               	movwf	_TM1650_fastPrintNum$2182
 10098                           
 10099                           ;tm1650.c: 97:         array[1] = ((num - (num % 10))/10) % 10 + 48;
 10100  0235  300A               	movlw	10
 10101  0236  00A0               	movwf	___lwmod@divisor
 10102  0237  3000               	movlw	0
 10103  0238  00A1               	movwf	___lwmod@divisor+1
 10104  0239  0847               	movf	_TM1650_fastPrintNum$2182+1,w
 10105  023A  00A3               	movwf	___lwmod@dividend+1
 10106  023B  0846               	movf	_TM1650_fastPrintNum$2182,w
 10107  023C  00A2               	movwf	___lwmod@dividend
 10108  023D  318A  2247  3180   	fcall	___lwmod
 10109  0240  0140               	movlb	0	; select bank0
 10110  0241  0820               	movf	?___lwmod,w
 10111  0242  3E30               	addlw	48
 10112  0243  00BD               	movwf	??_TM1650_fastPrintNum
 10113  0244  083D               	movf	??_TM1650_fastPrintNum,w
 10114  0245  00C3               	movwf	TM1650_fastPrintNum@array+1
 10115                           
 10116                           ;tm1650.c: 98:         array[2] = ((num - (((num - (num % 10))/10) % 10))/100) %10 + 48;
 10117  0246  300A               	movlw	10
 10118  0247  00A6               	movwf	___lwdiv@divisor
 10119  0248  3000               	movlw	0
 10120  0249  00A7               	movwf	___lwdiv@divisor+1
 10121  024A  300A               	movlw	10
 10122  024B  00A0               	movwf	___lwmod@divisor
 10123  024C  3000               	movlw	0
 10124  024D  00A1               	movwf	___lwmod@divisor+1
 10125  024E  083C               	movf	TM1650_fastPrintNum@num+1,w
 10126  024F  00A3               	movwf	___lwmod@dividend+1
 10127  0250  083B               	movf	TM1650_fastPrintNum@num,w
 10128  0251  00A2               	movwf	___lwmod@dividend
 10129  0252  318A  2247  3180   	fcall	___lwmod
 10130  0255  0140               	movlb	0	; select bank0
 10131  0256  0820               	movf	?___lwmod,w
 10132  0257  023B               	subwf	TM1650_fastPrintNum@num,w
 10133  0258  00A8               	movwf	___lwdiv@dividend
 10134  0259  0821               	movf	?___lwmod+1,w
 10135  025A  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 10136  025B  00A9               	movwf	___lwdiv@dividend+1
 10137  025C  318A  22A3  3180   	fcall	___lwdiv
 10138  025F  0140               	movlb	0	; select bank0
 10139  0260  0827               	movf	?___lwdiv+1,w
 10140  0261  00C7               	movwf	_TM1650_fastPrintNum$2182+1
 10141  0262  0826               	movf	?___lwdiv,w
 10142  0263  00C6               	movwf	_TM1650_fastPrintNum$2182
 10143                           
 10144                           ;tm1650.c: 98:         array[2] = ((num - (((num - (num % 10))/10) % 10))/100) %10 + 48;
 10145  0264  3064               	movlw	100
 10146  0265  00A6               	movwf	___lwdiv@divisor
 10147  0266  3000               	movlw	0
 10148  0267  00A7               	movwf	___lwdiv@divisor+1
 10149  0268  300A               	movlw	10
 10150  0269  00A0               	movwf	___lwmod@divisor
 10151  026A  3000               	movlw	0
 10152  026B  00A1               	movwf	___lwmod@divisor+1
 10153  026C  0847               	movf	_TM1650_fastPrintNum$2182+1,w
 10154  026D  00A3               	movwf	___lwmod@dividend+1
 10155  026E  0846               	movf	_TM1650_fastPrintNum$2182,w
 10156  026F  00A2               	movwf	___lwmod@dividend
 10157  0270  318A  2247  3180   	fcall	___lwmod
 10158  0273  0140               	movlb	0	; select bank0
 10159  0274  0820               	movf	?___lwmod,w
 10160  0275  023B               	subwf	TM1650_fastPrintNum@num,w
 10161  0276  00A8               	movwf	___lwdiv@dividend
 10162  0277  0821               	movf	?___lwmod+1,w
 10163  0278  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 10164  0279  00A9               	movwf	___lwdiv@dividend+1
 10165  027A  318A  22A3  3180   	fcall	___lwdiv
 10166  027D  0140               	movlb	0	; select bank0
 10167  027E  0827               	movf	?___lwdiv+1,w
 10168  027F  00C1               	movwf	_TM1650_fastPrintNum$2183+1
 10169  0280  0826               	movf	?___lwdiv,w
 10170  0281  00C0               	movwf	_TM1650_fastPrintNum$2183
 10171                           
 10172                           ;tm1650.c: 98:         array[2] = ((num - (((num - (num % 10))/10) % 10))/100) %10 + 48;
 10173  0282  300A               	movlw	10
 10174  0283  00A0               	movwf	___lwmod@divisor
 10175  0284  3000               	movlw	0
 10176  0285  00A1               	movwf	___lwmod@divisor+1
 10177  0286  0841               	movf	_TM1650_fastPrintNum$2183+1,w
 10178  0287  00A3               	movwf	___lwmod@dividend+1
 10179  0288  0840               	movf	_TM1650_fastPrintNum$2183,w
 10180  0289  00A2               	movwf	___lwmod@dividend
 10181  028A  318A  2247  3180   	fcall	___lwmod
 10182  028D  0140               	movlb	0	; select bank0
 10183  028E  0820               	movf	?___lwmod,w
 10184  028F  3E30               	addlw	48
 10185  0290  00BD               	movwf	??_TM1650_fastPrintNum
 10186  0291  083D               	movf	??_TM1650_fastPrintNum,w
 10187  0292  00C4               	movwf	TM1650_fastPrintNum@array+2
 10188                           
 10189                           ;tm1650.c: 99:         array[3] = ((num - (((num - (((num - (num % 10))/10) % 10))/100) 
      +                          %10))/1000) % 10 + 48;
 10190  0293  300A               	movlw	10
 10191  0294  00A6               	movwf	___lwdiv@divisor
 10192  0295  3000               	movlw	0
 10193  0296  00A7               	movwf	___lwdiv@divisor+1
 10194  0297  300A               	movlw	10
 10195  0298  00A0               	movwf	___lwmod@divisor
 10196  0299  3000               	movlw	0
 10197  029A  00A1               	movwf	___lwmod@divisor+1
 10198  029B  083C               	movf	TM1650_fastPrintNum@num+1,w
 10199  029C  00A3               	movwf	___lwmod@dividend+1
 10200  029D  083B               	movf	TM1650_fastPrintNum@num,w
 10201  029E  00A2               	movwf	___lwmod@dividend
 10202  029F  318A  2247  3180   	fcall	___lwmod
 10203  02A2  0140               	movlb	0	; select bank0
 10204  02A3  0820               	movf	?___lwmod,w
 10205  02A4  023B               	subwf	TM1650_fastPrintNum@num,w
 10206  02A5  00A8               	movwf	___lwdiv@dividend
 10207  02A6  0821               	movf	?___lwmod+1,w
 10208  02A7  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 10209  02A8  00A9               	movwf	___lwdiv@dividend+1
 10210  02A9  318A  22A3  3180   	fcall	___lwdiv
 10211  02AC  0140               	movlb	0	; select bank0
 10212  02AD  0827               	movf	?___lwdiv+1,w
 10213  02AE  00C7               	movwf	_TM1650_fastPrintNum$2182+1
 10214  02AF  0826               	movf	?___lwdiv,w
 10215  02B0  00C6               	movwf	_TM1650_fastPrintNum$2182
 10216                           
 10217                           ;tm1650.c: 99:         array[3] = ((num - (((num - (((num - (num % 10))/10) % 10))/100) 
      +                          %10))/1000) % 10 + 48;
 10218  02B1  3064               	movlw	100
 10219  02B2  00A6               	movwf	___lwdiv@divisor
 10220  02B3  3000               	movlw	0
 10221  02B4  00A7               	movwf	___lwdiv@divisor+1
 10222  02B5  300A               	movlw	10
 10223  02B6  00A0               	movwf	___lwmod@divisor
 10224  02B7  3000               	movlw	0
 10225  02B8  00A1               	movwf	___lwmod@divisor+1
 10226  02B9  0847               	movf	_TM1650_fastPrintNum$2182+1,w
 10227  02BA  00A3               	movwf	___lwmod@dividend+1
 10228  02BB  0846               	movf	_TM1650_fastPrintNum$2182,w
 10229  02BC  00A2               	movwf	___lwmod@dividend
 10230  02BD  318A  2247  3180   	fcall	___lwmod
 10231  02C0  0140               	movlb	0	; select bank0
 10232  02C1  0820               	movf	?___lwmod,w
 10233  02C2  023B               	subwf	TM1650_fastPrintNum@num,w
 10234  02C3  00A8               	movwf	___lwdiv@dividend
 10235  02C4  0821               	movf	?___lwmod+1,w
 10236  02C5  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 10237  02C6  00A9               	movwf	___lwdiv@dividend+1
 10238  02C7  318A  22A3  3180   	fcall	___lwdiv
 10239  02CA  0140               	movlb	0	; select bank0
 10240  02CB  0827               	movf	?___lwdiv+1,w
 10241  02CC  00C1               	movwf	_TM1650_fastPrintNum$2183+1
 10242  02CD  0826               	movf	?___lwdiv,w
 10243  02CE  00C0               	movwf	_TM1650_fastPrintNum$2183
 10244                           
 10245                           ;tm1650.c: 99:         array[3] = ((num - (((num - (((num - (num % 10))/10) % 10))/100) 
      +                          %10))/1000) % 10 + 48;
 10246  02CF  30E8               	movlw	232
 10247  02D0  00A6               	movwf	___lwdiv@divisor
 10248  02D1  3003               	movlw	3
 10249  02D2  00A7               	movwf	___lwdiv@divisor+1
 10250  02D3  300A               	movlw	10
 10251  02D4  00A0               	movwf	___lwmod@divisor
 10252  02D5  3000               	movlw	0
 10253  02D6  00A1               	movwf	___lwmod@divisor+1
 10254  02D7  0841               	movf	_TM1650_fastPrintNum$2183+1,w
 10255  02D8  00A3               	movwf	___lwmod@dividend+1
 10256  02D9  0840               	movf	_TM1650_fastPrintNum$2183,w
 10257  02DA  00A2               	movwf	___lwmod@dividend
 10258  02DB  318A  2247  3180   	fcall	___lwmod
 10259  02DE  0140               	movlb	0	; select bank0
 10260  02DF  0820               	movf	?___lwmod,w
 10261  02E0  023B               	subwf	TM1650_fastPrintNum@num,w
 10262  02E1  00A8               	movwf	___lwdiv@dividend
 10263  02E2  0821               	movf	?___lwmod+1,w
 10264  02E3  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 10265  02E4  00A9               	movwf	___lwdiv@dividend+1
 10266  02E5  318A  22A3  3180   	fcall	___lwdiv
 10267  02E8  0140               	movlb	0	; select bank0
 10268  02E9  0827               	movf	?___lwdiv+1,w
 10269  02EA  00BF               	movwf	_TM1650_fastPrintNum$2184+1
 10270  02EB  0826               	movf	?___lwdiv,w
 10271  02EC  00BE               	movwf	_TM1650_fastPrintNum$2184
 10272                           
 10273                           ;tm1650.c: 99:         array[3] = ((num - (((num - (((num - (num % 10))/10) % 10))/100) 
      +                          %10))/1000) % 10 + 48;
 10274  02ED  300A               	movlw	10
 10275  02EE  00A0               	movwf	___lwmod@divisor
 10276  02EF  3000               	movlw	0
 10277  02F0  00A1               	movwf	___lwmod@divisor+1
 10278  02F1  083F               	movf	_TM1650_fastPrintNum$2184+1,w
 10279  02F2  00A3               	movwf	___lwmod@dividend+1
 10280  02F3  083E               	movf	_TM1650_fastPrintNum$2184,w
 10281  02F4  00A2               	movwf	___lwmod@dividend
 10282  02F5  318A  2247  3180   	fcall	___lwmod
 10283  02F8  0140               	movlb	0	; select bank0
 10284  02F9  0820               	movf	?___lwmod,w
 10285  02FA  3E30               	addlw	48
 10286  02FB  00BD               	movwf	??_TM1650_fastPrintNum
 10287  02FC  083D               	movf	??_TM1650_fastPrintNum,w
 10288  02FD  00C5               	movwf	TM1650_fastPrintNum@array+3
 10289                           
 10290                           ;tm1650.c: 100:         TM1650_setDigit(0, array[3], 0);
 10291  02FE  0845               	movf	TM1650_fastPrintNum@array+3,w
 10292  02FF  00BD               	movwf	??_TM1650_fastPrintNum
 10293  0300  083D               	movf	??_TM1650_fastPrintNum,w
 10294  0301  00B5               	movwf	TM1650_setDigit@num
 10295  0302  01B6               	clrf	TM1650_setDigit@dp
 10296  0303  3000               	movlw	0
 10297  0304  318B  230E  3180   	fcall	_TM1650_setDigit
 10298                           
 10299                           ;tm1650.c: 101:         TM1650_setDigit(1, array[2], 0);
 10300  0307  0140               	movlb	0	; select bank0
 10301  0308  0844               	movf	TM1650_fastPrintNum@array+2,w
 10302  0309  00BD               	movwf	??_TM1650_fastPrintNum
 10303  030A  083D               	movf	??_TM1650_fastPrintNum,w
 10304  030B  00B5               	movwf	TM1650_setDigit@num
 10305  030C  01B6               	clrf	TM1650_setDigit@dp
 10306  030D  3001               	movlw	1
 10307  030E  318B  230E  3180   	fcall	_TM1650_setDigit
 10308                           
 10309                           ;tm1650.c: 102:         TM1650_setDigit(2, array[1], 0);
 10310  0311  0140               	movlb	0	; select bank0
 10311  0312  0843               	movf	TM1650_fastPrintNum@array+1,w
 10312  0313  00BD               	movwf	??_TM1650_fastPrintNum
 10313  0314  083D               	movf	??_TM1650_fastPrintNum,w
 10314  0315  00B5               	movwf	TM1650_setDigit@num
 10315  0316  01B6               	clrf	TM1650_setDigit@dp
 10316  0317  3002               	movlw	2
 10317  0318  318B  230E  3180   	fcall	_TM1650_setDigit
 10318                           
 10319                           ;tm1650.c: 103:         TM1650_setDigit(3, array[0], 0);
 10320  031B  0140               	movlb	0	; select bank0
 10321  031C  0842               	movf	TM1650_fastPrintNum@array,w
 10322  031D  00BD               	movwf	??_TM1650_fastPrintNum
 10323  031E  083D               	movf	??_TM1650_fastPrintNum,w
 10324  031F  00B5               	movwf	TM1650_setDigit@num
 10325  0320  01B6               	clrf	TM1650_setDigit@dp
 10326  0321  3003               	movlw	3
 10327  0322  318B  230E         	fcall	_TM1650_setDigit
 10328                           
 10329                           ;tm1650.c: 104:     }else{
 10330  0324  0008               	return
 10331  0325                     l2789:	
 10332                           
 10333                           ;tm1650.c: 105:         TM1650_setDigit(0, 'E', 0);
 10334  0325  3045               	movlw	69
 10335  0326  00BD               	movwf	??_TM1650_fastPrintNum
 10336  0327  083D               	movf	??_TM1650_fastPrintNum,w
 10337  0328  00B5               	movwf	TM1650_setDigit@num
 10338  0329  01B6               	clrf	TM1650_setDigit@dp
 10339  032A  3000               	movlw	0
 10340  032B  318B  230E  3180   	fcall	_TM1650_setDigit
 10341                           
 10342                           ;tm1650.c: 106:         TM1650_setDigit(1, 'E', 0);
 10343  032E  3045               	movlw	69
 10344  032F  0140               	movlb	0	; select bank0
 10345  0330  00BD               	movwf	??_TM1650_fastPrintNum
 10346  0331  083D               	movf	??_TM1650_fastPrintNum,w
 10347  0332  00B5               	movwf	TM1650_setDigit@num
 10348  0333  01B6               	clrf	TM1650_setDigit@dp
 10349  0334  3001               	movlw	1
 10350  0335  318B  230E  3180   	fcall	_TM1650_setDigit
 10351                           
 10352                           ;tm1650.c: 107:         TM1650_setDigit(2, 'E', 0);
 10353  0338  3045               	movlw	69
 10354  0339  0140               	movlb	0	; select bank0
 10355  033A  00BD               	movwf	??_TM1650_fastPrintNum
 10356  033B  083D               	movf	??_TM1650_fastPrintNum,w
 10357  033C  00B5               	movwf	TM1650_setDigit@num
 10358  033D  01B6               	clrf	TM1650_setDigit@dp
 10359  033E  3002               	movlw	2
 10360  033F  318B  230E  3180   	fcall	_TM1650_setDigit
 10361                           
 10362                           ;tm1650.c: 108:         TM1650_setDigit(3, 'E', 0);
 10363  0342  3045               	movlw	69
 10364  0343  0140               	movlb	0	; select bank0
 10365  0344  00BD               	movwf	??_TM1650_fastPrintNum
 10366  0345  083D               	movf	??_TM1650_fastPrintNum,w
 10367  0346  00B5               	movwf	TM1650_setDigit@num
 10368  0347  01B6               	clrf	TM1650_setDigit@dp
 10369  0348  3003               	movlw	3
 10370  0349  318B  230E         	fcall	_TM1650_setDigit
 10371  034B  0008               	return
 10372  034C                     __end_of_TM1650_fastPrintNum:	
 10373                           
 10374                           	psect	text22
 10375  0A47                     __ptext22:	
 10376 ;; *************** function ___lwmod *****************
 10377 ;; Defined at:
 10378 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;  divisor         2    0[BANK0 ] unsigned int 
 10381 ;;  dividend        2    2[BANK0 ] unsigned int 
 10382 ;; Auto vars:     Size  Location     Type
 10383 ;;  counter         1    5[BANK0 ] unsigned char 
 10384 ;; Return value:  Size  Location     Type
 10385 ;;                  2    0[BANK0 ] unsigned int 
 10386 ;; Registers used:
 10387 ;;		wreg, status,2, status,0
 10388 ;; Tracked objects:
 10389 ;;		On entry : 0/0
 10390 ;;		On exit  : 0/0
 10391 ;;		Unchanged: 0/0
 10392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10393 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10394 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10395 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10396 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10397 ;;Total ram usage:        6 bytes
 10398 ;; Hardware stack levels used:    1
 10399 ;; Hardware stack levels required when called:    3
 10400 ;; This function calls:
 10401 ;;		Nothing
 10402 ;; This function is called by:
 10403 ;;		_TM1650_fastPrintNum
 10404 ;; This function uses a non-reentrant model
 10405 ;;
 10406                           
 10407                           
 10408                           ;psect for function ___lwmod
 10409  0A47                     ___lwmod:	
 10410                           
 10411                           ;incstack = 0
 10412                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10413  0A47  0140               	movlb	0	; select bank0
 10414  0A48  0820               	movf	___lwmod@divisor,w
 10415  0A49  0421               	iorwf	___lwmod@divisor+1,w
 10416  0A4A  1903               	btfsc	3,2
 10417  0A4B  2A6F               	goto	l2731
 10418  0A4C  01A5               	clrf	___lwmod@counter
 10419  0A4D  0AA5               	incf	___lwmod@counter,f
 10420  0A4E                     l2721:	
 10421  0A4E  1BA1               	btfsc	___lwmod@divisor+1,7
 10422  0A4F  2A5A               	goto	l2723
 10423  0A50  3001               	movlw	1
 10424  0A51                     u1895:	
 10425  0A51  35A0               	lslf	___lwmod@divisor,f
 10426  0A52  0DA1               	rlf	___lwmod@divisor+1,f
 10427  0A53  0B89               	decfsz	9,f
 10428  0A54  2A51               	goto	u1895
 10429  0A55  3001               	movlw	1
 10430  0A56  00A4               	movwf	??___lwmod
 10431  0A57  0824               	movf	??___lwmod,w
 10432  0A58  07A5               	addwf	___lwmod@counter,f
 10433  0A59  2A4E               	goto	l2721
 10434  0A5A                     l2723:	
 10435  0A5A  0821               	movf	___lwmod@divisor+1,w
 10436  0A5B  0223               	subwf	___lwmod@dividend+1,w
 10437  0A5C  1D03               	skipz
 10438  0A5D  2A60               	goto	u1915
 10439  0A5E  0820               	movf	___lwmod@divisor,w
 10440  0A5F  0222               	subwf	___lwmod@dividend,w
 10441  0A60                     u1915:	
 10442  0A60  1C03               	skipc
 10443  0A61  2A66               	goto	l2727
 10444  0A62  0820               	movf	___lwmod@divisor,w
 10445  0A63  02A2               	subwf	___lwmod@dividend,f
 10446  0A64  0821               	movf	___lwmod@divisor+1,w
 10447  0A65  3BA3               	subwfb	___lwmod@dividend+1,f
 10448  0A66                     l2727:	
 10449  0A66  3001               	movlw	1
 10450  0A67                     u1925:	
 10451  0A67  36A1               	lsrf	___lwmod@divisor+1,f
 10452  0A68  0CA0               	rrf	___lwmod@divisor,f
 10453  0A69  0B89               	decfsz	9,f
 10454  0A6A  2A67               	goto	u1925
 10455  0A6B  3001               	movlw	1
 10456  0A6C  02A5               	subwf	___lwmod@counter,f
 10457  0A6D  1D03               	btfss	3,2
 10458  0A6E  2A5A               	goto	l2723
 10459  0A6F                     l2731:	
 10460  0A6F  0823               	movf	___lwmod@dividend+1,w
 10461  0A70  00A1               	movwf	?___lwmod+1
 10462  0A71  0822               	movf	___lwmod@dividend,w
 10463  0A72  00A0               	movwf	?___lwmod
 10464  0A73  0008               	return
 10465  0A74                     __end_of___lwmod:	
 10466                           
 10467                           	psect	text23
 10468  0AA3                     __ptext23:	
 10469 ;; *************** function ___lwdiv *****************
 10470 ;; Defined at:
 10471 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;  divisor         2    6[BANK0 ] unsigned int 
 10474 ;;  dividend        2    8[BANK0 ] unsigned int 
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;  quotient        2   11[BANK0 ] unsigned int 
 10477 ;;  counter         1   13[BANK0 ] unsigned char 
 10478 ;; Return value:  Size  Location     Type
 10479 ;;                  2    6[BANK0 ] unsigned int 
 10480 ;; Registers used:
 10481 ;;		wreg, status,2, status,0
 10482 ;; Tracked objects:
 10483 ;;		On entry : 0/0
 10484 ;;		On exit  : 0/0
 10485 ;;		Unchanged: 0/0
 10486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10487 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10488 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10489 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10490 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10491 ;;Total ram usage:        8 bytes
 10492 ;; Hardware stack levels used:    1
 10493 ;; Hardware stack levels required when called:    3
 10494 ;; This function calls:
 10495 ;;		Nothing
 10496 ;; This function is called by:
 10497 ;;		_TM1650_fastPrintNum
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501                           
 10502                           ;psect for function ___lwdiv
 10503  0AA3                     ___lwdiv:	
 10504                           
 10505                           ;incstack = 0
 10506                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10507  0AA3  0140               	movlb	0	; select bank0
 10508  0AA4  01AB               	clrf	___lwdiv@quotient
 10509  0AA5  01AC               	clrf	___lwdiv@quotient+1
 10510  0AA6  0826               	movf	___lwdiv@divisor,w
 10511  0AA7  0427               	iorwf	___lwdiv@divisor+1,w
 10512  0AA8  1903               	btfsc	3,2
 10513  0AA9  2AD3               	goto	l2709
 10514  0AAA  01AD               	clrf	___lwdiv@counter
 10515  0AAB  0AAD               	incf	___lwdiv@counter,f
 10516  0AAC                     l2697:	
 10517  0AAC  1BA7               	btfsc	___lwdiv@divisor+1,7
 10518  0AAD  2AB8               	goto	l2699
 10519  0AAE  3001               	movlw	1
 10520  0AAF                     u1825:	
 10521  0AAF  35A6               	lslf	___lwdiv@divisor,f
 10522  0AB0  0DA7               	rlf	___lwdiv@divisor+1,f
 10523  0AB1  0B89               	decfsz	9,f
 10524  0AB2  2AAF               	goto	u1825
 10525  0AB3  3001               	movlw	1
 10526  0AB4  00AA               	movwf	??___lwdiv
 10527  0AB5  082A               	movf	??___lwdiv,w
 10528  0AB6  07AD               	addwf	___lwdiv@counter,f
 10529  0AB7  2AAC               	goto	l2697
 10530  0AB8                     l2699:	
 10531  0AB8  3001               	movlw	1
 10532  0AB9                     u1845:	
 10533  0AB9  35AB               	lslf	___lwdiv@quotient,f
 10534  0ABA  0DAC               	rlf	___lwdiv@quotient+1,f
 10535  0ABB  0B89               	decfsz	9,f
 10536  0ABC  2AB9               	goto	u1845
 10537  0ABD  0827               	movf	___lwdiv@divisor+1,w
 10538  0ABE  0229               	subwf	___lwdiv@dividend+1,w
 10539  0ABF  1D03               	skipz
 10540  0AC0  2AC3               	goto	u1855
 10541  0AC1  0826               	movf	___lwdiv@divisor,w
 10542  0AC2  0228               	subwf	___lwdiv@dividend,w
 10543  0AC3                     u1855:	
 10544  0AC3  1C03               	skipc
 10545  0AC4  2ACA               	goto	l2705
 10546  0AC5  0826               	movf	___lwdiv@divisor,w
 10547  0AC6  02A8               	subwf	___lwdiv@dividend,f
 10548  0AC7  0827               	movf	___lwdiv@divisor+1,w
 10549  0AC8  3BA9               	subwfb	___lwdiv@dividend+1,f
 10550  0AC9  142B               	bsf	___lwdiv@quotient,0
 10551  0ACA                     l2705:	
 10552  0ACA  3001               	movlw	1
 10553  0ACB                     u1865:	
 10554  0ACB  36A7               	lsrf	___lwdiv@divisor+1,f
 10555  0ACC  0CA6               	rrf	___lwdiv@divisor,f
 10556  0ACD  0B89               	decfsz	9,f
 10557  0ACE  2ACB               	goto	u1865
 10558  0ACF  3001               	movlw	1
 10559  0AD0  02AD               	subwf	___lwdiv@counter,f
 10560  0AD1  1D03               	btfss	3,2
 10561  0AD2  2AB8               	goto	l2699
 10562  0AD3                     l2709:	
 10563  0AD3  082C               	movf	___lwdiv@quotient+1,w
 10564  0AD4  00A7               	movwf	?___lwdiv+1
 10565  0AD5  082B               	movf	___lwdiv@quotient,w
 10566  0AD6  00A6               	movwf	?___lwdiv
 10567  0AD7  0008               	return
 10568  0AD8                     __end_of___lwdiv:	
 10569                           
 10570                           	psect	text24
 10571  0B0E                     __ptext24:	
 10572 ;; *************** function _TM1650_setDigit *****************
 10573 ;; Defined at:
 10574 ;;		line 26 in file "tm1650.c"
 10575 ;; Parameters:    Size  Location     Type
 10576 ;;  digit           1    wreg     unsigned char 
 10577 ;;  num             1   21[BANK0 ] unsigned char 
 10578 ;;  dp              1   22[BANK0 ] _Bool 
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;  digit           1   25[BANK0 ] unsigned char 
 10581 ;;  data            1   26[BANK0 ] unsigned char 
 10582 ;; Return value:  Size  Location     Type
 10583 ;;                  1    wreg      void 
 10584 ;; Registers used:
 10585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10586 ;; Tracked objects:
 10587 ;;		On entry : 0/0
 10588 ;;		On exit  : 0/0
 10589 ;;		Unchanged: 0/0
 10590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10591 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10592 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10593 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10594 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10595 ;;Total ram usage:        6 bytes
 10596 ;; Hardware stack levels used:    1
 10597 ;; Hardware stack levels required when called:    7
 10598 ;; This function calls:
 10599 ;;		_writeData
 10600 ;; This function is called by:
 10601 ;;		_TM1650_fastPrintNum
 10602 ;;		_putch
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           
 10607                           ;psect for function _TM1650_setDigit
 10608  0B0E                     _TM1650_setDigit:	
 10609                           
 10610                           ;incstack = 0
 10611                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10612                           ;TM1650_setDigit@digit stored from wreg
 10613  0B0E  0140               	movlb	0	; select bank0
 10614  0B0F  00B9               	movwf	TM1650_setDigit@digit
 10615                           
 10616                           ;tm1650.c: 27:     const uint8_t charTable[] =;tm1650.c: 36:     uint8_t data = charTabl
      +                          e[num-32];
 10617  0B10  0835               	movf	TM1650_setDigit@num,w
 10618  0B11  3EE0               	addlw	low ((TM1650_setDigit@charTable+65504)| (0+32768))
 10619  0B12  0084               	movwf	4
 10620  0B13  308F               	movlw	high ((TM1650_setDigit@charTable+65504)| (0+32768))
 10621  0B14  1803               	skipnc
 10622  0B15  3E01               	addlw	1
 10623  0B16  0085               	movwf	5
 10624  0B17  0800               	movf	0,w	;code access
 10625  0B18  00B7               	movwf	??_TM1650_setDigit
 10626  0B19  0837               	movf	??_TM1650_setDigit,w
 10627  0B1A  00BA               	movwf	TM1650_setDigit@data
 10628                           
 10629                           ;tm1650.c: 37:     if(dp == 1){
 10630  0B1B  0336               	decf	TM1650_setDigit@dp,w
 10631  0B1C  1D03               	btfss	3,2
 10632  0B1D  2B40               	goto	l2681
 10633                           
 10634                           ;tm1650.c: 38:         data |= 0b10000000;
 10635  0B1E  17BA               	bsf	TM1650_setDigit@data,7
 10636  0B1F  2B40               	goto	l2681
 10637  0B20                     l2671:	
 10638                           
 10639                           ;tm1650.c: 43:                 writeData(0x34, data);
 10640  0B20  083A               	movf	TM1650_setDigit@data,w
 10641  0B21  00B7               	movwf	??_TM1650_setDigit
 10642  0B22  0837               	movf	??_TM1650_setDigit,w
 10643  0B23  00AE               	movwf	writeData@data
 10644  0B24  3034               	movlw	52
 10645  0B25  3189  21D5         	fcall	_writeData
 10646                           
 10647                           ;tm1650.c: 44:                 break;
 10648  0B27  0008               	return
 10649  0B28                     l2673:	
 10650                           
 10651                           ;tm1650.c: 46:                 writeData(0x35, data);
 10652  0B28  083A               	movf	TM1650_setDigit@data,w
 10653  0B29  00B7               	movwf	??_TM1650_setDigit
 10654  0B2A  0837               	movf	??_TM1650_setDigit,w
 10655  0B2B  00AE               	movwf	writeData@data
 10656  0B2C  3035               	movlw	53
 10657  0B2D  3189  21D5         	fcall	_writeData
 10658                           
 10659                           ;tm1650.c: 47:                 break;
 10660  0B2F  0008               	return
 10661  0B30                     l2675:	
 10662                           
 10663                           ;tm1650.c: 49:                 writeData(0x36, data);
 10664  0B30  083A               	movf	TM1650_setDigit@data,w
 10665  0B31  00B7               	movwf	??_TM1650_setDigit
 10666  0B32  0837               	movf	??_TM1650_setDigit,w
 10667  0B33  00AE               	movwf	writeData@data
 10668  0B34  3036               	movlw	54
 10669  0B35  3189  21D5         	fcall	_writeData
 10670                           
 10671                           ;tm1650.c: 50:                 break;
 10672  0B37  0008               	return
 10673  0B38                     l2677:	
 10674                           
 10675                           ;tm1650.c: 52:                 writeData(0x37, data);
 10676  0B38  083A               	movf	TM1650_setDigit@data,w
 10677  0B39  00B7               	movwf	??_TM1650_setDigit
 10678  0B3A  0837               	movf	??_TM1650_setDigit,w
 10679  0B3B  00AE               	movwf	writeData@data
 10680  0B3C  3037               	movlw	55
 10681  0B3D  3189  21D5         	fcall	_writeData
 10682                           
 10683                           ;tm1650.c: 53:                 break;
 10684  0B3F  0008               	return
 10685  0B40                     l2681:	
 10686  0B40  0839               	movf	TM1650_setDigit@digit,w
 10687  0B41  00B7               	movwf	??_TM1650_setDigit
 10688  0B42  01B8               	clrf	??_TM1650_setDigit+1
 10689                           
 10690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10691                           ; Switch size 1, requested type "simple"
 10692                           ; Number of cases is 1, Range of values is 0 to 0
 10693                           ; switch strategies available:
 10694                           ; Name         Instructions Cycles
 10695                           ; simple_byte            4     3 (average)
 10696                           ; direct_byte            8     6 (fixed)
 10697                           ; jumptable            260     6 (fixed)
 10698                           ;	Chosen strategy is simple_byte
 10699  0B43  0838               	movf	??_TM1650_setDigit+1,w
 10700  0B44  3A00               	xorlw	0	; case 0
 10701  0B45  1903               	skipnz
 10702  0B46  2B48               	goto	l3887
 10703  0B47  2B56               	goto	l527
 10704  0B48                     l3887:	
 10705                           
 10706                           ; Switch size 1, requested type "simple"
 10707                           ; Number of cases is 4, Range of values is 0 to 3
 10708                           ; switch strategies available:
 10709                           ; Name         Instructions Cycles
 10710                           ; simple_byte           13     7 (average)
 10711                           ; direct_byte           14     6 (fixed)
 10712                           ; jumptable            260     6 (fixed)
 10713                           ;	Chosen strategy is simple_byte
 10714  0B48  0837               	movf	??_TM1650_setDigit,w
 10715  0B49  3A00               	xorlw	0	; case 0
 10716  0B4A  1903               	skipnz
 10717  0B4B  2B20               	goto	l2671
 10718  0B4C  3A01               	xorlw	1	; case 1
 10719  0B4D  1903               	skipnz
 10720  0B4E  2B28               	goto	l2673
 10721  0B4F  3A03               	xorlw	3	; case 2
 10722  0B50  1903               	skipnz
 10723  0B51  2B30               	goto	l2675
 10724  0B52  3A01               	xorlw	1	; case 3
 10725  0B53  1903               	skipnz
 10726  0B54  2B38               	goto	l2677
 10727  0B55  2B56               	goto	l527
 10728  0B56                     l527:	
 10729  0B56  0008               	return
 10730  0B57                     __end_of_TM1650_setDigit:	
 10731                           
 10732                           	psect	text25
 10733  09D5                     __ptext25:	
 10734 ;; *************** function _writeData *****************
 10735 ;; Defined at:
 10736 ;;		line 19 in file "tm1650.c"
 10737 ;; Parameters:    Size  Location     Type
 10738 ;;  address         1    wreg     unsigned char 
 10739 ;;  data            1   14[BANK0 ] unsigned char 
 10740 ;; Auto vars:     Size  Location     Type
 10741 ;;  address         1   18[BANK0 ] unsigned char 
 10742 ;;  status          1   20[BANK0 ] enum E10868
 10743 ;;  dataToSend      1   19[BANK0 ] unsigned char 
 10744 ;; Return value:  Size  Location     Type
 10745 ;;                  1    wreg      void 
 10746 ;; Registers used:
 10747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10748 ;; Tracked objects:
 10749 ;;		On entry : 0/0
 10750 ;;		On exit  : 0/0
 10751 ;;		Unchanged: 0/0
 10752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10753 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10754 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10755 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10756 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10757 ;;Total ram usage:        7 bytes
 10758 ;; Hardware stack levels used:    1
 10759 ;; Hardware stack levels required when called:    6
 10760 ;; This function calls:
 10761 ;;		_I2C1_MasterWrite
 10762 ;; This function is called by:
 10763 ;;		_TM1650_init
 10764 ;;		_TM1650_setDigit
 10765 ;;		_putch
 10766 ;; This function uses a non-reentrant model
 10767 ;;
 10768                           
 10769                           
 10770                           ;psect for function _writeData
 10771  09D5                     _writeData:	
 10772                           
 10773                           ;incstack = 0
 10774                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10775                           ;writeData@address stored from wreg
 10776  09D5  0140               	movlb	0	; select bank0
 10777  09D6  00B2               	movwf	writeData@address
 10778                           
 10779                           ;tm1650.c: 20:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10780  09D7  3002               	movlw	2
 10781  09D8  00AF               	movwf	??_writeData
 10782  09D9  082F               	movf	??_writeData,w
 10783  09DA  00B4               	movwf	writeData@status
 10784                           
 10785                           ;tm1650.c: 21:     uint8_t dataToSend = data;
 10786  09DB  082E               	movf	writeData@data,w
 10787  09DC  00AF               	movwf	??_writeData
 10788  09DD  082F               	movf	??_writeData,w
 10789  09DE  00B3               	movwf	writeData@dataToSend
 10790                           
 10791                           ;tm1650.c: 22:     I2C1_MasterWrite(&dataToSend, 1, address, &status);
 10792  09DF  01A7               	clrf	I2C1_MasterWrite@length
 10793  09E0  0AA7               	incf	I2C1_MasterWrite@length,f
 10794  09E1  0832               	movf	writeData@address,w
 10795  09E2  00AF               	movwf	??_writeData
 10796  09E3  01B0               	clrf	??_writeData+1
 10797  09E4  082F               	movf	??_writeData,w
 10798  09E5  00A8               	movwf	I2C1_MasterWrite@address
 10799  09E6  0830               	movf	??_writeData+1,w
 10800  09E7  00A9               	movwf	I2C1_MasterWrite@address+1
 10801  09E8  3034               	movlw	(low (writeData@status| 0))& (0+255)
 10802  09E9  00B1               	movwf	??_writeData+2
 10803  09EA  0831               	movf	??_writeData+2,w
 10804  09EB  00AA               	movwf	I2C1_MasterWrite@pflag
 10805  09EC  3033               	movlw	(low (writeData@dataToSend| 0))& (0+255)
 10806  09ED  318A  221D  3189   	fcall	_I2C1_MasterWrite
 10807  09F0                     l2663:	
 10808                           ;tm1650.c: 23:     while( status == I2C1_MESSAGE_PENDING );
 10809                           
 10810  09F0  3002               	movlw	2
 10811  09F1  0140               	movlb	0	; select bank0
 10812  09F2  0634               	xorwf	writeData@status,w
 10813  09F3  1D03               	btfss	3,2
 10814  09F4  0008               	return
 10815  09F5  29F0               	goto	l2663
 10816  09F6                     __end_of_writeData:	
 10817                           
 10818                           	psect	text26
 10819  0A1D                     __ptext26:	
 10820 ;; *************** function _I2C1_MasterWrite *****************
 10821 ;; Defined at:
 10822 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 10823 ;; Parameters:    Size  Location     Type
 10824 ;;  pdata           1    wreg     PTR unsigned char 
 10825 ;;		 -> writeData@dataToSend(1), 
 10826 ;;  length          1    7[BANK0 ] unsigned char 
 10827 ;;  address         2    8[BANK0 ] unsigned short 
 10828 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 10829 ;;		 -> writeData@status(1), 
 10830 ;; Auto vars:     Size  Location     Type
 10831 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 10832 ;;		 -> writeData@dataToSend(1), 
 10833 ;; Return value:  Size  Location     Type
 10834 ;;                  1    wreg      void 
 10835 ;; Registers used:
 10836 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10837 ;; Tracked objects:
 10838 ;;		On entry : 0/0
 10839 ;;		On exit  : 0/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10842 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10843 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10844 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10845 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10846 ;;Total ram usage:        7 bytes
 10847 ;; Hardware stack levels used:    1
 10848 ;; Hardware stack levels required when called:    5
 10849 ;; This function calls:
 10850 ;;		_I2C1_MasterTRBInsert
 10851 ;;		_I2C1_MasterWriteTRBBuild
 10852 ;; This function is called by:
 10853 ;;		_writeData
 10854 ;; This function uses a non-reentrant model
 10855 ;;
 10856                           
 10857                           
 10858                           ;psect for function _I2C1_MasterWrite
 10859  0A1D                     _I2C1_MasterWrite:	
 10860                           
 10861                           ;incstack = 0
 10862                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10863                           ;I2C1_MasterWrite@pdata stored from wreg
 10864  0A1D  0140               	movlb	0	; select bank0
 10865  0A1E  00AD               	movwf	I2C1_MasterWrite@pdata
 10866                           
 10867                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 10868  0A1F  0141               	movlb	1	; select bank1
 10869  0A20  182A               	btfsc	(_i2c1_object^(0+128)+2),0
 10870  0A21  2A40               	goto	l2657
 10871                           
 10872                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 10873  0A22  0140               	movlb	0	; select bank0
 10874  0A23  082D               	movf	I2C1_MasterWrite@pdata,w
 10875  0A24  00AB               	movwf	??_I2C1_MasterWrite
 10876  0A25  082B               	movf	??_I2C1_MasterWrite,w
 10877  0A26  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 10878  0A27  0827               	movf	I2C1_MasterWrite@length,w
 10879  0A28  00AC               	movwf	??_I2C1_MasterWrite+1
 10880  0A29  082C               	movf	??_I2C1_MasterWrite+1,w
 10881  0A2A  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 10882  0A2B  0829               	movf	I2C1_MasterWrite@address+1,w
 10883  0A2C  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 10884  0A2D  0828               	movf	I2C1_MasterWrite@address,w
 10885  0A2E  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 10886  0A2F  30D4               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
 10887  0A30  3189  2195  318A   	fcall	_I2C1_MasterWriteTRBBuild
 10888                           
 10889                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 10890  0A33  30D4               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
 10891  0A34  0140               	movlb	0	; select bank0
 10892  0A35  00AB               	movwf	??_I2C1_MasterWrite
 10893  0A36  082B               	movf	??_I2C1_MasterWrite,w
 10894  0A37  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 10895  0A38  082A               	movf	I2C1_MasterWrite@pflag,w
 10896  0A39  00AC               	movwf	??_I2C1_MasterWrite+1
 10897  0A3A  082C               	movf	??_I2C1_MasterWrite+1,w
 10898  0A3B  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 10899  0A3C  3001               	movlw	1
 10900  0A3D  318B  23A2         	fcall	_I2C1_MasterTRBInsert
 10901                           
 10902                           ;mcc_generated_files/i2c1.c: 613:     }
 10903  0A3F  0008               	return
 10904  0A40                     l2657:	
 10905                           
 10906                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 10907  0A40  0140               	movlb	0	; select bank0
 10908  0A41  082A               	movf	I2C1_MasterWrite@pflag,w
 10909  0A42  0086               	movwf	6
 10910  0A43  0187               	clrf	7
 10911  0A44  0181               	clrf	1
 10912  0A45  0A81               	incf	1,f
 10913  0A46  0008               	return
 10914  0A47                     __end_of_I2C1_MasterWrite:	
 10915                           
 10916                           	psect	text27
 10917  0995                     __ptext27:	
 10918 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 10919 ;; Defined at:
 10920 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 10921 ;; Parameters:    Size  Location     Type
 10922 ;;  ptrb            1    wreg     PTR struct .
 10923 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 10924 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 10925 ;;		 -> writeData@dataToSend(1), 
 10926 ;;  length          1    1[BANK0 ] unsigned char 
 10927 ;;  address         2    2[BANK0 ] unsigned short 
 10928 ;; Auto vars:     Size  Location     Type
 10929 ;;  ptrb            1    6[BANK0 ] PTR struct .
 10930 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 10931 ;; Return value:  Size  Location     Type
 10932 ;;                  1    wreg      void 
 10933 ;; Registers used:
 10934 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10935 ;; Tracked objects:
 10936 ;;		On entry : 0/0
 10937 ;;		On exit  : 0/0
 10938 ;;		Unchanged: 0/0
 10939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10940 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10941 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10942 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10943 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10944 ;;Total ram usage:        7 bytes
 10945 ;; Hardware stack levels used:    1
 10946 ;; Hardware stack levels required when called:    3
 10947 ;; This function calls:
 10948 ;;		Nothing
 10949 ;; This function is called by:
 10950 ;;		_I2C1_MasterWrite
 10951 ;; This function uses a non-reentrant model
 10952 ;;
 10953                           
 10954                           
 10955                           ;psect for function _I2C1_MasterWriteTRBBuild
 10956  0995                     _I2C1_MasterWriteTRBBuild:	
 10957                           
 10958                           ;incstack = 0
 10959                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 10960                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 10961  0995  0140               	movlb	0	; select bank0
 10962  0996  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 10963                           
 10964                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 10965  0997  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 10966  0998  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 10967  0999  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 10968  099A  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 10969  099B  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 10970  099C  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 10971  099D  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 10972  099E  0086               	movwf	6
 10973  099F  0187               	clrf	7
 10974  09A0  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 10975  09A1  3FC0               	movwi [0]fsr1
 10976  09A2  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 10977  09A3  3FC1               	movwi [1]fsr1
 10978                           
 10979                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 10980  09A4  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 10981  09A5  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 10982  09A6  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 10983  09A7  3E02               	addlw	2
 10984  09A8  0086               	movwf	6
 10985  09A9  0187               	clrf	7
 10986  09AA  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 10987  09AB  0081               	movwf	1
 10988                           
 10989                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 10990  09AC  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 10991  09AD  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 10992  09AE  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 10993  09AF  3E03               	addlw	3
 10994  09B0  0086               	movwf	6
 10995  09B1  0187               	clrf	7
 10996  09B2  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 10997  09B3  0081               	movwf	1
 10998  09B4  0008               	return
 10999  09B5                     __end_of_I2C1_MasterWriteTRBBuild:	
 11000                           
 11001                           	psect	text28
 11002  0BA2                     __ptext28:	
 11003 ;; *************** function _I2C1_MasterTRBInsert *****************
 11004 ;; Defined at:
 11005 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 11006 ;; Parameters:    Size  Location     Type
 11007 ;;  count           1    wreg     unsigned char 
 11008 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 11009 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 11010 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 11011 ;;		 -> writeData@status(1), 
 11012 ;; Auto vars:     Size  Location     Type
 11013 ;;  count           1    3[BANK0 ] unsigned char 
 11014 ;; Return value:  Size  Location     Type
 11015 ;;                  1    wreg      void 
 11016 ;; Registers used:
 11017 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11018 ;; Tracked objects:
 11019 ;;		On entry : 0/0
 11020 ;;		On exit  : 0/0
 11021 ;;		Unchanged: 0/0
 11022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11023 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11024 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11025 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11026 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11027 ;;Total ram usage:        4 bytes
 11028 ;; Hardware stack levels used:    1
 11029 ;; Hardware stack levels required when called:    4
 11030 ;; This function calls:
 11031 ;;		_I2C1_WaitForLastPacketToComplete
 11032 ;; This function is called by:
 11033 ;;		_I2C1_MasterWrite
 11034 ;;		_I2C1_MasterRead
 11035 ;; This function uses a non-reentrant model
 11036 ;;
 11037                           
 11038                           
 11039                           ;psect for function _I2C1_MasterTRBInsert
 11040  0BA2                     _I2C1_MasterTRBInsert:	
 11041                           
 11042                           ;incstack = 0
 11043                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11044                           ;I2C1_MasterTRBInsert@count stored from wreg
 11045  0BA2  0140               	movlb	0	; select bank0
 11046  0BA3  00A3               	movwf	I2C1_MasterTRBInsert@count
 11047                           
 11048                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 11049  0BA4  0141               	movlb	1	; select bank1
 11050  0BA5  182A               	btfsc	(_i2c1_object^(0+128)+2),0
 11051  0BA6  2BE1               	goto	l2645
 11052                           
 11053                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 11054  0BA7  3002               	movlw	2
 11055  0BA8  0140               	movlb	0	; select bank0
 11056  0BA9  00A2               	movwf	??_I2C1_MasterTRBInsert
 11057  0BAA  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11058  0BAB  0086               	movwf	6
 11059  0BAC  0187               	clrf	7
 11060  0BAD  0822               	movf	??_I2C1_MasterTRBInsert,w
 11061  0BAE  0081               	movwf	1
 11062                           
 11063                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 11064  0BAF  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 11065  0BB0  00A2               	movwf	??_I2C1_MasterTRBInsert
 11066  0BB1  0141               	movlb	1	; select bank1
 11067  0BB2  0A28               	incf	_i2c1_object^(0+128),w
 11068  0BB3  0086               	movwf	6
 11069  0BB4  0187               	clrf	7
 11070  0BB5  0140               	movlb	0	; select bank0
 11071  0BB6  0822               	movf	??_I2C1_MasterTRBInsert,w
 11072  0BB7  0081               	movwf	1
 11073                           
 11074                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 11075  0BB8  0823               	movf	I2C1_MasterTRBInsert@count,w
 11076  0BB9  00A2               	movwf	??_I2C1_MasterTRBInsert
 11077  0BBA  0141               	movlb	1	; select bank1
 11078  0BBB  0828               	movf	_i2c1_object^(0+128),w
 11079  0BBC  0086               	movwf	6
 11080  0BBD  0187               	clrf	7
 11081  0BBE  0140               	movlb	0	; select bank0
 11082  0BBF  0822               	movf	??_I2C1_MasterTRBInsert,w
 11083  0BC0  0081               	movwf	1
 11084                           
 11085                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 11086  0BC1  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11087  0BC2  00A2               	movwf	??_I2C1_MasterTRBInsert
 11088  0BC3  0141               	movlb	1	; select bank1
 11089  0BC4  0828               	movf	_i2c1_object^(0+128),w
 11090  0BC5  3E02               	addlw	2
 11091  0BC6  0086               	movwf	6
 11092  0BC7  0187               	clrf	7
 11093  0BC8  0140               	movlb	0	; select bank0
 11094  0BC9  0822               	movf	??_I2C1_MasterTRBInsert,w
 11095  0BCA  0081               	movwf	1
 11096                           
 11097                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 11098  0BCB  3003               	movlw	3
 11099  0BCC  00A2               	movwf	??_I2C1_MasterTRBInsert
 11100  0BCD  0822               	movf	??_I2C1_MasterTRBInsert,w
 11101  0BCE  0141               	movlb	1	; select bank1
 11102  0BCF  07A8               	addwf	_i2c1_object^(0+128),f
 11103                           
 11104                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 11105  0BD0  0828               	movf	_i2c1_object^(0+128),w
 11106  0BD1  3ADB               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 11107  0BD2  1D03               	skipz
 11108  0BD3  2BDA               	goto	l2641
 11109                           
 11110                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 11111  0BD4  30D8               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 11112  0BD5  0140               	movlb	0	; select bank0
 11113  0BD6  00A2               	movwf	??_I2C1_MasterTRBInsert
 11114  0BD7  0822               	movf	??_I2C1_MasterTRBInsert,w
 11115  0BD8  0141               	movlb	1	; select bank1
 11116  0BD9  00A8               	movwf	_i2c1_object^(0+128)
 11117  0BDA                     l2641:	
 11118                           
 11119                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 11120  0BDA  10AA               	bcf	(_i2c1_object^(0+128)+2),1
 11121                           
 11122                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 11123  0BDB  0829               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 11124  0BDC  0628               	xorwf	_i2c1_object^(0+128),w
 11125  0BDD  1D03               	skipz
 11126  0BDE  2BE7               	goto	l2647
 11127                           
 11128                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 11129  0BDF  142A               	bsf	(_i2c1_object^(0+128)+2),0
 11130  0BE0  2BE7               	goto	l2647
 11131  0BE1                     l2645:	
 11132                           
 11133                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 11134  0BE1  0140               	movlb	0	; select bank0
 11135  0BE2  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11136  0BE3  0086               	movwf	6
 11137  0BE4  0187               	clrf	7
 11138  0BE5  0181               	clrf	1
 11139  0BE6  0A81               	incf	1,f
 11140  0BE7                     l2647:	
 11141                           
 11142                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 11143  0BE7  0140               	movlb	0	; select bank0
 11144  0BE8  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11145  0BE9  0086               	movwf	6
 11146  0BEA  0187               	clrf	7
 11147  0BEB  3002               	movlw	2
 11148  0BEC  0601               	xorwf	1,w
 11149  0BED  1D03               	btfss	3,2
 11150  0BEE  0008               	return
 11151                           
 11152                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 11153  0BEF  3188  207A         	fcall	_I2C1_WaitForLastPacketToComplete
 11154                           
 11155                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 11156  0BF1  014E               	movlb	14	; select bank14
 11157  0BF2  140F               	bsf	15,0	;volatile
 11158  0BF3  0008               	return
 11159  0BF4                     __end_of_I2C1_MasterTRBInsert:	
 11160                           
 11161                           	psect	text29
 11162  087A                     __ptext29:	
 11163 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 11164 ;; Defined at:
 11165 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 11166 ;; Parameters:    Size  Location     Type
 11167 ;;		None
 11168 ;; Auto vars:     Size  Location     Type
 11169 ;;		None
 11170 ;; Return value:  Size  Location     Type
 11171 ;;                  1    wreg      void 
 11172 ;; Registers used:
 11173 ;;		wreg, status,2, status,0
 11174 ;; Tracked objects:
 11175 ;;		On entry : 0/0
 11176 ;;		On exit  : 0/0
 11177 ;;		Unchanged: 0/0
 11178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11183 ;;Total ram usage:        0 bytes
 11184 ;; Hardware stack levels used:    1
 11185 ;; Hardware stack levels required when called:    3
 11186 ;; This function calls:
 11187 ;;		Nothing
 11188 ;; This function is called by:
 11189 ;;		_I2C1_MasterTRBInsert
 11190 ;; This function uses a non-reentrant model
 11191 ;;
 11192                           
 11193                           
 11194                           ;psect for function _I2C1_WaitForLastPacketToComplete
 11195  087A                     _I2C1_WaitForLastPacketToComplete:	
 11196  087A                     l2627:	
 11197                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 11198                           
 11199                           ;incstack = 0
 11200                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 11201                           
 11202                           
 11203                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 11204  087A  0141               	movlb	1	; select bank1
 11205  087B  0845               	movf	_i2c1_state^(0+128),w
 11206  087C  1903               	btfsc	3,2
 11207  087D  0008               	return
 11208  087E  287A               	goto	l2627
 11209  087F                     __end_of_I2C1_WaitForLastPacketToComplete:	
 11210                           
 11211                           	psect	text30
 11212  08D6                     __ptext30:	
 11213 ;; *************** function _CLOCK_init *****************
 11214 ;; Defined at:
 11215 ;;		line 18 in file "clock.c"
 11216 ;; Parameters:    Size  Location     Type
 11217 ;;		None
 11218 ;; Auto vars:     Size  Location     Type
 11219 ;;		None
 11220 ;; Return value:  Size  Location     Type
 11221 ;;                  1    wreg      void 
 11222 ;; Registers used:
 11223 ;;		wreg, status,2, status,0
 11224 ;; Tracked objects:
 11225 ;;		On entry : 0/0
 11226 ;;		On exit  : 0/0
 11227 ;;		Unchanged: 0/0
 11228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11233 ;;Total ram usage:        0 bytes
 11234 ;; Hardware stack levels used:    1
 11235 ;; Hardware stack levels required when called:    3
 11236 ;; This function calls:
 11237 ;;		Nothing
 11238 ;; This function is called by:
 11239 ;;		_main
 11240 ;; This function uses a non-reentrant model
 11241 ;;
 11242                           
 11243                           
 11244                           ;psect for function _CLOCK_init
 11245  08D6                     _CLOCK_init:	
 11246                           
 11247                           ;clock.c: 24:     T0CON1bits.T0CS = 0b010;
 11248                           
 11249                           ;incstack = 0
 11250                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0]
 11251  08D6  014B               	movlb	11	; select bank11
 11252  08D7  081F               	movf	31,w	;volatile
 11253  08D8  391F               	andlw	-225
 11254  08D9  3840               	iorlw	64
 11255  08DA  009F               	movwf	31	;volatile
 11256                           
 11257                           ;clock.c: 25:     T0CON1bits.CKPS = 0b0010;
 11258  08DB  081F               	movf	31,w	;volatile
 11259  08DC  39F0               	andlw	-16
 11260  08DD  3802               	iorlw	2
 11261  08DE  009F               	movwf	31	;volatile
 11262                           
 11263                           ;clock.c: 27:     TMR0H = 249;
 11264  08DF  30F9               	movlw	249
 11265  08E0  009D               	movwf	29	;volatile
 11266                           
 11267                           ;clock.c: 29:     PIE0bits.TMR0IE = 1;
 11268  08E1  014E               	movlb	14	; select bank14
 11269  08E2  1696               	bsf	22,5	;volatile
 11270                           
 11271                           ;clock.c: 32:     T0CON0bits.EN = 1;
 11272  08E3  014B               	movlb	11	; select bank11
 11273  08E4  179E               	bsf	30,7	;volatile
 11274  08E5  0008               	return
 11275  08E6                     __end_of_CLOCK_init:	
 11276                           
 11277                           	psect	text31
 11278  06F2                     __ptext31:	
 11279 ;; *************** function _BUTTONS_task *****************
 11280 ;; Defined at:
 11281 ;;		line 15 in file "buttons.c"
 11282 ;; Parameters:    Size  Location     Type
 11283 ;;		None
 11284 ;; Auto vars:     Size  Location     Type
 11285 ;;  btn             1    8[BANK0 ] PTR struct .
 11286 ;;		 -> buttons(32), 
 11287 ;;  i               1    5[BANK0 ] unsigned char 
 11288 ;;  time            2    6[BANK0 ] unsigned short 
 11289 ;; Return value:  Size  Location     Type
 11290 ;;                  1    wreg      void 
 11291 ;; Registers used:
 11292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11293 ;; Tracked objects:
 11294 ;;		On entry : 0/0
 11295 ;;		On exit  : 0/0
 11296 ;;		Unchanged: 0/0
 11297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11299 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11300 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11301 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11302 ;;Total ram usage:        7 bytes
 11303 ;; Hardware stack levels used:    1
 11304 ;; Hardware stack levels required when called:    4
 11305 ;; This function calls:
 11306 ;;		_CLOCK_getTime
 11307 ;; This function is called by:
 11308 ;;		_main
 11309 ;; This function uses a non-reentrant model
 11310 ;;
 11311                           
 11312                           
 11313                           ;psect for function _BUTTONS_task
 11314  06F2                     _BUTTONS_task:	
 11315                           
 11316                           ;buttons.c: 16:     time_t time = CLOCK_getTime();
 11317                           
 11318                           ;incstack = 0
 11319                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11320  06F2  3188  2087  3186   	fcall	_CLOCK_getTime
 11321  06F5  0140               	movlb	0	; select bank0
 11322  06F6  0821               	movf	?_CLOCK_getTime+1,w
 11323  06F7  00A7               	movwf	BUTTONS_task@time+1
 11324  06F8  0820               	movf	?_CLOCK_getTime,w
 11325  06F9  00A6               	movwf	BUTTONS_task@time
 11326                           
 11327                           ;buttons.c: 19:     if (time - lastTime < 10)
 11328  06FA  0141               	movlb	1	; select bank1
 11329  06FB  082D               	movf	_lastTime^(0+128),w
 11330  06FC  0140               	movlb	0	; select bank0
 11331  06FD  0226               	subwf	BUTTONS_task@time,w
 11332  06FE  00A2               	movwf	??_BUTTONS_task
 11333  06FF  0141               	movlb	1	; select bank1
 11334  0700  082E               	movf	(_lastTime+1)^(0+128),w
 11335  0701  0140               	movlb	0	; select bank0
 11336  0702  3B27               	subwfb	BUTTONS_task@time+1,w
 11337  0703  00A3               	movwf	??_BUTTONS_task+1
 11338  0704  3000               	movlw	0
 11339  0705  0223               	subwf	??_BUTTONS_task+1,w
 11340  0706  300A               	movlw	10
 11341  0707  1903               	skipnz
 11342  0708  0222               	subwf	??_BUTTONS_task,w
 11343  0709  1C03               	btfss	3,0
 11344  070A  0008               	return
 11345                           
 11346                           ;buttons.c: 22:     lastTime = time;
 11347  070B  0827               	movf	BUTTONS_task@time+1,w
 11348  070C  0141               	movlb	1	; select bank1
 11349  070D  00AE               	movwf	(_lastTime+1)^(0+128)
 11350  070E  0140               	movlb	0	; select bank0
 11351  070F  0826               	movf	BUTTONS_task@time,w
 11352  0710  0141               	movlb	1	; select bank1
 11353  0711  00AD               	movwf	_lastTime^(0+128)
 11354                           
 11355                           ;buttons.c: 25:     for (uint8_t i = 0; i < 4; i++) {
 11356  0712  0140               	movlb	0	; select bank0
 11357  0713  01A5               	clrf	BUTTONS_task@i
 11358  0714                     l3417:	
 11359                           
 11360                           ;buttons.c: 26:         button_t* btn = buttons + i;
 11361  0714  0825               	movf	BUTTONS_task@i,w
 11362  0715  00A2               	movwf	??_BUTTONS_task
 11363  0716  3002               	movlw	2
 11364  0717                     u2905:	
 11365  0717  35A2               	lslf	??_BUTTONS_task,f
 11366  0718  3EFF               	addlw	-1
 11367  0719  1D03               	skipz
 11368  071A  2F17               	goto	u2905
 11369  071B  3522               	lslf	??_BUTTONS_task,w
 11370  071C  3E30               	addlw	(low (_buttons| (0+256)))& (0+255)
 11371  071D  00A3               	movwf	??_BUTTONS_task+1
 11372  071E  0823               	movf	??_BUTTONS_task+1,w
 11373  071F  00A8               	movwf	BUTTONS_task@btn
 11374                           
 11375                           ;buttons.c: 29:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 11376  0720  0828               	movf	BUTTONS_task@btn,w
 11377  0721  0086               	movwf	6
 11378  0722  3001               	movlw	1	; select bank2/3
 11379  0723  0087               	movwf	7
 11380  0724  3F40               	moviw [0]fsr1
 11381  0725  00A2               	movwf	??_BUTTONS_task
 11382  0726  3F41               	moviw [1]fsr1
 11383  0727  00A3               	movwf	??_BUTTONS_task+1
 11384  0728  0822               	movf	??_BUTTONS_task,w
 11385  0729  0086               	movwf	6
 11386  072A  0823               	movf	??_BUTTONS_task+1,w
 11387  072B  0087               	movwf	7
 11388  072C  3001               	movlw	1
 11389  072D  00A4               	movwf	??_BUTTONS_task+2
 11390  072E  0828               	movf	BUTTONS_task@btn,w
 11391  072F  3E02               	addlw	2
 11392  0730  0084               	movwf	4
 11393  0731  3001               	movlw	1	; select bank2/3
 11394  0732  0085               	movwf	5
 11395  0733  0A00               	incf	0,w
 11396  0734  2F36               	goto	u2914
 11397  0735                     u2915:	
 11398  0735  35A4               	lslf	??_BUTTONS_task+2,f
 11399  0736                     u2914:	
 11400  0736  0B89               	decfsz	9,f
 11401  0737  2F35               	goto	u2915
 11402  0738  0824               	movf	??_BUTTONS_task+2,w
 11403  0739  0501               	andwf	1,w
 11404  073A  1D03               	btfss	3,2
 11405  073B  2F44               	goto	l3423
 11406                           
 11407                           ;buttons.c: 30:             btn->state = STATE_PRESSED;
 11408  073C  0828               	movf	BUTTONS_task@btn,w
 11409  073D  3E03               	addlw	3
 11410  073E  0086               	movwf	6
 11411  073F  3001               	movlw	1	; select bank2/3
 11412  0740  0087               	movwf	7
 11413  0741  0181               	clrf	1
 11414  0742  0A81               	incf	1,f
 11415                           
 11416                           ;buttons.c: 32:         } else {
 11417  0743  2F4A               	goto	l670
 11418  0744                     l3423:	
 11419                           
 11420                           ;buttons.c: 33:             btn->state = STATE_UNPRESSED;
 11421  0744  0828               	movf	BUTTONS_task@btn,w
 11422  0745  3E03               	addlw	3
 11423  0746  0086               	movwf	6
 11424  0747  3001               	movlw	1	; select bank2/3
 11425  0748  0087               	movwf	7
 11426  0749  0181               	clrf	1
 11427  074A                     l670:	
 11428                           ;buttons.c: 34:         }
 11429                           
 11430                           
 11431                           ;buttons.c: 36:         if(btn->state == STATE_PRESSED
 11432  074A  0828               	movf	BUTTONS_task@btn,w
 11433  074B  3E03               	addlw	3
 11434  074C  0086               	movwf	6
 11435  074D  3001               	movlw	1	; select bank2/3
 11436  074E  0087               	movwf	7
 11437  074F  0301               	decf	1,w
 11438  0750  1D03               	btfss	3,2
 11439  0751  2F63               	goto	l671
 11440  0752  0828               	movf	BUTTONS_task@btn,w
 11441  0753  3E04               	addlw	4
 11442  0754  0086               	movwf	6
 11443  0755  3001               	movlw	1	; select bank2/3
 11444  0756  0087               	movwf	7
 11445  0757  0801               	movf	1,w
 11446  0758  1D03               	btfss	3,2
 11447  0759  2F63               	goto	l671
 11448                           
 11449                           ;buttons.c: 37:             && btn->lastState == STATE_UNPRESSED){;buttons.c: 38:       
      +                                btn->time = time;
 11450  075A  0828               	movf	BUTTONS_task@btn,w
 11451  075B  3E06               	addlw	6
 11452  075C  0086               	movwf	6
 11453  075D  3001               	movlw	1	; select bank2/3
 11454  075E  0087               	movwf	7
 11455  075F  0826               	movf	BUTTONS_task@time,w
 11456  0760  3FC0               	movwi [0]fsr1
 11457  0761  0827               	movf	BUTTONS_task@time+1,w
 11458  0762  3FC1               	movwi [1]fsr1
 11459  0763                     l671:	
 11460                           ;buttons.c: 39:         }
 11461                           
 11462                           
 11463                           ;buttons.c: 40:         if (
 11464  0763  0828               	movf	BUTTONS_task@btn,w
 11465  0764  3E03               	addlw	3
 11466  0765  0086               	movwf	6
 11467  0766  3001               	movlw	1	; select bank2/3
 11468  0767  0087               	movwf	7
 11469  0768  0801               	movf	1,w
 11470  0769  1D03               	btfss	3,2
 11471  076A  2F8C               	goto	l672
 11472  076B  0828               	movf	BUTTONS_task@btn,w
 11473  076C  3E04               	addlw	4
 11474  076D  0086               	movwf	6
 11475  076E  3001               	movlw	1	; select bank2/3
 11476  076F  0087               	movwf	7
 11477  0770  0301               	decf	1,w
 11478  0771  1D03               	btfss	3,2
 11479  0772  2F8C               	goto	l672
 11480  0773  0828               	movf	BUTTONS_task@btn,w
 11481  0774  3E06               	addlw	6
 11482  0775  0086               	movwf	6
 11483  0776  3001               	movlw	1	; select bank2/3
 11484  0777  0087               	movwf	7
 11485  0778  3F40               	moviw [0]fsr1
 11486  0779  0226               	subwf	BUTTONS_task@time,w
 11487  077A  00A2               	movwf	??_BUTTONS_task
 11488  077B  3F41               	moviw [1]fsr1
 11489  077C  3B27               	subwfb	BUTTONS_task@time+1,w
 11490  077D  00A3               	movwf	??_BUTTONS_task+1
 11491  077E  3001               	movlw	1
 11492  077F  0223               	subwf	??_BUTTONS_task+1,w
 11493  0780  30F4               	movlw	244
 11494  0781  1903               	skipnz
 11495  0782  0222               	subwf	??_BUTTONS_task,w
 11496  0783  1803               	skipnc
 11497  0784  2F8C               	goto	l672
 11498                           
 11499                           ;buttons.c: 43:             && (time-btn->time) < 500) {;buttons.c: 44:             btn-
      +                          >event = EVENT_PRESSED;
 11500  0785  0828               	movf	BUTTONS_task@btn,w
 11501  0786  3E05               	addlw	5
 11502  0787  0086               	movwf	6
 11503  0788  3001               	movlw	1	; select bank2/3
 11504  0789  0087               	movwf	7
 11505  078A  0181               	clrf	1
 11506  078B  0A81               	incf	1,f
 11507  078C                     l672:	
 11508                           ;buttons.c: 45:         }
 11509                           
 11510                           
 11511                           ;buttons.c: 46:         if (
 11512  078C  0828               	movf	BUTTONS_task@btn,w
 11513  078D  3E03               	addlw	3
 11514  078E  0086               	movwf	6
 11515  078F  3001               	movlw	1	; select bank2/3
 11516  0790  0087               	movwf	7
 11517  0791  0801               	movf	1,w
 11518  0792  1D03               	btfss	3,2
 11519  0793  2FB4               	goto	l673
 11520  0794  0828               	movf	BUTTONS_task@btn,w
 11521  0795  3E04               	addlw	4
 11522  0796  0086               	movwf	6
 11523  0797  3001               	movlw	1	; select bank2/3
 11524  0798  0087               	movwf	7
 11525  0799  0301               	decf	1,w
 11526  079A  1D03               	btfss	3,2
 11527  079B  2FB4               	goto	l673
 11528  079C  0828               	movf	BUTTONS_task@btn,w
 11529  079D  3E06               	addlw	6
 11530  079E  0086               	movwf	6
 11531  079F  3001               	movlw	1	; select bank2/3
 11532  07A0  0087               	movwf	7
 11533  07A1  3F40               	moviw [0]fsr1
 11534  07A2  0226               	subwf	BUTTONS_task@time,w
 11535  07A3  00A2               	movwf	??_BUTTONS_task
 11536  07A4  3F41               	moviw [1]fsr1
 11537  07A5  3B27               	subwfb	BUTTONS_task@time+1,w
 11538  07A6  00A3               	movwf	??_BUTTONS_task+1
 11539  07A7  3001               	movlw	1
 11540  07A8  0223               	subwf	??_BUTTONS_task+1,w
 11541  07A9  30F5               	movlw	245
 11542  07AA  1903               	skipnz
 11543  07AB  0222               	subwf	??_BUTTONS_task,w
 11544  07AC  1C03               	skipc
 11545  07AD  2FB4               	goto	l673
 11546                           
 11547                           ;buttons.c: 49:             && (time-btn->time) > 500){;buttons.c: 50:             btn->
      +                          event = EVENT_IDLE;
 11548  07AE  0828               	movf	BUTTONS_task@btn,w
 11549  07AF  3E05               	addlw	5
 11550  07B0  0086               	movwf	6
 11551  07B1  3001               	movlw	1	; select bank2/3
 11552  07B2  0087               	movwf	7
 11553  07B3  0181               	clrf	1
 11554  07B4                     l673:	
 11555                           ;buttons.c: 51:         }
 11556                           
 11557                           
 11558                           ;buttons.c: 52:         if(btn->state == STATE_PRESSED && (time-btn->time) > 500){
 11559  07B4  0828               	movf	BUTTONS_task@btn,w
 11560  07B5  3E03               	addlw	3
 11561  07B6  0086               	movwf	6
 11562  07B7  3001               	movlw	1	; select bank2/3
 11563  07B8  0087               	movwf	7
 11564  07B9  0301               	decf	1,w
 11565  07BA  1D03               	btfss	3,2
 11566  07BB  2FD7               	goto	l674
 11567  07BC  0828               	movf	BUTTONS_task@btn,w
 11568  07BD  3E06               	addlw	6
 11569  07BE  0086               	movwf	6
 11570  07BF  3001               	movlw	1	; select bank2/3
 11571  07C0  0087               	movwf	7
 11572  07C1  3F40               	moviw [0]fsr1
 11573  07C2  0226               	subwf	BUTTONS_task@time,w
 11574  07C3  00A2               	movwf	??_BUTTONS_task
 11575  07C4  3F41               	moviw [1]fsr1
 11576  07C5  3B27               	subwfb	BUTTONS_task@time+1,w
 11577  07C6  00A3               	movwf	??_BUTTONS_task+1
 11578  07C7  3001               	movlw	1
 11579  07C8  0223               	subwf	??_BUTTONS_task+1,w
 11580  07C9  30F5               	movlw	245
 11581  07CA  1903               	skipnz
 11582  07CB  0222               	subwf	??_BUTTONS_task,w
 11583  07CC  1C03               	skipc
 11584  07CD  2FD7               	goto	l674
 11585                           
 11586                           ;buttons.c: 53:             btn->event = EVENT_HELD;
 11587  07CE  3002               	movlw	2
 11588  07CF  00A2               	movwf	??_BUTTONS_task
 11589  07D0  0828               	movf	BUTTONS_task@btn,w
 11590  07D1  3E05               	addlw	5
 11591  07D2  0086               	movwf	6
 11592  07D3  3001               	movlw	1	; select bank2/3
 11593  07D4  0087               	movwf	7
 11594  07D5  0822               	movf	??_BUTTONS_task,w
 11595  07D6  0081               	movwf	1
 11596  07D7                     l674:	
 11597                           ;buttons.c: 54:         }
 11598                           
 11599                           
 11600                           ;buttons.c: 55:         btn->lastState = btn->state;
 11601  07D7  0828               	movf	BUTTONS_task@btn,w
 11602  07D8  3E03               	addlw	3
 11603  07D9  0086               	movwf	6
 11604  07DA  3001               	movlw	1	; select bank2/3
 11605  07DB  0087               	movwf	7
 11606  07DC  0801               	movf	1,w
 11607  07DD  00A2               	movwf	??_BUTTONS_task
 11608  07DE  0828               	movf	BUTTONS_task@btn,w
 11609  07DF  3E04               	addlw	4
 11610  07E0  0086               	movwf	6
 11611  07E1  3001               	movlw	1	; select bank2/3
 11612  07E2  0087               	movwf	7
 11613  07E3  0822               	movf	??_BUTTONS_task,w
 11614  07E4  0081               	movwf	1
 11615                           
 11616                           ;buttons.c: 56:     }
 11617  07E5  3001               	movlw	1
 11618  07E6  00A2               	movwf	??_BUTTONS_task
 11619  07E7  0822               	movf	??_BUTTONS_task,w
 11620  07E8  07A5               	addwf	BUTTONS_task@i,f
 11621  07E9  3004               	movlw	4
 11622  07EA  0225               	subwf	BUTTONS_task@i,w
 11623  07EB  1803               	btfsc	3,0
 11624  07EC  0008               	return
 11625  07ED  2F14               	goto	l3417
 11626  07EE                     __end_of_BUTTONS_task:	
 11627                           
 11628                           	psect	text32
 11629  0887                     __ptext32:	
 11630 ;; *************** function _CLOCK_getTime *****************
 11631 ;; Defined at:
 11632 ;;		line 35 in file "clock.c"
 11633 ;; Parameters:    Size  Location     Type
 11634 ;;		None
 11635 ;; Auto vars:     Size  Location     Type
 11636 ;;		None
 11637 ;; Return value:  Size  Location     Type
 11638 ;;                  2    0[BANK0 ] unsigned short 
 11639 ;; Registers used:
 11640 ;;		wreg
 11641 ;; Tracked objects:
 11642 ;;		On entry : 0/0
 11643 ;;		On exit  : 0/0
 11644 ;;		Unchanged: 0/0
 11645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11646 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11649 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11650 ;;Total ram usage:        2 bytes
 11651 ;; Hardware stack levels used:    1
 11652 ;; Hardware stack levels required when called:    3
 11653 ;; This function calls:
 11654 ;;		Nothing
 11655 ;; This function is called by:
 11656 ;;		_BUTTONS_task
 11657 ;; This function uses a non-reentrant model
 11658 ;;
 11659                           
 11660                           
 11661                           ;psect for function _CLOCK_getTime
 11662  0887                     _CLOCK_getTime:	
 11663                           
 11664                           ;clock.c: 36:     return ClockCurrentTime;
 11665                           
 11666                           ;incstack = 0
 11667                           ; Regs used in _CLOCK_getTime: [wreg]
 11668  0887  0141               	movlb	1	; select bank1
 11669  0888  0836               	movf	(_ClockCurrentTime+1)^(0+128),w
 11670  0889  0140               	movlb	0	; select bank0
 11671  088A  00A1               	movwf	?_CLOCK_getTime+1
 11672  088B  0141               	movlb	1	; select bank1
 11673  088C  0835               	movf	_ClockCurrentTime^(0+128),w
 11674  088D  0140               	movlb	0	; select bank0
 11675  088E  00A0               	movwf	?_CLOCK_getTime
 11676  088F  0008               	return
 11677  0890                     __end_of_CLOCK_getTime:	
 11678                           
 11679                           	psect	text33
 11680  0B57                     __ptext33:	
 11681 ;; *************** function _BUTTONS_init *****************
 11682 ;; Defined at:
 11683 ;;		line 66 in file "buttons.c"
 11684 ;; Parameters:    Size  Location     Type
 11685 ;;		None
 11686 ;; Auto vars:     Size  Location     Type
 11687 ;;		None
 11688 ;; Return value:  Size  Location     Type
 11689 ;;                  1    wreg      void 
 11690 ;; Registers used:
 11691 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11692 ;; Tracked objects:
 11693 ;;		On entry : 0/0
 11694 ;;		On exit  : 0/0
 11695 ;;		Unchanged: 0/0
 11696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11699 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11700 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11701 ;;Total ram usage:        1 bytes
 11702 ;; Hardware stack levels used:    1
 11703 ;; Hardware stack levels required when called:    4
 11704 ;; This function calls:
 11705 ;;		_init
 11706 ;; This function is called by:
 11707 ;;		_main
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           
 11712                           ;psect for function _BUTTONS_init
 11713  0B57                     _BUTTONS_init:	
 11714                           
 11715                           ;buttons.c: 67:     menu = &buttons[0];
 11716                           
 11717                           ;incstack = 0
 11718                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11719  0B57  3030               	movlw	(low (_buttons| (0+256)))& (0+255)
 11720  0B58  0140               	movlb	0	; select bank0
 11721  0B59  00A5               	movwf	??_BUTTONS_init
 11722  0B5A  0825               	movf	??_BUTTONS_init,w
 11723  0B5B  0141               	movlb	1	; select bank1
 11724  0B5C  00CC               	movwf	_menu^(0+128)
 11725                           
 11726                           ;buttons.c: 68:     up = &buttons[1];
 11727  0B5D  3038               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 11728  0B5E  0140               	movlb	0	; select bank0
 11729  0B5F  00A5               	movwf	??_BUTTONS_init
 11730  0B60  0825               	movf	??_BUTTONS_init,w
 11731  0B61  0141               	movlb	1	; select bank1
 11732  0B62  00CF               	movwf	_up^(0+128)
 11733                           
 11734                           ;buttons.c: 69:     down = &buttons[2];
 11735  0B63  3040               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 11736  0B64  0140               	movlb	0	; select bank0
 11737  0B65  00A5               	movwf	??_BUTTONS_init
 11738  0B66  0825               	movf	??_BUTTONS_init,w
 11739  0B67  0141               	movlb	1	; select bank1
 11740  0B68  00CE               	movwf	_down^(0+128)
 11741                           
 11742                           ;buttons.c: 70:     enter = &buttons[3];
 11743  0B69  3048               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 11744  0B6A  0140               	movlb	0	; select bank0
 11745  0B6B  00A5               	movwf	??_BUTTONS_init
 11746  0B6C  0825               	movf	??_BUTTONS_init,w
 11747  0B6D  0141               	movlb	1	; select bank1
 11748  0B6E  00CD               	movwf	_enter^(0+128)
 11749                           
 11750                           ;buttons.c: 72:     init(menu, &PORTC, 2);
 11751  0B6F  300E               	movlw	14
 11752  0B70  0140               	movlb	0	; select bank0
 11753  0B71  00A0               	movwf	init@port
 11754  0B72  3000               	movlw	0
 11755  0B73  00A1               	movwf	init@port+1
 11756  0B74  3002               	movlw	2
 11757  0B75  00A5               	movwf	??_BUTTONS_init
 11758  0B76  0825               	movf	??_BUTTONS_init,w
 11759  0B77  00A2               	movwf	init@pin
 11760  0B78  0141               	movlb	1	; select bank1
 11761  0B79  084C               	movf	_menu^(0+128),w
 11762  0B7A  3189  2175  318B   	fcall	_init
 11763                           
 11764                           ;buttons.c: 73:     init(enter, &PORTA, 2);
 11765  0B7D  300C               	movlw	12
 11766  0B7E  0140               	movlb	0	; select bank0
 11767  0B7F  00A0               	movwf	init@port
 11768  0B80  3000               	movlw	0
 11769  0B81  00A1               	movwf	init@port+1
 11770  0B82  3002               	movlw	2
 11771  0B83  00A5               	movwf	??_BUTTONS_init
 11772  0B84  0825               	movf	??_BUTTONS_init,w
 11773  0B85  00A2               	movwf	init@pin
 11774  0B86  0141               	movlb	1	; select bank1
 11775  0B87  084D               	movf	_enter^(0+128),w
 11776  0B88  3189  2175  318B   	fcall	_init
 11777                           
 11778                           ;buttons.c: 74:     init(down, &PORTC, 0);
 11779  0B8B  300E               	movlw	14
 11780  0B8C  0140               	movlb	0	; select bank0
 11781  0B8D  00A0               	movwf	init@port
 11782  0B8E  3000               	movlw	0
 11783  0B8F  00A1               	movwf	init@port+1
 11784  0B90  01A2               	clrf	init@pin
 11785  0B91  0141               	movlb	1	; select bank1
 11786  0B92  084E               	movf	_down^(0+128),w
 11787  0B93  3189  2175  318B   	fcall	_init
 11788                           
 11789                           ;buttons.c: 75:     init(up, &PORTC, 1);
 11790  0B96  300E               	movlw	14
 11791  0B97  0140               	movlb	0	; select bank0
 11792  0B98  00A0               	movwf	init@port
 11793  0B99  3000               	movlw	0
 11794  0B9A  00A1               	movwf	init@port+1
 11795  0B9B  01A2               	clrf	init@pin
 11796  0B9C  0AA2               	incf	init@pin,f
 11797  0B9D  0141               	movlb	1	; select bank1
 11798  0B9E  084F               	movf	_up^(0+128),w
 11799  0B9F  3189  2175         	fcall	_init
 11800  0BA1  0008               	return
 11801  0BA2                     __end_of_BUTTONS_init:	
 11802                           
 11803                           	psect	text34
 11804  0975                     __ptext34:	
 11805 ;; *************** function _init *****************
 11806 ;; Defined at:
 11807 ;;		line 59 in file "buttons.c"
 11808 ;; Parameters:    Size  Location     Type
 11809 ;;  btn             1    wreg     PTR struct .
 11810 ;;		 -> buttons(32), NULL(0), 
 11811 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 11812 ;;		 -> PORTA(1), PORTC(1), 
 11813 ;;  pin             1    2[BANK0 ] unsigned char 
 11814 ;; Auto vars:     Size  Location     Type
 11815 ;;  btn             1    4[BANK0 ] PTR struct .
 11816 ;;		 -> buttons(32), NULL(0), 
 11817 ;; Return value:  Size  Location     Type
 11818 ;;                  1    wreg      void 
 11819 ;; Registers used:
 11820 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11821 ;; Tracked objects:
 11822 ;;		On entry : 0/0
 11823 ;;		On exit  : 0/0
 11824 ;;		Unchanged: 0/0
 11825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11826 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11827 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11828 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11829 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11830 ;;Total ram usage:        5 bytes
 11831 ;; Hardware stack levels used:    1
 11832 ;; Hardware stack levels required when called:    3
 11833 ;; This function calls:
 11834 ;;		Nothing
 11835 ;; This function is called by:
 11836 ;;		_BUTTONS_init
 11837 ;; This function uses a non-reentrant model
 11838 ;;
 11839                           
 11840                           
 11841                           ;psect for function _init
 11842  0975                     _init:	
 11843                           
 11844                           ;incstack = 0
 11845                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 11846                           ;init@btn stored from wreg
 11847  0975  0140               	movlb	0	; select bank0
 11848  0976  00A4               	movwf	init@btn
 11849                           
 11850                           ;buttons.c: 60:     btn->port = port;
 11851  0977  0824               	movf	init@btn,w
 11852  0978  0086               	movwf	6
 11853  0979  3001               	movlw	1	; select bank2/3
 11854  097A  0087               	movwf	7
 11855  097B  0820               	movf	init@port,w
 11856  097C  3FC0               	movwi [0]fsr1
 11857  097D  0821               	movf	init@port+1,w
 11858  097E  3FC1               	movwi [1]fsr1
 11859                           
 11860                           ;buttons.c: 61:     btn->pin = pin;
 11861  097F  0822               	movf	init@pin,w
 11862  0980  00A3               	movwf	??_init
 11863  0981  0824               	movf	init@btn,w
 11864  0982  3E02               	addlw	2
 11865  0983  0086               	movwf	6
 11866  0984  3001               	movlw	1	; select bank2/3
 11867  0985  0087               	movwf	7
 11868  0986  0823               	movf	??_init,w
 11869  0987  0081               	movwf	1
 11870                           
 11871                           ;buttons.c: 62:     btn->state = STATE_UNPRESSED;
 11872  0988  0824               	movf	init@btn,w
 11873  0989  3E03               	addlw	3
 11874  098A  0086               	movwf	6
 11875  098B  3001               	movlw	1	; select bank2/3
 11876  098C  0087               	movwf	7
 11877  098D  0181               	clrf	1
 11878                           
 11879                           ;buttons.c: 63:     btn->event = EVENT_IDLE;
 11880  098E  0824               	movf	init@btn,w
 11881  098F  3E05               	addlw	5
 11882  0990  0086               	movwf	6
 11883  0991  3001               	movlw	1	; select bank2/3
 11884  0992  0087               	movwf	7
 11885  0993  0181               	clrf	1
 11886  0994  0008               	return
 11887  0995                     __end_of_init:	
 11888                           
 11889                           	psect	intentry
 11890  0004                     __pintentry:	
 11891 ;; *************** function _INTERRUPT_InterruptManager *****************
 11892 ;; Defined at:
 11893 ;;		line 54 in file "mcc_generated_files/interrupt_manager.c"
 11894 ;; Parameters:    Size  Location     Type
 11895 ;;		None
 11896 ;; Auto vars:     Size  Location     Type
 11897 ;;  dataIn          1   10[COMMON] unsigned char 
 11898 ;; Return value:  Size  Location     Type
 11899 ;;                  1    wreg      void 
 11900 ;; Registers used:
 11901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11902 ;; Tracked objects:
 11903 ;;		On entry : 0/0
 11904 ;;		On exit  : 0/0
 11905 ;;		Unchanged: 0/0
 11906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11909 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11910 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11911 ;;Total ram usage:        5 bytes
 11912 ;; Hardware stack levels used:    1
 11913 ;; Hardware stack levels required when called:    2
 11914 ;; This function calls:
 11915 ;;		_I2C1_BusCollisionISR
 11916 ;;		_I2C1_ISR
 11917 ;; This function is called by:
 11918 ;;		Interrupt level 1
 11919 ;; This function uses a non-reentrant model
 11920 ;;
 11921                           
 11922  0004                     _INTERRUPT_InterruptManager:	
 11923                           
 11924                           ;incstack = 0
 11925  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 11926                           
 11927                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11928  0005  3180               	pagesel	$
 11929                           
 11930                           ;mcc_generated_files/interrupt_manager.c: 57:     if(RC1STAbits.OERR == 1){
 11931  0006  0142               	movlb	2	; select bank2
 11932  0007  1C9D               	btfss	29,1	;volatile
 11933  0008  280B               	goto	i1l3779
 11934                           
 11935                           ;mcc_generated_files/interrupt_manager.c: 58:                 RC1STAbits.CREN = 0;
 11936  0009  121D               	bcf	29,4	;volatile
 11937                           
 11938                           ;mcc_generated_files/interrupt_manager.c: 59:                 RC1STAbits.CREN = 1;
 11939  000A  161D               	bsf	29,4	;volatile
 11940  000B                     i1l3779:	
 11941                           
 11942                           ;mcc_generated_files/interrupt_manager.c: 61:             uint8_t dataIn = RC1REG;
 11943  000B  0819               	movf	25,w	;volatile
 11944  000C  00F6               	movwf	??_INTERRUPT_InterruptManager
 11945  000D  0876               	movf	??_INTERRUPT_InterruptManager,w
 11946  000E  00FA               	movwf	INTERRUPT_InterruptManager@dataIn
 11947                           
 11948                           ;mcc_generated_files/interrupt_manager.c: 62:             if(RC1STAbits.FERR == 1){
 11949  000F  1D1D               	btfss	29,2	;volatile
 11950  0010  2815               	goto	i1l3785
 11951                           
 11952                           ;mcc_generated_files/interrupt_manager.c: 63:                 point = 0;
 11953  0011  0141               	movlb	1	; select bank1
 11954  0012  01B7               	clrf	_point^(0+128)
 11955  0013  01B8               	clrf	(_point+1)^(0+128)
 11956                           
 11957                           ;mcc_generated_files/interrupt_manager.c: 64:             }else if(point > 513){
 11958  0014  2836               	goto	i1l3793
 11959  0015                     i1l3785:	
 11960  0015  0141               	movlb	1	; select bank1
 11961  0016  0838               	movf	(_point+1)^(0+128),w
 11962  0017  3A80               	xorlw	128
 11963  0018  00F6               	movwf	??_INTERRUPT_InterruptManager
 11964  0019  3082               	movlw	130
 11965  001A  0276               	subwf	??_INTERRUPT_InterruptManager,w
 11966  001B  1D03               	skipz
 11967  001C  281F               	goto	u335_25
 11968  001D  3002               	movlw	2
 11969  001E  0237               	subwf	_point^(0+128),w
 11970  001F                     u335_25:	
 11971  001F  1803               	btfsc	3,0
 11972  0020  2836               	goto	i1l3793
 11973                           
 11974                           ;mcc_generated_files/interrupt_manager.c: 67:                 input[point] = dataIn;
 11975  0021  30EF               	movlw	239
 11976  0022  00F6               	movwf	??_INTERRUPT_InterruptManager
 11977  0023  3025               	movlw	37
 11978  0024  00F7               	movwf	??_INTERRUPT_InterruptManager+1
 11979  0025  0141               	movlb	1	; select bank1
 11980  0026  0837               	movf	_point^(0+128),w
 11981  0027  0776               	addwf	??_INTERRUPT_InterruptManager,w
 11982  0028  00F8               	movwf	??_INTERRUPT_InterruptManager+2
 11983  0029  0838               	movf	(_point+1)^(0+128),w
 11984  002A  3D77               	addwfc	??_INTERRUPT_InterruptManager+1,w
 11985  002B  00F9               	movwf	??_INTERRUPT_InterruptManager+3
 11986  002C  0878               	movf	??_INTERRUPT_InterruptManager+2,w
 11987  002D  0086               	movwf	6
 11988  002E  0879               	movf	??_INTERRUPT_InterruptManager+3,w
 11989  002F  0087               	movwf	7
 11990  0030  087A               	movf	INTERRUPT_InterruptManager@dataIn,w
 11991  0031  0081               	movwf	1
 11992                           
 11993                           ;mcc_generated_files/interrupt_manager.c: 68:                 point++;
 11994  0032  3001               	movlw	1
 11995  0033  07B7               	addwf	_point^(0+128),f
 11996  0034  3000               	movlw	0
 11997  0035  3DB8               	addwfc	(_point+1)^(0+128),f
 11998  0036                     i1l3793:	
 11999                           
 12000                           ;mcc_generated_files/interrupt_manager.c: 71:     if(INTCONbits.PEIE == 1)
 12001  0036  1F0B               	btfss	11,6	;volatile
 12002  0037  2850               	goto	i1l240
 12003                           
 12004                           ;mcc_generated_files/interrupt_manager.c: 72:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 12005  0038  014E               	movlb	14	; select bank14
 12006  0039  1899               	btfsc	25,1	;volatile
 12007  003A  1C8F               	btfss	15,1	;volatile
 12008  003B  2840               	goto	i1l233
 12009                           
 12010                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             I2C1_BusCollisionISR();
 12011  003C  3188  2077  3180   	fcall	_I2C1_BusCollisionISR
 12012                           
 12013                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 12014  003F  2850               	goto	i1l240
 12015  0040                     i1l233:	
 12016                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 12017                           
 12018  0040  1819               	btfsc	25,0	;volatile
 12019  0041  1C0F               	btfss	15,0	;volatile
 12020  0042  2847               	goto	i1l235
 12021                           
 12022                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             I2C1_ISR();
 12023  0043  318D  2550  3180   	fcall	_I2C1_ISR
 12024                           
 12025                           ;mcc_generated_files/interrupt_manager.c: 80:         }else if(PIR0bits.TMR0IF == 1){
 12026  0046  2850               	goto	i1l240
 12027  0047                     i1l235:	
 12028  0047  1E8C               	btfss	12,5	;volatile
 12029  0048  2850               	goto	i1l240
 12030                           
 12031                           ;mcc_generated_files/interrupt_manager.c: 82:             ClockCurrentTime++;
 12032  0049  3001               	movlw	1
 12033  004A  0141               	movlb	1	; select bank1
 12034  004B  07B5               	addwf	_ClockCurrentTime^(0+128),f
 12035  004C  3000               	movlw	0
 12036  004D  3DB6               	addwfc	(_ClockCurrentTime+1)^(0+128),f
 12037                           
 12038                           ;mcc_generated_files/interrupt_manager.c: 83:             PIR0bits.TMR0IF = 0;
 12039  004E  014E               	movlb	14	; select bank14
 12040  004F  128C               	bcf	12,5	;volatile
 12041  0050                     i1l240:	
 12042                           ;mcc_generated_files/interrupt_manager.c: 97:     }
 12043                           
 12044                           ;mcc_generated_files/interrupt_manager.c: 84:         }
 12045                           
 12046  0050  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 12047  0051  0009               	retfie
 12048  0052                     __end_of_INTERRUPT_InterruptManager:	
 12049                           
 12050                           	psect	text36
 12051  0D50                     __ptext36:	
 12052 ;; *************** function _I2C1_ISR *****************
 12053 ;; Defined at:
 12054 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 12055 ;; Parameters:    Size  Location     Type
 12056 ;;		None
 12057 ;; Auto vars:     Size  Location     Type
 12058 ;;		None
 12059 ;; Return value:  Size  Location     Type
 12060 ;;                  1    wreg      void 
 12061 ;; Registers used:
 12062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12063 ;; Tracked objects:
 12064 ;;		On entry : 0/0
 12065 ;;		On exit  : 0/0
 12066 ;;		Unchanged: 0/0
 12067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12070 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12071 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12072 ;;Total ram usage:        4 bytes
 12073 ;; Hardware stack levels used:    1
 12074 ;; Hardware stack levels required when called:    1
 12075 ;; This function calls:
 12076 ;;		_I2C1_FunctionComplete
 12077 ;;		_I2C1_Stop
 12078 ;; This function is called by:
 12079 ;;		_INTERRUPT_InterruptManager
 12080 ;; This function uses a non-reentrant model
 12081 ;;
 12082                           
 12083                           
 12084                           ;psect for function _I2C1_ISR
 12085  0D50                     _I2C1_ISR:	
 12086                           
 12087                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 12088                           
 12089                           ;incstack = 0
 12090                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12091  0D50  014E               	movlb	14	; select bank14
 12092  0D51  100F               	bcf	15,0	;volatile
 12093                           
 12094                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 12095  0D52  0143               	movlb	3	; select bank3
 12096  0D53  1F90               	btfss	16,7	;volatile
 12097  0D54  2E6D               	goto	i1l3631
 12098                           
 12099                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 12100  0D55  1390               	bcf	16,7	;volatile
 12101                           
 12102                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 12103  0D56  0141               	movlb	1	; select bank1
 12104  0D57  01C5               	clrf	_i2c1_state^(0+128)
 12105                           
 12106                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 12107  0D58  0842               	movf	_p_i2c1_current^(0+128),w
 12108  0D59  3E02               	addlw	2
 12109  0D5A  0086               	movwf	6
 12110  0D5B  0187               	clrf	7
 12111  0D5C  0801               	movf	1,w
 12112  0D5D  0086               	movwf	6
 12113  0D5E  0187               	clrf	7
 12114  0D5F  0181               	clrf	1
 12115  0D60  0A81               	incf	1,f
 12116                           
 12117                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 12118  0D61  01C2               	clrf	_p_i2c1_current^(0+128)
 12119  0D62  0008               	return
 12120  0D63                     i1l347:	
 12121                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 12122                           
 12123                           
 12124                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 12125  0D63  18AA               	btfsc	(_i2c1_object^(0+128)+2),1
 12126  0D64  0008               	return
 12127                           
 12128                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 12129  0D65  0829               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 12130  0D66  00F2               	movwf	??_I2C1_ISR
 12131  0D67  0872               	movf	??_I2C1_ISR,w
 12132  0D68  00C2               	movwf	_p_i2c1_current^(0+128)
 12133                           
 12134                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 12135  0D69  0829               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 12136  0D6A  0086               	movwf	6
 12137  0D6B  0187               	clrf	7
 12138  0D6C  0801               	movf	1,w
 12139  0D6D  00F2               	movwf	??_I2C1_ISR
 12140  0D6E  0872               	movf	??_I2C1_ISR,w
 12141  0D6F  00C4               	movwf	_i2c1_trb_count^(0+128)
 12142                           
 12143                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 12144  0D70  0829               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 12145  0D71  0086               	movwf	6
 12146  0D72  0187               	clrf	7
 12147  0D73  3F41               	moviw [1]fsr1
 12148  0D74  00C3               	movwf	_p_i2c1_trb_current^(0+128)
 12149                           
 12150                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 12151  0D75  3003               	movlw	3
 12152  0D76  00F2               	movwf	??_I2C1_ISR
 12153  0D77  0872               	movf	??_I2C1_ISR,w
 12154  0D78  07A9               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 12155                           
 12156                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 12157  0D79  0829               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 12158  0D7A  3ADB               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 12159  0D7B  1D03               	skipz
 12160  0D7C  2D81               	goto	i1l3519
 12161                           
 12162                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 12163  0D7D  30D8               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 12164  0D7E  00F2               	movwf	??_I2C1_ISR
 12165  0D7F  0872               	movf	??_I2C1_ISR,w
 12166  0D80  00A9               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 12167  0D81                     i1l3519:	
 12168                           
 12169                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 12170  0D81  102A               	bcf	(_i2c1_object^(0+128)+2),0
 12171                           
 12172                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 12173  0D82  0829               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 12174  0D83  0628               	xorwf	_i2c1_object^(0+128),w
 12175  0D84  1903               	btfsc	3,2
 12176                           
 12177                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 12178  0D85  14AA               	bsf	(_i2c1_object^(0+128)+2),1
 12179                           
 12180                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 12181                           
 12182                           ;mcc_generated_files/i2c1.c: 290:                 }
 12183  0D86  0143               	movlb	3	; select bank3
 12184  0D87  1411               	bsf	17,0	;volatile
 12185  0D88                     i1l3523:	
 12186                           
 12187                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 12188  0D88  3002               	movlw	2
 12189  0D89  00F2               	movwf	??_I2C1_ISR
 12190  0D8A  0872               	movf	??_I2C1_ISR,w
 12191  0D8B  0141               	movlb	1	; select bank1
 12192  0D8C  00C5               	movwf	_i2c1_state^(0+128)
 12193  0D8D  0008               	return
 12194  0D8E                     i1l352:	
 12195                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 12196                           
 12197  0D8E  2E16               	goto	i1l373
 12198  0D8F                     i1l353:	
 12199                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 12200                           
 12201                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 12202                           
 12203                           
 12204                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 12205  0D8F  0143               	movlb	3	; select bank3
 12206  0D90  1F11               	btfss	17,6	;volatile
 12207  0D91  2D9B               	goto	i1l3531
 12208                           
 12209                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 12210  0D92  3001               	movlw	1
 12211  0D93  00F2               	movwf	??_I2C1_ISR
 12212  0D94  0872               	movf	??_I2C1_ISR,w
 12213  0D95  0141               	movlb	1	; select bank1
 12214  0D96  07AC               	addwf	(_i2c1_object^(0+128)+4),f
 12215                           
 12216                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 12217  0D97  3004               	movlw	4
 12218  0D98  3189  2125         	fcall	_I2C1_Stop
 12219                           
 12220                           ;mcc_generated_files/i2c1.c: 319:             }
 12221  0D9A  0008               	return
 12222  0D9B                     i1l3531:	
 12223                           
 12224                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 12225  0D9B  0141               	movlb	1	; select bank1
 12226  0D9C  085C               	movf	(I2C1_ISR@i2c_address+1)^(0+128),w
 12227  0D9D  00F3               	movwf	??_I2C1_ISR+1
 12228  0D9E  085B               	movf	I2C1_ISR@i2c_address^(0+128),w
 12229  0D9F  00F2               	movwf	??_I2C1_ISR
 12230  0DA0  36F3               	lsrf	??_I2C1_ISR+1,f
 12231  0DA1  0CF2               	rrf	??_I2C1_ISR,f
 12232  0DA2  0872               	movf	??_I2C1_ISR,w
 12233  0DA3  0143               	movlb	3	; select bank3
 12234  0DA4  008C               	movwf	12	;volatile
 12235                           
 12236                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 12237  0DA5  0141               	movlb	1	; select bank1
 12238  0DA6  1C5B               	btfss	I2C1_ISR@i2c_address^(0+128),0
 12239  0DA7  2DAD               	goto	i1l3537
 12240                           
 12241                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 12242  0DA8  300B               	movlw	11
 12243  0DA9  00F2               	movwf	??_I2C1_ISR
 12244  0DAA  0872               	movf	??_I2C1_ISR,w
 12245  0DAB  00C5               	movwf	_i2c1_state^(0+128)
 12246                           
 12247                           ;mcc_generated_files/i2c1.c: 331:                 }
 12248  0DAC  0008               	return
 12249  0DAD                     i1l3537:	
 12250                           
 12251                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 12252  0DAD  3003               	movlw	3
 12253  0DAE  00F2               	movwf	??_I2C1_ISR
 12254  0DAF  0872               	movf	??_I2C1_ISR,w
 12255  0DB0  00C5               	movwf	_i2c1_state^(0+128)
 12256  0DB1  0008               	return
 12257  0DB2                     i1l358:	
 12258                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 12259                           
 12260                           
 12261                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 12262  0DB2  0143               	movlb	3	; select bank3
 12263  0DB3  1F11               	btfss	17,6	;volatile
 12264  0DB4  2DBE               	goto	i1l359
 12265                           
 12266                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 12267  0DB5  3001               	movlw	1
 12268  0DB6  00F2               	movwf	??_I2C1_ISR
 12269  0DB7  0872               	movf	??_I2C1_ISR,w
 12270  0DB8  0141               	movlb	1	; select bank1
 12271  0DB9  07AC               	addwf	(_i2c1_object^(0+128)+4),f
 12272                           
 12273                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 12274  0DBA  3004               	movlw	4
 12275  0DBB  3189  2125         	fcall	_I2C1_Stop
 12276                           
 12277                           ;mcc_generated_files/i2c1.c: 347:             }
 12278  0DBD  0008               	return
 12279  0DBE                     i1l359:	
 12280                           ;mcc_generated_files/i2c1.c: 348:             else
 12281                           
 12282                           
 12283                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 12284  0DBE  1491               	bsf	17,1	;volatile
 12285                           
 12286                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 12287  0DBF  0141               	movlb	1	; select bank1
 12288  0DC0  085C               	movf	(I2C1_ISR@i2c_address+1)^(0+128),w
 12289  0DC1  00F3               	movwf	??_I2C1_ISR+1
 12290  0DC2  085B               	movf	I2C1_ISR@i2c_address^(0+128),w
 12291  0DC3  00F2               	movwf	??_I2C1_ISR
 12292  0DC4  0873               	movf	??_I2C1_ISR+1,w
 12293  0DC5  00F2               	movwf	??_I2C1_ISR
 12294  0DC6  01F3               	clrf	??_I2C1_ISR+1
 12295  0DC7  3006               	movlw	6
 12296  0DC8  0572               	andwf	??_I2C1_ISR,w
 12297  0DC9  00F4               	movwf	??_I2C1_ISR+2
 12298  0DCA  3000               	movlw	0
 12299  0DCB  0573               	andwf	??_I2C1_ISR+1,w
 12300  0DCC  00F5               	movwf	??_I2C1_ISR+3
 12301  0DCD  30F0               	movlw	240
 12302  0DCE  0474               	iorwf	??_I2C1_ISR+2,w
 12303  0DCF  00DB               	movwf	I2C1_ISR@i2c_address^(0+128)
 12304  0DD0  3000               	movlw	0
 12305  0DD1  0475               	iorwf	??_I2C1_ISR+3,w
 12306  0DD2  00DC               	movwf	(I2C1_ISR@i2c_address+1)^(0+128)
 12307                           
 12308                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 12309  0DD3  145B               	bsf	I2C1_ISR@i2c_address^(0+128),0
 12310                           
 12311                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 12312  0DD4  01BF               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 12313  0DD5  0ABF               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 12314  0DD6  2D88               	goto	i1l3523
 12315  0DD7                     i1l3551:	
 12316                           
 12317                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 12318  0DD7  033F               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 12319  0DD8  1903               	btfsc	3,2
 12320  0DD9  2DEB               	goto	i1l3571
 12321                           
 12322                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 12323  0DDA  0843               	movf	_p_i2c1_trb_current^(0+128),w
 12324  0DDB  0086               	movwf	6
 12325  0DDC  0187               	clrf	7
 12326  0DDD  3F40               	moviw [0]fsr1
 12327  0DDE  00DB               	movwf	I2C1_ISR@i2c_address^(0+128)
 12328  0DDF  3F41               	moviw [1]fsr1
 12329  0DE0  00DC               	movwf	(I2C1_ISR@i2c_address+1)^(0+128)
 12330                           
 12331                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 12332  0DE1  0843               	movf	_p_i2c1_trb_current^(0+128),w
 12333  0DE2  0086               	movwf	6
 12334  0DE3  0187               	clrf	7
 12335  0DE4  3F43               	moviw [3]fsr1
 12336  0DE5  00C1               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 12337                           
 12338                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 12339  0DE6  0843               	movf	_p_i2c1_trb_current^(0+128),w
 12340  0DE7  0086               	movwf	6
 12341  0DE8  0187               	clrf	7
 12342  0DE9  3F42               	moviw [2]fsr1
 12343  0DEA  00C0               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 12344  0DEB                     i1l3571:	
 12345                           
 12346                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 12347  0DEB  085B               	movf	I2C1_ISR@i2c_address^(0+128),w
 12348  0DEC  0143               	movlb	3	; select bank3
 12349  0DED  008C               	movwf	12	;volatile
 12350                           
 12351                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 12352  0DEE  0141               	movlb	1	; select bank1
 12353  0DEF  1C5B               	btfss	I2C1_ISR@i2c_address^(0+128),0
 12354  0DF0  2DAD               	goto	i1l3537
 12355                           
 12356                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 12357  0DF1  3005               	movlw	5
 12358  0DF2  00F2               	movwf	??_I2C1_ISR
 12359  0DF3  0872               	movf	??_I2C1_ISR,w
 12360  0DF4  00C5               	movwf	_i2c1_state^(0+128)
 12361                           
 12362                           ;mcc_generated_files/i2c1.c: 419:                 }
 12363  0DF5  0008               	return
 12364  0DF6                     i1l369:	
 12365                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 12366                           
 12367                           
 12368                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 12369  0DF6  0143               	movlb	3	; select bank3
 12370  0DF7  1F11               	btfss	17,6	;volatile
 12371  0DF8  2E04               	goto	i1l3585
 12372                           
 12373                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 12374  0DF9  3001               	movlw	1
 12375  0DFA  00F2               	movwf	??_I2C1_ISR
 12376  0DFB  0872               	movf	??_I2C1_ISR,w
 12377  0DFC  0141               	movlb	1	; select bank1
 12378  0DFD  07AC               	addwf	(_i2c1_object^(0+128)+4),f
 12379                           
 12380                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 12381  0DFE  0143               	movlb	3	; select bank3
 12382  0DFF  1311               	bcf	17,6	;volatile
 12383                           
 12384                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 12385  0E00  3005               	movlw	5
 12386  0E01  3189  2125         	fcall	_I2C1_Stop
 12387                           
 12388                           ;mcc_generated_files/i2c1.c: 442:             }
 12389  0E03  0008               	return
 12390  0E04                     i1l3585:	
 12391                           
 12392                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 12393  0E04  3001               	movlw	1
 12394  0E05  0141               	movlb	1	; select bank1
 12395  0E06  02C0               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 12396  0E07  0A40               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 12397  0E08  1D03               	btfss	3,2
 12398  0E09  2E19               	goto	i1l3593
 12399                           
 12400                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 12401  0E0A  3004               	movlw	4
 12402  0E0B  00F2               	movwf	??_I2C1_ISR
 12403  0E0C  0872               	movf	??_I2C1_ISR,w
 12404  0E0D  07C3               	addwf	_p_i2c1_trb_current^(0+128),f
 12405                           
 12406                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 12407  0E0E  3001               	movlw	1
 12408  0E0F  02C4               	subwf	_i2c1_trb_count^(0+128),f
 12409  0E10  1D03               	btfss	3,2
 12410  0E11  2E16               	goto	i1l373
 12411                           
 12412                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 12413  0E12  3000               	movlw	0
 12414  0E13  3189  2125         	fcall	_I2C1_Stop
 12415                           
 12416                           ;mcc_generated_files/i2c1.c: 457:                     }
 12417  0E15  0008               	return
 12418  0E16                     i1l373:	
 12419                           ;mcc_generated_files/i2c1.c: 458:                     else
 12420                           
 12421                           
 12422                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 12423  0E16  0143               	movlb	3	; select bank3
 12424  0E17  1491               	bsf	17,1	;volatile
 12425  0E18  2D88               	goto	i1l3523
 12426  0E19                     i1l3593:	
 12427                           
 12428                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 12429  0E19  0841               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 12430  0E1A  0086               	movwf	6
 12431  0E1B  0187               	clrf	7
 12432  0E1C  0801               	movf	1,w
 12433  0E1D  0143               	movlb	3	; select bank3
 12434  0E1E  008C               	movwf	12	;volatile
 12435  0E1F  3001               	movlw	1
 12436  0E20  00F2               	movwf	??_I2C1_ISR
 12437  0E21  0872               	movf	??_I2C1_ISR,w
 12438  0E22  0141               	movlb	1	; select bank1
 12439  0E23  07C1               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 12440  0E24  0008               	return
 12441  0E25                     i1l376:	
 12442                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 12443                           
 12444                           
 12445                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 12446  0E25  0143               	movlb	3	; select bank3
 12447  0E26  1F11               	btfss	17,6	;volatile
 12448  0E27  2E33               	goto	i1l377
 12449                           
 12450                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 12451  0E28  3001               	movlw	1
 12452  0E29  00F2               	movwf	??_I2C1_ISR
 12453  0E2A  0872               	movf	??_I2C1_ISR,w
 12454  0E2B  0141               	movlb	1	; select bank1
 12455  0E2C  07AC               	addwf	(_i2c1_object^(0+128)+4),f
 12456                           
 12457                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 12458  0E2D  3004               	movlw	4
 12459  0E2E  3189  2125         	fcall	_I2C1_Stop
 12460                           
 12461                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 12462  0E30  0143               	movlb	3	; select bank3
 12463  0E31  1311               	bcf	17,6	;volatile
 12464                           
 12465                           ;mcc_generated_files/i2c1.c: 495:             }
 12466  0E32  0008               	return
 12467  0E33                     i1l377:	
 12468                           ;mcc_generated_files/i2c1.c: 496:             else
 12469                           
 12470                           
 12471                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 12472  0E33  1591               	bsf	17,3	;volatile
 12473                           
 12474                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 12475  0E34  3008               	movlw	8
 12476  0E35  00F2               	movwf	??_I2C1_ISR
 12477  0E36  0872               	movf	??_I2C1_ISR,w
 12478  0E37  0141               	movlb	1	; select bank1
 12479  0E38  00C5               	movwf	_i2c1_state^(0+128)
 12480  0E39  0008               	return
 12481  0E3A                     i1l3605:	
 12482                           
 12483                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 12484  0E3A  3008               	movlw	8
 12485  0E3B  00F2               	movwf	??_I2C1_ISR
 12486  0E3C  0872               	movf	??_I2C1_ISR,w
 12487  0E3D  00C5               	movwf	_i2c1_state^(0+128)
 12488                           
 12489                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 12490  0E3E  0143               	movlb	3	; select bank3
 12491  0E3F  1591               	bsf	17,3	;volatile
 12492                           
 12493                           ;mcc_generated_files/i2c1.c: 513:             break;
 12494  0E40  0008               	return
 12495  0E41                     i1l3609:	
 12496                           
 12497                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 12498  0E41  0143               	movlb	3	; select bank3
 12499  0E42  080C               	movf	12,w	;volatile
 12500  0E43  00F2               	movwf	??_I2C1_ISR
 12501  0E44  0141               	movlb	1	; select bank1
 12502  0E45  0841               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 12503  0E46  0086               	movwf	6
 12504  0E47  0187               	clrf	7
 12505  0E48  0872               	movf	??_I2C1_ISR,w
 12506  0E49  0081               	movwf	1
 12507  0E4A  3001               	movlw	1
 12508  0E4B  00F2               	movwf	??_I2C1_ISR
 12509  0E4C  0872               	movf	??_I2C1_ISR,w
 12510  0E4D  07C1               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 12511                           
 12512                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 12513  0E4E  3001               	movlw	1
 12514  0E4F  02C0               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 12515  0E50  1903               	btfsc	3,2
 12516  0E51  2E5A               	goto	i1l381
 12517                           
 12518                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 12519  0E52  0143               	movlb	3	; select bank3
 12520  0E53  1291               	bcf	17,5	;volatile
 12521                           
 12522                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 12523  0E54  3006               	movlw	6
 12524  0E55  00F2               	movwf	??_I2C1_ISR
 12525  0E56  0872               	movf	??_I2C1_ISR,w
 12526  0E57  0141               	movlb	1	; select bank1
 12527  0E58  00C5               	movwf	_i2c1_state^(0+128)
 12528                           
 12529                           ;mcc_generated_files/i2c1.c: 532:             }
 12530  0E59  2E5E               	goto	i1l3621
 12531  0E5A                     i1l381:	
 12532                           ;mcc_generated_files/i2c1.c: 533:             else
 12533                           
 12534                           
 12535                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 12536  0E5A  0143               	movlb	3	; select bank3
 12537  0E5B  1691               	bsf	17,5	;volatile
 12538                           
 12539                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 12540  0E5C  3187  27EE         	fcall	_I2C1_FunctionComplete
 12541  0E5E                     i1l3621:	
 12542                           
 12543                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 12544  0E5E  0143               	movlb	3	; select bank3
 12545  0E5F  1611               	bsf	17,4	;volatile
 12546                           
 12547                           ;mcc_generated_files/i2c1.c: 545:             break;
 12548  0E60  0008               	return
 12549  0E61                     i1l3623:	
 12550                           
 12551                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 12552  0E61  3000               	movlw	0
 12553  0E62  3189  2125         	fcall	_I2C1_Stop
 12554                           
 12555                           ;mcc_generated_files/i2c1.c: 552:             break;
 12556  0E64  0008               	return
 12557  0E65                     i1l3625:	
 12558                           
 12559                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 12560  0E65  3001               	movlw	1
 12561  0E66  00F2               	movwf	??_I2C1_ISR
 12562  0E67  0872               	movf	??_I2C1_ISR,w
 12563  0E68  07AC               	addwf	(_i2c1_object^(0+128)+4),f
 12564                           
 12565                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 12566  0E69  3006               	movlw	6
 12567  0E6A  3189  2125         	fcall	_I2C1_Stop
 12568                           
 12569                           ;mcc_generated_files/i2c1.c: 560:             break;
 12570  0E6C  0008               	return
 12571  0E6D                     i1l3631:	
 12572  0E6D  0141               	movlb	1	; select bank1
 12573  0E6E  0845               	movf	_i2c1_state^(0+128),w
 12574  0E6F  00F2               	movwf	??_I2C1_ISR
 12575  0E70  01F3               	clrf	??_I2C1_ISR+1
 12576                           
 12577                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12578                           ; Switch size 1, requested type "simple"
 12579                           ; Number of cases is 1, Range of values is 0 to 0
 12580                           ; switch strategies available:
 12581                           ; Name         Instructions Cycles
 12582                           ; simple_byte            4     3 (average)
 12583                           ; direct_byte            8     6 (fixed)
 12584                           ; jumptable            260     6 (fixed)
 12585                           ;	Chosen strategy is simple_byte
 12586  0E71  0873               	movf	??_I2C1_ISR+1,w
 12587  0E72  3A00               	xorlw	0	; case 0
 12588  0E73  1903               	skipnz
 12589  0E74  2E76               	goto	i1l3889
 12590  0E75  2E65               	goto	i1l3625
 12591  0E76                     i1l3889:	
 12592                           
 12593                           ; Switch size 1, requested type "simple"
 12594                           ; Number of cases is 11, Range of values is 0 to 11
 12595                           ; switch strategies available:
 12596                           ; Name         Instructions Cycles
 12597                           ; direct_byte           30     6 (fixed)
 12598                           ; simple_byte           34    18 (average)
 12599                           ; jumptable            260     6 (fixed)
 12600                           ;	Chosen strategy is simple_byte
 12601  0E76  0872               	movf	??_I2C1_ISR,w
 12602  0E77  3A00               	xorlw	0	; case 0
 12603  0E78  1903               	skipnz
 12604  0E79  2D63               	goto	i1l347
 12605  0E7A  3A01               	xorlw	1	; case 1
 12606  0E7B  1903               	skipnz
 12607  0E7C  2D8E               	goto	i1l352
 12608  0E7D  3A03               	xorlw	3	; case 2
 12609  0E7E  1903               	skipnz
 12610  0E7F  2DD7               	goto	i1l3551
 12611  0E80  3A01               	xorlw	1	; case 3
 12612  0E81  1903               	skipnz
 12613  0E82  2DF6               	goto	i1l369
 12614  0E83  3A07               	xorlw	7	; case 4
 12615  0E84  1903               	skipnz
 12616  0E85  2E61               	goto	i1l3623
 12617  0E86  3A01               	xorlw	1	; case 5
 12618  0E87  1903               	skipnz
 12619  0E88  2E25               	goto	i1l376
 12620  0E89  3A03               	xorlw	3	; case 6
 12621  0E8A  1903               	skipnz
 12622  0E8B  2E3A               	goto	i1l3605
 12623  0E8C  3A01               	xorlw	1	; case 7
 12624  0E8D  1903               	skipnz
 12625  0E8E  2E61               	goto	i1l3623
 12626  0E8F  3A0F               	xorlw	15	; case 8
 12627  0E90  1903               	skipnz
 12628  0E91  2E41               	goto	i1l3609
 12629  0E92  3A02               	xorlw	2	; case 10
 12630  0E93  1903               	skipnz
 12631  0E94  2D8F               	goto	i1l353
 12632  0E95  3A01               	xorlw	1	; case 11
 12633  0E96  1903               	skipnz
 12634  0E97  2DB2               	goto	i1l358
 12635  0E98  2E65               	goto	i1l3625
 12636  0E99  0008               	return
 12637  0E9A                     __end_of_I2C1_ISR:	
 12638                           
 12639                           	psect	text37
 12640  0925                     __ptext37:	
 12641 ;; *************** function _I2C1_Stop *****************
 12642 ;; Defined at:
 12643 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 12644 ;; Parameters:    Size  Location     Type
 12645 ;;  completion_c    1    wreg     enum E10866
 12646 ;; Auto vars:     Size  Location     Type
 12647 ;;  completion_c    1    1[COMMON] enum E10866
 12648 ;; Return value:  Size  Location     Type
 12649 ;;                  1    wreg      void 
 12650 ;; Registers used:
 12651 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12652 ;; Tracked objects:
 12653 ;;		On entry : 0/0
 12654 ;;		On exit  : 0/0
 12655 ;;		Unchanged: 0/0
 12656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12659 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12660 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12661 ;;Total ram usage:        2 bytes
 12662 ;; Hardware stack levels used:    1
 12663 ;; This function calls:
 12664 ;;		Nothing
 12665 ;; This function is called by:
 12666 ;;		_I2C1_ISR
 12667 ;; This function uses a non-reentrant model
 12668 ;;
 12669                           
 12670                           
 12671                           ;psect for function _I2C1_Stop
 12672  0925                     _I2C1_Stop:	
 12673                           
 12674                           ;incstack = 0
 12675                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 12676                           ;I2C1_Stop@completion_code stored from wreg
 12677  0925  00F1               	movwf	I2C1_Stop@completion_code
 12678                           
 12679                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 12680  0926  0143               	movlb	3	; select bank3
 12681  0927  1511               	bsf	17,2	;volatile
 12682                           
 12683                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 12684  0928  0141               	movlb	1	; select bank1
 12685  0929  0842               	movf	_p_i2c1_current^(0+128),w
 12686  092A  3E02               	addlw	2
 12687  092B  0086               	movwf	6
 12688  092C  0187               	clrf	7
 12689  092D  0801               	movf	1,w
 12690  092E  1903               	btfsc	3,2
 12691  092F  293B               	goto	i1l2887
 12692                           
 12693                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 12694  0930  0871               	movf	I2C1_Stop@completion_code,w
 12695  0931  00F0               	movwf	??_I2C1_Stop
 12696  0932  0842               	movf	_p_i2c1_current^(0+128),w
 12697  0933  3E02               	addlw	2
 12698  0934  0086               	movwf	6
 12699  0935  0187               	clrf	7
 12700  0936  0801               	movf	1,w
 12701  0937  0086               	movwf	6
 12702  0938  0187               	clrf	7
 12703  0939  0870               	movf	??_I2C1_Stop,w
 12704  093A  0081               	movwf	1
 12705  093B                     i1l2887:	
 12706                           
 12707                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 12708  093B  01C5               	clrf	_i2c1_state^(0+128)
 12709  093C  0008               	return
 12710  093D                     __end_of_I2C1_Stop:	
 12711                           
 12712                           	psect	text38
 12713  07EE                     __ptext38:	
 12714 ;; *************** function _I2C1_FunctionComplete *****************
 12715 ;; Defined at:
 12716 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 12717 ;; Parameters:    Size  Location     Type
 12718 ;;		None
 12719 ;; Auto vars:     Size  Location     Type
 12720 ;;		None
 12721 ;; Return value:  Size  Location     Type
 12722 ;;                  1    wreg      void 
 12723 ;; Registers used:
 12724 ;;		wreg, status,2, status,0
 12725 ;; Tracked objects:
 12726 ;;		On entry : 0/0
 12727 ;;		On exit  : 0/0
 12728 ;;		Unchanged: 0/0
 12729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12733 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12734 ;;Total ram usage:        1 bytes
 12735 ;; Hardware stack levels used:    1
 12736 ;; This function calls:
 12737 ;;		Nothing
 12738 ;; This function is called by:
 12739 ;;		_I2C1_ISR
 12740 ;; This function uses a non-reentrant model
 12741 ;;
 12742                           
 12743                           
 12744                           ;psect for function _I2C1_FunctionComplete
 12745  07EE                     _I2C1_FunctionComplete:	
 12746                           
 12747                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 12748                           
 12749                           ;incstack = 0
 12750                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 12751  07EE  3004               	movlw	4
 12752  07EF  00F0               	movwf	??_I2C1_FunctionComplete
 12753  07F0  0870               	movf	??_I2C1_FunctionComplete,w
 12754  07F1  0141               	movlb	1	; select bank1
 12755  07F2  07C3               	addwf	_p_i2c1_trb_current^(0+128),f
 12756                           
 12757                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 12758  07F3  3001               	movlw	1
 12759  07F4  02C4               	subwf	_i2c1_trb_count^(0+128),f
 12760  07F5  1D03               	btfss	3,2
 12761  07F6  2FFC               	goto	i1l388
 12762                           
 12763                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 12764  07F7  3004               	movlw	4
 12765  07F8  00F0               	movwf	??_I2C1_FunctionComplete
 12766  07F9  0870               	movf	??_I2C1_FunctionComplete,w
 12767  07FA  00C5               	movwf	_i2c1_state^(0+128)
 12768                           
 12769                           ;mcc_generated_files/i2c1.c: 575:     }
 12770  07FB  0008               	return
 12771  07FC                     i1l388:	
 12772                           ;mcc_generated_files/i2c1.c: 576:     else
 12773                           
 12774                           
 12775                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 12776  07FC  01C5               	clrf	_i2c1_state^(0+128)
 12777  07FD  0AC5               	incf	_i2c1_state^(0+128),f
 12778  07FE  0008               	return
 12779  07FF                     __end_of_I2C1_FunctionComplete:	
 12780                           
 12781                           	psect	text39
 12782  0877                     __ptext39:	
 12783 ;; *************** function _I2C1_BusCollisionISR *****************
 12784 ;; Defined at:
 12785 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 12786 ;; Parameters:    Size  Location     Type
 12787 ;;		None
 12788 ;; Auto vars:     Size  Location     Type
 12789 ;;		None
 12790 ;; Return value:  Size  Location     Type
 12791 ;;                  1    wreg      void 
 12792 ;; Registers used:
 12793 ;;		None
 12794 ;; Tracked objects:
 12795 ;;		On entry : 0/0
 12796 ;;		On exit  : 0/0
 12797 ;;		Unchanged: 0/0
 12798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12803 ;;Total ram usage:        0 bytes
 12804 ;; Hardware stack levels used:    1
 12805 ;; This function calls:
 12806 ;;		Nothing
 12807 ;; This function is called by:
 12808 ;;		_INTERRUPT_InterruptManager
 12809 ;; This function uses a non-reentrant model
 12810 ;;
 12811                           
 12812                           
 12813                           ;psect for function _I2C1_BusCollisionISR
 12814  0877                     _I2C1_BusCollisionISR:	
 12815                           
 12816                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 12817                           
 12818                           ;incstack = 0
 12819                           ; Regs used in _I2C1_BusCollisionISR: []
 12820  0877  014E               	movlb	14	; select bank14
 12821  0878  108F               	bcf	15,1	;volatile
 12822  0879  0008               	return
 12823  087A                     __end_of_I2C1_BusCollisionISR:	
 12824  007E                     btemp	set	126	;btemp
 12825  007E                     int$flags	set	126
 12826  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    96
    Data        2
    BSS         110
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     80      80
    BANK1            80     17      78
    BANK2            80      0      48
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           79      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    S31$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    S455$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    S467$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    S467$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), NULL(NULL[0]), 

    S478$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    S478$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_LED_setColor
    _TM1650_init->_writeData
    _SYSTEM_Initialize->_I2C1_Initialize
    _LED_setColor->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _CONTROLLER_init->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_TM1650_setDigit
    ___lwdiv->___lwmod
    _TM1650_setDigit->_writeData
    _writeData->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LED_setColor

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   57346
                                              6 BANK1     11    11      0
                       _BUTTONS_init
                       _BUTTONS_task
                         _CLOCK_init
                    _CONTROLLER_init
                    _CONTROLLER_task
                           _LED_init
                       _LED_setColor
                _TM1650_fastPrintNum
                        _TM1650_init
                          _UART_init
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0    2017
                  _SYSTEM_Initialize
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0       0
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LED_setColor                                         9     6      3    6625
                                             77 BANK0      3     0      3
                                              0 BANK1      6     6      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     702
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     609
                                             66 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3025
                                             40 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1881
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      0     0      0   23694
                  _BUTTONS_isClicked
                     _BUTTONS_isHeld
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (2) _address_inc                                          0     0      0   11748
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _address_dec                                          0     0      0   11748
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isHeld                                       1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     110
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_init                                      0     0      0   11748
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (1) _TM1650_fastPrintNum                                 13    11      2   11748
                                             27 BANK0     13    11      2
                    _TM1650_setDigit
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    3199
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1682
                                              6 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _TM1650_setDigit                                      6     4      2    5365
                                             21 BANK0      6     4      2
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _writeData                                            7     6      1    2017
                                             14 BANK0      7     6      1
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWrite                                     7     3      4    1200
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWriteTRBBuild                             7     3      4     393
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterTRBInsert                                 4     2      2     436
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (5) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     642
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (2) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0     872
                                              5 BANK0      1     1      0
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3     872
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           5     5      0      45
                                              6 COMMON     5     5      0
               _I2C1_BusCollisionISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (10) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (11) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BUTTONS_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_init
   _CONTROLLER_init
     _TM1650_fastPrintNum
       _TM1650_setDigit
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
   _CONTROLLER_task
     _BUTTONS_isClicked
     _BUTTONS_isHeld
     _address_dec
       _TM1650_fastPrintNum
         _TM1650_setDigit
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     _address_inc
       _TM1650_fastPrintNum
         _TM1650_setDigit
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
   _LED_init
   _LED_setColor
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _TM1650_fastPrintNum
     _TM1650_setDigit
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _TM1650_init
     _SYSTEM_Initialize
       _I2C1_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
     _writeData
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
           _I2C1_WaitForLastPacketToComplete
         _I2C1_MasterWriteTRBBuild
   _UART_init

 _INTERRUPT_InterruptManager (ROOT)
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      DC       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     11      4E       8       97.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      30      10       60.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              4F      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0      DC      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Apr 18 20:51:52 2019

                 _eusart1TxBufferRemaining 00C9                               ___fldiv@aexp 0047  
                             ___fldiv@bexp 0046                               ___fldiv@sign 003F  
                             ?_TM1650_init 0070                                         _up 00CF  
                      __Umul8_16@word_mpld 0026                                        l527 0B56  
                                      l670 074A                                        l671 0763  
                                      l672 078C                                        l673 07B4  
                                      l674 07D7                    __size_of_PMD_Initialize 000A  
                                      wreg 0009                               ___flmul@aexp 005A  
                             ___flmul@bexp 005B                               ___flmul@sign 0055  
                             ___flmul@temp 0060                               ___flmul@prod 005C  
                             _BAUD1CONbits 011F                           __end_of_I2C1_ISR 0E9A  
                             ___fltol@exp1 006C                                       l1090 0C9E  
                                     l1330 0D0E                                       l1324 0CD8  
                                     l3013 05B6                                       l1270 06ED  
                                     l1246 05C1                                       l1343 09C6  
                                     l3113 06E9                                       l3033 05EC  
                                     l3017 05B9                                       l1337 0D22  
                                     l1338 0D2C                                       l1267 06C8  
                                     l3027 05E0                                       l1268 06E0  
                                     l3053 0633                                       l3061 0615  
                                     l3133 0366                                       l3063 0651  
                                     l3223 0501                                       l3215 04D3  
                                     l3151 0389                                       l3135 0368  
                                     l3241 0541                                       l3217 04EA  
                                     l3153 038B                                       l3137 0370  
                                     l1298 056B                                       l3059 064C  
                                     l3227 0503                                       l3163 03A1  
                                     l3155 0393                                       l3085 0685  
                                     l3077 0657                                       l3237 052C  
                                     l3423 0744                                       l3079 066E  
                                     l3247 0558                                       l3271 0CE7  
                                     l3417 0714                                       l2641 0BDA  
                                     l2705 0ACA                                       l2721 0A4E  
                                     l3089 0687                                       l3265 0CD0  
                                     l2627 087A                                       l2723 0A5A  
                                     l2731 0A6F                                       l3451 09FE  
                                     l3099 06B0                                       l3275 0CEB  
                                     l2645 0BE1                                       l2709 0AD3  
                                     l3461 0A14                                       l3453 0A01  
                                     l3285 0D20                                       l3277 0CFB  
                                     l2647 0BE7                                       l2663 09F0  
                                     l2671 0B20                                       l2727 0A66  
                                     l3287 0D13                                       l2657 0A40  
                                     l2673 0B28                                       l2681 0B40  
                                     l2761 0136                                       l2913 08F8  
                                     l2675 0B30                                       l2747 00C1  
                                     l2923 08D4                                       l2931 0919  
                                     l3459 0A11                                       l3299 0D47  
                                     l3651 0C06                                       l2677 0B38  
                                     l2941 0907                                       l2933 091D  
                                     l2775 01F8                                       l2863 09C0  
                                     l2697 0AAC                                       l2945 0C5E  
                                     l2699 0AB8                                       l2939 0903  
                                     l2789 0325                                       l2965 0C8C  
                                     l2949 0C67                                       l2975 0CAB  
                                     l2967 0C9A                                       l2993 0592  
                                     l2997 0595                                       l3887 0B48  
                                     l2999 059D                                       u2025 09C7  
                                     u2115 0C70                                       _LATA 0018  
                                     _LATB 0019                                       _LATC 001A  
                                     u2305 0624                                       u2145 0C8D  
                                     u2325 062D                                       u2335 0641  
                                     u2175 0CA2                                       u2365 065A  
                                     u2605 04B3                                       u2455 069E  
                                     u2295 061D                                       u2615 04C2  
                                     u1825 0AAF                                       u2465 06B9  
                                     u2385 0663                                       u2625 04D6  
                                     u1915 0A60                                       u2475 06D2  
                                     u2715 051A                                       u1845 0AB9  
                                     u1925 0A67                                       u2725 0535  
                                     u2645 04DF                                       u2805 0D08  
                                     u1855 0AC3                                       u2735 054B  
                                     u2575 0417                                       u2905 0717  
                                     u1865 0ACB                                       u2585 0446  
                                     u2825 0D1A                                       u2914 0736  
                                     u2915 0735                                       u2595 049C  
                                     _PMD0 0796                                       _PMD1 0797  
                                     _PMD2 0798                                       u1895 0A51  
                                     _PMD3 0799                                       _PMD4 079A  
                                     u2865 0D34                                       u2785 0CF4  
                                     _PMD5 079B                                       _PMD6 079C  
                                     _PMD7 079D                                       _WPUA 1F39  
                                     _WPUB 1F44                                       _WPUC 1F4F  
                            ?_BUTTONS_init 0070                              ?_BUTTONS_task 0070  
                                     _main 0BF4                                       _down 00CE  
                                     _init 0975                                       _menu 00CC  
                                     fsr0h 0005                                       fsr1h 0007  
                                     indf0 0000                                       fsr0l 0004  
                                     indf1 0001                                       fsr1l 0006  
                   ??_I2C1_MasterTRBInsert 0022                                       btemp 007E  
                                     start 0052                            ___fldiv@new_exp 0040  
                  __end_of_TM1650_setDigit 0B57                        __size_of_CLOCK_init 0010  
                     __size_of_address_dec 0015                       __size_of_address_inc 0016  
           I2C1_MasterWriteTRBBuild@length 0021                             _BUTTONS_isHeld 08C7  
                               _i2c1_state 00C5             __size_of_OSCILLATOR_Initialize 0009  
                I2C1_MasterTRBInsert@count 0023              __end_of_OSCILLATOR_Initialize 0899  
                I2C1_MasterTRBInsert@pflag 0021                      _eusart1RxStatusBuffer 00A0  
                         __end_of_LED_init 0B0E                              ___fltol@sign1 006B  
                                    ?_main 0070                                      ?_init 0020  
                          __end_of___fldiv 06F2                          __end_of_I2C1_Stop 093D  
                            __CFG_WDTE$OFF 0000                            __end_of___flmul 0578  
                          __end_of___fltol 0CBA                            __end_of___lwdiv 0AD8  
                                    i1l240 0050                                      i1l233 0040  
                                    i1l235 0047                                      i1l352 0D8E  
                                    i1l353 0D8F                            __end_of___lwmod 0A74  
                                    i1l347 0D63                                      i1l381 0E5A  
                                    i1l373 0E16                                      i1l358 0DB2  
                                    i1l359 0DBE                                      i1l376 0E25  
                                    i1l377 0E33                                      i1l369 0DF6  
                                    i1l388 07FC                                      _OSCEN 0891  
                                    _TMR0H 059D                                      _PORTA 000C  
                                    _PORTC 000E                                      _TRISA 0012  
                                    _TRISB 0013                                      _TRISC 0014  
             __end_of_I2C1_BusCollisionISR 087A                       _EUSART1_Transmit_ISR 0000  
                        ??_I2C1_Initialize 0020                         __size_of_UART_init 001C  
                                    _enter 00CD                                      _count 00B9  
                                    _input 25EF                                      _point 00B7  
                           ??_BUTTONS_init 0025                             ??_BUTTONS_task 0022  
                                    status 0003                                      wtemp0 007E  
       _EUSART1_DefaultFramingErrorHandler 0000            I2C1_MasterWriteTRBBuild@address 0022  
                   __end_of_BUTTONS_isHeld 08D6                            __initialization 0054  
                     TM1650_setDigit@digit 0039                      I2C1_MasterWrite@pdata 002D  
                    I2C1_MasterWrite@pflag 002A                               __end_of_main 0C54  
                             __end_of_init 0995                            _CONTROLLER_init 087F  
                          _CONTROLLER_task 09F6                              ?_LED_setColor 006D  
                    __end_of_CLOCK_getTime 0890                ?_INTERRUPT_InterruptManager 0070  
                 TM1650_setDigit@charTable 1000                                _i2c1_object 00A8  
                                   ??_main 00E3                                     ??_init 0023  
                                   _CCPR1H 030D                                     _CCPR2H 0311  
                                   _CCPR1L 030C                                     _CCPR3H 0315  
                                   _CCPR2L 0310                                     _CCPR4H 0319  
                                   _CCPR3L 0314                                     _CCPR4L 0318  
                                   _ANSELA 1F38                                     _ANSELB 1F43  
                                   _ANSELC 1F4E                                     _RC1REG 0119  
                                   _RA4PPS 1F14                                     _RA5PPS 1F15  
                                   _RC1STA 011D                                     _RC3PPS 1F23  
                                   _RC4PPS 1F24                                     _RB7PPS 1F1F  
                                   _ODCONA 1F3A                                     _ODCONB 1F45  
                                   _ODCONC 1F50                                     _RC6PPS 1F26  
                                   _RC7PPS 1F27                                     i1l3531 0D9B  
                                   i1l3523 0D88                                     i1l3621 0E5E  
                                   i1l3605 0E3A                                     i1l3623 0E61  
                                   i1l3551 0DD7                                     i1l3519 0D81  
                                   i1l3631 0E6D                                     i1l3625 0E65  
                                   i1l3609 0E41                                     i1l3537 0DAD  
                                   i1l3571 0DEB                                     i1l3593 0E19  
                                   i1l3585 0E04                                     i1l2887 093B  
                                   i1l3793 0036                                     i1l3785 0015  
                                   i1l3779 000B                                     i1l3889 0E76  
                                   u335_25 001F                                     _SP1BRG 011B  
                                   _OSCFRQ 0893                                     _RX1PPS 1ECB  
                                   _TX1REG 011A                                     _TX1STA 011E  
                                   _TRISB4 009C                                     _TRISC3 00A3  
                                   _TRISC4 00A4                                     _TRISC6 00A6  
                                   _TRISC7 00A7                           __end_of___xxtofl 0D50  
                        ?_I2C1_MasterWrite 0027                           ?_TM1650_setDigit 0035  
                          ?_BUTTONS_isHeld 0070                         ??_I2C1_MasterWrite 002B  
                           _p_i2c1_current 00C2                             ??_LED_setColor 00DD  
              __end_of_TM1650_fastPrintNum 034C                          __end_of_UART_init 0975  
                                ??___fldiv 0036                                  ??___flmul 0050  
                                ??___fltol 0066                                  ??___lwdiv 002A  
                                ??___lwmod 0024                 ??_I2C1_MasterWriteTRBBuild 0024  
                                ?_I2C1_ISR 0070                       __size_of_TM1650_init 000C  
                           _PMD_Initialize 0899                               ??_CLOCK_init 0020  
                             __pdataCOMMON 007B                         __size_of__Umul8_16 0020  
            I2C1_MasterWriteTRBBuild@pdata 0020                            _eusart1RxBuffer 0120  
                          _eusart1TxBuffer 0128                               ___xxtofl@arg 002A  
                             ___xxtofl@exp 0029                          _SYSTEM_Initialize 08A3  
                             ___xxtofl@val 0020                    __end_of__initialization 007D  
                  __end_of_CONTROLLER_init 0887                    __end_of_CONTROLLER_task 0A1D  
                       ?_SYSTEM_Initialize 0070                                  ?_LED_init 0070  
                               ___fltol@f1 0062                             _i2c1_trb_count 00C4  
                    _I2C1_FunctionComplete 07EE                       _I2C1_BusCollisionISR 0877  
                           __pcstackCOMMON 0070                         __end_of_CLOCK_init 08E6  
                   I2C1_MasterWrite@length 0027                        ??_SYSTEM_Initialize 0021  
                               ??_I2C1_ISR 0072                       __end_of_BUTTONS_init 0BA2  
                   __end_of_PMD_Initialize 08A3                   _TM1650_fastPrintNum$2182 0046  
                 _TM1650_fastPrintNum$2183 0040                   _TM1650_fastPrintNum$2184 003E  
                     __end_of_BUTTONS_task 07EE                  __end_of_SYSTEM_Initialize 08AF  
                            _eusart1RxHead 007D                              _eusart1TxHead 00CB  
                            _eusart1RxTail 00C8                                 __pbssBANK1 00A0  
                               __pbssBANK2 0120                              _eusart1TxTail 00CA  
        _EUSART1_TxDefaultInterruptHandler 00BD                                 ??_LED_init 0020  
                        __end_of__Umul8_16 09D5                      ?_I2C1_BusCollisionISR 0070  
                               __pmaintext 0BF4                           writeData@address 0032  
                               __pintentry 0004                            _I2C1_Initialize 093D  
                            BUTTONS_task@i 0025                            ?_PMD_Initialize 0070  
                                ?___xxtofl 0020                                    _SP1BRGH 011C  
                                  _SP1BRGL 011B                                    _OSCCON1 088D  
                                  _OSCCON3 088F                                  _I2C1_Stop 0925  
                                  _OSCTUNE 0892                                    _SSP1ADD 018D  
                                  _SLRCONA 1F3B                                    _SLRCONB 1F46  
                                  _SLRCONC 1F51                                    _SSP1BUF 018C  
                     __end_of_LED_setColor 1000              I2C1_MasterTRBInsert@ptrb_list 0020  
                       __size_of_writeData 0021                              ??_address_dec 0048  
                         ?_CONTROLLER_init 0070                              ??_address_inc 0048  
                         ?_CONTROLLER_task 0070                            BUTTONS_task@btn 0028  
                   ?_I2C1_FunctionComplete 0070              __size_of_I2C1_MasterTRBInsert 0052  
                       _p_i2c1_trb_current 00C3                                    ___fldiv 0578  
                                  ___flmul 034C                                    ___fltol 0C54  
                                  ___lwdiv 0AA3                                    ___lwmod 0A47  
                                  _address 007B                                    __ptext1 0959  
                                  __ptext2 08AF                                    __ptext3 08A3  
                                  __ptext4 0899                                    __ptext5 0A74  
                                  __ptext6 0890                                    __ptext7 093D  
                                  __ptext8 0E9A                                    __ptext9 0CBA  
                    _OSCILLATOR_Initialize 0890                                  _T2CONbits 028E  
                                  _buttons 0130                                 ??___xxtofl 0024  
                 ??_PIN_MANAGER_Initialize 0020                                 ?_I2C1_Stop 0070  
               __size_of_SYSTEM_Initialize 000C                       I2C1_ISR@pi2c_buf_ptr 00C1  
                                  clrloop0 08BC                       end_of_initialization 007D  
                                  init@btn 0024                                    init@pin 0022  
                         ??_BUTTONS_isHeld 0020                _EUSART1_OverrunErrorHandler 00B1  
                   ??_I2C1_BusCollisionISR 0070                    __end_of_I2C1_Initialize 0959  
                    __size_of_BUTTONS_init 004B                      __size_of_BUTTONS_task 00FC  
                      __end_of_address_dec 090F                        __end_of_address_inc 0925  
                                _UART_init 0959                  __size_of_I2C1_MasterWrite 002A  
                        __size_of_I2C1_ISR 014A                          __end_of_writeData 09F6  
                            ___xxtofl@sign 0028                                ___fldiv@grs 0042  
                              ___fldiv@rem 003B                           __CFG_FEXTOSC$OFF 0000  
        I2C1_ISR@i2c_10bit_address_restart 00BF                     __size_of_CLOCK_getTime 0009  
                              ___flmul@grs 0056                               _BUTTONS_init 0B57  
                             _BUTTONS_task 06F2                                _CCP1CONbits 030E  
                              _CCP2CONbits 0312                                _CCP3CONbits 0316  
                              _CCP4CONbits 031A                    I2C1_MasterWrite@address 0028  
                        __size_of_LED_init 0036                              ??_TM1650_init 0035  
                  I2C1_MasterWrite@trBlock 00D4                              __pidataCOMMON 0002  
                 I2C1_Stop@completion_code 0071                   __size_of_TM1650_setDigit 0049  
                               ?_UART_init 0070                     ?_OSCILLATOR_Initialize 0070  
             __size_of_TM1650_fastPrintNum 02CB                      __size_of_LED_setColor 0166  
                      start_initialization 0054           INTERRUPT_InterruptManager@dataIn 007A  
                              ??_I2C1_Stop 0070            __size_of_PIN_MANAGER_Initialize 002F  
                      TM1650_setDigit@data 003A          __size_of_I2C1_MasterWriteTRBBuild 0020  
                ?_I2C1_MasterWriteTRBBuild 0020                          _BUTTONS_isClicked 08E6  
                       ?_BUTTONS_isClicked 0070                                _address_dec 08FA  
                              _address_inc 090F                           ?_I2C1_Initialize 0070  
                      ??_BUTTONS_isClicked 0020                           ??_PMD_Initialize 0020  
                             _LED_setColor 0E9A                                  __Umul8_16 09B5  
                            _CLOCK_getTime 0887               I2C1_MasterWriteTRBBuild@ptrb 0026  
                           _eusart1RxCount 00C7                                  ___fldiv@a 002E  
                                ___fldiv@b 0032                                __pbssBIGRAM 25EF  
                      __end_of_TM1650_init 08BB                                  ___flmul@a 004C  
                                ___flmul@b 0048                                __pbssCOMMON 007D  
        _EUSART1_RxDefaultInterruptHandler 00BB                                  ___latbits 0003  
                            __pcstackBANK0 0020                              __pcstackBANK1 00DD  
                            _i2c1_tr_queue 00D8                          __size_of___xxtofl 0096  
                __end_of_BUTTONS_isClicked 08FA                    ??_I2C1_FunctionComplete 0070  
                         ___lwdiv@dividend 0028                     _PIN_MANAGER_Initialize 0A74  
                                 ?___fldiv 002E                                   ?___flmul 0048  
                                 ?___fltol 0062                                 ?__Umul8_16 0020  
                                 ?___lwdiv 0026                                   ?___lwmod 0020  
                           ?_CLOCK_getTime 0020                                   _I2C1_ISR 0D50  
             ??_INTERRUPT_InterruptManager 0076                            writeData@status 0034  
                              ??_UART_init 0020                           _I2C1_MasterWrite 0A1D  
                                 _BAUD1CON 011F               __end_of_I2C1_MasterTRBInsert 0BF4  
       _EUSART1_DefaultOverrunErrorHandler 0000                       _EUSART1_ErrorHandler 00AF  
                        ??_TM1650_setDigit 0037                           ___lwdiv@quotient 002B  
                            LED_setColor@B 006E                              LED_setColor@G 006D  
                            LED_setColor@R 00E2                              LED_setColor@W 006F  
                                 _T2CLKCON 0290   __end_of_I2C1_WaitForLastPacketToComplete 087F  
__size_of_I2C1_WaitForLastPacketToComplete 0005         ??_I2C1_WaitForLastPacketToComplete 0020  
        ?_I2C1_WaitForLastPacketToComplete 0070           _I2C1_WaitForLastPacketToComplete 087A  
                   I2C1_MasterRead@trBlock 00D0                    BUTTONS_isClicked@button 0020  
                                clear_ram0 08BB                                   _PIE0bits 0716  
                                 _LED_init 0AD8                                   _PIE3bits 0719  
      __size_of_INTERRUPT_InterruptManager 004E                                   _PIR0bits 070C  
                                 _PIR3bits 070F                                   _RX1DTPPS 1ECB  
                 TM1650_fastPrintNum@array 0042                                   _SSP1CON1 0190  
                                 _SSP1CON3 0192                                   _SSP1STAT 018F  
                      writeData@dataToSend 0033                   __size_of_CONTROLLER_init 0008  
                 __size_of_CONTROLLER_task 0027                                _TM1650_init 08AF  
                                _writeData 09D5                 __size_of_BUTTONS_isClicked 0014  
                       TM1650_setDigit@num 0035                           BUTTONS_task@time 0026  
                      _TM1650_fastPrintNum 0081              __size_of_I2C1_BusCollisionISR 0003  
                          ??_CLOCK_getTime 0022                     I2C1_ISR@i2c_bytes_left 00C0  
                  ??_OSCILLATOR_Initialize 0020                                ??__Umul8_16 0022  
                         __size_of___fldiv 017A                           __size_of___flmul 022C  
                         __size_of___fltol 0066                           __size_of___lwdiv 0035  
                         __size_of___lwmod 002D           __end_of_I2C1_MasterWriteTRBBuild 09B5  
                     ?_TM1650_fastPrintNum 003B                _EUSART1_DefaultErrorHandler 0000  
                               _CLOCK_init 08D6                                   ___xxtofl 0CBA  
                               _T0CON0bits 059E                                 _T0CON1bits 059F  
                          ___lwdiv@divisor 0026                        I2C1_ISR@i2c_address 00DB  
                          ___lwdiv@counter 002D                                 ?_writeData 002E  
                                 __ptext10 0C54                                   __ptext11 034C  
                                 __ptext20 087F                                   __ptext12 09B5  
                                 __ptext21 0081                                   __ptext13 0578  
                                 __ptext30 08D6                                   __ptext22 0A47  
                                 __ptext14 0AD8                                   __ptext31 06F2  
                                 __ptext23 0AA3                                   __ptext15 09F6  
                                 __ptext32 0887                                   __ptext24 0B0E  
                                 __ptext16 090F                                   __ptext33 0B57  
                                 __ptext25 09D5                                   __ptext17 08FA  
                                 __ptext34 0975                                   __ptext26 0A1D  
                                 __ptext18 08C7                                   __ptext27 0995  
                                 __ptext19 08E6                                   __ptext36 0D50  
                                 __ptext28 0BA2                                   __ptext37 0925  
                                 __ptext29 087A                                   __ptext38 07EE  
                                 __ptext39 0877                               _SSP1CON1bits 0190  
                             _SSP1CON2bits 0191                       BUTTONS_isHeld@button 0020  
                                 _lastTime 00AD                              __size_of_main 0060  
                            __size_of_init 0020                               ?_address_dec 0070  
                             ?_address_inc 0070                       _I2C1_MasterTRBInsert 0BA2  
                               _RC1STAbits 011D                                   int$flags 007E  
                  __size_of_BUTTONS_isHeld 000F         __end_of_INTERRUPT_InterruptManager 0052  
               _INTERRUPT_InterruptManager 0004                _EUSART1_FramingErrorHandler 00B3  
                      _EUSART1_Receive_ISR 0000                      ??_TM1650_fastPrintNum 003D  
                         _ClockCurrentTime 00B5                          TM1650_setDigit@dp 0036  
                               _INTCONbits 000B                          ??_CONTROLLER_init 0048  
                        ??_CONTROLLER_task 0048                                   init@port 0020  
                                 intlevel1 0000                              writeData@data 002E  
                         ___lwmod@dividend 0022                    ?_PIN_MANAGER_Initialize 0070  
                 __end_of_I2C1_MasterWrite 0A47             __size_of_I2C1_FunctionComplete 0011  
            __end_of_I2C1_FunctionComplete 07FF                      ?_I2C1_MasterTRBInsert 0020  
                   TM1650_fastPrintNum@num 003B                            _TM1650_setDigit 0B0E  
                 __size_of_I2C1_Initialize 001C                         _eusart1RxLastError 00C6  
                            __pstringtext1 1000                     __Umul8_16@multiplicand 0020  
                               _SSP1DATPPS 1EC6                                 _SSP1CLKPPS 1EC5  
                          ___lwmod@divisor 0020                                ?_CLOCK_init 0070  
                          ___lwmod@counter 0025                   _I2C1_MasterWriteTRBBuild 0995  
                              ??_writeData 002F                                 _TX1STAbits 011E  
           __end_of_PIN_MANAGER_Initialize 0AA3                         __size_of_I2C1_Stop 0018  
                     __Umul8_16@multiplier 0028                          __Umul8_16@product 0024  
         __end_ofTM1650_setDigit@charTable 1060  
