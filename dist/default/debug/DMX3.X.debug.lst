

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Apr 26 19:18:44 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	intentry,global,class=CODE,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,delta=2
    82                           	dabs	1,0xCA0,32
    83                           	dabs	1,0xC20,80
    84                           	dabs	1,0xBA0,80
    85                           	dabs	1,0xB20,80
    86                           	dabs	1,0xAA0,80
    87                           	dabs	1,0xA20,80
    88                           	dabs	1,0x9A0,80
    89                           	dabs	1,0x96F,1
    90                           	dabs	1,0x25EF,0,_input
    91                           	dabs	1,0x7E,2
    92  0000                     
    93                           ; Version 2.05
    94                           ; Generated 20/12/2018 GMT
    95                           ; 
    96                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    97                           ; All rights reserved.
    98                           ; 
    99                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   100                           ; 
   101                           ; Redistribution and use in source and binary forms, with or without modification, are
   102                           ; permitted provided that the following conditions are met:
   103                           ; 
   104                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   105                           ;        conditions and the following disclaimer.
   106                           ; 
   107                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   108                           ;        of conditions and the following disclaimer in the documentation and/or other
   109                           ;        materials provided with the distribution.
   110                           ; 
   111                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   112                           ;        software without specific prior written permission.
   113                           ; 
   114                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   115                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   116                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   117                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   118                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   119                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   120                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   121                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   122                           ; 
   123                           ; 
   124                           ; Code-generator required, PIC16F18446 Definitions
   125                           ; 
   126                           ; SFR Addresses
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  008C                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0090                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0094                     	;# 
   162  0095                     	;# 
   163  0096                     	;# 
   164  0096                     	;# 
   165  0097                     	;# 
   166  0098                     	;# 
   167  0099                     	;# 
   168  009A                     	;# 
   169  009B                     	;# 
   170  009B                     	;# 
   171  009C                     	;# 
   172  009D                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  009F                     	;# 
   176  010C                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  010F                     	;# 
   182  0110                     	;# 
   183  0111                     	;# 
   184  0112                     	;# 
   185  0113                     	;# 
   186  0114                     	;# 
   187  0115                     	;# 
   188  0116                     	;# 
   189  0117                     	;# 
   190  0118                     	;# 
   191  0119                     	;# 
   192  0119                     	;# 
   193  0119                     	;# 
   194  011A                     	;# 
   195  011A                     	;# 
   196  011A                     	;# 
   197  011B                     	;# 
   198  011B                     	;# 
   199  011B                     	;# 
   200  011B                     	;# 
   201  011B                     	;# 
   202  011C                     	;# 
   203  011C                     	;# 
   204  011C                     	;# 
   205  011D                     	;# 
   206  011D                     	;# 
   207  011D                     	;# 
   208  011E                     	;# 
   209  011E                     	;# 
   210  011E                     	;# 
   211  011F                     	;# 
   212  011F                     	;# 
   213  011F                     	;# 
   214  011F                     	;# 
   215  011F                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  018E                     	;# 
   219  018F                     	;# 
   220  0190                     	;# 
   221  0191                     	;# 
   222  0192                     	;# 
   223  0196                     	;# 
   224  0197                     	;# 
   225  0198                     	;# 
   226  0199                     	;# 
   227  019A                     	;# 
   228  019B                     	;# 
   229  019C                     	;# 
   230  020C                     	;# 
   231  020D                     	;# 
   232  020E                     	;# 
   233  020E                     	;# 
   234  020F                     	;# 
   235  020F                     	;# 
   236  0210                     	;# 
   237  0210                     	;# 
   238  0211                     	;# 
   239  0211                     	;# 
   240  0212                     	;# 
   241  0213                     	;# 
   242  0214                     	;# 
   243  0214                     	;# 
   244  0215                     	;# 
   245  0215                     	;# 
   246  0216                     	;# 
   247  0216                     	;# 
   248  0217                     	;# 
   249  0217                     	;# 
   250  0218                     	;# 
   251  0219                     	;# 
   252  021A                     	;# 
   253  021A                     	;# 
   254  021B                     	;# 
   255  021B                     	;# 
   256  021C                     	;# 
   257  021C                     	;# 
   258  021D                     	;# 
   259  021D                     	;# 
   260  021E                     	;# 
   261  021F                     	;# 
   262  028C                     	;# 
   263  028C                     	;# 
   264  028D                     	;# 
   265  028D                     	;# 
   266  028E                     	;# 
   267  028F                     	;# 
   268  0290                     	;# 
   269  0291                     	;# 
   270  0292                     	;# 
   271  0292                     	;# 
   272  0293                     	;# 
   273  0293                     	;# 
   274  0294                     	;# 
   275  0295                     	;# 
   276  0296                     	;# 
   277  0297                     	;# 
   278  0298                     	;# 
   279  0298                     	;# 
   280  0299                     	;# 
   281  0299                     	;# 
   282  029A                     	;# 
   283  029B                     	;# 
   284  029C                     	;# 
   285  029D                     	;# 
   286  029F                     	;# 
   287  030C                     	;# 
   288  030C                     	;# 
   289  030D                     	;# 
   290  030E                     	;# 
   291  030F                     	;# 
   292  0310                     	;# 
   293  0310                     	;# 
   294  0311                     	;# 
   295  0312                     	;# 
   296  0313                     	;# 
   297  0314                     	;# 
   298  0314                     	;# 
   299  0315                     	;# 
   300  0316                     	;# 
   301  0317                     	;# 
   302  0318                     	;# 
   303  0318                     	;# 
   304  0319                     	;# 
   305  031A                     	;# 
   306  031B                     	;# 
   307  038C                     	;# 
   308  038C                     	;# 
   309  038D                     	;# 
   310  038E                     	;# 
   311  0390                     	;# 
   312  0390                     	;# 
   313  0391                     	;# 
   314  0392                     	;# 
   315  048C                     	;# 
   316  048C                     	;# 
   317  048D                     	;# 
   318  048E                     	;# 
   319  048F                     	;# 
   320  048F                     	;# 
   321  0490                     	;# 
   322  0491                     	;# 
   323  0492                     	;# 
   324  0492                     	;# 
   325  0493                     	;# 
   326  0494                     	;# 
   327  0495                     	;# 
   328  0495                     	;# 
   329  0496                     	;# 
   330  0497                     	;# 
   331  0498                     	;# 
   332  0499                     	;# 
   333  049A                     	;# 
   334  049B                     	;# 
   335  049C                     	;# 
   336  049D                     	;# 
   337  058C                     	;# 
   338  058C                     	;# 
   339  058D                     	;# 
   340  058E                     	;# 
   341  058F                     	;# 
   342  058F                     	;# 
   343  0590                     	;# 
   344  0591                     	;# 
   345  0592                     	;# 
   346  0593                     	;# 
   347  059C                     	;# 
   348  059C                     	;# 
   349  059D                     	;# 
   350  059D                     	;# 
   351  059E                     	;# 
   352  059F                     	;# 
   353  060C                     	;# 
   354  060C                     	;# 
   355  060D                     	;# 
   356  060D                     	;# 
   357  060E                     	;# 
   358  060F                     	;# 
   359  0610                     	;# 
   360  0611                     	;# 
   361  0612                     	;# 
   362  0613                     	;# 
   363  0614                     	;# 
   364  0616                     	;# 
   365  0616                     	;# 
   366  0617                     	;# 
   367  0617                     	;# 
   368  0618                     	;# 
   369  0619                     	;# 
   370  061A                     	;# 
   371  061B                     	;# 
   372  061C                     	;# 
   373  061D                     	;# 
   374  061E                     	;# 
   375  070C                     	;# 
   376  070D                     	;# 
   377  070E                     	;# 
   378  070F                     	;# 
   379  0710                     	;# 
   380  0711                     	;# 
   381  0712                     	;# 
   382  0713                     	;# 
   383  0714                     	;# 
   384  0716                     	;# 
   385  0717                     	;# 
   386  0718                     	;# 
   387  0719                     	;# 
   388  071A                     	;# 
   389  071B                     	;# 
   390  071C                     	;# 
   391  071D                     	;# 
   392  071E                     	;# 
   393  0796                     	;# 
   394  0797                     	;# 
   395  0798                     	;# 
   396  0799                     	;# 
   397  079A                     	;# 
   398  079B                     	;# 
   399  079C                     	;# 
   400  079D                     	;# 
   401  080C                     	;# 
   402  080D                     	;# 
   403  080E                     	;# 
   404  080F                     	;# 
   405  0810                     	;# 
   406  0811                     	;# 
   407  0812                     	;# 
   408  0813                     	;# 
   409  0814                     	;# 
   410  081A                     	;# 
   411  081A                     	;# 
   412  081B                     	;# 
   413  081C                     	;# 
   414  081C                     	;# 
   415  081D                     	;# 
   416  081E                     	;# 
   417  081F                     	;# 
   418  088C                     	;# 
   419  088D                     	;# 
   420  088E                     	;# 
   421  088F                     	;# 
   422  0890                     	;# 
   423  0891                     	;# 
   424  0892                     	;# 
   425  0893                     	;# 
   426  0895                     	;# 
   427  0896                     	;# 
   428  0897                     	;# 
   429  0898                     	;# 
   430  0899                     	;# 
   431  089A                     	;# 
   432  089B                     	;# 
   433  090C                     	;# 
   434  090E                     	;# 
   435  090F                     	;# 
   436  091F                     	;# 
   437  098F                     	;# 
   438  098F                     	;# 
   439  0990                     	;# 
   440  0991                     	;# 
   441  0992                     	;# 
   442  0993                     	;# 
   443  0994                     	;# 
   444  0995                     	;# 
   445  0996                     	;# 
   446  0997                     	;# 
   447  1E0F                     	;# 
   448  1E10                     	;# 
   449  1E11                     	;# 
   450  1E12                     	;# 
   451  1E13                     	;# 
   452  1E14                     	;# 
   453  1E15                     	;# 
   454  1E16                     	;# 
   455  1E17                     	;# 
   456  1E18                     	;# 
   457  1E19                     	;# 
   458  1E1A                     	;# 
   459  1E1B                     	;# 
   460  1E1C                     	;# 
   461  1E1D                     	;# 
   462  1E1E                     	;# 
   463  1E1F                     	;# 
   464  1E20                     	;# 
   465  1E21                     	;# 
   466  1E22                     	;# 
   467  1E23                     	;# 
   468  1E24                     	;# 
   469  1E25                     	;# 
   470  1E26                     	;# 
   471  1E27                     	;# 
   472  1E28                     	;# 
   473  1E29                     	;# 
   474  1E2A                     	;# 
   475  1E2B                     	;# 
   476  1E2C                     	;# 
   477  1E2D                     	;# 
   478  1E2E                     	;# 
   479  1E2F                     	;# 
   480  1E30                     	;# 
   481  1E31                     	;# 
   482  1E32                     	;# 
   483  1E33                     	;# 
   484  1E34                     	;# 
   485  1E35                     	;# 
   486  1E36                     	;# 
   487  1E37                     	;# 
   488  1E8F                     	;# 
   489  1E90                     	;# 
   490  1E91                     	;# 
   491  1E92                     	;# 
   492  1E93                     	;# 
   493  1E94                     	;# 
   494  1E95                     	;# 
   495  1E96                     	;# 
   496  1E97                     	;# 
   497  1E9C                     	;# 
   498  1E9D                     	;# 
   499  1E9E                     	;# 
   500  1EA1                     	;# 
   501  1EA2                     	;# 
   502  1EA3                     	;# 
   503  1EA4                     	;# 
   504  1EA9                     	;# 
   505  1EAA                     	;# 
   506  1EB1                     	;# 
   507  1EB2                     	;# 
   508  1EB8                     	;# 
   509  1EB9                     	;# 
   510  1EBA                     	;# 
   511  1EBB                     	;# 
   512  1EBC                     	;# 
   513  1EBD                     	;# 
   514  1EBE                     	;# 
   515  1EC3                     	;# 
   516  1EC5                     	;# 
   517  1EC6                     	;# 
   518  1EC7                     	;# 
   519  1EC8                     	;# 
   520  1EC9                     	;# 
   521  1ECA                     	;# 
   522  1ECB                     	;# 
   523  1ECB                     	;# 
   524  1ECB                     	;# 
   525  1ECC                     	;# 
   526  1ECC                     	;# 
   527  1ECC                     	;# 
   528  1F10                     	;# 
   529  1F11                     	;# 
   530  1F12                     	;# 
   531  1F14                     	;# 
   532  1F15                     	;# 
   533  1F1C                     	;# 
   534  1F1D                     	;# 
   535  1F1E                     	;# 
   536  1F1F                     	;# 
   537  1F20                     	;# 
   538  1F21                     	;# 
   539  1F22                     	;# 
   540  1F23                     	;# 
   541  1F24                     	;# 
   542  1F25                     	;# 
   543  1F26                     	;# 
   544  1F27                     	;# 
   545  1F38                     	;# 
   546  1F39                     	;# 
   547  1F3A                     	;# 
   548  1F3B                     	;# 
   549  1F3C                     	;# 
   550  1F3D                     	;# 
   551  1F3E                     	;# 
   552  1F3F                     	;# 
   553  1F43                     	;# 
   554  1F44                     	;# 
   555  1F45                     	;# 
   556  1F46                     	;# 
   557  1F47                     	;# 
   558  1F48                     	;# 
   559  1F49                     	;# 
   560  1F4A                     	;# 
   561  1F4E                     	;# 
   562  1F4F                     	;# 
   563  1F50                     	;# 
   564  1F51                     	;# 
   565  1F52                     	;# 
   566  1F53                     	;# 
   567  1F54                     	;# 
   568  1F55                     	;# 
   569  1FE4                     	;# 
   570  1FE5                     	;# 
   571  1FE6                     	;# 
   572  1FE7                     	;# 
   573  1FE8                     	;# 
   574  1FE8                     	;# 
   575  1FE9                     	;# 
   576  1FEA                     	;# 
   577  1FEB                     	;# 
   578  1FED                     	;# 
   579  1FEE                     	;# 
   580  1FEF                     	;# 
   581  0000                     	;# 
   582  0001                     	;# 
   583  0002                     	;# 
   584  0003                     	;# 
   585  0004                     	;# 
   586  0005                     	;# 
   587  0006                     	;# 
   588  0007                     	;# 
   589  0008                     	;# 
   590  0009                     	;# 
   591  000A                     	;# 
   592  000B                     	;# 
   593  000C                     	;# 
   594  000D                     	;# 
   595  000E                     	;# 
   596  0012                     	;# 
   597  0013                     	;# 
   598  0014                     	;# 
   599  0018                     	;# 
   600  0019                     	;# 
   601  001A                     	;# 
   602  008C                     	;# 
   603  008C                     	;# 
   604  008D                     	;# 
   605  008E                     	;# 
   606  008E                     	;# 
   607  008F                     	;# 
   608  0090                     	;# 
   609  0090                     	;# 
   610  0091                     	;# 
   611  0092                     	;# 
   612  0092                     	;# 
   613  0093                     	;# 
   614  0094                     	;# 
   615  0094                     	;# 
   616  0095                     	;# 
   617  0096                     	;# 
   618  0096                     	;# 
   619  0097                     	;# 
   620  0098                     	;# 
   621  0099                     	;# 
   622  009A                     	;# 
   623  009B                     	;# 
   624  009B                     	;# 
   625  009C                     	;# 
   626  009D                     	;# 
   627  009D                     	;# 
   628  009E                     	;# 
   629  009F                     	;# 
   630  010C                     	;# 
   631  010C                     	;# 
   632  010D                     	;# 
   633  010E                     	;# 
   634  010F                     	;# 
   635  010F                     	;# 
   636  0110                     	;# 
   637  0111                     	;# 
   638  0112                     	;# 
   639  0113                     	;# 
   640  0114                     	;# 
   641  0115                     	;# 
   642  0116                     	;# 
   643  0117                     	;# 
   644  0118                     	;# 
   645  0119                     	;# 
   646  0119                     	;# 
   647  0119                     	;# 
   648  011A                     	;# 
   649  011A                     	;# 
   650  011A                     	;# 
   651  011B                     	;# 
   652  011B                     	;# 
   653  011B                     	;# 
   654  011B                     	;# 
   655  011B                     	;# 
   656  011C                     	;# 
   657  011C                     	;# 
   658  011C                     	;# 
   659  011D                     	;# 
   660  011D                     	;# 
   661  011D                     	;# 
   662  011E                     	;# 
   663  011E                     	;# 
   664  011E                     	;# 
   665  011F                     	;# 
   666  011F                     	;# 
   667  011F                     	;# 
   668  011F                     	;# 
   669  011F                     	;# 
   670  018C                     	;# 
   671  018D                     	;# 
   672  018E                     	;# 
   673  018F                     	;# 
   674  0190                     	;# 
   675  0191                     	;# 
   676  0192                     	;# 
   677  0196                     	;# 
   678  0197                     	;# 
   679  0198                     	;# 
   680  0199                     	;# 
   681  019A                     	;# 
   682  019B                     	;# 
   683  019C                     	;# 
   684  020C                     	;# 
   685  020D                     	;# 
   686  020E                     	;# 
   687  020E                     	;# 
   688  020F                     	;# 
   689  020F                     	;# 
   690  0210                     	;# 
   691  0210                     	;# 
   692  0211                     	;# 
   693  0211                     	;# 
   694  0212                     	;# 
   695  0213                     	;# 
   696  0214                     	;# 
   697  0214                     	;# 
   698  0215                     	;# 
   699  0215                     	;# 
   700  0216                     	;# 
   701  0216                     	;# 
   702  0217                     	;# 
   703  0217                     	;# 
   704  0218                     	;# 
   705  0219                     	;# 
   706  021A                     	;# 
   707  021A                     	;# 
   708  021B                     	;# 
   709  021B                     	;# 
   710  021C                     	;# 
   711  021C                     	;# 
   712  021D                     	;# 
   713  021D                     	;# 
   714  021E                     	;# 
   715  021F                     	;# 
   716  028C                     	;# 
   717  028C                     	;# 
   718  028D                     	;# 
   719  028D                     	;# 
   720  028E                     	;# 
   721  028F                     	;# 
   722  0290                     	;# 
   723  0291                     	;# 
   724  0292                     	;# 
   725  0292                     	;# 
   726  0293                     	;# 
   727  0293                     	;# 
   728  0294                     	;# 
   729  0295                     	;# 
   730  0296                     	;# 
   731  0297                     	;# 
   732  0298                     	;# 
   733  0298                     	;# 
   734  0299                     	;# 
   735  0299                     	;# 
   736  029A                     	;# 
   737  029B                     	;# 
   738  029C                     	;# 
   739  029D                     	;# 
   740  029F                     	;# 
   741  030C                     	;# 
   742  030C                     	;# 
   743  030D                     	;# 
   744  030E                     	;# 
   745  030F                     	;# 
   746  0310                     	;# 
   747  0310                     	;# 
   748  0311                     	;# 
   749  0312                     	;# 
   750  0313                     	;# 
   751  0314                     	;# 
   752  0314                     	;# 
   753  0315                     	;# 
   754  0316                     	;# 
   755  0317                     	;# 
   756  0318                     	;# 
   757  0318                     	;# 
   758  0319                     	;# 
   759  031A                     	;# 
   760  031B                     	;# 
   761  038C                     	;# 
   762  038C                     	;# 
   763  038D                     	;# 
   764  038E                     	;# 
   765  0390                     	;# 
   766  0390                     	;# 
   767  0391                     	;# 
   768  0392                     	;# 
   769  048C                     	;# 
   770  048C                     	;# 
   771  048D                     	;# 
   772  048E                     	;# 
   773  048F                     	;# 
   774  048F                     	;# 
   775  0490                     	;# 
   776  0491                     	;# 
   777  0492                     	;# 
   778  0492                     	;# 
   779  0493                     	;# 
   780  0494                     	;# 
   781  0495                     	;# 
   782  0495                     	;# 
   783  0496                     	;# 
   784  0497                     	;# 
   785  0498                     	;# 
   786  0499                     	;# 
   787  049A                     	;# 
   788  049B                     	;# 
   789  049C                     	;# 
   790  049D                     	;# 
   791  058C                     	;# 
   792  058C                     	;# 
   793  058D                     	;# 
   794  058E                     	;# 
   795  058F                     	;# 
   796  058F                     	;# 
   797  0590                     	;# 
   798  0591                     	;# 
   799  0592                     	;# 
   800  0593                     	;# 
   801  059C                     	;# 
   802  059C                     	;# 
   803  059D                     	;# 
   804  059D                     	;# 
   805  059E                     	;# 
   806  059F                     	;# 
   807  060C                     	;# 
   808  060C                     	;# 
   809  060D                     	;# 
   810  060D                     	;# 
   811  060E                     	;# 
   812  060F                     	;# 
   813  0610                     	;# 
   814  0611                     	;# 
   815  0612                     	;# 
   816  0613                     	;# 
   817  0614                     	;# 
   818  0616                     	;# 
   819  0616                     	;# 
   820  0617                     	;# 
   821  0617                     	;# 
   822  0618                     	;# 
   823  0619                     	;# 
   824  061A                     	;# 
   825  061B                     	;# 
   826  061C                     	;# 
   827  061D                     	;# 
   828  061E                     	;# 
   829  070C                     	;# 
   830  070D                     	;# 
   831  070E                     	;# 
   832  070F                     	;# 
   833  0710                     	;# 
   834  0711                     	;# 
   835  0712                     	;# 
   836  0713                     	;# 
   837  0714                     	;# 
   838  0716                     	;# 
   839  0717                     	;# 
   840  0718                     	;# 
   841  0719                     	;# 
   842  071A                     	;# 
   843  071B                     	;# 
   844  071C                     	;# 
   845  071D                     	;# 
   846  071E                     	;# 
   847  0796                     	;# 
   848  0797                     	;# 
   849  0798                     	;# 
   850  0799                     	;# 
   851  079A                     	;# 
   852  079B                     	;# 
   853  079C                     	;# 
   854  079D                     	;# 
   855  080C                     	;# 
   856  080D                     	;# 
   857  080E                     	;# 
   858  080F                     	;# 
   859  0810                     	;# 
   860  0811                     	;# 
   861  0812                     	;# 
   862  0813                     	;# 
   863  0814                     	;# 
   864  081A                     	;# 
   865  081A                     	;# 
   866  081B                     	;# 
   867  081C                     	;# 
   868  081C                     	;# 
   869  081D                     	;# 
   870  081E                     	;# 
   871  081F                     	;# 
   872  088C                     	;# 
   873  088D                     	;# 
   874  088E                     	;# 
   875  088F                     	;# 
   876  0890                     	;# 
   877  0891                     	;# 
   878  0892                     	;# 
   879  0893                     	;# 
   880  0895                     	;# 
   881  0896                     	;# 
   882  0897                     	;# 
   883  0898                     	;# 
   884  0899                     	;# 
   885  089A                     	;# 
   886  089B                     	;# 
   887  090C                     	;# 
   888  090E                     	;# 
   889  090F                     	;# 
   890  091F                     	;# 
   891  098F                     	;# 
   892  098F                     	;# 
   893  0990                     	;# 
   894  0991                     	;# 
   895  0992                     	;# 
   896  0993                     	;# 
   897  0994                     	;# 
   898  0995                     	;# 
   899  0996                     	;# 
   900  0997                     	;# 
   901  1E0F                     	;# 
   902  1E10                     	;# 
   903  1E11                     	;# 
   904  1E12                     	;# 
   905  1E13                     	;# 
   906  1E14                     	;# 
   907  1E15                     	;# 
   908  1E16                     	;# 
   909  1E17                     	;# 
   910  1E18                     	;# 
   911  1E19                     	;# 
   912  1E1A                     	;# 
   913  1E1B                     	;# 
   914  1E1C                     	;# 
   915  1E1D                     	;# 
   916  1E1E                     	;# 
   917  1E1F                     	;# 
   918  1E20                     	;# 
   919  1E21                     	;# 
   920  1E22                     	;# 
   921  1E23                     	;# 
   922  1E24                     	;# 
   923  1E25                     	;# 
   924  1E26                     	;# 
   925  1E27                     	;# 
   926  1E28                     	;# 
   927  1E29                     	;# 
   928  1E2A                     	;# 
   929  1E2B                     	;# 
   930  1E2C                     	;# 
   931  1E2D                     	;# 
   932  1E2E                     	;# 
   933  1E2F                     	;# 
   934  1E30                     	;# 
   935  1E31                     	;# 
   936  1E32                     	;# 
   937  1E33                     	;# 
   938  1E34                     	;# 
   939  1E35                     	;# 
   940  1E36                     	;# 
   941  1E37                     	;# 
   942  1E8F                     	;# 
   943  1E90                     	;# 
   944  1E91                     	;# 
   945  1E92                     	;# 
   946  1E93                     	;# 
   947  1E94                     	;# 
   948  1E95                     	;# 
   949  1E96                     	;# 
   950  1E97                     	;# 
   951  1E9C                     	;# 
   952  1E9D                     	;# 
   953  1E9E                     	;# 
   954  1EA1                     	;# 
   955  1EA2                     	;# 
   956  1EA3                     	;# 
   957  1EA4                     	;# 
   958  1EA9                     	;# 
   959  1EAA                     	;# 
   960  1EB1                     	;# 
   961  1EB2                     	;# 
   962  1EB8                     	;# 
   963  1EB9                     	;# 
   964  1EBA                     	;# 
   965  1EBB                     	;# 
   966  1EBC                     	;# 
   967  1EBD                     	;# 
   968  1EBE                     	;# 
   969  1EC3                     	;# 
   970  1EC5                     	;# 
   971  1EC6                     	;# 
   972  1EC7                     	;# 
   973  1EC8                     	;# 
   974  1EC9                     	;# 
   975  1ECA                     	;# 
   976  1ECB                     	;# 
   977  1ECB                     	;# 
   978  1ECB                     	;# 
   979  1ECC                     	;# 
   980  1ECC                     	;# 
   981  1ECC                     	;# 
   982  1F10                     	;# 
   983  1F11                     	;# 
   984  1F12                     	;# 
   985  1F14                     	;# 
   986  1F15                     	;# 
   987  1F1C                     	;# 
   988  1F1D                     	;# 
   989  1F1E                     	;# 
   990  1F1F                     	;# 
   991  1F20                     	;# 
   992  1F21                     	;# 
   993  1F22                     	;# 
   994  1F23                     	;# 
   995  1F24                     	;# 
   996  1F25                     	;# 
   997  1F26                     	;# 
   998  1F27                     	;# 
   999  1F38                     	;# 
  1000  1F39                     	;# 
  1001  1F3A                     	;# 
  1002  1F3B                     	;# 
  1003  1F3C                     	;# 
  1004  1F3D                     	;# 
  1005  1F3E                     	;# 
  1006  1F3F                     	;# 
  1007  1F43                     	;# 
  1008  1F44                     	;# 
  1009  1F45                     	;# 
  1010  1F46                     	;# 
  1011  1F47                     	;# 
  1012  1F48                     	;# 
  1013  1F49                     	;# 
  1014  1F4A                     	;# 
  1015  1F4E                     	;# 
  1016  1F4F                     	;# 
  1017  1F50                     	;# 
  1018  1F51                     	;# 
  1019  1F52                     	;# 
  1020  1F53                     	;# 
  1021  1F54                     	;# 
  1022  1F55                     	;# 
  1023  1FE4                     	;# 
  1024  1FE5                     	;# 
  1025  1FE6                     	;# 
  1026  1FE7                     	;# 
  1027  1FE8                     	;# 
  1028  1FE8                     	;# 
  1029  1FE9                     	;# 
  1030  1FEA                     	;# 
  1031  1FEB                     	;# 
  1032  1FED                     	;# 
  1033  1FEE                     	;# 
  1034  1FEF                     	;# 
  1035  0000                     	;# 
  1036  0001                     	;# 
  1037  0002                     	;# 
  1038  0003                     	;# 
  1039  0004                     	;# 
  1040  0005                     	;# 
  1041  0006                     	;# 
  1042  0007                     	;# 
  1043  0008                     	;# 
  1044  0009                     	;# 
  1045  000A                     	;# 
  1046  000B                     	;# 
  1047  000C                     	;# 
  1048  000D                     	;# 
  1049  000E                     	;# 
  1050  0012                     	;# 
  1051  0013                     	;# 
  1052  0014                     	;# 
  1053  0018                     	;# 
  1054  0019                     	;# 
  1055  001A                     	;# 
  1056  008C                     	;# 
  1057  008C                     	;# 
  1058  008D                     	;# 
  1059  008E                     	;# 
  1060  008E                     	;# 
  1061  008F                     	;# 
  1062  0090                     	;# 
  1063  0090                     	;# 
  1064  0091                     	;# 
  1065  0092                     	;# 
  1066  0092                     	;# 
  1067  0093                     	;# 
  1068  0094                     	;# 
  1069  0094                     	;# 
  1070  0095                     	;# 
  1071  0096                     	;# 
  1072  0096                     	;# 
  1073  0097                     	;# 
  1074  0098                     	;# 
  1075  0099                     	;# 
  1076  009A                     	;# 
  1077  009B                     	;# 
  1078  009B                     	;# 
  1079  009C                     	;# 
  1080  009D                     	;# 
  1081  009D                     	;# 
  1082  009E                     	;# 
  1083  009F                     	;# 
  1084  010C                     	;# 
  1085  010C                     	;# 
  1086  010D                     	;# 
  1087  010E                     	;# 
  1088  010F                     	;# 
  1089  010F                     	;# 
  1090  0110                     	;# 
  1091  0111                     	;# 
  1092  0112                     	;# 
  1093  0113                     	;# 
  1094  0114                     	;# 
  1095  0115                     	;# 
  1096  0116                     	;# 
  1097  0117                     	;# 
  1098  0118                     	;# 
  1099  0119                     	;# 
  1100  0119                     	;# 
  1101  0119                     	;# 
  1102  011A                     	;# 
  1103  011A                     	;# 
  1104  011A                     	;# 
  1105  011B                     	;# 
  1106  011B                     	;# 
  1107  011B                     	;# 
  1108  011B                     	;# 
  1109  011B                     	;# 
  1110  011C                     	;# 
  1111  011C                     	;# 
  1112  011C                     	;# 
  1113  011D                     	;# 
  1114  011D                     	;# 
  1115  011D                     	;# 
  1116  011E                     	;# 
  1117  011E                     	;# 
  1118  011E                     	;# 
  1119  011F                     	;# 
  1120  011F                     	;# 
  1121  011F                     	;# 
  1122  011F                     	;# 
  1123  011F                     	;# 
  1124  018C                     	;# 
  1125  018D                     	;# 
  1126  018E                     	;# 
  1127  018F                     	;# 
  1128  0190                     	;# 
  1129  0191                     	;# 
  1130  0192                     	;# 
  1131  0196                     	;# 
  1132  0197                     	;# 
  1133  0198                     	;# 
  1134  0199                     	;# 
  1135  019A                     	;# 
  1136  019B                     	;# 
  1137  019C                     	;# 
  1138  020C                     	;# 
  1139  020D                     	;# 
  1140  020E                     	;# 
  1141  020E                     	;# 
  1142  020F                     	;# 
  1143  020F                     	;# 
  1144  0210                     	;# 
  1145  0210                     	;# 
  1146  0211                     	;# 
  1147  0211                     	;# 
  1148  0212                     	;# 
  1149  0213                     	;# 
  1150  0214                     	;# 
  1151  0214                     	;# 
  1152  0215                     	;# 
  1153  0215                     	;# 
  1154  0216                     	;# 
  1155  0216                     	;# 
  1156  0217                     	;# 
  1157  0217                     	;# 
  1158  0218                     	;# 
  1159  0219                     	;# 
  1160  021A                     	;# 
  1161  021A                     	;# 
  1162  021B                     	;# 
  1163  021B                     	;# 
  1164  021C                     	;# 
  1165  021C                     	;# 
  1166  021D                     	;# 
  1167  021D                     	;# 
  1168  021E                     	;# 
  1169  021F                     	;# 
  1170  028C                     	;# 
  1171  028C                     	;# 
  1172  028D                     	;# 
  1173  028D                     	;# 
  1174  028E                     	;# 
  1175  028F                     	;# 
  1176  0290                     	;# 
  1177  0291                     	;# 
  1178  0292                     	;# 
  1179  0292                     	;# 
  1180  0293                     	;# 
  1181  0293                     	;# 
  1182  0294                     	;# 
  1183  0295                     	;# 
  1184  0296                     	;# 
  1185  0297                     	;# 
  1186  0298                     	;# 
  1187  0298                     	;# 
  1188  0299                     	;# 
  1189  0299                     	;# 
  1190  029A                     	;# 
  1191  029B                     	;# 
  1192  029C                     	;# 
  1193  029D                     	;# 
  1194  029F                     	;# 
  1195  030C                     	;# 
  1196  030C                     	;# 
  1197  030D                     	;# 
  1198  030E                     	;# 
  1199  030F                     	;# 
  1200  0310                     	;# 
  1201  0310                     	;# 
  1202  0311                     	;# 
  1203  0312                     	;# 
  1204  0313                     	;# 
  1205  0314                     	;# 
  1206  0314                     	;# 
  1207  0315                     	;# 
  1208  0316                     	;# 
  1209  0317                     	;# 
  1210  0318                     	;# 
  1211  0318                     	;# 
  1212  0319                     	;# 
  1213  031A                     	;# 
  1214  031B                     	;# 
  1215  038C                     	;# 
  1216  038C                     	;# 
  1217  038D                     	;# 
  1218  038E                     	;# 
  1219  0390                     	;# 
  1220  0390                     	;# 
  1221  0391                     	;# 
  1222  0392                     	;# 
  1223  048C                     	;# 
  1224  048C                     	;# 
  1225  048D                     	;# 
  1226  048E                     	;# 
  1227  048F                     	;# 
  1228  048F                     	;# 
  1229  0490                     	;# 
  1230  0491                     	;# 
  1231  0492                     	;# 
  1232  0492                     	;# 
  1233  0493                     	;# 
  1234  0494                     	;# 
  1235  0495                     	;# 
  1236  0495                     	;# 
  1237  0496                     	;# 
  1238  0497                     	;# 
  1239  0498                     	;# 
  1240  0499                     	;# 
  1241  049A                     	;# 
  1242  049B                     	;# 
  1243  049C                     	;# 
  1244  049D                     	;# 
  1245  058C                     	;# 
  1246  058C                     	;# 
  1247  058D                     	;# 
  1248  058E                     	;# 
  1249  058F                     	;# 
  1250  058F                     	;# 
  1251  0590                     	;# 
  1252  0591                     	;# 
  1253  0592                     	;# 
  1254  0593                     	;# 
  1255  059C                     	;# 
  1256  059C                     	;# 
  1257  059D                     	;# 
  1258  059D                     	;# 
  1259  059E                     	;# 
  1260  059F                     	;# 
  1261  060C                     	;# 
  1262  060C                     	;# 
  1263  060D                     	;# 
  1264  060D                     	;# 
  1265  060E                     	;# 
  1266  060F                     	;# 
  1267  0610                     	;# 
  1268  0611                     	;# 
  1269  0612                     	;# 
  1270  0613                     	;# 
  1271  0614                     	;# 
  1272  0616                     	;# 
  1273  0616                     	;# 
  1274  0617                     	;# 
  1275  0617                     	;# 
  1276  0618                     	;# 
  1277  0619                     	;# 
  1278  061A                     	;# 
  1279  061B                     	;# 
  1280  061C                     	;# 
  1281  061D                     	;# 
  1282  061E                     	;# 
  1283  070C                     	;# 
  1284  070D                     	;# 
  1285  070E                     	;# 
  1286  070F                     	;# 
  1287  0710                     	;# 
  1288  0711                     	;# 
  1289  0712                     	;# 
  1290  0713                     	;# 
  1291  0714                     	;# 
  1292  0716                     	;# 
  1293  0717                     	;# 
  1294  0718                     	;# 
  1295  0719                     	;# 
  1296  071A                     	;# 
  1297  071B                     	;# 
  1298  071C                     	;# 
  1299  071D                     	;# 
  1300  071E                     	;# 
  1301  0796                     	;# 
  1302  0797                     	;# 
  1303  0798                     	;# 
  1304  0799                     	;# 
  1305  079A                     	;# 
  1306  079B                     	;# 
  1307  079C                     	;# 
  1308  079D                     	;# 
  1309  080C                     	;# 
  1310  080D                     	;# 
  1311  080E                     	;# 
  1312  080F                     	;# 
  1313  0810                     	;# 
  1314  0811                     	;# 
  1315  0812                     	;# 
  1316  0813                     	;# 
  1317  0814                     	;# 
  1318  081A                     	;# 
  1319  081A                     	;# 
  1320  081B                     	;# 
  1321  081C                     	;# 
  1322  081C                     	;# 
  1323  081D                     	;# 
  1324  081E                     	;# 
  1325  081F                     	;# 
  1326  088C                     	;# 
  1327  088D                     	;# 
  1328  088E                     	;# 
  1329  088F                     	;# 
  1330  0890                     	;# 
  1331  0891                     	;# 
  1332  0892                     	;# 
  1333  0893                     	;# 
  1334  0895                     	;# 
  1335  0896                     	;# 
  1336  0897                     	;# 
  1337  0898                     	;# 
  1338  0899                     	;# 
  1339  089A                     	;# 
  1340  089B                     	;# 
  1341  090C                     	;# 
  1342  090E                     	;# 
  1343  090F                     	;# 
  1344  091F                     	;# 
  1345  098F                     	;# 
  1346  098F                     	;# 
  1347  0990                     	;# 
  1348  0991                     	;# 
  1349  0992                     	;# 
  1350  0993                     	;# 
  1351  0994                     	;# 
  1352  0995                     	;# 
  1353  0996                     	;# 
  1354  0997                     	;# 
  1355  1E0F                     	;# 
  1356  1E10                     	;# 
  1357  1E11                     	;# 
  1358  1E12                     	;# 
  1359  1E13                     	;# 
  1360  1E14                     	;# 
  1361  1E15                     	;# 
  1362  1E16                     	;# 
  1363  1E17                     	;# 
  1364  1E18                     	;# 
  1365  1E19                     	;# 
  1366  1E1A                     	;# 
  1367  1E1B                     	;# 
  1368  1E1C                     	;# 
  1369  1E1D                     	;# 
  1370  1E1E                     	;# 
  1371  1E1F                     	;# 
  1372  1E20                     	;# 
  1373  1E21                     	;# 
  1374  1E22                     	;# 
  1375  1E23                     	;# 
  1376  1E24                     	;# 
  1377  1E25                     	;# 
  1378  1E26                     	;# 
  1379  1E27                     	;# 
  1380  1E28                     	;# 
  1381  1E29                     	;# 
  1382  1E2A                     	;# 
  1383  1E2B                     	;# 
  1384  1E2C                     	;# 
  1385  1E2D                     	;# 
  1386  1E2E                     	;# 
  1387  1E2F                     	;# 
  1388  1E30                     	;# 
  1389  1E31                     	;# 
  1390  1E32                     	;# 
  1391  1E33                     	;# 
  1392  1E34                     	;# 
  1393  1E35                     	;# 
  1394  1E36                     	;# 
  1395  1E37                     	;# 
  1396  1E8F                     	;# 
  1397  1E90                     	;# 
  1398  1E91                     	;# 
  1399  1E92                     	;# 
  1400  1E93                     	;# 
  1401  1E94                     	;# 
  1402  1E95                     	;# 
  1403  1E96                     	;# 
  1404  1E97                     	;# 
  1405  1E9C                     	;# 
  1406  1E9D                     	;# 
  1407  1E9E                     	;# 
  1408  1EA1                     	;# 
  1409  1EA2                     	;# 
  1410  1EA3                     	;# 
  1411  1EA4                     	;# 
  1412  1EA9                     	;# 
  1413  1EAA                     	;# 
  1414  1EB1                     	;# 
  1415  1EB2                     	;# 
  1416  1EB8                     	;# 
  1417  1EB9                     	;# 
  1418  1EBA                     	;# 
  1419  1EBB                     	;# 
  1420  1EBC                     	;# 
  1421  1EBD                     	;# 
  1422  1EBE                     	;# 
  1423  1EC3                     	;# 
  1424  1EC5                     	;# 
  1425  1EC6                     	;# 
  1426  1EC7                     	;# 
  1427  1EC8                     	;# 
  1428  1EC9                     	;# 
  1429  1ECA                     	;# 
  1430  1ECB                     	;# 
  1431  1ECB                     	;# 
  1432  1ECB                     	;# 
  1433  1ECC                     	;# 
  1434  1ECC                     	;# 
  1435  1ECC                     	;# 
  1436  1F10                     	;# 
  1437  1F11                     	;# 
  1438  1F12                     	;# 
  1439  1F14                     	;# 
  1440  1F15                     	;# 
  1441  1F1C                     	;# 
  1442  1F1D                     	;# 
  1443  1F1E                     	;# 
  1444  1F1F                     	;# 
  1445  1F20                     	;# 
  1446  1F21                     	;# 
  1447  1F22                     	;# 
  1448  1F23                     	;# 
  1449  1F24                     	;# 
  1450  1F25                     	;# 
  1451  1F26                     	;# 
  1452  1F27                     	;# 
  1453  1F38                     	;# 
  1454  1F39                     	;# 
  1455  1F3A                     	;# 
  1456  1F3B                     	;# 
  1457  1F3C                     	;# 
  1458  1F3D                     	;# 
  1459  1F3E                     	;# 
  1460  1F3F                     	;# 
  1461  1F43                     	;# 
  1462  1F44                     	;# 
  1463  1F45                     	;# 
  1464  1F46                     	;# 
  1465  1F47                     	;# 
  1466  1F48                     	;# 
  1467  1F49                     	;# 
  1468  1F4A                     	;# 
  1469  1F4E                     	;# 
  1470  1F4F                     	;# 
  1471  1F50                     	;# 
  1472  1F51                     	;# 
  1473  1F52                     	;# 
  1474  1F53                     	;# 
  1475  1F54                     	;# 
  1476  1F55                     	;# 
  1477  1FE4                     	;# 
  1478  1FE5                     	;# 
  1479  1FE6                     	;# 
  1480  1FE7                     	;# 
  1481  1FE8                     	;# 
  1482  1FE8                     	;# 
  1483  1FE9                     	;# 
  1484  1FEA                     	;# 
  1485  1FEB                     	;# 
  1486  1FED                     	;# 
  1487  1FEE                     	;# 
  1488  1FEF                     	;# 
  1489  0000                     	;# 
  1490  0001                     	;# 
  1491  0002                     	;# 
  1492  0003                     	;# 
  1493  0004                     	;# 
  1494  0005                     	;# 
  1495  0006                     	;# 
  1496  0007                     	;# 
  1497  0008                     	;# 
  1498  0009                     	;# 
  1499  000A                     	;# 
  1500  000B                     	;# 
  1501  000C                     	;# 
  1502  000D                     	;# 
  1503  000E                     	;# 
  1504  0012                     	;# 
  1505  0013                     	;# 
  1506  0014                     	;# 
  1507  0018                     	;# 
  1508  0019                     	;# 
  1509  001A                     	;# 
  1510  008C                     	;# 
  1511  008C                     	;# 
  1512  008D                     	;# 
  1513  008E                     	;# 
  1514  008E                     	;# 
  1515  008F                     	;# 
  1516  0090                     	;# 
  1517  0090                     	;# 
  1518  0091                     	;# 
  1519  0092                     	;# 
  1520  0092                     	;# 
  1521  0093                     	;# 
  1522  0094                     	;# 
  1523  0094                     	;# 
  1524  0095                     	;# 
  1525  0096                     	;# 
  1526  0096                     	;# 
  1527  0097                     	;# 
  1528  0098                     	;# 
  1529  0099                     	;# 
  1530  009A                     	;# 
  1531  009B                     	;# 
  1532  009B                     	;# 
  1533  009C                     	;# 
  1534  009D                     	;# 
  1535  009D                     	;# 
  1536  009E                     	;# 
  1537  009F                     	;# 
  1538  010C                     	;# 
  1539  010C                     	;# 
  1540  010D                     	;# 
  1541  010E                     	;# 
  1542  010F                     	;# 
  1543  010F                     	;# 
  1544  0110                     	;# 
  1545  0111                     	;# 
  1546  0112                     	;# 
  1547  0113                     	;# 
  1548  0114                     	;# 
  1549  0115                     	;# 
  1550  0116                     	;# 
  1551  0117                     	;# 
  1552  0118                     	;# 
  1553  0119                     	;# 
  1554  0119                     	;# 
  1555  0119                     	;# 
  1556  011A                     	;# 
  1557  011A                     	;# 
  1558  011A                     	;# 
  1559  011B                     	;# 
  1560  011B                     	;# 
  1561  011B                     	;# 
  1562  011B                     	;# 
  1563  011B                     	;# 
  1564  011C                     	;# 
  1565  011C                     	;# 
  1566  011C                     	;# 
  1567  011D                     	;# 
  1568  011D                     	;# 
  1569  011D                     	;# 
  1570  011E                     	;# 
  1571  011E                     	;# 
  1572  011E                     	;# 
  1573  011F                     	;# 
  1574  011F                     	;# 
  1575  011F                     	;# 
  1576  011F                     	;# 
  1577  011F                     	;# 
  1578  018C                     	;# 
  1579  018D                     	;# 
  1580  018E                     	;# 
  1581  018F                     	;# 
  1582  0190                     	;# 
  1583  0191                     	;# 
  1584  0192                     	;# 
  1585  0196                     	;# 
  1586  0197                     	;# 
  1587  0198                     	;# 
  1588  0199                     	;# 
  1589  019A                     	;# 
  1590  019B                     	;# 
  1591  019C                     	;# 
  1592  020C                     	;# 
  1593  020D                     	;# 
  1594  020E                     	;# 
  1595  020E                     	;# 
  1596  020F                     	;# 
  1597  020F                     	;# 
  1598  0210                     	;# 
  1599  0210                     	;# 
  1600  0211                     	;# 
  1601  0211                     	;# 
  1602  0212                     	;# 
  1603  0213                     	;# 
  1604  0214                     	;# 
  1605  0214                     	;# 
  1606  0215                     	;# 
  1607  0215                     	;# 
  1608  0216                     	;# 
  1609  0216                     	;# 
  1610  0217                     	;# 
  1611  0217                     	;# 
  1612  0218                     	;# 
  1613  0219                     	;# 
  1614  021A                     	;# 
  1615  021A                     	;# 
  1616  021B                     	;# 
  1617  021B                     	;# 
  1618  021C                     	;# 
  1619  021C                     	;# 
  1620  021D                     	;# 
  1621  021D                     	;# 
  1622  021E                     	;# 
  1623  021F                     	;# 
  1624  028C                     	;# 
  1625  028C                     	;# 
  1626  028D                     	;# 
  1627  028D                     	;# 
  1628  028E                     	;# 
  1629  028F                     	;# 
  1630  0290                     	;# 
  1631  0291                     	;# 
  1632  0292                     	;# 
  1633  0292                     	;# 
  1634  0293                     	;# 
  1635  0293                     	;# 
  1636  0294                     	;# 
  1637  0295                     	;# 
  1638  0296                     	;# 
  1639  0297                     	;# 
  1640  0298                     	;# 
  1641  0298                     	;# 
  1642  0299                     	;# 
  1643  0299                     	;# 
  1644  029A                     	;# 
  1645  029B                     	;# 
  1646  029C                     	;# 
  1647  029D                     	;# 
  1648  029F                     	;# 
  1649  030C                     	;# 
  1650  030C                     	;# 
  1651  030D                     	;# 
  1652  030E                     	;# 
  1653  030F                     	;# 
  1654  0310                     	;# 
  1655  0310                     	;# 
  1656  0311                     	;# 
  1657  0312                     	;# 
  1658  0313                     	;# 
  1659  0314                     	;# 
  1660  0314                     	;# 
  1661  0315                     	;# 
  1662  0316                     	;# 
  1663  0317                     	;# 
  1664  0318                     	;# 
  1665  0318                     	;# 
  1666  0319                     	;# 
  1667  031A                     	;# 
  1668  031B                     	;# 
  1669  038C                     	;# 
  1670  038C                     	;# 
  1671  038D                     	;# 
  1672  038E                     	;# 
  1673  0390                     	;# 
  1674  0390                     	;# 
  1675  0391                     	;# 
  1676  0392                     	;# 
  1677  048C                     	;# 
  1678  048C                     	;# 
  1679  048D                     	;# 
  1680  048E                     	;# 
  1681  048F                     	;# 
  1682  048F                     	;# 
  1683  0490                     	;# 
  1684  0491                     	;# 
  1685  0492                     	;# 
  1686  0492                     	;# 
  1687  0493                     	;# 
  1688  0494                     	;# 
  1689  0495                     	;# 
  1690  0495                     	;# 
  1691  0496                     	;# 
  1692  0497                     	;# 
  1693  0498                     	;# 
  1694  0499                     	;# 
  1695  049A                     	;# 
  1696  049B                     	;# 
  1697  049C                     	;# 
  1698  049D                     	;# 
  1699  058C                     	;# 
  1700  058C                     	;# 
  1701  058D                     	;# 
  1702  058E                     	;# 
  1703  058F                     	;# 
  1704  058F                     	;# 
  1705  0590                     	;# 
  1706  0591                     	;# 
  1707  0592                     	;# 
  1708  0593                     	;# 
  1709  059C                     	;# 
  1710  059C                     	;# 
  1711  059D                     	;# 
  1712  059D                     	;# 
  1713  059E                     	;# 
  1714  059F                     	;# 
  1715  060C                     	;# 
  1716  060C                     	;# 
  1717  060D                     	;# 
  1718  060D                     	;# 
  1719  060E                     	;# 
  1720  060F                     	;# 
  1721  0610                     	;# 
  1722  0611                     	;# 
  1723  0612                     	;# 
  1724  0613                     	;# 
  1725  0614                     	;# 
  1726  0616                     	;# 
  1727  0616                     	;# 
  1728  0617                     	;# 
  1729  0617                     	;# 
  1730  0618                     	;# 
  1731  0619                     	;# 
  1732  061A                     	;# 
  1733  061B                     	;# 
  1734  061C                     	;# 
  1735  061D                     	;# 
  1736  061E                     	;# 
  1737  070C                     	;# 
  1738  070D                     	;# 
  1739  070E                     	;# 
  1740  070F                     	;# 
  1741  0710                     	;# 
  1742  0711                     	;# 
  1743  0712                     	;# 
  1744  0713                     	;# 
  1745  0714                     	;# 
  1746  0716                     	;# 
  1747  0717                     	;# 
  1748  0718                     	;# 
  1749  0719                     	;# 
  1750  071A                     	;# 
  1751  071B                     	;# 
  1752  071C                     	;# 
  1753  071D                     	;# 
  1754  071E                     	;# 
  1755  0796                     	;# 
  1756  0797                     	;# 
  1757  0798                     	;# 
  1758  0799                     	;# 
  1759  079A                     	;# 
  1760  079B                     	;# 
  1761  079C                     	;# 
  1762  079D                     	;# 
  1763  080C                     	;# 
  1764  080D                     	;# 
  1765  080E                     	;# 
  1766  080F                     	;# 
  1767  0810                     	;# 
  1768  0811                     	;# 
  1769  0812                     	;# 
  1770  0813                     	;# 
  1771  0814                     	;# 
  1772  081A                     	;# 
  1773  081A                     	;# 
  1774  081B                     	;# 
  1775  081C                     	;# 
  1776  081C                     	;# 
  1777  081D                     	;# 
  1778  081E                     	;# 
  1779  081F                     	;# 
  1780  088C                     	;# 
  1781  088D                     	;# 
  1782  088E                     	;# 
  1783  088F                     	;# 
  1784  0890                     	;# 
  1785  0891                     	;# 
  1786  0892                     	;# 
  1787  0893                     	;# 
  1788  0895                     	;# 
  1789  0896                     	;# 
  1790  0897                     	;# 
  1791  0898                     	;# 
  1792  0899                     	;# 
  1793  089A                     	;# 
  1794  089B                     	;# 
  1795  090C                     	;# 
  1796  090E                     	;# 
  1797  090F                     	;# 
  1798  091F                     	;# 
  1799  098F                     	;# 
  1800  098F                     	;# 
  1801  0990                     	;# 
  1802  0991                     	;# 
  1803  0992                     	;# 
  1804  0993                     	;# 
  1805  0994                     	;# 
  1806  0995                     	;# 
  1807  0996                     	;# 
  1808  0997                     	;# 
  1809  1E0F                     	;# 
  1810  1E10                     	;# 
  1811  1E11                     	;# 
  1812  1E12                     	;# 
  1813  1E13                     	;# 
  1814  1E14                     	;# 
  1815  1E15                     	;# 
  1816  1E16                     	;# 
  1817  1E17                     	;# 
  1818  1E18                     	;# 
  1819  1E19                     	;# 
  1820  1E1A                     	;# 
  1821  1E1B                     	;# 
  1822  1E1C                     	;# 
  1823  1E1D                     	;# 
  1824  1E1E                     	;# 
  1825  1E1F                     	;# 
  1826  1E20                     	;# 
  1827  1E21                     	;# 
  1828  1E22                     	;# 
  1829  1E23                     	;# 
  1830  1E24                     	;# 
  1831  1E25                     	;# 
  1832  1E26                     	;# 
  1833  1E27                     	;# 
  1834  1E28                     	;# 
  1835  1E29                     	;# 
  1836  1E2A                     	;# 
  1837  1E2B                     	;# 
  1838  1E2C                     	;# 
  1839  1E2D                     	;# 
  1840  1E2E                     	;# 
  1841  1E2F                     	;# 
  1842  1E30                     	;# 
  1843  1E31                     	;# 
  1844  1E32                     	;# 
  1845  1E33                     	;# 
  1846  1E34                     	;# 
  1847  1E35                     	;# 
  1848  1E36                     	;# 
  1849  1E37                     	;# 
  1850  1E8F                     	;# 
  1851  1E90                     	;# 
  1852  1E91                     	;# 
  1853  1E92                     	;# 
  1854  1E93                     	;# 
  1855  1E94                     	;# 
  1856  1E95                     	;# 
  1857  1E96                     	;# 
  1858  1E97                     	;# 
  1859  1E9C                     	;# 
  1860  1E9D                     	;# 
  1861  1E9E                     	;# 
  1862  1EA1                     	;# 
  1863  1EA2                     	;# 
  1864  1EA3                     	;# 
  1865  1EA4                     	;# 
  1866  1EA9                     	;# 
  1867  1EAA                     	;# 
  1868  1EB1                     	;# 
  1869  1EB2                     	;# 
  1870  1EB8                     	;# 
  1871  1EB9                     	;# 
  1872  1EBA                     	;# 
  1873  1EBB                     	;# 
  1874  1EBC                     	;# 
  1875  1EBD                     	;# 
  1876  1EBE                     	;# 
  1877  1EC3                     	;# 
  1878  1EC5                     	;# 
  1879  1EC6                     	;# 
  1880  1EC7                     	;# 
  1881  1EC8                     	;# 
  1882  1EC9                     	;# 
  1883  1ECA                     	;# 
  1884  1ECB                     	;# 
  1885  1ECB                     	;# 
  1886  1ECB                     	;# 
  1887  1ECC                     	;# 
  1888  1ECC                     	;# 
  1889  1ECC                     	;# 
  1890  1F10                     	;# 
  1891  1F11                     	;# 
  1892  1F12                     	;# 
  1893  1F14                     	;# 
  1894  1F15                     	;# 
  1895  1F1C                     	;# 
  1896  1F1D                     	;# 
  1897  1F1E                     	;# 
  1898  1F1F                     	;# 
  1899  1F20                     	;# 
  1900  1F21                     	;# 
  1901  1F22                     	;# 
  1902  1F23                     	;# 
  1903  1F24                     	;# 
  1904  1F25                     	;# 
  1905  1F26                     	;# 
  1906  1F27                     	;# 
  1907  1F38                     	;# 
  1908  1F39                     	;# 
  1909  1F3A                     	;# 
  1910  1F3B                     	;# 
  1911  1F3C                     	;# 
  1912  1F3D                     	;# 
  1913  1F3E                     	;# 
  1914  1F3F                     	;# 
  1915  1F43                     	;# 
  1916  1F44                     	;# 
  1917  1F45                     	;# 
  1918  1F46                     	;# 
  1919  1F47                     	;# 
  1920  1F48                     	;# 
  1921  1F49                     	;# 
  1922  1F4A                     	;# 
  1923  1F4E                     	;# 
  1924  1F4F                     	;# 
  1925  1F50                     	;# 
  1926  1F51                     	;# 
  1927  1F52                     	;# 
  1928  1F53                     	;# 
  1929  1F54                     	;# 
  1930  1F55                     	;# 
  1931  1FE4                     	;# 
  1932  1FE5                     	;# 
  1933  1FE6                     	;# 
  1934  1FE7                     	;# 
  1935  1FE8                     	;# 
  1936  1FE8                     	;# 
  1937  1FE9                     	;# 
  1938  1FEA                     	;# 
  1939  1FEB                     	;# 
  1940  1FED                     	;# 
  1941  1FEE                     	;# 
  1942  1FEF                     	;# 
  1943  0000                     	;# 
  1944  0001                     	;# 
  1945  0002                     	;# 
  1946  0003                     	;# 
  1947  0004                     	;# 
  1948  0005                     	;# 
  1949  0006                     	;# 
  1950  0007                     	;# 
  1951  0008                     	;# 
  1952  0009                     	;# 
  1953  000A                     	;# 
  1954  000B                     	;# 
  1955  000C                     	;# 
  1956  000D                     	;# 
  1957  000E                     	;# 
  1958  0012                     	;# 
  1959  0013                     	;# 
  1960  0014                     	;# 
  1961  0018                     	;# 
  1962  0019                     	;# 
  1963  001A                     	;# 
  1964  008C                     	;# 
  1965  008C                     	;# 
  1966  008D                     	;# 
  1967  008E                     	;# 
  1968  008E                     	;# 
  1969  008F                     	;# 
  1970  0090                     	;# 
  1971  0090                     	;# 
  1972  0091                     	;# 
  1973  0092                     	;# 
  1974  0092                     	;# 
  1975  0093                     	;# 
  1976  0094                     	;# 
  1977  0094                     	;# 
  1978  0095                     	;# 
  1979  0096                     	;# 
  1980  0096                     	;# 
  1981  0097                     	;# 
  1982  0098                     	;# 
  1983  0099                     	;# 
  1984  009A                     	;# 
  1985  009B                     	;# 
  1986  009B                     	;# 
  1987  009C                     	;# 
  1988  009D                     	;# 
  1989  009D                     	;# 
  1990  009E                     	;# 
  1991  009F                     	;# 
  1992  010C                     	;# 
  1993  010C                     	;# 
  1994  010D                     	;# 
  1995  010E                     	;# 
  1996  010F                     	;# 
  1997  010F                     	;# 
  1998  0110                     	;# 
  1999  0111                     	;# 
  2000  0112                     	;# 
  2001  0113                     	;# 
  2002  0114                     	;# 
  2003  0115                     	;# 
  2004  0116                     	;# 
  2005  0117                     	;# 
  2006  0118                     	;# 
  2007  0119                     	;# 
  2008  0119                     	;# 
  2009  0119                     	;# 
  2010  011A                     	;# 
  2011  011A                     	;# 
  2012  011A                     	;# 
  2013  011B                     	;# 
  2014  011B                     	;# 
  2015  011B                     	;# 
  2016  011B                     	;# 
  2017  011B                     	;# 
  2018  011C                     	;# 
  2019  011C                     	;# 
  2020  011C                     	;# 
  2021  011D                     	;# 
  2022  011D                     	;# 
  2023  011D                     	;# 
  2024  011E                     	;# 
  2025  011E                     	;# 
  2026  011E                     	;# 
  2027  011F                     	;# 
  2028  011F                     	;# 
  2029  011F                     	;# 
  2030  011F                     	;# 
  2031  011F                     	;# 
  2032  018C                     	;# 
  2033  018D                     	;# 
  2034  018E                     	;# 
  2035  018F                     	;# 
  2036  0190                     	;# 
  2037  0191                     	;# 
  2038  0192                     	;# 
  2039  0196                     	;# 
  2040  0197                     	;# 
  2041  0198                     	;# 
  2042  0199                     	;# 
  2043  019A                     	;# 
  2044  019B                     	;# 
  2045  019C                     	;# 
  2046  020C                     	;# 
  2047  020D                     	;# 
  2048  020E                     	;# 
  2049  020E                     	;# 
  2050  020F                     	;# 
  2051  020F                     	;# 
  2052  0210                     	;# 
  2053  0210                     	;# 
  2054  0211                     	;# 
  2055  0211                     	;# 
  2056  0212                     	;# 
  2057  0213                     	;# 
  2058  0214                     	;# 
  2059  0214                     	;# 
  2060  0215                     	;# 
  2061  0215                     	;# 
  2062  0216                     	;# 
  2063  0216                     	;# 
  2064  0217                     	;# 
  2065  0217                     	;# 
  2066  0218                     	;# 
  2067  0219                     	;# 
  2068  021A                     	;# 
  2069  021A                     	;# 
  2070  021B                     	;# 
  2071  021B                     	;# 
  2072  021C                     	;# 
  2073  021C                     	;# 
  2074  021D                     	;# 
  2075  021D                     	;# 
  2076  021E                     	;# 
  2077  021F                     	;# 
  2078  028C                     	;# 
  2079  028C                     	;# 
  2080  028D                     	;# 
  2081  028D                     	;# 
  2082  028E                     	;# 
  2083  028F                     	;# 
  2084  0290                     	;# 
  2085  0291                     	;# 
  2086  0292                     	;# 
  2087  0292                     	;# 
  2088  0293                     	;# 
  2089  0293                     	;# 
  2090  0294                     	;# 
  2091  0295                     	;# 
  2092  0296                     	;# 
  2093  0297                     	;# 
  2094  0298                     	;# 
  2095  0298                     	;# 
  2096  0299                     	;# 
  2097  0299                     	;# 
  2098  029A                     	;# 
  2099  029B                     	;# 
  2100  029C                     	;# 
  2101  029D                     	;# 
  2102  029F                     	;# 
  2103  030C                     	;# 
  2104  030C                     	;# 
  2105  030D                     	;# 
  2106  030E                     	;# 
  2107  030F                     	;# 
  2108  0310                     	;# 
  2109  0310                     	;# 
  2110  0311                     	;# 
  2111  0312                     	;# 
  2112  0313                     	;# 
  2113  0314                     	;# 
  2114  0314                     	;# 
  2115  0315                     	;# 
  2116  0316                     	;# 
  2117  0317                     	;# 
  2118  0318                     	;# 
  2119  0318                     	;# 
  2120  0319                     	;# 
  2121  031A                     	;# 
  2122  031B                     	;# 
  2123  038C                     	;# 
  2124  038C                     	;# 
  2125  038D                     	;# 
  2126  038E                     	;# 
  2127  0390                     	;# 
  2128  0390                     	;# 
  2129  0391                     	;# 
  2130  0392                     	;# 
  2131  048C                     	;# 
  2132  048C                     	;# 
  2133  048D                     	;# 
  2134  048E                     	;# 
  2135  048F                     	;# 
  2136  048F                     	;# 
  2137  0490                     	;# 
  2138  0491                     	;# 
  2139  0492                     	;# 
  2140  0492                     	;# 
  2141  0493                     	;# 
  2142  0494                     	;# 
  2143  0495                     	;# 
  2144  0495                     	;# 
  2145  0496                     	;# 
  2146  0497                     	;# 
  2147  0498                     	;# 
  2148  0499                     	;# 
  2149  049A                     	;# 
  2150  049B                     	;# 
  2151  049C                     	;# 
  2152  049D                     	;# 
  2153  058C                     	;# 
  2154  058C                     	;# 
  2155  058D                     	;# 
  2156  058E                     	;# 
  2157  058F                     	;# 
  2158  058F                     	;# 
  2159  0590                     	;# 
  2160  0591                     	;# 
  2161  0592                     	;# 
  2162  0593                     	;# 
  2163  059C                     	;# 
  2164  059C                     	;# 
  2165  059D                     	;# 
  2166  059D                     	;# 
  2167  059E                     	;# 
  2168  059F                     	;# 
  2169  060C                     	;# 
  2170  060C                     	;# 
  2171  060D                     	;# 
  2172  060D                     	;# 
  2173  060E                     	;# 
  2174  060F                     	;# 
  2175  0610                     	;# 
  2176  0611                     	;# 
  2177  0612                     	;# 
  2178  0613                     	;# 
  2179  0614                     	;# 
  2180  0616                     	;# 
  2181  0616                     	;# 
  2182  0617                     	;# 
  2183  0617                     	;# 
  2184  0618                     	;# 
  2185  0619                     	;# 
  2186  061A                     	;# 
  2187  061B                     	;# 
  2188  061C                     	;# 
  2189  061D                     	;# 
  2190  061E                     	;# 
  2191  070C                     	;# 
  2192  070D                     	;# 
  2193  070E                     	;# 
  2194  070F                     	;# 
  2195  0710                     	;# 
  2196  0711                     	;# 
  2197  0712                     	;# 
  2198  0713                     	;# 
  2199  0714                     	;# 
  2200  0716                     	;# 
  2201  0717                     	;# 
  2202  0718                     	;# 
  2203  0719                     	;# 
  2204  071A                     	;# 
  2205  071B                     	;# 
  2206  071C                     	;# 
  2207  071D                     	;# 
  2208  071E                     	;# 
  2209  0796                     	;# 
  2210  0797                     	;# 
  2211  0798                     	;# 
  2212  0799                     	;# 
  2213  079A                     	;# 
  2214  079B                     	;# 
  2215  079C                     	;# 
  2216  079D                     	;# 
  2217  080C                     	;# 
  2218  080D                     	;# 
  2219  080E                     	;# 
  2220  080F                     	;# 
  2221  0810                     	;# 
  2222  0811                     	;# 
  2223  0812                     	;# 
  2224  0813                     	;# 
  2225  0814                     	;# 
  2226  081A                     	;# 
  2227  081A                     	;# 
  2228  081B                     	;# 
  2229  081C                     	;# 
  2230  081C                     	;# 
  2231  081D                     	;# 
  2232  081E                     	;# 
  2233  081F                     	;# 
  2234  088C                     	;# 
  2235  088D                     	;# 
  2236  088E                     	;# 
  2237  088F                     	;# 
  2238  0890                     	;# 
  2239  0891                     	;# 
  2240  0892                     	;# 
  2241  0893                     	;# 
  2242  0895                     	;# 
  2243  0896                     	;# 
  2244  0897                     	;# 
  2245  0898                     	;# 
  2246  0899                     	;# 
  2247  089A                     	;# 
  2248  089B                     	;# 
  2249  090C                     	;# 
  2250  090E                     	;# 
  2251  090F                     	;# 
  2252  091F                     	;# 
  2253  098F                     	;# 
  2254  098F                     	;# 
  2255  0990                     	;# 
  2256  0991                     	;# 
  2257  0992                     	;# 
  2258  0993                     	;# 
  2259  0994                     	;# 
  2260  0995                     	;# 
  2261  0996                     	;# 
  2262  0997                     	;# 
  2263  1E0F                     	;# 
  2264  1E10                     	;# 
  2265  1E11                     	;# 
  2266  1E12                     	;# 
  2267  1E13                     	;# 
  2268  1E14                     	;# 
  2269  1E15                     	;# 
  2270  1E16                     	;# 
  2271  1E17                     	;# 
  2272  1E18                     	;# 
  2273  1E19                     	;# 
  2274  1E1A                     	;# 
  2275  1E1B                     	;# 
  2276  1E1C                     	;# 
  2277  1E1D                     	;# 
  2278  1E1E                     	;# 
  2279  1E1F                     	;# 
  2280  1E20                     	;# 
  2281  1E21                     	;# 
  2282  1E22                     	;# 
  2283  1E23                     	;# 
  2284  1E24                     	;# 
  2285  1E25                     	;# 
  2286  1E26                     	;# 
  2287  1E27                     	;# 
  2288  1E28                     	;# 
  2289  1E29                     	;# 
  2290  1E2A                     	;# 
  2291  1E2B                     	;# 
  2292  1E2C                     	;# 
  2293  1E2D                     	;# 
  2294  1E2E                     	;# 
  2295  1E2F                     	;# 
  2296  1E30                     	;# 
  2297  1E31                     	;# 
  2298  1E32                     	;# 
  2299  1E33                     	;# 
  2300  1E34                     	;# 
  2301  1E35                     	;# 
  2302  1E36                     	;# 
  2303  1E37                     	;# 
  2304  1E8F                     	;# 
  2305  1E90                     	;# 
  2306  1E91                     	;# 
  2307  1E92                     	;# 
  2308  1E93                     	;# 
  2309  1E94                     	;# 
  2310  1E95                     	;# 
  2311  1E96                     	;# 
  2312  1E97                     	;# 
  2313  1E9C                     	;# 
  2314  1E9D                     	;# 
  2315  1E9E                     	;# 
  2316  1EA1                     	;# 
  2317  1EA2                     	;# 
  2318  1EA3                     	;# 
  2319  1EA4                     	;# 
  2320  1EA9                     	;# 
  2321  1EAA                     	;# 
  2322  1EB1                     	;# 
  2323  1EB2                     	;# 
  2324  1EB8                     	;# 
  2325  1EB9                     	;# 
  2326  1EBA                     	;# 
  2327  1EBB                     	;# 
  2328  1EBC                     	;# 
  2329  1EBD                     	;# 
  2330  1EBE                     	;# 
  2331  1EC3                     	;# 
  2332  1EC5                     	;# 
  2333  1EC6                     	;# 
  2334  1EC7                     	;# 
  2335  1EC8                     	;# 
  2336  1EC9                     	;# 
  2337  1ECA                     	;# 
  2338  1ECB                     	;# 
  2339  1ECB                     	;# 
  2340  1ECB                     	;# 
  2341  1ECC                     	;# 
  2342  1ECC                     	;# 
  2343  1ECC                     	;# 
  2344  1F10                     	;# 
  2345  1F11                     	;# 
  2346  1F12                     	;# 
  2347  1F14                     	;# 
  2348  1F15                     	;# 
  2349  1F1C                     	;# 
  2350  1F1D                     	;# 
  2351  1F1E                     	;# 
  2352  1F1F                     	;# 
  2353  1F20                     	;# 
  2354  1F21                     	;# 
  2355  1F22                     	;# 
  2356  1F23                     	;# 
  2357  1F24                     	;# 
  2358  1F25                     	;# 
  2359  1F26                     	;# 
  2360  1F27                     	;# 
  2361  1F38                     	;# 
  2362  1F39                     	;# 
  2363  1F3A                     	;# 
  2364  1F3B                     	;# 
  2365  1F3C                     	;# 
  2366  1F3D                     	;# 
  2367  1F3E                     	;# 
  2368  1F3F                     	;# 
  2369  1F43                     	;# 
  2370  1F44                     	;# 
  2371  1F45                     	;# 
  2372  1F46                     	;# 
  2373  1F47                     	;# 
  2374  1F48                     	;# 
  2375  1F49                     	;# 
  2376  1F4A                     	;# 
  2377  1F4E                     	;# 
  2378  1F4F                     	;# 
  2379  1F50                     	;# 
  2380  1F51                     	;# 
  2381  1F52                     	;# 
  2382  1F53                     	;# 
  2383  1F54                     	;# 
  2384  1F55                     	;# 
  2385  1FE4                     	;# 
  2386  1FE5                     	;# 
  2387  1FE6                     	;# 
  2388  1FE7                     	;# 
  2389  1FE8                     	;# 
  2390  1FE8                     	;# 
  2391  1FE9                     	;# 
  2392  1FEA                     	;# 
  2393  1FEB                     	;# 
  2394  1FED                     	;# 
  2395  1FEE                     	;# 
  2396  1FEF                     	;# 
  2397  0000                     	;# 
  2398  0001                     	;# 
  2399  0002                     	;# 
  2400  0003                     	;# 
  2401  0004                     	;# 
  2402  0005                     	;# 
  2403  0006                     	;# 
  2404  0007                     	;# 
  2405  0008                     	;# 
  2406  0009                     	;# 
  2407  000A                     	;# 
  2408  000B                     	;# 
  2409  000C                     	;# 
  2410  000D                     	;# 
  2411  000E                     	;# 
  2412  0012                     	;# 
  2413  0013                     	;# 
  2414  0014                     	;# 
  2415  0018                     	;# 
  2416  0019                     	;# 
  2417  001A                     	;# 
  2418  008C                     	;# 
  2419  008C                     	;# 
  2420  008D                     	;# 
  2421  008E                     	;# 
  2422  008E                     	;# 
  2423  008F                     	;# 
  2424  0090                     	;# 
  2425  0090                     	;# 
  2426  0091                     	;# 
  2427  0092                     	;# 
  2428  0092                     	;# 
  2429  0093                     	;# 
  2430  0094                     	;# 
  2431  0094                     	;# 
  2432  0095                     	;# 
  2433  0096                     	;# 
  2434  0096                     	;# 
  2435  0097                     	;# 
  2436  0098                     	;# 
  2437  0099                     	;# 
  2438  009A                     	;# 
  2439  009B                     	;# 
  2440  009B                     	;# 
  2441  009C                     	;# 
  2442  009D                     	;# 
  2443  009D                     	;# 
  2444  009E                     	;# 
  2445  009F                     	;# 
  2446  010C                     	;# 
  2447  010C                     	;# 
  2448  010D                     	;# 
  2449  010E                     	;# 
  2450  010F                     	;# 
  2451  010F                     	;# 
  2452  0110                     	;# 
  2453  0111                     	;# 
  2454  0112                     	;# 
  2455  0113                     	;# 
  2456  0114                     	;# 
  2457  0115                     	;# 
  2458  0116                     	;# 
  2459  0117                     	;# 
  2460  0118                     	;# 
  2461  0119                     	;# 
  2462  0119                     	;# 
  2463  0119                     	;# 
  2464  011A                     	;# 
  2465  011A                     	;# 
  2466  011A                     	;# 
  2467  011B                     	;# 
  2468  011B                     	;# 
  2469  011B                     	;# 
  2470  011B                     	;# 
  2471  011B                     	;# 
  2472  011C                     	;# 
  2473  011C                     	;# 
  2474  011C                     	;# 
  2475  011D                     	;# 
  2476  011D                     	;# 
  2477  011D                     	;# 
  2478  011E                     	;# 
  2479  011E                     	;# 
  2480  011E                     	;# 
  2481  011F                     	;# 
  2482  011F                     	;# 
  2483  011F                     	;# 
  2484  011F                     	;# 
  2485  011F                     	;# 
  2486  018C                     	;# 
  2487  018D                     	;# 
  2488  018E                     	;# 
  2489  018F                     	;# 
  2490  0190                     	;# 
  2491  0191                     	;# 
  2492  0192                     	;# 
  2493  0196                     	;# 
  2494  0197                     	;# 
  2495  0198                     	;# 
  2496  0199                     	;# 
  2497  019A                     	;# 
  2498  019B                     	;# 
  2499  019C                     	;# 
  2500  020C                     	;# 
  2501  020D                     	;# 
  2502  020E                     	;# 
  2503  020E                     	;# 
  2504  020F                     	;# 
  2505  020F                     	;# 
  2506  0210                     	;# 
  2507  0210                     	;# 
  2508  0211                     	;# 
  2509  0211                     	;# 
  2510  0212                     	;# 
  2511  0213                     	;# 
  2512  0214                     	;# 
  2513  0214                     	;# 
  2514  0215                     	;# 
  2515  0215                     	;# 
  2516  0216                     	;# 
  2517  0216                     	;# 
  2518  0217                     	;# 
  2519  0217                     	;# 
  2520  0218                     	;# 
  2521  0219                     	;# 
  2522  021A                     	;# 
  2523  021A                     	;# 
  2524  021B                     	;# 
  2525  021B                     	;# 
  2526  021C                     	;# 
  2527  021C                     	;# 
  2528  021D                     	;# 
  2529  021D                     	;# 
  2530  021E                     	;# 
  2531  021F                     	;# 
  2532  028C                     	;# 
  2533  028C                     	;# 
  2534  028D                     	;# 
  2535  028D                     	;# 
  2536  028E                     	;# 
  2537  028F                     	;# 
  2538  0290                     	;# 
  2539  0291                     	;# 
  2540  0292                     	;# 
  2541  0292                     	;# 
  2542  0293                     	;# 
  2543  0293                     	;# 
  2544  0294                     	;# 
  2545  0295                     	;# 
  2546  0296                     	;# 
  2547  0297                     	;# 
  2548  0298                     	;# 
  2549  0298                     	;# 
  2550  0299                     	;# 
  2551  0299                     	;# 
  2552  029A                     	;# 
  2553  029B                     	;# 
  2554  029C                     	;# 
  2555  029D                     	;# 
  2556  029F                     	;# 
  2557  030C                     	;# 
  2558  030C                     	;# 
  2559  030D                     	;# 
  2560  030E                     	;# 
  2561  030F                     	;# 
  2562  0310                     	;# 
  2563  0310                     	;# 
  2564  0311                     	;# 
  2565  0312                     	;# 
  2566  0313                     	;# 
  2567  0314                     	;# 
  2568  0314                     	;# 
  2569  0315                     	;# 
  2570  0316                     	;# 
  2571  0317                     	;# 
  2572  0318                     	;# 
  2573  0318                     	;# 
  2574  0319                     	;# 
  2575  031A                     	;# 
  2576  031B                     	;# 
  2577  038C                     	;# 
  2578  038C                     	;# 
  2579  038D                     	;# 
  2580  038E                     	;# 
  2581  0390                     	;# 
  2582  0390                     	;# 
  2583  0391                     	;# 
  2584  0392                     	;# 
  2585  048C                     	;# 
  2586  048C                     	;# 
  2587  048D                     	;# 
  2588  048E                     	;# 
  2589  048F                     	;# 
  2590  048F                     	;# 
  2591  0490                     	;# 
  2592  0491                     	;# 
  2593  0492                     	;# 
  2594  0492                     	;# 
  2595  0493                     	;# 
  2596  0494                     	;# 
  2597  0495                     	;# 
  2598  0495                     	;# 
  2599  0496                     	;# 
  2600  0497                     	;# 
  2601  0498                     	;# 
  2602  0499                     	;# 
  2603  049A                     	;# 
  2604  049B                     	;# 
  2605  049C                     	;# 
  2606  049D                     	;# 
  2607  058C                     	;# 
  2608  058C                     	;# 
  2609  058D                     	;# 
  2610  058E                     	;# 
  2611  058F                     	;# 
  2612  058F                     	;# 
  2613  0590                     	;# 
  2614  0591                     	;# 
  2615  0592                     	;# 
  2616  0593                     	;# 
  2617  059C                     	;# 
  2618  059C                     	;# 
  2619  059D                     	;# 
  2620  059D                     	;# 
  2621  059E                     	;# 
  2622  059F                     	;# 
  2623  060C                     	;# 
  2624  060C                     	;# 
  2625  060D                     	;# 
  2626  060D                     	;# 
  2627  060E                     	;# 
  2628  060F                     	;# 
  2629  0610                     	;# 
  2630  0611                     	;# 
  2631  0612                     	;# 
  2632  0613                     	;# 
  2633  0614                     	;# 
  2634  0616                     	;# 
  2635  0616                     	;# 
  2636  0617                     	;# 
  2637  0617                     	;# 
  2638  0618                     	;# 
  2639  0619                     	;# 
  2640  061A                     	;# 
  2641  061B                     	;# 
  2642  061C                     	;# 
  2643  061D                     	;# 
  2644  061E                     	;# 
  2645  070C                     	;# 
  2646  070D                     	;# 
  2647  070E                     	;# 
  2648  070F                     	;# 
  2649  0710                     	;# 
  2650  0711                     	;# 
  2651  0712                     	;# 
  2652  0713                     	;# 
  2653  0714                     	;# 
  2654  0716                     	;# 
  2655  0717                     	;# 
  2656  0718                     	;# 
  2657  0719                     	;# 
  2658  071A                     	;# 
  2659  071B                     	;# 
  2660  071C                     	;# 
  2661  071D                     	;# 
  2662  071E                     	;# 
  2663  0796                     	;# 
  2664  0797                     	;# 
  2665  0798                     	;# 
  2666  0799                     	;# 
  2667  079A                     	;# 
  2668  079B                     	;# 
  2669  079C                     	;# 
  2670  079D                     	;# 
  2671  080C                     	;# 
  2672  080D                     	;# 
  2673  080E                     	;# 
  2674  080F                     	;# 
  2675  0810                     	;# 
  2676  0811                     	;# 
  2677  0812                     	;# 
  2678  0813                     	;# 
  2679  0814                     	;# 
  2680  081A                     	;# 
  2681  081A                     	;# 
  2682  081B                     	;# 
  2683  081C                     	;# 
  2684  081C                     	;# 
  2685  081D                     	;# 
  2686  081E                     	;# 
  2687  081F                     	;# 
  2688  088C                     	;# 
  2689  088D                     	;# 
  2690  088E                     	;# 
  2691  088F                     	;# 
  2692  0890                     	;# 
  2693  0891                     	;# 
  2694  0892                     	;# 
  2695  0893                     	;# 
  2696  0895                     	;# 
  2697  0896                     	;# 
  2698  0897                     	;# 
  2699  0898                     	;# 
  2700  0899                     	;# 
  2701  089A                     	;# 
  2702  089B                     	;# 
  2703  090C                     	;# 
  2704  090E                     	;# 
  2705  090F                     	;# 
  2706  091F                     	;# 
  2707  098F                     	;# 
  2708  098F                     	;# 
  2709  0990                     	;# 
  2710  0991                     	;# 
  2711  0992                     	;# 
  2712  0993                     	;# 
  2713  0994                     	;# 
  2714  0995                     	;# 
  2715  0996                     	;# 
  2716  0997                     	;# 
  2717  1E0F                     	;# 
  2718  1E10                     	;# 
  2719  1E11                     	;# 
  2720  1E12                     	;# 
  2721  1E13                     	;# 
  2722  1E14                     	;# 
  2723  1E15                     	;# 
  2724  1E16                     	;# 
  2725  1E17                     	;# 
  2726  1E18                     	;# 
  2727  1E19                     	;# 
  2728  1E1A                     	;# 
  2729  1E1B                     	;# 
  2730  1E1C                     	;# 
  2731  1E1D                     	;# 
  2732  1E1E                     	;# 
  2733  1E1F                     	;# 
  2734  1E20                     	;# 
  2735  1E21                     	;# 
  2736  1E22                     	;# 
  2737  1E23                     	;# 
  2738  1E24                     	;# 
  2739  1E25                     	;# 
  2740  1E26                     	;# 
  2741  1E27                     	;# 
  2742  1E28                     	;# 
  2743  1E29                     	;# 
  2744  1E2A                     	;# 
  2745  1E2B                     	;# 
  2746  1E2C                     	;# 
  2747  1E2D                     	;# 
  2748  1E2E                     	;# 
  2749  1E2F                     	;# 
  2750  1E30                     	;# 
  2751  1E31                     	;# 
  2752  1E32                     	;# 
  2753  1E33                     	;# 
  2754  1E34                     	;# 
  2755  1E35                     	;# 
  2756  1E36                     	;# 
  2757  1E37                     	;# 
  2758  1E8F                     	;# 
  2759  1E90                     	;# 
  2760  1E91                     	;# 
  2761  1E92                     	;# 
  2762  1E93                     	;# 
  2763  1E94                     	;# 
  2764  1E95                     	;# 
  2765  1E96                     	;# 
  2766  1E97                     	;# 
  2767  1E9C                     	;# 
  2768  1E9D                     	;# 
  2769  1E9E                     	;# 
  2770  1EA1                     	;# 
  2771  1EA2                     	;# 
  2772  1EA3                     	;# 
  2773  1EA4                     	;# 
  2774  1EA9                     	;# 
  2775  1EAA                     	;# 
  2776  1EB1                     	;# 
  2777  1EB2                     	;# 
  2778  1EB8                     	;# 
  2779  1EB9                     	;# 
  2780  1EBA                     	;# 
  2781  1EBB                     	;# 
  2782  1EBC                     	;# 
  2783  1EBD                     	;# 
  2784  1EBE                     	;# 
  2785  1EC3                     	;# 
  2786  1EC5                     	;# 
  2787  1EC6                     	;# 
  2788  1EC7                     	;# 
  2789  1EC8                     	;# 
  2790  1EC9                     	;# 
  2791  1ECA                     	;# 
  2792  1ECB                     	;# 
  2793  1ECB                     	;# 
  2794  1ECB                     	;# 
  2795  1ECC                     	;# 
  2796  1ECC                     	;# 
  2797  1ECC                     	;# 
  2798  1F10                     	;# 
  2799  1F11                     	;# 
  2800  1F12                     	;# 
  2801  1F14                     	;# 
  2802  1F15                     	;# 
  2803  1F1C                     	;# 
  2804  1F1D                     	;# 
  2805  1F1E                     	;# 
  2806  1F1F                     	;# 
  2807  1F20                     	;# 
  2808  1F21                     	;# 
  2809  1F22                     	;# 
  2810  1F23                     	;# 
  2811  1F24                     	;# 
  2812  1F25                     	;# 
  2813  1F26                     	;# 
  2814  1F27                     	;# 
  2815  1F38                     	;# 
  2816  1F39                     	;# 
  2817  1F3A                     	;# 
  2818  1F3B                     	;# 
  2819  1F3C                     	;# 
  2820  1F3D                     	;# 
  2821  1F3E                     	;# 
  2822  1F3F                     	;# 
  2823  1F43                     	;# 
  2824  1F44                     	;# 
  2825  1F45                     	;# 
  2826  1F46                     	;# 
  2827  1F47                     	;# 
  2828  1F48                     	;# 
  2829  1F49                     	;# 
  2830  1F4A                     	;# 
  2831  1F4E                     	;# 
  2832  1F4F                     	;# 
  2833  1F50                     	;# 
  2834  1F51                     	;# 
  2835  1F52                     	;# 
  2836  1F53                     	;# 
  2837  1F54                     	;# 
  2838  1F55                     	;# 
  2839  1FE4                     	;# 
  2840  1FE5                     	;# 
  2841  1FE6                     	;# 
  2842  1FE7                     	;# 
  2843  1FE8                     	;# 
  2844  1FE8                     	;# 
  2845  1FE9                     	;# 
  2846  1FEA                     	;# 
  2847  1FEB                     	;# 
  2848  1FED                     	;# 
  2849  1FEE                     	;# 
  2850  1FEF                     	;# 
  2851  0000                     	;# 
  2852  0001                     	;# 
  2853  0002                     	;# 
  2854  0003                     	;# 
  2855  0004                     	;# 
  2856  0005                     	;# 
  2857  0006                     	;# 
  2858  0007                     	;# 
  2859  0008                     	;# 
  2860  0009                     	;# 
  2861  000A                     	;# 
  2862  000B                     	;# 
  2863  000C                     	;# 
  2864  000D                     	;# 
  2865  000E                     	;# 
  2866  0012                     	;# 
  2867  0013                     	;# 
  2868  0014                     	;# 
  2869  0018                     	;# 
  2870  0019                     	;# 
  2871  001A                     	;# 
  2872  008C                     	;# 
  2873  008C                     	;# 
  2874  008D                     	;# 
  2875  008E                     	;# 
  2876  008E                     	;# 
  2877  008F                     	;# 
  2878  0090                     	;# 
  2879  0090                     	;# 
  2880  0091                     	;# 
  2881  0092                     	;# 
  2882  0092                     	;# 
  2883  0093                     	;# 
  2884  0094                     	;# 
  2885  0094                     	;# 
  2886  0095                     	;# 
  2887  0096                     	;# 
  2888  0096                     	;# 
  2889  0097                     	;# 
  2890  0098                     	;# 
  2891  0099                     	;# 
  2892  009A                     	;# 
  2893  009B                     	;# 
  2894  009B                     	;# 
  2895  009C                     	;# 
  2896  009D                     	;# 
  2897  009D                     	;# 
  2898  009E                     	;# 
  2899  009F                     	;# 
  2900  010C                     	;# 
  2901  010C                     	;# 
  2902  010D                     	;# 
  2903  010E                     	;# 
  2904  010F                     	;# 
  2905  010F                     	;# 
  2906  0110                     	;# 
  2907  0111                     	;# 
  2908  0112                     	;# 
  2909  0113                     	;# 
  2910  0114                     	;# 
  2911  0115                     	;# 
  2912  0116                     	;# 
  2913  0117                     	;# 
  2914  0118                     	;# 
  2915  0119                     	;# 
  2916  0119                     	;# 
  2917  0119                     	;# 
  2918  011A                     	;# 
  2919  011A                     	;# 
  2920  011A                     	;# 
  2921  011B                     	;# 
  2922  011B                     	;# 
  2923  011B                     	;# 
  2924  011B                     	;# 
  2925  011B                     	;# 
  2926  011C                     	;# 
  2927  011C                     	;# 
  2928  011C                     	;# 
  2929  011D                     	;# 
  2930  011D                     	;# 
  2931  011D                     	;# 
  2932  011E                     	;# 
  2933  011E                     	;# 
  2934  011E                     	;# 
  2935  011F                     	;# 
  2936  011F                     	;# 
  2937  011F                     	;# 
  2938  011F                     	;# 
  2939  011F                     	;# 
  2940  018C                     	;# 
  2941  018D                     	;# 
  2942  018E                     	;# 
  2943  018F                     	;# 
  2944  0190                     	;# 
  2945  0191                     	;# 
  2946  0192                     	;# 
  2947  0196                     	;# 
  2948  0197                     	;# 
  2949  0198                     	;# 
  2950  0199                     	;# 
  2951  019A                     	;# 
  2952  019B                     	;# 
  2953  019C                     	;# 
  2954  020C                     	;# 
  2955  020D                     	;# 
  2956  020E                     	;# 
  2957  020E                     	;# 
  2958  020F                     	;# 
  2959  020F                     	;# 
  2960  0210                     	;# 
  2961  0210                     	;# 
  2962  0211                     	;# 
  2963  0211                     	;# 
  2964  0212                     	;# 
  2965  0213                     	;# 
  2966  0214                     	;# 
  2967  0214                     	;# 
  2968  0215                     	;# 
  2969  0215                     	;# 
  2970  0216                     	;# 
  2971  0216                     	;# 
  2972  0217                     	;# 
  2973  0217                     	;# 
  2974  0218                     	;# 
  2975  0219                     	;# 
  2976  021A                     	;# 
  2977  021A                     	;# 
  2978  021B                     	;# 
  2979  021B                     	;# 
  2980  021C                     	;# 
  2981  021C                     	;# 
  2982  021D                     	;# 
  2983  021D                     	;# 
  2984  021E                     	;# 
  2985  021F                     	;# 
  2986  028C                     	;# 
  2987  028C                     	;# 
  2988  028D                     	;# 
  2989  028D                     	;# 
  2990  028E                     	;# 
  2991  028F                     	;# 
  2992  0290                     	;# 
  2993  0291                     	;# 
  2994  0292                     	;# 
  2995  0292                     	;# 
  2996  0293                     	;# 
  2997  0293                     	;# 
  2998  0294                     	;# 
  2999  0295                     	;# 
  3000  0296                     	;# 
  3001  0297                     	;# 
  3002  0298                     	;# 
  3003  0298                     	;# 
  3004  0299                     	;# 
  3005  0299                     	;# 
  3006  029A                     	;# 
  3007  029B                     	;# 
  3008  029C                     	;# 
  3009  029D                     	;# 
  3010  029F                     	;# 
  3011  030C                     	;# 
  3012  030C                     	;# 
  3013  030D                     	;# 
  3014  030E                     	;# 
  3015  030F                     	;# 
  3016  0310                     	;# 
  3017  0310                     	;# 
  3018  0311                     	;# 
  3019  0312                     	;# 
  3020  0313                     	;# 
  3021  0314                     	;# 
  3022  0314                     	;# 
  3023  0315                     	;# 
  3024  0316                     	;# 
  3025  0317                     	;# 
  3026  0318                     	;# 
  3027  0318                     	;# 
  3028  0319                     	;# 
  3029  031A                     	;# 
  3030  031B                     	;# 
  3031  038C                     	;# 
  3032  038C                     	;# 
  3033  038D                     	;# 
  3034  038E                     	;# 
  3035  0390                     	;# 
  3036  0390                     	;# 
  3037  0391                     	;# 
  3038  0392                     	;# 
  3039  048C                     	;# 
  3040  048C                     	;# 
  3041  048D                     	;# 
  3042  048E                     	;# 
  3043  048F                     	;# 
  3044  048F                     	;# 
  3045  0490                     	;# 
  3046  0491                     	;# 
  3047  0492                     	;# 
  3048  0492                     	;# 
  3049  0493                     	;# 
  3050  0494                     	;# 
  3051  0495                     	;# 
  3052  0495                     	;# 
  3053  0496                     	;# 
  3054  0497                     	;# 
  3055  0498                     	;# 
  3056  0499                     	;# 
  3057  049A                     	;# 
  3058  049B                     	;# 
  3059  049C                     	;# 
  3060  049D                     	;# 
  3061  058C                     	;# 
  3062  058C                     	;# 
  3063  058D                     	;# 
  3064  058E                     	;# 
  3065  058F                     	;# 
  3066  058F                     	;# 
  3067  0590                     	;# 
  3068  0591                     	;# 
  3069  0592                     	;# 
  3070  0593                     	;# 
  3071  059C                     	;# 
  3072  059C                     	;# 
  3073  059D                     	;# 
  3074  059D                     	;# 
  3075  059E                     	;# 
  3076  059F                     	;# 
  3077  060C                     	;# 
  3078  060C                     	;# 
  3079  060D                     	;# 
  3080  060D                     	;# 
  3081  060E                     	;# 
  3082  060F                     	;# 
  3083  0610                     	;# 
  3084  0611                     	;# 
  3085  0612                     	;# 
  3086  0613                     	;# 
  3087  0614                     	;# 
  3088  0616                     	;# 
  3089  0616                     	;# 
  3090  0617                     	;# 
  3091  0617                     	;# 
  3092  0618                     	;# 
  3093  0619                     	;# 
  3094  061A                     	;# 
  3095  061B                     	;# 
  3096  061C                     	;# 
  3097  061D                     	;# 
  3098  061E                     	;# 
  3099  070C                     	;# 
  3100  070D                     	;# 
  3101  070E                     	;# 
  3102  070F                     	;# 
  3103  0710                     	;# 
  3104  0711                     	;# 
  3105  0712                     	;# 
  3106  0713                     	;# 
  3107  0714                     	;# 
  3108  0716                     	;# 
  3109  0717                     	;# 
  3110  0718                     	;# 
  3111  0719                     	;# 
  3112  071A                     	;# 
  3113  071B                     	;# 
  3114  071C                     	;# 
  3115  071D                     	;# 
  3116  071E                     	;# 
  3117  0796                     	;# 
  3118  0797                     	;# 
  3119  0798                     	;# 
  3120  0799                     	;# 
  3121  079A                     	;# 
  3122  079B                     	;# 
  3123  079C                     	;# 
  3124  079D                     	;# 
  3125  080C                     	;# 
  3126  080D                     	;# 
  3127  080E                     	;# 
  3128  080F                     	;# 
  3129  0810                     	;# 
  3130  0811                     	;# 
  3131  0812                     	;# 
  3132  0813                     	;# 
  3133  0814                     	;# 
  3134  081A                     	;# 
  3135  081A                     	;# 
  3136  081B                     	;# 
  3137  081C                     	;# 
  3138  081C                     	;# 
  3139  081D                     	;# 
  3140  081E                     	;# 
  3141  081F                     	;# 
  3142  088C                     	;# 
  3143  088D                     	;# 
  3144  088E                     	;# 
  3145  088F                     	;# 
  3146  0890                     	;# 
  3147  0891                     	;# 
  3148  0892                     	;# 
  3149  0893                     	;# 
  3150  0895                     	;# 
  3151  0896                     	;# 
  3152  0897                     	;# 
  3153  0898                     	;# 
  3154  0899                     	;# 
  3155  089A                     	;# 
  3156  089B                     	;# 
  3157  090C                     	;# 
  3158  090E                     	;# 
  3159  090F                     	;# 
  3160  091F                     	;# 
  3161  098F                     	;# 
  3162  098F                     	;# 
  3163  0990                     	;# 
  3164  0991                     	;# 
  3165  0992                     	;# 
  3166  0993                     	;# 
  3167  0994                     	;# 
  3168  0995                     	;# 
  3169  0996                     	;# 
  3170  0997                     	;# 
  3171  1E0F                     	;# 
  3172  1E10                     	;# 
  3173  1E11                     	;# 
  3174  1E12                     	;# 
  3175  1E13                     	;# 
  3176  1E14                     	;# 
  3177  1E15                     	;# 
  3178  1E16                     	;# 
  3179  1E17                     	;# 
  3180  1E18                     	;# 
  3181  1E19                     	;# 
  3182  1E1A                     	;# 
  3183  1E1B                     	;# 
  3184  1E1C                     	;# 
  3185  1E1D                     	;# 
  3186  1E1E                     	;# 
  3187  1E1F                     	;# 
  3188  1E20                     	;# 
  3189  1E21                     	;# 
  3190  1E22                     	;# 
  3191  1E23                     	;# 
  3192  1E24                     	;# 
  3193  1E25                     	;# 
  3194  1E26                     	;# 
  3195  1E27                     	;# 
  3196  1E28                     	;# 
  3197  1E29                     	;# 
  3198  1E2A                     	;# 
  3199  1E2B                     	;# 
  3200  1E2C                     	;# 
  3201  1E2D                     	;# 
  3202  1E2E                     	;# 
  3203  1E2F                     	;# 
  3204  1E30                     	;# 
  3205  1E31                     	;# 
  3206  1E32                     	;# 
  3207  1E33                     	;# 
  3208  1E34                     	;# 
  3209  1E35                     	;# 
  3210  1E36                     	;# 
  3211  1E37                     	;# 
  3212  1E8F                     	;# 
  3213  1E90                     	;# 
  3214  1E91                     	;# 
  3215  1E92                     	;# 
  3216  1E93                     	;# 
  3217  1E94                     	;# 
  3218  1E95                     	;# 
  3219  1E96                     	;# 
  3220  1E97                     	;# 
  3221  1E9C                     	;# 
  3222  1E9D                     	;# 
  3223  1E9E                     	;# 
  3224  1EA1                     	;# 
  3225  1EA2                     	;# 
  3226  1EA3                     	;# 
  3227  1EA4                     	;# 
  3228  1EA9                     	;# 
  3229  1EAA                     	;# 
  3230  1EB1                     	;# 
  3231  1EB2                     	;# 
  3232  1EB8                     	;# 
  3233  1EB9                     	;# 
  3234  1EBA                     	;# 
  3235  1EBB                     	;# 
  3236  1EBC                     	;# 
  3237  1EBD                     	;# 
  3238  1EBE                     	;# 
  3239  1EC3                     	;# 
  3240  1EC5                     	;# 
  3241  1EC6                     	;# 
  3242  1EC7                     	;# 
  3243  1EC8                     	;# 
  3244  1EC9                     	;# 
  3245  1ECA                     	;# 
  3246  1ECB                     	;# 
  3247  1ECB                     	;# 
  3248  1ECB                     	;# 
  3249  1ECC                     	;# 
  3250  1ECC                     	;# 
  3251  1ECC                     	;# 
  3252  1F10                     	;# 
  3253  1F11                     	;# 
  3254  1F12                     	;# 
  3255  1F14                     	;# 
  3256  1F15                     	;# 
  3257  1F1C                     	;# 
  3258  1F1D                     	;# 
  3259  1F1E                     	;# 
  3260  1F1F                     	;# 
  3261  1F20                     	;# 
  3262  1F21                     	;# 
  3263  1F22                     	;# 
  3264  1F23                     	;# 
  3265  1F24                     	;# 
  3266  1F25                     	;# 
  3267  1F26                     	;# 
  3268  1F27                     	;# 
  3269  1F38                     	;# 
  3270  1F39                     	;# 
  3271  1F3A                     	;# 
  3272  1F3B                     	;# 
  3273  1F3C                     	;# 
  3274  1F3D                     	;# 
  3275  1F3E                     	;# 
  3276  1F3F                     	;# 
  3277  1F43                     	;# 
  3278  1F44                     	;# 
  3279  1F45                     	;# 
  3280  1F46                     	;# 
  3281  1F47                     	;# 
  3282  1F48                     	;# 
  3283  1F49                     	;# 
  3284  1F4A                     	;# 
  3285  1F4E                     	;# 
  3286  1F4F                     	;# 
  3287  1F50                     	;# 
  3288  1F51                     	;# 
  3289  1F52                     	;# 
  3290  1F53                     	;# 
  3291  1F54                     	;# 
  3292  1F55                     	;# 
  3293  1FE4                     	;# 
  3294  1FE5                     	;# 
  3295  1FE6                     	;# 
  3296  1FE7                     	;# 
  3297  1FE8                     	;# 
  3298  1FE8                     	;# 
  3299  1FE9                     	;# 
  3300  1FEA                     	;# 
  3301  1FEB                     	;# 
  3302  1FED                     	;# 
  3303  1FEE                     	;# 
  3304  1FEF                     	;# 
  3305  0000                     	;# 
  3306  0001                     	;# 
  3307  0002                     	;# 
  3308  0003                     	;# 
  3309  0004                     	;# 
  3310  0005                     	;# 
  3311  0006                     	;# 
  3312  0007                     	;# 
  3313  0008                     	;# 
  3314  0009                     	;# 
  3315  000A                     	;# 
  3316  000B                     	;# 
  3317  000C                     	;# 
  3318  000D                     	;# 
  3319  000E                     	;# 
  3320  0012                     	;# 
  3321  0013                     	;# 
  3322  0014                     	;# 
  3323  0018                     	;# 
  3324  0019                     	;# 
  3325  001A                     	;# 
  3326  008C                     	;# 
  3327  008C                     	;# 
  3328  008D                     	;# 
  3329  008E                     	;# 
  3330  008E                     	;# 
  3331  008F                     	;# 
  3332  0090                     	;# 
  3333  0090                     	;# 
  3334  0091                     	;# 
  3335  0092                     	;# 
  3336  0092                     	;# 
  3337  0093                     	;# 
  3338  0094                     	;# 
  3339  0094                     	;# 
  3340  0095                     	;# 
  3341  0096                     	;# 
  3342  0096                     	;# 
  3343  0097                     	;# 
  3344  0098                     	;# 
  3345  0099                     	;# 
  3346  009A                     	;# 
  3347  009B                     	;# 
  3348  009B                     	;# 
  3349  009C                     	;# 
  3350  009D                     	;# 
  3351  009D                     	;# 
  3352  009E                     	;# 
  3353  009F                     	;# 
  3354  010C                     	;# 
  3355  010C                     	;# 
  3356  010D                     	;# 
  3357  010E                     	;# 
  3358  010F                     	;# 
  3359  010F                     	;# 
  3360  0110                     	;# 
  3361  0111                     	;# 
  3362  0112                     	;# 
  3363  0113                     	;# 
  3364  0114                     	;# 
  3365  0115                     	;# 
  3366  0116                     	;# 
  3367  0117                     	;# 
  3368  0118                     	;# 
  3369  0119                     	;# 
  3370  0119                     	;# 
  3371  0119                     	;# 
  3372  011A                     	;# 
  3373  011A                     	;# 
  3374  011A                     	;# 
  3375  011B                     	;# 
  3376  011B                     	;# 
  3377  011B                     	;# 
  3378  011B                     	;# 
  3379  011B                     	;# 
  3380  011C                     	;# 
  3381  011C                     	;# 
  3382  011C                     	;# 
  3383  011D                     	;# 
  3384  011D                     	;# 
  3385  011D                     	;# 
  3386  011E                     	;# 
  3387  011E                     	;# 
  3388  011E                     	;# 
  3389  011F                     	;# 
  3390  011F                     	;# 
  3391  011F                     	;# 
  3392  011F                     	;# 
  3393  011F                     	;# 
  3394  018C                     	;# 
  3395  018D                     	;# 
  3396  018E                     	;# 
  3397  018F                     	;# 
  3398  0190                     	;# 
  3399  0191                     	;# 
  3400  0192                     	;# 
  3401  0196                     	;# 
  3402  0197                     	;# 
  3403  0198                     	;# 
  3404  0199                     	;# 
  3405  019A                     	;# 
  3406  019B                     	;# 
  3407  019C                     	;# 
  3408  020C                     	;# 
  3409  020D                     	;# 
  3410  020E                     	;# 
  3411  020E                     	;# 
  3412  020F                     	;# 
  3413  020F                     	;# 
  3414  0210                     	;# 
  3415  0210                     	;# 
  3416  0211                     	;# 
  3417  0211                     	;# 
  3418  0212                     	;# 
  3419  0213                     	;# 
  3420  0214                     	;# 
  3421  0214                     	;# 
  3422  0215                     	;# 
  3423  0215                     	;# 
  3424  0216                     	;# 
  3425  0216                     	;# 
  3426  0217                     	;# 
  3427  0217                     	;# 
  3428  0218                     	;# 
  3429  0219                     	;# 
  3430  021A                     	;# 
  3431  021A                     	;# 
  3432  021B                     	;# 
  3433  021B                     	;# 
  3434  021C                     	;# 
  3435  021C                     	;# 
  3436  021D                     	;# 
  3437  021D                     	;# 
  3438  021E                     	;# 
  3439  021F                     	;# 
  3440  028C                     	;# 
  3441  028C                     	;# 
  3442  028D                     	;# 
  3443  028D                     	;# 
  3444  028E                     	;# 
  3445  028F                     	;# 
  3446  0290                     	;# 
  3447  0291                     	;# 
  3448  0292                     	;# 
  3449  0292                     	;# 
  3450  0293                     	;# 
  3451  0293                     	;# 
  3452  0294                     	;# 
  3453  0295                     	;# 
  3454  0296                     	;# 
  3455  0297                     	;# 
  3456  0298                     	;# 
  3457  0298                     	;# 
  3458  0299                     	;# 
  3459  0299                     	;# 
  3460  029A                     	;# 
  3461  029B                     	;# 
  3462  029C                     	;# 
  3463  029D                     	;# 
  3464  029F                     	;# 
  3465  030C                     	;# 
  3466  030C                     	;# 
  3467  030D                     	;# 
  3468  030E                     	;# 
  3469  030F                     	;# 
  3470  0310                     	;# 
  3471  0310                     	;# 
  3472  0311                     	;# 
  3473  0312                     	;# 
  3474  0313                     	;# 
  3475  0314                     	;# 
  3476  0314                     	;# 
  3477  0315                     	;# 
  3478  0316                     	;# 
  3479  0317                     	;# 
  3480  0318                     	;# 
  3481  0318                     	;# 
  3482  0319                     	;# 
  3483  031A                     	;# 
  3484  031B                     	;# 
  3485  038C                     	;# 
  3486  038C                     	;# 
  3487  038D                     	;# 
  3488  038E                     	;# 
  3489  0390                     	;# 
  3490  0390                     	;# 
  3491  0391                     	;# 
  3492  0392                     	;# 
  3493  048C                     	;# 
  3494  048C                     	;# 
  3495  048D                     	;# 
  3496  048E                     	;# 
  3497  048F                     	;# 
  3498  048F                     	;# 
  3499  0490                     	;# 
  3500  0491                     	;# 
  3501  0492                     	;# 
  3502  0492                     	;# 
  3503  0493                     	;# 
  3504  0494                     	;# 
  3505  0495                     	;# 
  3506  0495                     	;# 
  3507  0496                     	;# 
  3508  0497                     	;# 
  3509  0498                     	;# 
  3510  0499                     	;# 
  3511  049A                     	;# 
  3512  049B                     	;# 
  3513  049C                     	;# 
  3514  049D                     	;# 
  3515  058C                     	;# 
  3516  058C                     	;# 
  3517  058D                     	;# 
  3518  058E                     	;# 
  3519  058F                     	;# 
  3520  058F                     	;# 
  3521  0590                     	;# 
  3522  0591                     	;# 
  3523  0592                     	;# 
  3524  0593                     	;# 
  3525  059C                     	;# 
  3526  059C                     	;# 
  3527  059D                     	;# 
  3528  059D                     	;# 
  3529  059E                     	;# 
  3530  059F                     	;# 
  3531  060C                     	;# 
  3532  060C                     	;# 
  3533  060D                     	;# 
  3534  060D                     	;# 
  3535  060E                     	;# 
  3536  060F                     	;# 
  3537  0610                     	;# 
  3538  0611                     	;# 
  3539  0612                     	;# 
  3540  0613                     	;# 
  3541  0614                     	;# 
  3542  0616                     	;# 
  3543  0616                     	;# 
  3544  0617                     	;# 
  3545  0617                     	;# 
  3546  0618                     	;# 
  3547  0619                     	;# 
  3548  061A                     	;# 
  3549  061B                     	;# 
  3550  061C                     	;# 
  3551  061D                     	;# 
  3552  061E                     	;# 
  3553  070C                     	;# 
  3554  070D                     	;# 
  3555  070E                     	;# 
  3556  070F                     	;# 
  3557  0710                     	;# 
  3558  0711                     	;# 
  3559  0712                     	;# 
  3560  0713                     	;# 
  3561  0714                     	;# 
  3562  0716                     	;# 
  3563  0717                     	;# 
  3564  0718                     	;# 
  3565  0719                     	;# 
  3566  071A                     	;# 
  3567  071B                     	;# 
  3568  071C                     	;# 
  3569  071D                     	;# 
  3570  071E                     	;# 
  3571  0796                     	;# 
  3572  0797                     	;# 
  3573  0798                     	;# 
  3574  0799                     	;# 
  3575  079A                     	;# 
  3576  079B                     	;# 
  3577  079C                     	;# 
  3578  079D                     	;# 
  3579  080C                     	;# 
  3580  080D                     	;# 
  3581  080E                     	;# 
  3582  080F                     	;# 
  3583  0810                     	;# 
  3584  0811                     	;# 
  3585  0812                     	;# 
  3586  0813                     	;# 
  3587  0814                     	;# 
  3588  081A                     	;# 
  3589  081A                     	;# 
  3590  081B                     	;# 
  3591  081C                     	;# 
  3592  081C                     	;# 
  3593  081D                     	;# 
  3594  081E                     	;# 
  3595  081F                     	;# 
  3596  088C                     	;# 
  3597  088D                     	;# 
  3598  088E                     	;# 
  3599  088F                     	;# 
  3600  0890                     	;# 
  3601  0891                     	;# 
  3602  0892                     	;# 
  3603  0893                     	;# 
  3604  0895                     	;# 
  3605  0896                     	;# 
  3606  0897                     	;# 
  3607  0898                     	;# 
  3608  0899                     	;# 
  3609  089A                     	;# 
  3610  089B                     	;# 
  3611  090C                     	;# 
  3612  090E                     	;# 
  3613  090F                     	;# 
  3614  091F                     	;# 
  3615  098F                     	;# 
  3616  098F                     	;# 
  3617  0990                     	;# 
  3618  0991                     	;# 
  3619  0992                     	;# 
  3620  0993                     	;# 
  3621  0994                     	;# 
  3622  0995                     	;# 
  3623  0996                     	;# 
  3624  0997                     	;# 
  3625  1E0F                     	;# 
  3626  1E10                     	;# 
  3627  1E11                     	;# 
  3628  1E12                     	;# 
  3629  1E13                     	;# 
  3630  1E14                     	;# 
  3631  1E15                     	;# 
  3632  1E16                     	;# 
  3633  1E17                     	;# 
  3634  1E18                     	;# 
  3635  1E19                     	;# 
  3636  1E1A                     	;# 
  3637  1E1B                     	;# 
  3638  1E1C                     	;# 
  3639  1E1D                     	;# 
  3640  1E1E                     	;# 
  3641  1E1F                     	;# 
  3642  1E20                     	;# 
  3643  1E21                     	;# 
  3644  1E22                     	;# 
  3645  1E23                     	;# 
  3646  1E24                     	;# 
  3647  1E25                     	;# 
  3648  1E26                     	;# 
  3649  1E27                     	;# 
  3650  1E28                     	;# 
  3651  1E29                     	;# 
  3652  1E2A                     	;# 
  3653  1E2B                     	;# 
  3654  1E2C                     	;# 
  3655  1E2D                     	;# 
  3656  1E2E                     	;# 
  3657  1E2F                     	;# 
  3658  1E30                     	;# 
  3659  1E31                     	;# 
  3660  1E32                     	;# 
  3661  1E33                     	;# 
  3662  1E34                     	;# 
  3663  1E35                     	;# 
  3664  1E36                     	;# 
  3665  1E37                     	;# 
  3666  1E8F                     	;# 
  3667  1E90                     	;# 
  3668  1E91                     	;# 
  3669  1E92                     	;# 
  3670  1E93                     	;# 
  3671  1E94                     	;# 
  3672  1E95                     	;# 
  3673  1E96                     	;# 
  3674  1E97                     	;# 
  3675  1E9C                     	;# 
  3676  1E9D                     	;# 
  3677  1E9E                     	;# 
  3678  1EA1                     	;# 
  3679  1EA2                     	;# 
  3680  1EA3                     	;# 
  3681  1EA4                     	;# 
  3682  1EA9                     	;# 
  3683  1EAA                     	;# 
  3684  1EB1                     	;# 
  3685  1EB2                     	;# 
  3686  1EB8                     	;# 
  3687  1EB9                     	;# 
  3688  1EBA                     	;# 
  3689  1EBB                     	;# 
  3690  1EBC                     	;# 
  3691  1EBD                     	;# 
  3692  1EBE                     	;# 
  3693  1EC3                     	;# 
  3694  1EC5                     	;# 
  3695  1EC6                     	;# 
  3696  1EC7                     	;# 
  3697  1EC8                     	;# 
  3698  1EC9                     	;# 
  3699  1ECA                     	;# 
  3700  1ECB                     	;# 
  3701  1ECB                     	;# 
  3702  1ECB                     	;# 
  3703  1ECC                     	;# 
  3704  1ECC                     	;# 
  3705  1ECC                     	;# 
  3706  1F10                     	;# 
  3707  1F11                     	;# 
  3708  1F12                     	;# 
  3709  1F14                     	;# 
  3710  1F15                     	;# 
  3711  1F1C                     	;# 
  3712  1F1D                     	;# 
  3713  1F1E                     	;# 
  3714  1F1F                     	;# 
  3715  1F20                     	;# 
  3716  1F21                     	;# 
  3717  1F22                     	;# 
  3718  1F23                     	;# 
  3719  1F24                     	;# 
  3720  1F25                     	;# 
  3721  1F26                     	;# 
  3722  1F27                     	;# 
  3723  1F38                     	;# 
  3724  1F39                     	;# 
  3725  1F3A                     	;# 
  3726  1F3B                     	;# 
  3727  1F3C                     	;# 
  3728  1F3D                     	;# 
  3729  1F3E                     	;# 
  3730  1F3F                     	;# 
  3731  1F43                     	;# 
  3732  1F44                     	;# 
  3733  1F45                     	;# 
  3734  1F46                     	;# 
  3735  1F47                     	;# 
  3736  1F48                     	;# 
  3737  1F49                     	;# 
  3738  1F4A                     	;# 
  3739  1F4E                     	;# 
  3740  1F4F                     	;# 
  3741  1F50                     	;# 
  3742  1F51                     	;# 
  3743  1F52                     	;# 
  3744  1F53                     	;# 
  3745  1F54                     	;# 
  3746  1F55                     	;# 
  3747  1FE4                     	;# 
  3748  1FE5                     	;# 
  3749  1FE6                     	;# 
  3750  1FE7                     	;# 
  3751  1FE8                     	;# 
  3752  1FE8                     	;# 
  3753  1FE9                     	;# 
  3754  1FEA                     	;# 
  3755  1FEB                     	;# 
  3756  1FED                     	;# 
  3757  1FEE                     	;# 
  3758  1FEF                     	;# 
  3759  0000                     	;# 
  3760  0001                     	;# 
  3761  0002                     	;# 
  3762  0003                     	;# 
  3763  0004                     	;# 
  3764  0005                     	;# 
  3765  0006                     	;# 
  3766  0007                     	;# 
  3767  0008                     	;# 
  3768  0009                     	;# 
  3769  000A                     	;# 
  3770  000B                     	;# 
  3771  000C                     	;# 
  3772  000D                     	;# 
  3773  000E                     	;# 
  3774  0012                     	;# 
  3775  0013                     	;# 
  3776  0014                     	;# 
  3777  0018                     	;# 
  3778  0019                     	;# 
  3779  001A                     	;# 
  3780  008C                     	;# 
  3781  008C                     	;# 
  3782  008D                     	;# 
  3783  008E                     	;# 
  3784  008E                     	;# 
  3785  008F                     	;# 
  3786  0090                     	;# 
  3787  0090                     	;# 
  3788  0091                     	;# 
  3789  0092                     	;# 
  3790  0092                     	;# 
  3791  0093                     	;# 
  3792  0094                     	;# 
  3793  0094                     	;# 
  3794  0095                     	;# 
  3795  0096                     	;# 
  3796  0096                     	;# 
  3797  0097                     	;# 
  3798  0098                     	;# 
  3799  0099                     	;# 
  3800  009A                     	;# 
  3801  009B                     	;# 
  3802  009B                     	;# 
  3803  009C                     	;# 
  3804  009D                     	;# 
  3805  009D                     	;# 
  3806  009E                     	;# 
  3807  009F                     	;# 
  3808  010C                     	;# 
  3809  010C                     	;# 
  3810  010D                     	;# 
  3811  010E                     	;# 
  3812  010F                     	;# 
  3813  010F                     	;# 
  3814  0110                     	;# 
  3815  0111                     	;# 
  3816  0112                     	;# 
  3817  0113                     	;# 
  3818  0114                     	;# 
  3819  0115                     	;# 
  3820  0116                     	;# 
  3821  0117                     	;# 
  3822  0118                     	;# 
  3823  0119                     	;# 
  3824  0119                     	;# 
  3825  0119                     	;# 
  3826  011A                     	;# 
  3827  011A                     	;# 
  3828  011A                     	;# 
  3829  011B                     	;# 
  3830  011B                     	;# 
  3831  011B                     	;# 
  3832  011B                     	;# 
  3833  011B                     	;# 
  3834  011C                     	;# 
  3835  011C                     	;# 
  3836  011C                     	;# 
  3837  011D                     	;# 
  3838  011D                     	;# 
  3839  011D                     	;# 
  3840  011E                     	;# 
  3841  011E                     	;# 
  3842  011E                     	;# 
  3843  011F                     	;# 
  3844  011F                     	;# 
  3845  011F                     	;# 
  3846  011F                     	;# 
  3847  011F                     	;# 
  3848  018C                     	;# 
  3849  018D                     	;# 
  3850  018E                     	;# 
  3851  018F                     	;# 
  3852  0190                     	;# 
  3853  0191                     	;# 
  3854  0192                     	;# 
  3855  0196                     	;# 
  3856  0197                     	;# 
  3857  0198                     	;# 
  3858  0199                     	;# 
  3859  019A                     	;# 
  3860  019B                     	;# 
  3861  019C                     	;# 
  3862  020C                     	;# 
  3863  020D                     	;# 
  3864  020E                     	;# 
  3865  020E                     	;# 
  3866  020F                     	;# 
  3867  020F                     	;# 
  3868  0210                     	;# 
  3869  0210                     	;# 
  3870  0211                     	;# 
  3871  0211                     	;# 
  3872  0212                     	;# 
  3873  0213                     	;# 
  3874  0214                     	;# 
  3875  0214                     	;# 
  3876  0215                     	;# 
  3877  0215                     	;# 
  3878  0216                     	;# 
  3879  0216                     	;# 
  3880  0217                     	;# 
  3881  0217                     	;# 
  3882  0218                     	;# 
  3883  0219                     	;# 
  3884  021A                     	;# 
  3885  021A                     	;# 
  3886  021B                     	;# 
  3887  021B                     	;# 
  3888  021C                     	;# 
  3889  021C                     	;# 
  3890  021D                     	;# 
  3891  021D                     	;# 
  3892  021E                     	;# 
  3893  021F                     	;# 
  3894  028C                     	;# 
  3895  028C                     	;# 
  3896  028D                     	;# 
  3897  028D                     	;# 
  3898  028E                     	;# 
  3899  028F                     	;# 
  3900  0290                     	;# 
  3901  0291                     	;# 
  3902  0292                     	;# 
  3903  0292                     	;# 
  3904  0293                     	;# 
  3905  0293                     	;# 
  3906  0294                     	;# 
  3907  0295                     	;# 
  3908  0296                     	;# 
  3909  0297                     	;# 
  3910  0298                     	;# 
  3911  0298                     	;# 
  3912  0299                     	;# 
  3913  0299                     	;# 
  3914  029A                     	;# 
  3915  029B                     	;# 
  3916  029C                     	;# 
  3917  029D                     	;# 
  3918  029F                     	;# 
  3919  030C                     	;# 
  3920  030C                     	;# 
  3921  030D                     	;# 
  3922  030E                     	;# 
  3923  030F                     	;# 
  3924  0310                     	;# 
  3925  0310                     	;# 
  3926  0311                     	;# 
  3927  0312                     	;# 
  3928  0313                     	;# 
  3929  0314                     	;# 
  3930  0314                     	;# 
  3931  0315                     	;# 
  3932  0316                     	;# 
  3933  0317                     	;# 
  3934  0318                     	;# 
  3935  0318                     	;# 
  3936  0319                     	;# 
  3937  031A                     	;# 
  3938  031B                     	;# 
  3939  038C                     	;# 
  3940  038C                     	;# 
  3941  038D                     	;# 
  3942  038E                     	;# 
  3943  0390                     	;# 
  3944  0390                     	;# 
  3945  0391                     	;# 
  3946  0392                     	;# 
  3947  048C                     	;# 
  3948  048C                     	;# 
  3949  048D                     	;# 
  3950  048E                     	;# 
  3951  048F                     	;# 
  3952  048F                     	;# 
  3953  0490                     	;# 
  3954  0491                     	;# 
  3955  0492                     	;# 
  3956  0492                     	;# 
  3957  0493                     	;# 
  3958  0494                     	;# 
  3959  0495                     	;# 
  3960  0495                     	;# 
  3961  0496                     	;# 
  3962  0497                     	;# 
  3963  0498                     	;# 
  3964  0499                     	;# 
  3965  049A                     	;# 
  3966  049B                     	;# 
  3967  049C                     	;# 
  3968  049D                     	;# 
  3969  058C                     	;# 
  3970  058C                     	;# 
  3971  058D                     	;# 
  3972  058E                     	;# 
  3973  058F                     	;# 
  3974  058F                     	;# 
  3975  0590                     	;# 
  3976  0591                     	;# 
  3977  0592                     	;# 
  3978  0593                     	;# 
  3979  059C                     	;# 
  3980  059C                     	;# 
  3981  059D                     	;# 
  3982  059D                     	;# 
  3983  059E                     	;# 
  3984  059F                     	;# 
  3985  060C                     	;# 
  3986  060C                     	;# 
  3987  060D                     	;# 
  3988  060D                     	;# 
  3989  060E                     	;# 
  3990  060F                     	;# 
  3991  0610                     	;# 
  3992  0611                     	;# 
  3993  0612                     	;# 
  3994  0613                     	;# 
  3995  0614                     	;# 
  3996  0616                     	;# 
  3997  0616                     	;# 
  3998  0617                     	;# 
  3999  0617                     	;# 
  4000  0618                     	;# 
  4001  0619                     	;# 
  4002  061A                     	;# 
  4003  061B                     	;# 
  4004  061C                     	;# 
  4005  061D                     	;# 
  4006  061E                     	;# 
  4007  070C                     	;# 
  4008  070D                     	;# 
  4009  070E                     	;# 
  4010  070F                     	;# 
  4011  0710                     	;# 
  4012  0711                     	;# 
  4013  0712                     	;# 
  4014  0713                     	;# 
  4015  0714                     	;# 
  4016  0716                     	;# 
  4017  0717                     	;# 
  4018  0718                     	;# 
  4019  0719                     	;# 
  4020  071A                     	;# 
  4021  071B                     	;# 
  4022  071C                     	;# 
  4023  071D                     	;# 
  4024  071E                     	;# 
  4025  0796                     	;# 
  4026  0797                     	;# 
  4027  0798                     	;# 
  4028  0799                     	;# 
  4029  079A                     	;# 
  4030  079B                     	;# 
  4031  079C                     	;# 
  4032  079D                     	;# 
  4033  080C                     	;# 
  4034  080D                     	;# 
  4035  080E                     	;# 
  4036  080F                     	;# 
  4037  0810                     	;# 
  4038  0811                     	;# 
  4039  0812                     	;# 
  4040  0813                     	;# 
  4041  0814                     	;# 
  4042  081A                     	;# 
  4043  081A                     	;# 
  4044  081B                     	;# 
  4045  081C                     	;# 
  4046  081C                     	;# 
  4047  081D                     	;# 
  4048  081E                     	;# 
  4049  081F                     	;# 
  4050  088C                     	;# 
  4051  088D                     	;# 
  4052  088E                     	;# 
  4053  088F                     	;# 
  4054  0890                     	;# 
  4055  0891                     	;# 
  4056  0892                     	;# 
  4057  0893                     	;# 
  4058  0895                     	;# 
  4059  0896                     	;# 
  4060  0897                     	;# 
  4061  0898                     	;# 
  4062  0899                     	;# 
  4063  089A                     	;# 
  4064  089B                     	;# 
  4065  090C                     	;# 
  4066  090E                     	;# 
  4067  090F                     	;# 
  4068  091F                     	;# 
  4069  098F                     	;# 
  4070  098F                     	;# 
  4071  0990                     	;# 
  4072  0991                     	;# 
  4073  0992                     	;# 
  4074  0993                     	;# 
  4075  0994                     	;# 
  4076  0995                     	;# 
  4077  0996                     	;# 
  4078  0997                     	;# 
  4079  1E0F                     	;# 
  4080  1E10                     	;# 
  4081  1E11                     	;# 
  4082  1E12                     	;# 
  4083  1E13                     	;# 
  4084  1E14                     	;# 
  4085  1E15                     	;# 
  4086  1E16                     	;# 
  4087  1E17                     	;# 
  4088  1E18                     	;# 
  4089  1E19                     	;# 
  4090  1E1A                     	;# 
  4091  1E1B                     	;# 
  4092  1E1C                     	;# 
  4093  1E1D                     	;# 
  4094  1E1E                     	;# 
  4095  1E1F                     	;# 
  4096  1E20                     	;# 
  4097  1E21                     	;# 
  4098  1E22                     	;# 
  4099  1E23                     	;# 
  4100  1E24                     	;# 
  4101  1E25                     	;# 
  4102  1E26                     	;# 
  4103  1E27                     	;# 
  4104  1E28                     	;# 
  4105  1E29                     	;# 
  4106  1E2A                     	;# 
  4107  1E2B                     	;# 
  4108  1E2C                     	;# 
  4109  1E2D                     	;# 
  4110  1E2E                     	;# 
  4111  1E2F                     	;# 
  4112  1E30                     	;# 
  4113  1E31                     	;# 
  4114  1E32                     	;# 
  4115  1E33                     	;# 
  4116  1E34                     	;# 
  4117  1E35                     	;# 
  4118  1E36                     	;# 
  4119  1E37                     	;# 
  4120  1E8F                     	;# 
  4121  1E90                     	;# 
  4122  1E91                     	;# 
  4123  1E92                     	;# 
  4124  1E93                     	;# 
  4125  1E94                     	;# 
  4126  1E95                     	;# 
  4127  1E96                     	;# 
  4128  1E97                     	;# 
  4129  1E9C                     	;# 
  4130  1E9D                     	;# 
  4131  1E9E                     	;# 
  4132  1EA1                     	;# 
  4133  1EA2                     	;# 
  4134  1EA3                     	;# 
  4135  1EA4                     	;# 
  4136  1EA9                     	;# 
  4137  1EAA                     	;# 
  4138  1EB1                     	;# 
  4139  1EB2                     	;# 
  4140  1EB8                     	;# 
  4141  1EB9                     	;# 
  4142  1EBA                     	;# 
  4143  1EBB                     	;# 
  4144  1EBC                     	;# 
  4145  1EBD                     	;# 
  4146  1EBE                     	;# 
  4147  1EC3                     	;# 
  4148  1EC5                     	;# 
  4149  1EC6                     	;# 
  4150  1EC7                     	;# 
  4151  1EC8                     	;# 
  4152  1EC9                     	;# 
  4153  1ECA                     	;# 
  4154  1ECB                     	;# 
  4155  1ECB                     	;# 
  4156  1ECB                     	;# 
  4157  1ECC                     	;# 
  4158  1ECC                     	;# 
  4159  1ECC                     	;# 
  4160  1F10                     	;# 
  4161  1F11                     	;# 
  4162  1F12                     	;# 
  4163  1F14                     	;# 
  4164  1F15                     	;# 
  4165  1F1C                     	;# 
  4166  1F1D                     	;# 
  4167  1F1E                     	;# 
  4168  1F1F                     	;# 
  4169  1F20                     	;# 
  4170  1F21                     	;# 
  4171  1F22                     	;# 
  4172  1F23                     	;# 
  4173  1F24                     	;# 
  4174  1F25                     	;# 
  4175  1F26                     	;# 
  4176  1F27                     	;# 
  4177  1F38                     	;# 
  4178  1F39                     	;# 
  4179  1F3A                     	;# 
  4180  1F3B                     	;# 
  4181  1F3C                     	;# 
  4182  1F3D                     	;# 
  4183  1F3E                     	;# 
  4184  1F3F                     	;# 
  4185  1F43                     	;# 
  4186  1F44                     	;# 
  4187  1F45                     	;# 
  4188  1F46                     	;# 
  4189  1F47                     	;# 
  4190  1F48                     	;# 
  4191  1F49                     	;# 
  4192  1F4A                     	;# 
  4193  1F4E                     	;# 
  4194  1F4F                     	;# 
  4195  1F50                     	;# 
  4196  1F51                     	;# 
  4197  1F52                     	;# 
  4198  1F53                     	;# 
  4199  1F54                     	;# 
  4200  1F55                     	;# 
  4201  1FE4                     	;# 
  4202  1FE5                     	;# 
  4203  1FE6                     	;# 
  4204  1FE7                     	;# 
  4205  1FE8                     	;# 
  4206  1FE8                     	;# 
  4207  1FE9                     	;# 
  4208  1FEA                     	;# 
  4209  1FEB                     	;# 
  4210  1FED                     	;# 
  4211  1FEE                     	;# 
  4212  1FEF                     	;# 
  4213  0000                     	;# 
  4214  0001                     	;# 
  4215  0002                     	;# 
  4216  0003                     	;# 
  4217  0004                     	;# 
  4218  0005                     	;# 
  4219  0006                     	;# 
  4220  0007                     	;# 
  4221  0008                     	;# 
  4222  0009                     	;# 
  4223  000A                     	;# 
  4224  000B                     	;# 
  4225  000C                     	;# 
  4226  000D                     	;# 
  4227  000E                     	;# 
  4228  0012                     	;# 
  4229  0013                     	;# 
  4230  0014                     	;# 
  4231  0018                     	;# 
  4232  0019                     	;# 
  4233  001A                     	;# 
  4234  008C                     	;# 
  4235  008C                     	;# 
  4236  008D                     	;# 
  4237  008E                     	;# 
  4238  008E                     	;# 
  4239  008F                     	;# 
  4240  0090                     	;# 
  4241  0090                     	;# 
  4242  0091                     	;# 
  4243  0092                     	;# 
  4244  0092                     	;# 
  4245  0093                     	;# 
  4246  0094                     	;# 
  4247  0094                     	;# 
  4248  0095                     	;# 
  4249  0096                     	;# 
  4250  0096                     	;# 
  4251  0097                     	;# 
  4252  0098                     	;# 
  4253  0099                     	;# 
  4254  009A                     	;# 
  4255  009B                     	;# 
  4256  009B                     	;# 
  4257  009C                     	;# 
  4258  009D                     	;# 
  4259  009D                     	;# 
  4260  009E                     	;# 
  4261  009F                     	;# 
  4262  010C                     	;# 
  4263  010C                     	;# 
  4264  010D                     	;# 
  4265  010E                     	;# 
  4266  010F                     	;# 
  4267  010F                     	;# 
  4268  0110                     	;# 
  4269  0111                     	;# 
  4270  0112                     	;# 
  4271  0113                     	;# 
  4272  0114                     	;# 
  4273  0115                     	;# 
  4274  0116                     	;# 
  4275  0117                     	;# 
  4276  0118                     	;# 
  4277  0119                     	;# 
  4278  0119                     	;# 
  4279  0119                     	;# 
  4280  011A                     	;# 
  4281  011A                     	;# 
  4282  011A                     	;# 
  4283  011B                     	;# 
  4284  011B                     	;# 
  4285  011B                     	;# 
  4286  011B                     	;# 
  4287  011B                     	;# 
  4288  011C                     	;# 
  4289  011C                     	;# 
  4290  011C                     	;# 
  4291  011D                     	;# 
  4292  011D                     	;# 
  4293  011D                     	;# 
  4294  011E                     	;# 
  4295  011E                     	;# 
  4296  011E                     	;# 
  4297  011F                     	;# 
  4298  011F                     	;# 
  4299  011F                     	;# 
  4300  011F                     	;# 
  4301  011F                     	;# 
  4302  018C                     	;# 
  4303  018D                     	;# 
  4304  018E                     	;# 
  4305  018F                     	;# 
  4306  0190                     	;# 
  4307  0191                     	;# 
  4308  0192                     	;# 
  4309  0196                     	;# 
  4310  0197                     	;# 
  4311  0198                     	;# 
  4312  0199                     	;# 
  4313  019A                     	;# 
  4314  019B                     	;# 
  4315  019C                     	;# 
  4316  020C                     	;# 
  4317  020D                     	;# 
  4318  020E                     	;# 
  4319  020E                     	;# 
  4320  020F                     	;# 
  4321  020F                     	;# 
  4322  0210                     	;# 
  4323  0210                     	;# 
  4324  0211                     	;# 
  4325  0211                     	;# 
  4326  0212                     	;# 
  4327  0213                     	;# 
  4328  0214                     	;# 
  4329  0214                     	;# 
  4330  0215                     	;# 
  4331  0215                     	;# 
  4332  0216                     	;# 
  4333  0216                     	;# 
  4334  0217                     	;# 
  4335  0217                     	;# 
  4336  0218                     	;# 
  4337  0219                     	;# 
  4338  021A                     	;# 
  4339  021A                     	;# 
  4340  021B                     	;# 
  4341  021B                     	;# 
  4342  021C                     	;# 
  4343  021C                     	;# 
  4344  021D                     	;# 
  4345  021D                     	;# 
  4346  021E                     	;# 
  4347  021F                     	;# 
  4348  028C                     	;# 
  4349  028C                     	;# 
  4350  028D                     	;# 
  4351  028D                     	;# 
  4352  028E                     	;# 
  4353  028F                     	;# 
  4354  0290                     	;# 
  4355  0291                     	;# 
  4356  0292                     	;# 
  4357  0292                     	;# 
  4358  0293                     	;# 
  4359  0293                     	;# 
  4360  0294                     	;# 
  4361  0295                     	;# 
  4362  0296                     	;# 
  4363  0297                     	;# 
  4364  0298                     	;# 
  4365  0298                     	;# 
  4366  0299                     	;# 
  4367  0299                     	;# 
  4368  029A                     	;# 
  4369  029B                     	;# 
  4370  029C                     	;# 
  4371  029D                     	;# 
  4372  029F                     	;# 
  4373  030C                     	;# 
  4374  030C                     	;# 
  4375  030D                     	;# 
  4376  030E                     	;# 
  4377  030F                     	;# 
  4378  0310                     	;# 
  4379  0310                     	;# 
  4380  0311                     	;# 
  4381  0312                     	;# 
  4382  0313                     	;# 
  4383  0314                     	;# 
  4384  0314                     	;# 
  4385  0315                     	;# 
  4386  0316                     	;# 
  4387  0317                     	;# 
  4388  0318                     	;# 
  4389  0318                     	;# 
  4390  0319                     	;# 
  4391  031A                     	;# 
  4392  031B                     	;# 
  4393  038C                     	;# 
  4394  038C                     	;# 
  4395  038D                     	;# 
  4396  038E                     	;# 
  4397  0390                     	;# 
  4398  0390                     	;# 
  4399  0391                     	;# 
  4400  0392                     	;# 
  4401  048C                     	;# 
  4402  048C                     	;# 
  4403  048D                     	;# 
  4404  048E                     	;# 
  4405  048F                     	;# 
  4406  048F                     	;# 
  4407  0490                     	;# 
  4408  0491                     	;# 
  4409  0492                     	;# 
  4410  0492                     	;# 
  4411  0493                     	;# 
  4412  0494                     	;# 
  4413  0495                     	;# 
  4414  0495                     	;# 
  4415  0496                     	;# 
  4416  0497                     	;# 
  4417  0498                     	;# 
  4418  0499                     	;# 
  4419  049A                     	;# 
  4420  049B                     	;# 
  4421  049C                     	;# 
  4422  049D                     	;# 
  4423  058C                     	;# 
  4424  058C                     	;# 
  4425  058D                     	;# 
  4426  058E                     	;# 
  4427  058F                     	;# 
  4428  058F                     	;# 
  4429  0590                     	;# 
  4430  0591                     	;# 
  4431  0592                     	;# 
  4432  0593                     	;# 
  4433  059C                     	;# 
  4434  059C                     	;# 
  4435  059D                     	;# 
  4436  059D                     	;# 
  4437  059E                     	;# 
  4438  059F                     	;# 
  4439  060C                     	;# 
  4440  060C                     	;# 
  4441  060D                     	;# 
  4442  060D                     	;# 
  4443  060E                     	;# 
  4444  060F                     	;# 
  4445  0610                     	;# 
  4446  0611                     	;# 
  4447  0612                     	;# 
  4448  0613                     	;# 
  4449  0614                     	;# 
  4450  0616                     	;# 
  4451  0616                     	;# 
  4452  0617                     	;# 
  4453  0617                     	;# 
  4454  0618                     	;# 
  4455  0619                     	;# 
  4456  061A                     	;# 
  4457  061B                     	;# 
  4458  061C                     	;# 
  4459  061D                     	;# 
  4460  061E                     	;# 
  4461  070C                     	;# 
  4462  070D                     	;# 
  4463  070E                     	;# 
  4464  070F                     	;# 
  4465  0710                     	;# 
  4466  0711                     	;# 
  4467  0712                     	;# 
  4468  0713                     	;# 
  4469  0714                     	;# 
  4470  0716                     	;# 
  4471  0717                     	;# 
  4472  0718                     	;# 
  4473  0719                     	;# 
  4474  071A                     	;# 
  4475  071B                     	;# 
  4476  071C                     	;# 
  4477  071D                     	;# 
  4478  071E                     	;# 
  4479  0796                     	;# 
  4480  0797                     	;# 
  4481  0798                     	;# 
  4482  0799                     	;# 
  4483  079A                     	;# 
  4484  079B                     	;# 
  4485  079C                     	;# 
  4486  079D                     	;# 
  4487  080C                     	;# 
  4488  080D                     	;# 
  4489  080E                     	;# 
  4490  080F                     	;# 
  4491  0810                     	;# 
  4492  0811                     	;# 
  4493  0812                     	;# 
  4494  0813                     	;# 
  4495  0814                     	;# 
  4496  081A                     	;# 
  4497  081A                     	;# 
  4498  081B                     	;# 
  4499  081C                     	;# 
  4500  081C                     	;# 
  4501  081D                     	;# 
  4502  081E                     	;# 
  4503  081F                     	;# 
  4504  088C                     	;# 
  4505  088D                     	;# 
  4506  088E                     	;# 
  4507  088F                     	;# 
  4508  0890                     	;# 
  4509  0891                     	;# 
  4510  0892                     	;# 
  4511  0893                     	;# 
  4512  0895                     	;# 
  4513  0896                     	;# 
  4514  0897                     	;# 
  4515  0898                     	;# 
  4516  0899                     	;# 
  4517  089A                     	;# 
  4518  089B                     	;# 
  4519  090C                     	;# 
  4520  090E                     	;# 
  4521  090F                     	;# 
  4522  091F                     	;# 
  4523  098F                     	;# 
  4524  098F                     	;# 
  4525  0990                     	;# 
  4526  0991                     	;# 
  4527  0992                     	;# 
  4528  0993                     	;# 
  4529  0994                     	;# 
  4530  0995                     	;# 
  4531  0996                     	;# 
  4532  0997                     	;# 
  4533  1E0F                     	;# 
  4534  1E10                     	;# 
  4535  1E11                     	;# 
  4536  1E12                     	;# 
  4537  1E13                     	;# 
  4538  1E14                     	;# 
  4539  1E15                     	;# 
  4540  1E16                     	;# 
  4541  1E17                     	;# 
  4542  1E18                     	;# 
  4543  1E19                     	;# 
  4544  1E1A                     	;# 
  4545  1E1B                     	;# 
  4546  1E1C                     	;# 
  4547  1E1D                     	;# 
  4548  1E1E                     	;# 
  4549  1E1F                     	;# 
  4550  1E20                     	;# 
  4551  1E21                     	;# 
  4552  1E22                     	;# 
  4553  1E23                     	;# 
  4554  1E24                     	;# 
  4555  1E25                     	;# 
  4556  1E26                     	;# 
  4557  1E27                     	;# 
  4558  1E28                     	;# 
  4559  1E29                     	;# 
  4560  1E2A                     	;# 
  4561  1E2B                     	;# 
  4562  1E2C                     	;# 
  4563  1E2D                     	;# 
  4564  1E2E                     	;# 
  4565  1E2F                     	;# 
  4566  1E30                     	;# 
  4567  1E31                     	;# 
  4568  1E32                     	;# 
  4569  1E33                     	;# 
  4570  1E34                     	;# 
  4571  1E35                     	;# 
  4572  1E36                     	;# 
  4573  1E37                     	;# 
  4574  1E8F                     	;# 
  4575  1E90                     	;# 
  4576  1E91                     	;# 
  4577  1E92                     	;# 
  4578  1E93                     	;# 
  4579  1E94                     	;# 
  4580  1E95                     	;# 
  4581  1E96                     	;# 
  4582  1E97                     	;# 
  4583  1E9C                     	;# 
  4584  1E9D                     	;# 
  4585  1E9E                     	;# 
  4586  1EA1                     	;# 
  4587  1EA2                     	;# 
  4588  1EA3                     	;# 
  4589  1EA4                     	;# 
  4590  1EA9                     	;# 
  4591  1EAA                     	;# 
  4592  1EB1                     	;# 
  4593  1EB2                     	;# 
  4594  1EB8                     	;# 
  4595  1EB9                     	;# 
  4596  1EBA                     	;# 
  4597  1EBB                     	;# 
  4598  1EBC                     	;# 
  4599  1EBD                     	;# 
  4600  1EBE                     	;# 
  4601  1EC3                     	;# 
  4602  1EC5                     	;# 
  4603  1EC6                     	;# 
  4604  1EC7                     	;# 
  4605  1EC8                     	;# 
  4606  1EC9                     	;# 
  4607  1ECA                     	;# 
  4608  1ECB                     	;# 
  4609  1ECB                     	;# 
  4610  1ECB                     	;# 
  4611  1ECC                     	;# 
  4612  1ECC                     	;# 
  4613  1ECC                     	;# 
  4614  1F10                     	;# 
  4615  1F11                     	;# 
  4616  1F12                     	;# 
  4617  1F14                     	;# 
  4618  1F15                     	;# 
  4619  1F1C                     	;# 
  4620  1F1D                     	;# 
  4621  1F1E                     	;# 
  4622  1F1F                     	;# 
  4623  1F20                     	;# 
  4624  1F21                     	;# 
  4625  1F22                     	;# 
  4626  1F23                     	;# 
  4627  1F24                     	;# 
  4628  1F25                     	;# 
  4629  1F26                     	;# 
  4630  1F27                     	;# 
  4631  1F38                     	;# 
  4632  1F39                     	;# 
  4633  1F3A                     	;# 
  4634  1F3B                     	;# 
  4635  1F3C                     	;# 
  4636  1F3D                     	;# 
  4637  1F3E                     	;# 
  4638  1F3F                     	;# 
  4639  1F43                     	;# 
  4640  1F44                     	;# 
  4641  1F45                     	;# 
  4642  1F46                     	;# 
  4643  1F47                     	;# 
  4644  1F48                     	;# 
  4645  1F49                     	;# 
  4646  1F4A                     	;# 
  4647  1F4E                     	;# 
  4648  1F4F                     	;# 
  4649  1F50                     	;# 
  4650  1F51                     	;# 
  4651  1F52                     	;# 
  4652  1F53                     	;# 
  4653  1F54                     	;# 
  4654  1F55                     	;# 
  4655  1FE4                     	;# 
  4656  1FE5                     	;# 
  4657  1FE6                     	;# 
  4658  1FE7                     	;# 
  4659  1FE8                     	;# 
  4660  1FE8                     	;# 
  4661  1FE9                     	;# 
  4662  1FEA                     	;# 
  4663  1FEB                     	;# 
  4664  1FED                     	;# 
  4665  1FEE                     	;# 
  4666  1FEF                     	;# 
  4667  0000                     	;# 
  4668  0001                     	;# 
  4669  0002                     	;# 
  4670  0003                     	;# 
  4671  0004                     	;# 
  4672  0005                     	;# 
  4673  0006                     	;# 
  4674  0007                     	;# 
  4675  0008                     	;# 
  4676  0009                     	;# 
  4677  000A                     	;# 
  4678  000B                     	;# 
  4679  000C                     	;# 
  4680  000D                     	;# 
  4681  000E                     	;# 
  4682  0012                     	;# 
  4683  0013                     	;# 
  4684  0014                     	;# 
  4685  0018                     	;# 
  4686  0019                     	;# 
  4687  001A                     	;# 
  4688  008C                     	;# 
  4689  008C                     	;# 
  4690  008D                     	;# 
  4691  008E                     	;# 
  4692  008E                     	;# 
  4693  008F                     	;# 
  4694  0090                     	;# 
  4695  0090                     	;# 
  4696  0091                     	;# 
  4697  0092                     	;# 
  4698  0092                     	;# 
  4699  0093                     	;# 
  4700  0094                     	;# 
  4701  0094                     	;# 
  4702  0095                     	;# 
  4703  0096                     	;# 
  4704  0096                     	;# 
  4705  0097                     	;# 
  4706  0098                     	;# 
  4707  0099                     	;# 
  4708  009A                     	;# 
  4709  009B                     	;# 
  4710  009B                     	;# 
  4711  009C                     	;# 
  4712  009D                     	;# 
  4713  009D                     	;# 
  4714  009E                     	;# 
  4715  009F                     	;# 
  4716  010C                     	;# 
  4717  010C                     	;# 
  4718  010D                     	;# 
  4719  010E                     	;# 
  4720  010F                     	;# 
  4721  010F                     	;# 
  4722  0110                     	;# 
  4723  0111                     	;# 
  4724  0112                     	;# 
  4725  0113                     	;# 
  4726  0114                     	;# 
  4727  0115                     	;# 
  4728  0116                     	;# 
  4729  0117                     	;# 
  4730  0118                     	;# 
  4731  0119                     	;# 
  4732  0119                     	;# 
  4733  0119                     	;# 
  4734  011A                     	;# 
  4735  011A                     	;# 
  4736  011A                     	;# 
  4737  011B                     	;# 
  4738  011B                     	;# 
  4739  011B                     	;# 
  4740  011B                     	;# 
  4741  011B                     	;# 
  4742  011C                     	;# 
  4743  011C                     	;# 
  4744  011C                     	;# 
  4745  011D                     	;# 
  4746  011D                     	;# 
  4747  011D                     	;# 
  4748  011E                     	;# 
  4749  011E                     	;# 
  4750  011E                     	;# 
  4751  011F                     	;# 
  4752  011F                     	;# 
  4753  011F                     	;# 
  4754  011F                     	;# 
  4755  011F                     	;# 
  4756  018C                     	;# 
  4757  018D                     	;# 
  4758  018E                     	;# 
  4759  018F                     	;# 
  4760  0190                     	;# 
  4761  0191                     	;# 
  4762  0192                     	;# 
  4763  0196                     	;# 
  4764  0197                     	;# 
  4765  0198                     	;# 
  4766  0199                     	;# 
  4767  019A                     	;# 
  4768  019B                     	;# 
  4769  019C                     	;# 
  4770  020C                     	;# 
  4771  020D                     	;# 
  4772  020E                     	;# 
  4773  020E                     	;# 
  4774  020F                     	;# 
  4775  020F                     	;# 
  4776  0210                     	;# 
  4777  0210                     	;# 
  4778  0211                     	;# 
  4779  0211                     	;# 
  4780  0212                     	;# 
  4781  0213                     	;# 
  4782  0214                     	;# 
  4783  0214                     	;# 
  4784  0215                     	;# 
  4785  0215                     	;# 
  4786  0216                     	;# 
  4787  0216                     	;# 
  4788  0217                     	;# 
  4789  0217                     	;# 
  4790  0218                     	;# 
  4791  0219                     	;# 
  4792  021A                     	;# 
  4793  021A                     	;# 
  4794  021B                     	;# 
  4795  021B                     	;# 
  4796  021C                     	;# 
  4797  021C                     	;# 
  4798  021D                     	;# 
  4799  021D                     	;# 
  4800  021E                     	;# 
  4801  021F                     	;# 
  4802  028C                     	;# 
  4803  028C                     	;# 
  4804  028D                     	;# 
  4805  028D                     	;# 
  4806  028E                     	;# 
  4807  028F                     	;# 
  4808  0290                     	;# 
  4809  0291                     	;# 
  4810  0292                     	;# 
  4811  0292                     	;# 
  4812  0293                     	;# 
  4813  0293                     	;# 
  4814  0294                     	;# 
  4815  0295                     	;# 
  4816  0296                     	;# 
  4817  0297                     	;# 
  4818  0298                     	;# 
  4819  0298                     	;# 
  4820  0299                     	;# 
  4821  0299                     	;# 
  4822  029A                     	;# 
  4823  029B                     	;# 
  4824  029C                     	;# 
  4825  029D                     	;# 
  4826  029F                     	;# 
  4827  030C                     	;# 
  4828  030C                     	;# 
  4829  030D                     	;# 
  4830  030E                     	;# 
  4831  030F                     	;# 
  4832  0310                     	;# 
  4833  0310                     	;# 
  4834  0311                     	;# 
  4835  0312                     	;# 
  4836  0313                     	;# 
  4837  0314                     	;# 
  4838  0314                     	;# 
  4839  0315                     	;# 
  4840  0316                     	;# 
  4841  0317                     	;# 
  4842  0318                     	;# 
  4843  0318                     	;# 
  4844  0319                     	;# 
  4845  031A                     	;# 
  4846  031B                     	;# 
  4847  038C                     	;# 
  4848  038C                     	;# 
  4849  038D                     	;# 
  4850  038E                     	;# 
  4851  0390                     	;# 
  4852  0390                     	;# 
  4853  0391                     	;# 
  4854  0392                     	;# 
  4855  048C                     	;# 
  4856  048C                     	;# 
  4857  048D                     	;# 
  4858  048E                     	;# 
  4859  048F                     	;# 
  4860  048F                     	;# 
  4861  0490                     	;# 
  4862  0491                     	;# 
  4863  0492                     	;# 
  4864  0492                     	;# 
  4865  0493                     	;# 
  4866  0494                     	;# 
  4867  0495                     	;# 
  4868  0495                     	;# 
  4869  0496                     	;# 
  4870  0497                     	;# 
  4871  0498                     	;# 
  4872  0499                     	;# 
  4873  049A                     	;# 
  4874  049B                     	;# 
  4875  049C                     	;# 
  4876  049D                     	;# 
  4877  058C                     	;# 
  4878  058C                     	;# 
  4879  058D                     	;# 
  4880  058E                     	;# 
  4881  058F                     	;# 
  4882  058F                     	;# 
  4883  0590                     	;# 
  4884  0591                     	;# 
  4885  0592                     	;# 
  4886  0593                     	;# 
  4887  059C                     	;# 
  4888  059C                     	;# 
  4889  059D                     	;# 
  4890  059D                     	;# 
  4891  059E                     	;# 
  4892  059F                     	;# 
  4893  060C                     	;# 
  4894  060C                     	;# 
  4895  060D                     	;# 
  4896  060D                     	;# 
  4897  060E                     	;# 
  4898  060F                     	;# 
  4899  0610                     	;# 
  4900  0611                     	;# 
  4901  0612                     	;# 
  4902  0613                     	;# 
  4903  0614                     	;# 
  4904  0616                     	;# 
  4905  0616                     	;# 
  4906  0617                     	;# 
  4907  0617                     	;# 
  4908  0618                     	;# 
  4909  0619                     	;# 
  4910  061A                     	;# 
  4911  061B                     	;# 
  4912  061C                     	;# 
  4913  061D                     	;# 
  4914  061E                     	;# 
  4915  070C                     	;# 
  4916  070D                     	;# 
  4917  070E                     	;# 
  4918  070F                     	;# 
  4919  0710                     	;# 
  4920  0711                     	;# 
  4921  0712                     	;# 
  4922  0713                     	;# 
  4923  0714                     	;# 
  4924  0716                     	;# 
  4925  0717                     	;# 
  4926  0718                     	;# 
  4927  0719                     	;# 
  4928  071A                     	;# 
  4929  071B                     	;# 
  4930  071C                     	;# 
  4931  071D                     	;# 
  4932  071E                     	;# 
  4933  0796                     	;# 
  4934  0797                     	;# 
  4935  0798                     	;# 
  4936  0799                     	;# 
  4937  079A                     	;# 
  4938  079B                     	;# 
  4939  079C                     	;# 
  4940  079D                     	;# 
  4941  080C                     	;# 
  4942  080D                     	;# 
  4943  080E                     	;# 
  4944  080F                     	;# 
  4945  0810                     	;# 
  4946  0811                     	;# 
  4947  0812                     	;# 
  4948  0813                     	;# 
  4949  0814                     	;# 
  4950  081A                     	;# 
  4951  081A                     	;# 
  4952  081B                     	;# 
  4953  081C                     	;# 
  4954  081C                     	;# 
  4955  081D                     	;# 
  4956  081E                     	;# 
  4957  081F                     	;# 
  4958  088C                     	;# 
  4959  088D                     	;# 
  4960  088E                     	;# 
  4961  088F                     	;# 
  4962  0890                     	;# 
  4963  0891                     	;# 
  4964  0892                     	;# 
  4965  0893                     	;# 
  4966  0895                     	;# 
  4967  0896                     	;# 
  4968  0897                     	;# 
  4969  0898                     	;# 
  4970  0899                     	;# 
  4971  089A                     	;# 
  4972  089B                     	;# 
  4973  090C                     	;# 
  4974  090E                     	;# 
  4975  090F                     	;# 
  4976  091F                     	;# 
  4977  098F                     	;# 
  4978  098F                     	;# 
  4979  0990                     	;# 
  4980  0991                     	;# 
  4981  0992                     	;# 
  4982  0993                     	;# 
  4983  0994                     	;# 
  4984  0995                     	;# 
  4985  0996                     	;# 
  4986  0997                     	;# 
  4987  1E0F                     	;# 
  4988  1E10                     	;# 
  4989  1E11                     	;# 
  4990  1E12                     	;# 
  4991  1E13                     	;# 
  4992  1E14                     	;# 
  4993  1E15                     	;# 
  4994  1E16                     	;# 
  4995  1E17                     	;# 
  4996  1E18                     	;# 
  4997  1E19                     	;# 
  4998  1E1A                     	;# 
  4999  1E1B                     	;# 
  5000  1E1C                     	;# 
  5001  1E1D                     	;# 
  5002  1E1E                     	;# 
  5003  1E1F                     	;# 
  5004  1E20                     	;# 
  5005  1E21                     	;# 
  5006  1E22                     	;# 
  5007  1E23                     	;# 
  5008  1E24                     	;# 
  5009  1E25                     	;# 
  5010  1E26                     	;# 
  5011  1E27                     	;# 
  5012  1E28                     	;# 
  5013  1E29                     	;# 
  5014  1E2A                     	;# 
  5015  1E2B                     	;# 
  5016  1E2C                     	;# 
  5017  1E2D                     	;# 
  5018  1E2E                     	;# 
  5019  1E2F                     	;# 
  5020  1E30                     	;# 
  5021  1E31                     	;# 
  5022  1E32                     	;# 
  5023  1E33                     	;# 
  5024  1E34                     	;# 
  5025  1E35                     	;# 
  5026  1E36                     	;# 
  5027  1E37                     	;# 
  5028  1E8F                     	;# 
  5029  1E90                     	;# 
  5030  1E91                     	;# 
  5031  1E92                     	;# 
  5032  1E93                     	;# 
  5033  1E94                     	;# 
  5034  1E95                     	;# 
  5035  1E96                     	;# 
  5036  1E97                     	;# 
  5037  1E9C                     	;# 
  5038  1E9D                     	;# 
  5039  1E9E                     	;# 
  5040  1EA1                     	;# 
  5041  1EA2                     	;# 
  5042  1EA3                     	;# 
  5043  1EA4                     	;# 
  5044  1EA9                     	;# 
  5045  1EAA                     	;# 
  5046  1EB1                     	;# 
  5047  1EB2                     	;# 
  5048  1EB8                     	;# 
  5049  1EB9                     	;# 
  5050  1EBA                     	;# 
  5051  1EBB                     	;# 
  5052  1EBC                     	;# 
  5053  1EBD                     	;# 
  5054  1EBE                     	;# 
  5055  1EC3                     	;# 
  5056  1EC5                     	;# 
  5057  1EC6                     	;# 
  5058  1EC7                     	;# 
  5059  1EC8                     	;# 
  5060  1EC9                     	;# 
  5061  1ECA                     	;# 
  5062  1ECB                     	;# 
  5063  1ECB                     	;# 
  5064  1ECB                     	;# 
  5065  1ECC                     	;# 
  5066  1ECC                     	;# 
  5067  1ECC                     	;# 
  5068  1F10                     	;# 
  5069  1F11                     	;# 
  5070  1F12                     	;# 
  5071  1F14                     	;# 
  5072  1F15                     	;# 
  5073  1F1C                     	;# 
  5074  1F1D                     	;# 
  5075  1F1E                     	;# 
  5076  1F1F                     	;# 
  5077  1F20                     	;# 
  5078  1F21                     	;# 
  5079  1F22                     	;# 
  5080  1F23                     	;# 
  5081  1F24                     	;# 
  5082  1F25                     	;# 
  5083  1F26                     	;# 
  5084  1F27                     	;# 
  5085  1F38                     	;# 
  5086  1F39                     	;# 
  5087  1F3A                     	;# 
  5088  1F3B                     	;# 
  5089  1F3C                     	;# 
  5090  1F3D                     	;# 
  5091  1F3E                     	;# 
  5092  1F3F                     	;# 
  5093  1F43                     	;# 
  5094  1F44                     	;# 
  5095  1F45                     	;# 
  5096  1F46                     	;# 
  5097  1F47                     	;# 
  5098  1F48                     	;# 
  5099  1F49                     	;# 
  5100  1F4A                     	;# 
  5101  1F4E                     	;# 
  5102  1F4F                     	;# 
  5103  1F50                     	;# 
  5104  1F51                     	;# 
  5105  1F52                     	;# 
  5106  1F53                     	;# 
  5107  1F54                     	;# 
  5108  1F55                     	;# 
  5109  1FE4                     	;# 
  5110  1FE5                     	;# 
  5111  1FE6                     	;# 
  5112  1FE7                     	;# 
  5113  1FE8                     	;# 
  5114  1FE8                     	;# 
  5115  1FE9                     	;# 
  5116  1FEA                     	;# 
  5117  1FEB                     	;# 
  5118  1FED                     	;# 
  5119  1FEE                     	;# 
  5120  1FEF                     	;# 
  5121  0000                     	;# 
  5122  0001                     	;# 
  5123  0002                     	;# 
  5124  0003                     	;# 
  5125  0004                     	;# 
  5126  0005                     	;# 
  5127  0006                     	;# 
  5128  0007                     	;# 
  5129  0008                     	;# 
  5130  0009                     	;# 
  5131  000A                     	;# 
  5132  000B                     	;# 
  5133  000C                     	;# 
  5134  000D                     	;# 
  5135  000E                     	;# 
  5136  0012                     	;# 
  5137  0013                     	;# 
  5138  0014                     	;# 
  5139  0018                     	;# 
  5140  0019                     	;# 
  5141  001A                     	;# 
  5142  008C                     	;# 
  5143  008C                     	;# 
  5144  008D                     	;# 
  5145  008E                     	;# 
  5146  008E                     	;# 
  5147  008F                     	;# 
  5148  0090                     	;# 
  5149  0090                     	;# 
  5150  0091                     	;# 
  5151  0092                     	;# 
  5152  0092                     	;# 
  5153  0093                     	;# 
  5154  0094                     	;# 
  5155  0094                     	;# 
  5156  0095                     	;# 
  5157  0096                     	;# 
  5158  0096                     	;# 
  5159  0097                     	;# 
  5160  0098                     	;# 
  5161  0099                     	;# 
  5162  009A                     	;# 
  5163  009B                     	;# 
  5164  009B                     	;# 
  5165  009C                     	;# 
  5166  009D                     	;# 
  5167  009D                     	;# 
  5168  009E                     	;# 
  5169  009F                     	;# 
  5170  010C                     	;# 
  5171  010C                     	;# 
  5172  010D                     	;# 
  5173  010E                     	;# 
  5174  010F                     	;# 
  5175  010F                     	;# 
  5176  0110                     	;# 
  5177  0111                     	;# 
  5178  0112                     	;# 
  5179  0113                     	;# 
  5180  0114                     	;# 
  5181  0115                     	;# 
  5182  0116                     	;# 
  5183  0117                     	;# 
  5184  0118                     	;# 
  5185  0119                     	;# 
  5186  0119                     	;# 
  5187  0119                     	;# 
  5188  011A                     	;# 
  5189  011A                     	;# 
  5190  011A                     	;# 
  5191  011B                     	;# 
  5192  011B                     	;# 
  5193  011B                     	;# 
  5194  011B                     	;# 
  5195  011B                     	;# 
  5196  011C                     	;# 
  5197  011C                     	;# 
  5198  011C                     	;# 
  5199  011D                     	;# 
  5200  011D                     	;# 
  5201  011D                     	;# 
  5202  011E                     	;# 
  5203  011E                     	;# 
  5204  011E                     	;# 
  5205  011F                     	;# 
  5206  011F                     	;# 
  5207  011F                     	;# 
  5208  011F                     	;# 
  5209  011F                     	;# 
  5210  018C                     	;# 
  5211  018D                     	;# 
  5212  018E                     	;# 
  5213  018F                     	;# 
  5214  0190                     	;# 
  5215  0191                     	;# 
  5216  0192                     	;# 
  5217  0196                     	;# 
  5218  0197                     	;# 
  5219  0198                     	;# 
  5220  0199                     	;# 
  5221  019A                     	;# 
  5222  019B                     	;# 
  5223  019C                     	;# 
  5224  020C                     	;# 
  5225  020D                     	;# 
  5226  020E                     	;# 
  5227  020E                     	;# 
  5228  020F                     	;# 
  5229  020F                     	;# 
  5230  0210                     	;# 
  5231  0210                     	;# 
  5232  0211                     	;# 
  5233  0211                     	;# 
  5234  0212                     	;# 
  5235  0213                     	;# 
  5236  0214                     	;# 
  5237  0214                     	;# 
  5238  0215                     	;# 
  5239  0215                     	;# 
  5240  0216                     	;# 
  5241  0216                     	;# 
  5242  0217                     	;# 
  5243  0217                     	;# 
  5244  0218                     	;# 
  5245  0219                     	;# 
  5246  021A                     	;# 
  5247  021A                     	;# 
  5248  021B                     	;# 
  5249  021B                     	;# 
  5250  021C                     	;# 
  5251  021C                     	;# 
  5252  021D                     	;# 
  5253  021D                     	;# 
  5254  021E                     	;# 
  5255  021F                     	;# 
  5256  028C                     	;# 
  5257  028C                     	;# 
  5258  028D                     	;# 
  5259  028D                     	;# 
  5260  028E                     	;# 
  5261  028F                     	;# 
  5262  0290                     	;# 
  5263  0291                     	;# 
  5264  0292                     	;# 
  5265  0292                     	;# 
  5266  0293                     	;# 
  5267  0293                     	;# 
  5268  0294                     	;# 
  5269  0295                     	;# 
  5270  0296                     	;# 
  5271  0297                     	;# 
  5272  0298                     	;# 
  5273  0298                     	;# 
  5274  0299                     	;# 
  5275  0299                     	;# 
  5276  029A                     	;# 
  5277  029B                     	;# 
  5278  029C                     	;# 
  5279  029D                     	;# 
  5280  029F                     	;# 
  5281  030C                     	;# 
  5282  030C                     	;# 
  5283  030D                     	;# 
  5284  030E                     	;# 
  5285  030F                     	;# 
  5286  0310                     	;# 
  5287  0310                     	;# 
  5288  0311                     	;# 
  5289  0312                     	;# 
  5290  0313                     	;# 
  5291  0314                     	;# 
  5292  0314                     	;# 
  5293  0315                     	;# 
  5294  0316                     	;# 
  5295  0317                     	;# 
  5296  0318                     	;# 
  5297  0318                     	;# 
  5298  0319                     	;# 
  5299  031A                     	;# 
  5300  031B                     	;# 
  5301  038C                     	;# 
  5302  038C                     	;# 
  5303  038D                     	;# 
  5304  038E                     	;# 
  5305  0390                     	;# 
  5306  0390                     	;# 
  5307  0391                     	;# 
  5308  0392                     	;# 
  5309  048C                     	;# 
  5310  048C                     	;# 
  5311  048D                     	;# 
  5312  048E                     	;# 
  5313  048F                     	;# 
  5314  048F                     	;# 
  5315  0490                     	;# 
  5316  0491                     	;# 
  5317  0492                     	;# 
  5318  0492                     	;# 
  5319  0493                     	;# 
  5320  0494                     	;# 
  5321  0495                     	;# 
  5322  0495                     	;# 
  5323  0496                     	;# 
  5324  0497                     	;# 
  5325  0498                     	;# 
  5326  0499                     	;# 
  5327  049A                     	;# 
  5328  049B                     	;# 
  5329  049C                     	;# 
  5330  049D                     	;# 
  5331  058C                     	;# 
  5332  058C                     	;# 
  5333  058D                     	;# 
  5334  058E                     	;# 
  5335  058F                     	;# 
  5336  058F                     	;# 
  5337  0590                     	;# 
  5338  0591                     	;# 
  5339  0592                     	;# 
  5340  0593                     	;# 
  5341  059C                     	;# 
  5342  059C                     	;# 
  5343  059D                     	;# 
  5344  059D                     	;# 
  5345  059E                     	;# 
  5346  059F                     	;# 
  5347  060C                     	;# 
  5348  060C                     	;# 
  5349  060D                     	;# 
  5350  060D                     	;# 
  5351  060E                     	;# 
  5352  060F                     	;# 
  5353  0610                     	;# 
  5354  0611                     	;# 
  5355  0612                     	;# 
  5356  0613                     	;# 
  5357  0614                     	;# 
  5358  0616                     	;# 
  5359  0616                     	;# 
  5360  0617                     	;# 
  5361  0617                     	;# 
  5362  0618                     	;# 
  5363  0619                     	;# 
  5364  061A                     	;# 
  5365  061B                     	;# 
  5366  061C                     	;# 
  5367  061D                     	;# 
  5368  061E                     	;# 
  5369  070C                     	;# 
  5370  070D                     	;# 
  5371  070E                     	;# 
  5372  070F                     	;# 
  5373  0710                     	;# 
  5374  0711                     	;# 
  5375  0712                     	;# 
  5376  0713                     	;# 
  5377  0714                     	;# 
  5378  0716                     	;# 
  5379  0717                     	;# 
  5380  0718                     	;# 
  5381  0719                     	;# 
  5382  071A                     	;# 
  5383  071B                     	;# 
  5384  071C                     	;# 
  5385  071D                     	;# 
  5386  071E                     	;# 
  5387  0796                     	;# 
  5388  0797                     	;# 
  5389  0798                     	;# 
  5390  0799                     	;# 
  5391  079A                     	;# 
  5392  079B                     	;# 
  5393  079C                     	;# 
  5394  079D                     	;# 
  5395  080C                     	;# 
  5396  080D                     	;# 
  5397  080E                     	;# 
  5398  080F                     	;# 
  5399  0810                     	;# 
  5400  0811                     	;# 
  5401  0812                     	;# 
  5402  0813                     	;# 
  5403  0814                     	;# 
  5404  081A                     	;# 
  5405  081A                     	;# 
  5406  081B                     	;# 
  5407  081C                     	;# 
  5408  081C                     	;# 
  5409  081D                     	;# 
  5410  081E                     	;# 
  5411  081F                     	;# 
  5412  088C                     	;# 
  5413  088D                     	;# 
  5414  088E                     	;# 
  5415  088F                     	;# 
  5416  0890                     	;# 
  5417  0891                     	;# 
  5418  0892                     	;# 
  5419  0893                     	;# 
  5420  0895                     	;# 
  5421  0896                     	;# 
  5422  0897                     	;# 
  5423  0898                     	;# 
  5424  0899                     	;# 
  5425  089A                     	;# 
  5426  089B                     	;# 
  5427  090C                     	;# 
  5428  090E                     	;# 
  5429  090F                     	;# 
  5430  091F                     	;# 
  5431  098F                     	;# 
  5432  098F                     	;# 
  5433  0990                     	;# 
  5434  0991                     	;# 
  5435  0992                     	;# 
  5436  0993                     	;# 
  5437  0994                     	;# 
  5438  0995                     	;# 
  5439  0996                     	;# 
  5440  0997                     	;# 
  5441  1E0F                     	;# 
  5442  1E10                     	;# 
  5443  1E11                     	;# 
  5444  1E12                     	;# 
  5445  1E13                     	;# 
  5446  1E14                     	;# 
  5447  1E15                     	;# 
  5448  1E16                     	;# 
  5449  1E17                     	;# 
  5450  1E18                     	;# 
  5451  1E19                     	;# 
  5452  1E1A                     	;# 
  5453  1E1B                     	;# 
  5454  1E1C                     	;# 
  5455  1E1D                     	;# 
  5456  1E1E                     	;# 
  5457  1E1F                     	;# 
  5458  1E20                     	;# 
  5459  1E21                     	;# 
  5460  1E22                     	;# 
  5461  1E23                     	;# 
  5462  1E24                     	;# 
  5463  1E25                     	;# 
  5464  1E26                     	;# 
  5465  1E27                     	;# 
  5466  1E28                     	;# 
  5467  1E29                     	;# 
  5468  1E2A                     	;# 
  5469  1E2B                     	;# 
  5470  1E2C                     	;# 
  5471  1E2D                     	;# 
  5472  1E2E                     	;# 
  5473  1E2F                     	;# 
  5474  1E30                     	;# 
  5475  1E31                     	;# 
  5476  1E32                     	;# 
  5477  1E33                     	;# 
  5478  1E34                     	;# 
  5479  1E35                     	;# 
  5480  1E36                     	;# 
  5481  1E37                     	;# 
  5482  1E8F                     	;# 
  5483  1E90                     	;# 
  5484  1E91                     	;# 
  5485  1E92                     	;# 
  5486  1E93                     	;# 
  5487  1E94                     	;# 
  5488  1E95                     	;# 
  5489  1E96                     	;# 
  5490  1E97                     	;# 
  5491  1E9C                     	;# 
  5492  1E9D                     	;# 
  5493  1E9E                     	;# 
  5494  1EA1                     	;# 
  5495  1EA2                     	;# 
  5496  1EA3                     	;# 
  5497  1EA4                     	;# 
  5498  1EA9                     	;# 
  5499  1EAA                     	;# 
  5500  1EB1                     	;# 
  5501  1EB2                     	;# 
  5502  1EB8                     	;# 
  5503  1EB9                     	;# 
  5504  1EBA                     	;# 
  5505  1EBB                     	;# 
  5506  1EBC                     	;# 
  5507  1EBD                     	;# 
  5508  1EBE                     	;# 
  5509  1EC3                     	;# 
  5510  1EC5                     	;# 
  5511  1EC6                     	;# 
  5512  1EC7                     	;# 
  5513  1EC8                     	;# 
  5514  1EC9                     	;# 
  5515  1ECA                     	;# 
  5516  1ECB                     	;# 
  5517  1ECB                     	;# 
  5518  1ECB                     	;# 
  5519  1ECC                     	;# 
  5520  1ECC                     	;# 
  5521  1ECC                     	;# 
  5522  1F10                     	;# 
  5523  1F11                     	;# 
  5524  1F12                     	;# 
  5525  1F14                     	;# 
  5526  1F15                     	;# 
  5527  1F1C                     	;# 
  5528  1F1D                     	;# 
  5529  1F1E                     	;# 
  5530  1F1F                     	;# 
  5531  1F20                     	;# 
  5532  1F21                     	;# 
  5533  1F22                     	;# 
  5534  1F23                     	;# 
  5535  1F24                     	;# 
  5536  1F25                     	;# 
  5537  1F26                     	;# 
  5538  1F27                     	;# 
  5539  1F38                     	;# 
  5540  1F39                     	;# 
  5541  1F3A                     	;# 
  5542  1F3B                     	;# 
  5543  1F3C                     	;# 
  5544  1F3D                     	;# 
  5545  1F3E                     	;# 
  5546  1F3F                     	;# 
  5547  1F43                     	;# 
  5548  1F44                     	;# 
  5549  1F45                     	;# 
  5550  1F46                     	;# 
  5551  1F47                     	;# 
  5552  1F48                     	;# 
  5553  1F49                     	;# 
  5554  1F4A                     	;# 
  5555  1F4E                     	;# 
  5556  1F4F                     	;# 
  5557  1F50                     	;# 
  5558  1F51                     	;# 
  5559  1F52                     	;# 
  5560  1F53                     	;# 
  5561  1F54                     	;# 
  5562  1F55                     	;# 
  5563  1FE4                     	;# 
  5564  1FE5                     	;# 
  5565  1FE6                     	;# 
  5566  1FE7                     	;# 
  5567  1FE8                     	;# 
  5568  1FE8                     	;# 
  5569  1FE9                     	;# 
  5570  1FEA                     	;# 
  5571  1FEB                     	;# 
  5572  1FED                     	;# 
  5573  1FEE                     	;# 
  5574  1FEF                     	;# 
  5575  0000                     	;# 
  5576  0001                     	;# 
  5577  0002                     	;# 
  5578  0003                     	;# 
  5579  0004                     	;# 
  5580  0005                     	;# 
  5581  0006                     	;# 
  5582  0007                     	;# 
  5583  0008                     	;# 
  5584  0009                     	;# 
  5585  000A                     	;# 
  5586  000B                     	;# 
  5587  000C                     	;# 
  5588  000D                     	;# 
  5589  000E                     	;# 
  5590  0012                     	;# 
  5591  0013                     	;# 
  5592  0014                     	;# 
  5593  0018                     	;# 
  5594  0019                     	;# 
  5595  001A                     	;# 
  5596  008C                     	;# 
  5597  008C                     	;# 
  5598  008D                     	;# 
  5599  008E                     	;# 
  5600  008E                     	;# 
  5601  008F                     	;# 
  5602  0090                     	;# 
  5603  0090                     	;# 
  5604  0091                     	;# 
  5605  0092                     	;# 
  5606  0092                     	;# 
  5607  0093                     	;# 
  5608  0094                     	;# 
  5609  0094                     	;# 
  5610  0095                     	;# 
  5611  0096                     	;# 
  5612  0096                     	;# 
  5613  0097                     	;# 
  5614  0098                     	;# 
  5615  0099                     	;# 
  5616  009A                     	;# 
  5617  009B                     	;# 
  5618  009B                     	;# 
  5619  009C                     	;# 
  5620  009D                     	;# 
  5621  009D                     	;# 
  5622  009E                     	;# 
  5623  009F                     	;# 
  5624  010C                     	;# 
  5625  010C                     	;# 
  5626  010D                     	;# 
  5627  010E                     	;# 
  5628  010F                     	;# 
  5629  010F                     	;# 
  5630  0110                     	;# 
  5631  0111                     	;# 
  5632  0112                     	;# 
  5633  0113                     	;# 
  5634  0114                     	;# 
  5635  0115                     	;# 
  5636  0116                     	;# 
  5637  0117                     	;# 
  5638  0118                     	;# 
  5639  0119                     	;# 
  5640  0119                     	;# 
  5641  0119                     	;# 
  5642  011A                     	;# 
  5643  011A                     	;# 
  5644  011A                     	;# 
  5645  011B                     	;# 
  5646  011B                     	;# 
  5647  011B                     	;# 
  5648  011B                     	;# 
  5649  011B                     	;# 
  5650  011C                     	;# 
  5651  011C                     	;# 
  5652  011C                     	;# 
  5653  011D                     	;# 
  5654  011D                     	;# 
  5655  011D                     	;# 
  5656  011E                     	;# 
  5657  011E                     	;# 
  5658  011E                     	;# 
  5659  011F                     	;# 
  5660  011F                     	;# 
  5661  011F                     	;# 
  5662  011F                     	;# 
  5663  011F                     	;# 
  5664  018C                     	;# 
  5665  018D                     	;# 
  5666  018E                     	;# 
  5667  018F                     	;# 
  5668  0190                     	;# 
  5669  0191                     	;# 
  5670  0192                     	;# 
  5671  0196                     	;# 
  5672  0197                     	;# 
  5673  0198                     	;# 
  5674  0199                     	;# 
  5675  019A                     	;# 
  5676  019B                     	;# 
  5677  019C                     	;# 
  5678  020C                     	;# 
  5679  020D                     	;# 
  5680  020E                     	;# 
  5681  020E                     	;# 
  5682  020F                     	;# 
  5683  020F                     	;# 
  5684  0210                     	;# 
  5685  0210                     	;# 
  5686  0211                     	;# 
  5687  0211                     	;# 
  5688  0212                     	;# 
  5689  0213                     	;# 
  5690  0214                     	;# 
  5691  0214                     	;# 
  5692  0215                     	;# 
  5693  0215                     	;# 
  5694  0216                     	;# 
  5695  0216                     	;# 
  5696  0217                     	;# 
  5697  0217                     	;# 
  5698  0218                     	;# 
  5699  0219                     	;# 
  5700  021A                     	;# 
  5701  021A                     	;# 
  5702  021B                     	;# 
  5703  021B                     	;# 
  5704  021C                     	;# 
  5705  021C                     	;# 
  5706  021D                     	;# 
  5707  021D                     	;# 
  5708  021E                     	;# 
  5709  021F                     	;# 
  5710  028C                     	;# 
  5711  028C                     	;# 
  5712  028D                     	;# 
  5713  028D                     	;# 
  5714  028E                     	;# 
  5715  028F                     	;# 
  5716  0290                     	;# 
  5717  0291                     	;# 
  5718  0292                     	;# 
  5719  0292                     	;# 
  5720  0293                     	;# 
  5721  0293                     	;# 
  5722  0294                     	;# 
  5723  0295                     	;# 
  5724  0296                     	;# 
  5725  0297                     	;# 
  5726  0298                     	;# 
  5727  0298                     	;# 
  5728  0299                     	;# 
  5729  0299                     	;# 
  5730  029A                     	;# 
  5731  029B                     	;# 
  5732  029C                     	;# 
  5733  029D                     	;# 
  5734  029F                     	;# 
  5735  030C                     	;# 
  5736  030C                     	;# 
  5737  030D                     	;# 
  5738  030E                     	;# 
  5739  030F                     	;# 
  5740  0310                     	;# 
  5741  0310                     	;# 
  5742  0311                     	;# 
  5743  0312                     	;# 
  5744  0313                     	;# 
  5745  0314                     	;# 
  5746  0314                     	;# 
  5747  0315                     	;# 
  5748  0316                     	;# 
  5749  0317                     	;# 
  5750  0318                     	;# 
  5751  0318                     	;# 
  5752  0319                     	;# 
  5753  031A                     	;# 
  5754  031B                     	;# 
  5755  038C                     	;# 
  5756  038C                     	;# 
  5757  038D                     	;# 
  5758  038E                     	;# 
  5759  0390                     	;# 
  5760  0390                     	;# 
  5761  0391                     	;# 
  5762  0392                     	;# 
  5763  048C                     	;# 
  5764  048C                     	;# 
  5765  048D                     	;# 
  5766  048E                     	;# 
  5767  048F                     	;# 
  5768  048F                     	;# 
  5769  0490                     	;# 
  5770  0491                     	;# 
  5771  0492                     	;# 
  5772  0492                     	;# 
  5773  0493                     	;# 
  5774  0494                     	;# 
  5775  0495                     	;# 
  5776  0495                     	;# 
  5777  0496                     	;# 
  5778  0497                     	;# 
  5779  0498                     	;# 
  5780  0499                     	;# 
  5781  049A                     	;# 
  5782  049B                     	;# 
  5783  049C                     	;# 
  5784  049D                     	;# 
  5785  058C                     	;# 
  5786  058C                     	;# 
  5787  058D                     	;# 
  5788  058E                     	;# 
  5789  058F                     	;# 
  5790  058F                     	;# 
  5791  0590                     	;# 
  5792  0591                     	;# 
  5793  0592                     	;# 
  5794  0593                     	;# 
  5795  059C                     	;# 
  5796  059C                     	;# 
  5797  059D                     	;# 
  5798  059D                     	;# 
  5799  059E                     	;# 
  5800  059F                     	;# 
  5801  060C                     	;# 
  5802  060C                     	;# 
  5803  060D                     	;# 
  5804  060D                     	;# 
  5805  060E                     	;# 
  5806  060F                     	;# 
  5807  0610                     	;# 
  5808  0611                     	;# 
  5809  0612                     	;# 
  5810  0613                     	;# 
  5811  0614                     	;# 
  5812  0616                     	;# 
  5813  0616                     	;# 
  5814  0617                     	;# 
  5815  0617                     	;# 
  5816  0618                     	;# 
  5817  0619                     	;# 
  5818  061A                     	;# 
  5819  061B                     	;# 
  5820  061C                     	;# 
  5821  061D                     	;# 
  5822  061E                     	;# 
  5823  070C                     	;# 
  5824  070D                     	;# 
  5825  070E                     	;# 
  5826  070F                     	;# 
  5827  0710                     	;# 
  5828  0711                     	;# 
  5829  0712                     	;# 
  5830  0713                     	;# 
  5831  0714                     	;# 
  5832  0716                     	;# 
  5833  0717                     	;# 
  5834  0718                     	;# 
  5835  0719                     	;# 
  5836  071A                     	;# 
  5837  071B                     	;# 
  5838  071C                     	;# 
  5839  071D                     	;# 
  5840  071E                     	;# 
  5841  0796                     	;# 
  5842  0797                     	;# 
  5843  0798                     	;# 
  5844  0799                     	;# 
  5845  079A                     	;# 
  5846  079B                     	;# 
  5847  079C                     	;# 
  5848  079D                     	;# 
  5849  080C                     	;# 
  5850  080D                     	;# 
  5851  080E                     	;# 
  5852  080F                     	;# 
  5853  0810                     	;# 
  5854  0811                     	;# 
  5855  0812                     	;# 
  5856  0813                     	;# 
  5857  0814                     	;# 
  5858  081A                     	;# 
  5859  081A                     	;# 
  5860  081B                     	;# 
  5861  081C                     	;# 
  5862  081C                     	;# 
  5863  081D                     	;# 
  5864  081E                     	;# 
  5865  081F                     	;# 
  5866  088C                     	;# 
  5867  088D                     	;# 
  5868  088E                     	;# 
  5869  088F                     	;# 
  5870  0890                     	;# 
  5871  0891                     	;# 
  5872  0892                     	;# 
  5873  0893                     	;# 
  5874  0895                     	;# 
  5875  0896                     	;# 
  5876  0897                     	;# 
  5877  0898                     	;# 
  5878  0899                     	;# 
  5879  089A                     	;# 
  5880  089B                     	;# 
  5881  090C                     	;# 
  5882  090E                     	;# 
  5883  090F                     	;# 
  5884  091F                     	;# 
  5885  098F                     	;# 
  5886  098F                     	;# 
  5887  0990                     	;# 
  5888  0991                     	;# 
  5889  0992                     	;# 
  5890  0993                     	;# 
  5891  0994                     	;# 
  5892  0995                     	;# 
  5893  0996                     	;# 
  5894  0997                     	;# 
  5895  1E0F                     	;# 
  5896  1E10                     	;# 
  5897  1E11                     	;# 
  5898  1E12                     	;# 
  5899  1E13                     	;# 
  5900  1E14                     	;# 
  5901  1E15                     	;# 
  5902  1E16                     	;# 
  5903  1E17                     	;# 
  5904  1E18                     	;# 
  5905  1E19                     	;# 
  5906  1E1A                     	;# 
  5907  1E1B                     	;# 
  5908  1E1C                     	;# 
  5909  1E1D                     	;# 
  5910  1E1E                     	;# 
  5911  1E1F                     	;# 
  5912  1E20                     	;# 
  5913  1E21                     	;# 
  5914  1E22                     	;# 
  5915  1E23                     	;# 
  5916  1E24                     	;# 
  5917  1E25                     	;# 
  5918  1E26                     	;# 
  5919  1E27                     	;# 
  5920  1E28                     	;# 
  5921  1E29                     	;# 
  5922  1E2A                     	;# 
  5923  1E2B                     	;# 
  5924  1E2C                     	;# 
  5925  1E2D                     	;# 
  5926  1E2E                     	;# 
  5927  1E2F                     	;# 
  5928  1E30                     	;# 
  5929  1E31                     	;# 
  5930  1E32                     	;# 
  5931  1E33                     	;# 
  5932  1E34                     	;# 
  5933  1E35                     	;# 
  5934  1E36                     	;# 
  5935  1E37                     	;# 
  5936  1E8F                     	;# 
  5937  1E90                     	;# 
  5938  1E91                     	;# 
  5939  1E92                     	;# 
  5940  1E93                     	;# 
  5941  1E94                     	;# 
  5942  1E95                     	;# 
  5943  1E96                     	;# 
  5944  1E97                     	;# 
  5945  1E9C                     	;# 
  5946  1E9D                     	;# 
  5947  1E9E                     	;# 
  5948  1EA1                     	;# 
  5949  1EA2                     	;# 
  5950  1EA3                     	;# 
  5951  1EA4                     	;# 
  5952  1EA9                     	;# 
  5953  1EAA                     	;# 
  5954  1EB1                     	;# 
  5955  1EB2                     	;# 
  5956  1EB8                     	;# 
  5957  1EB9                     	;# 
  5958  1EBA                     	;# 
  5959  1EBB                     	;# 
  5960  1EBC                     	;# 
  5961  1EBD                     	;# 
  5962  1EBE                     	;# 
  5963  1EC3                     	;# 
  5964  1EC5                     	;# 
  5965  1EC6                     	;# 
  5966  1EC7                     	;# 
  5967  1EC8                     	;# 
  5968  1EC9                     	;# 
  5969  1ECA                     	;# 
  5970  1ECB                     	;# 
  5971  1ECB                     	;# 
  5972  1ECB                     	;# 
  5973  1ECC                     	;# 
  5974  1ECC                     	;# 
  5975  1ECC                     	;# 
  5976  1F10                     	;# 
  5977  1F11                     	;# 
  5978  1F12                     	;# 
  5979  1F14                     	;# 
  5980  1F15                     	;# 
  5981  1F1C                     	;# 
  5982  1F1D                     	;# 
  5983  1F1E                     	;# 
  5984  1F1F                     	;# 
  5985  1F20                     	;# 
  5986  1F21                     	;# 
  5987  1F22                     	;# 
  5988  1F23                     	;# 
  5989  1F24                     	;# 
  5990  1F25                     	;# 
  5991  1F26                     	;# 
  5992  1F27                     	;# 
  5993  1F38                     	;# 
  5994  1F39                     	;# 
  5995  1F3A                     	;# 
  5996  1F3B                     	;# 
  5997  1F3C                     	;# 
  5998  1F3D                     	;# 
  5999  1F3E                     	;# 
  6000  1F3F                     	;# 
  6001  1F43                     	;# 
  6002  1F44                     	;# 
  6003  1F45                     	;# 
  6004  1F46                     	;# 
  6005  1F47                     	;# 
  6006  1F48                     	;# 
  6007  1F49                     	;# 
  6008  1F4A                     	;# 
  6009  1F4E                     	;# 
  6010  1F4F                     	;# 
  6011  1F50                     	;# 
  6012  1F51                     	;# 
  6013  1F52                     	;# 
  6014  1F53                     	;# 
  6015  1F54                     	;# 
  6016  1F55                     	;# 
  6017  1FE4                     	;# 
  6018  1FE5                     	;# 
  6019  1FE6                     	;# 
  6020  1FE7                     	;# 
  6021  1FE8                     	;# 
  6022  1FE8                     	;# 
  6023  1FE9                     	;# 
  6024  1FEA                     	;# 
  6025  1FEB                     	;# 
  6026  1FED                     	;# 
  6027  1FEE                     	;# 
  6028  1FEF                     	;# 
  6029  0000                     	;# 
  6030  0001                     	;# 
  6031  0002                     	;# 
  6032  0003                     	;# 
  6033  0004                     	;# 
  6034  0005                     	;# 
  6035  0006                     	;# 
  6036  0007                     	;# 
  6037  0008                     	;# 
  6038  0009                     	;# 
  6039  000A                     	;# 
  6040  000B                     	;# 
  6041  000C                     	;# 
  6042  000D                     	;# 
  6043  000E                     	;# 
  6044  0012                     	;# 
  6045  0013                     	;# 
  6046  0014                     	;# 
  6047  0018                     	;# 
  6048  0019                     	;# 
  6049  001A                     	;# 
  6050  008C                     	;# 
  6051  008C                     	;# 
  6052  008D                     	;# 
  6053  008E                     	;# 
  6054  008E                     	;# 
  6055  008F                     	;# 
  6056  0090                     	;# 
  6057  0090                     	;# 
  6058  0091                     	;# 
  6059  0092                     	;# 
  6060  0092                     	;# 
  6061  0093                     	;# 
  6062  0094                     	;# 
  6063  0094                     	;# 
  6064  0095                     	;# 
  6065  0096                     	;# 
  6066  0096                     	;# 
  6067  0097                     	;# 
  6068  0098                     	;# 
  6069  0099                     	;# 
  6070  009A                     	;# 
  6071  009B                     	;# 
  6072  009B                     	;# 
  6073  009C                     	;# 
  6074  009D                     	;# 
  6075  009D                     	;# 
  6076  009E                     	;# 
  6077  009F                     	;# 
  6078  010C                     	;# 
  6079  010C                     	;# 
  6080  010D                     	;# 
  6081  010E                     	;# 
  6082  010F                     	;# 
  6083  010F                     	;# 
  6084  0110                     	;# 
  6085  0111                     	;# 
  6086  0112                     	;# 
  6087  0113                     	;# 
  6088  0114                     	;# 
  6089  0115                     	;# 
  6090  0116                     	;# 
  6091  0117                     	;# 
  6092  0118                     	;# 
  6093  0119                     	;# 
  6094  0119                     	;# 
  6095  0119                     	;# 
  6096  011A                     	;# 
  6097  011A                     	;# 
  6098  011A                     	;# 
  6099  011B                     	;# 
  6100  011B                     	;# 
  6101  011B                     	;# 
  6102  011B                     	;# 
  6103  011B                     	;# 
  6104  011C                     	;# 
  6105  011C                     	;# 
  6106  011C                     	;# 
  6107  011D                     	;# 
  6108  011D                     	;# 
  6109  011D                     	;# 
  6110  011E                     	;# 
  6111  011E                     	;# 
  6112  011E                     	;# 
  6113  011F                     	;# 
  6114  011F                     	;# 
  6115  011F                     	;# 
  6116  011F                     	;# 
  6117  011F                     	;# 
  6118  018C                     	;# 
  6119  018D                     	;# 
  6120  018E                     	;# 
  6121  018F                     	;# 
  6122  0190                     	;# 
  6123  0191                     	;# 
  6124  0192                     	;# 
  6125  0196                     	;# 
  6126  0197                     	;# 
  6127  0198                     	;# 
  6128  0199                     	;# 
  6129  019A                     	;# 
  6130  019B                     	;# 
  6131  019C                     	;# 
  6132  020C                     	;# 
  6133  020D                     	;# 
  6134  020E                     	;# 
  6135  020E                     	;# 
  6136  020F                     	;# 
  6137  020F                     	;# 
  6138  0210                     	;# 
  6139  0210                     	;# 
  6140  0211                     	;# 
  6141  0211                     	;# 
  6142  0212                     	;# 
  6143  0213                     	;# 
  6144  0214                     	;# 
  6145  0214                     	;# 
  6146  0215                     	;# 
  6147  0215                     	;# 
  6148  0216                     	;# 
  6149  0216                     	;# 
  6150  0217                     	;# 
  6151  0217                     	;# 
  6152  0218                     	;# 
  6153  0219                     	;# 
  6154  021A                     	;# 
  6155  021A                     	;# 
  6156  021B                     	;# 
  6157  021B                     	;# 
  6158  021C                     	;# 
  6159  021C                     	;# 
  6160  021D                     	;# 
  6161  021D                     	;# 
  6162  021E                     	;# 
  6163  021F                     	;# 
  6164  028C                     	;# 
  6165  028C                     	;# 
  6166  028D                     	;# 
  6167  028D                     	;# 
  6168  028E                     	;# 
  6169  028F                     	;# 
  6170  0290                     	;# 
  6171  0291                     	;# 
  6172  0292                     	;# 
  6173  0292                     	;# 
  6174  0293                     	;# 
  6175  0293                     	;# 
  6176  0294                     	;# 
  6177  0295                     	;# 
  6178  0296                     	;# 
  6179  0297                     	;# 
  6180  0298                     	;# 
  6181  0298                     	;# 
  6182  0299                     	;# 
  6183  0299                     	;# 
  6184  029A                     	;# 
  6185  029B                     	;# 
  6186  029C                     	;# 
  6187  029D                     	;# 
  6188  029F                     	;# 
  6189  030C                     	;# 
  6190  030C                     	;# 
  6191  030D                     	;# 
  6192  030E                     	;# 
  6193  030F                     	;# 
  6194  0310                     	;# 
  6195  0310                     	;# 
  6196  0311                     	;# 
  6197  0312                     	;# 
  6198  0313                     	;# 
  6199  0314                     	;# 
  6200  0314                     	;# 
  6201  0315                     	;# 
  6202  0316                     	;# 
  6203  0317                     	;# 
  6204  0318                     	;# 
  6205  0318                     	;# 
  6206  0319                     	;# 
  6207  031A                     	;# 
  6208  031B                     	;# 
  6209  038C                     	;# 
  6210  038C                     	;# 
  6211  038D                     	;# 
  6212  038E                     	;# 
  6213  0390                     	;# 
  6214  0390                     	;# 
  6215  0391                     	;# 
  6216  0392                     	;# 
  6217  048C                     	;# 
  6218  048C                     	;# 
  6219  048D                     	;# 
  6220  048E                     	;# 
  6221  048F                     	;# 
  6222  048F                     	;# 
  6223  0490                     	;# 
  6224  0491                     	;# 
  6225  0492                     	;# 
  6226  0492                     	;# 
  6227  0493                     	;# 
  6228  0494                     	;# 
  6229  0495                     	;# 
  6230  0495                     	;# 
  6231  0496                     	;# 
  6232  0497                     	;# 
  6233  0498                     	;# 
  6234  0499                     	;# 
  6235  049A                     	;# 
  6236  049B                     	;# 
  6237  049C                     	;# 
  6238  049D                     	;# 
  6239  058C                     	;# 
  6240  058C                     	;# 
  6241  058D                     	;# 
  6242  058E                     	;# 
  6243  058F                     	;# 
  6244  058F                     	;# 
  6245  0590                     	;# 
  6246  0591                     	;# 
  6247  0592                     	;# 
  6248  0593                     	;# 
  6249  059C                     	;# 
  6250  059C                     	;# 
  6251  059D                     	;# 
  6252  059D                     	;# 
  6253  059E                     	;# 
  6254  059F                     	;# 
  6255  060C                     	;# 
  6256  060C                     	;# 
  6257  060D                     	;# 
  6258  060D                     	;# 
  6259  060E                     	;# 
  6260  060F                     	;# 
  6261  0610                     	;# 
  6262  0611                     	;# 
  6263  0612                     	;# 
  6264  0613                     	;# 
  6265  0614                     	;# 
  6266  0616                     	;# 
  6267  0616                     	;# 
  6268  0617                     	;# 
  6269  0617                     	;# 
  6270  0618                     	;# 
  6271  0619                     	;# 
  6272  061A                     	;# 
  6273  061B                     	;# 
  6274  061C                     	;# 
  6275  061D                     	;# 
  6276  061E                     	;# 
  6277  070C                     	;# 
  6278  070D                     	;# 
  6279  070E                     	;# 
  6280  070F                     	;# 
  6281  0710                     	;# 
  6282  0711                     	;# 
  6283  0712                     	;# 
  6284  0713                     	;# 
  6285  0714                     	;# 
  6286  0716                     	;# 
  6287  0717                     	;# 
  6288  0718                     	;# 
  6289  0719                     	;# 
  6290  071A                     	;# 
  6291  071B                     	;# 
  6292  071C                     	;# 
  6293  071D                     	;# 
  6294  071E                     	;# 
  6295  0796                     	;# 
  6296  0797                     	;# 
  6297  0798                     	;# 
  6298  0799                     	;# 
  6299  079A                     	;# 
  6300  079B                     	;# 
  6301  079C                     	;# 
  6302  079D                     	;# 
  6303  080C                     	;# 
  6304  080D                     	;# 
  6305  080E                     	;# 
  6306  080F                     	;# 
  6307  0810                     	;# 
  6308  0811                     	;# 
  6309  0812                     	;# 
  6310  0813                     	;# 
  6311  0814                     	;# 
  6312  081A                     	;# 
  6313  081A                     	;# 
  6314  081B                     	;# 
  6315  081C                     	;# 
  6316  081C                     	;# 
  6317  081D                     	;# 
  6318  081E                     	;# 
  6319  081F                     	;# 
  6320  088C                     	;# 
  6321  088D                     	;# 
  6322  088E                     	;# 
  6323  088F                     	;# 
  6324  0890                     	;# 
  6325  0891                     	;# 
  6326  0892                     	;# 
  6327  0893                     	;# 
  6328  0895                     	;# 
  6329  0896                     	;# 
  6330  0897                     	;# 
  6331  0898                     	;# 
  6332  0899                     	;# 
  6333  089A                     	;# 
  6334  089B                     	;# 
  6335  090C                     	;# 
  6336  090E                     	;# 
  6337  090F                     	;# 
  6338  091F                     	;# 
  6339  098F                     	;# 
  6340  098F                     	;# 
  6341  0990                     	;# 
  6342  0991                     	;# 
  6343  0992                     	;# 
  6344  0993                     	;# 
  6345  0994                     	;# 
  6346  0995                     	;# 
  6347  0996                     	;# 
  6348  0997                     	;# 
  6349  1E0F                     	;# 
  6350  1E10                     	;# 
  6351  1E11                     	;# 
  6352  1E12                     	;# 
  6353  1E13                     	;# 
  6354  1E14                     	;# 
  6355  1E15                     	;# 
  6356  1E16                     	;# 
  6357  1E17                     	;# 
  6358  1E18                     	;# 
  6359  1E19                     	;# 
  6360  1E1A                     	;# 
  6361  1E1B                     	;# 
  6362  1E1C                     	;# 
  6363  1E1D                     	;# 
  6364  1E1E                     	;# 
  6365  1E1F                     	;# 
  6366  1E20                     	;# 
  6367  1E21                     	;# 
  6368  1E22                     	;# 
  6369  1E23                     	;# 
  6370  1E24                     	;# 
  6371  1E25                     	;# 
  6372  1E26                     	;# 
  6373  1E27                     	;# 
  6374  1E28                     	;# 
  6375  1E29                     	;# 
  6376  1E2A                     	;# 
  6377  1E2B                     	;# 
  6378  1E2C                     	;# 
  6379  1E2D                     	;# 
  6380  1E2E                     	;# 
  6381  1E2F                     	;# 
  6382  1E30                     	;# 
  6383  1E31                     	;# 
  6384  1E32                     	;# 
  6385  1E33                     	;# 
  6386  1E34                     	;# 
  6387  1E35                     	;# 
  6388  1E36                     	;# 
  6389  1E37                     	;# 
  6390  1E8F                     	;# 
  6391  1E90                     	;# 
  6392  1E91                     	;# 
  6393  1E92                     	;# 
  6394  1E93                     	;# 
  6395  1E94                     	;# 
  6396  1E95                     	;# 
  6397  1E96                     	;# 
  6398  1E97                     	;# 
  6399  1E9C                     	;# 
  6400  1E9D                     	;# 
  6401  1E9E                     	;# 
  6402  1EA1                     	;# 
  6403  1EA2                     	;# 
  6404  1EA3                     	;# 
  6405  1EA4                     	;# 
  6406  1EA9                     	;# 
  6407  1EAA                     	;# 
  6408  1EB1                     	;# 
  6409  1EB2                     	;# 
  6410  1EB8                     	;# 
  6411  1EB9                     	;# 
  6412  1EBA                     	;# 
  6413  1EBB                     	;# 
  6414  1EBC                     	;# 
  6415  1EBD                     	;# 
  6416  1EBE                     	;# 
  6417  1EC3                     	;# 
  6418  1EC5                     	;# 
  6419  1EC6                     	;# 
  6420  1EC7                     	;# 
  6421  1EC8                     	;# 
  6422  1EC9                     	;# 
  6423  1ECA                     	;# 
  6424  1ECB                     	;# 
  6425  1ECB                     	;# 
  6426  1ECB                     	;# 
  6427  1ECC                     	;# 
  6428  1ECC                     	;# 
  6429  1ECC                     	;# 
  6430  1F10                     	;# 
  6431  1F11                     	;# 
  6432  1F12                     	;# 
  6433  1F14                     	;# 
  6434  1F15                     	;# 
  6435  1F1C                     	;# 
  6436  1F1D                     	;# 
  6437  1F1E                     	;# 
  6438  1F1F                     	;# 
  6439  1F20                     	;# 
  6440  1F21                     	;# 
  6441  1F22                     	;# 
  6442  1F23                     	;# 
  6443  1F24                     	;# 
  6444  1F25                     	;# 
  6445  1F26                     	;# 
  6446  1F27                     	;# 
  6447  1F38                     	;# 
  6448  1F39                     	;# 
  6449  1F3A                     	;# 
  6450  1F3B                     	;# 
  6451  1F3C                     	;# 
  6452  1F3D                     	;# 
  6453  1F3E                     	;# 
  6454  1F3F                     	;# 
  6455  1F43                     	;# 
  6456  1F44                     	;# 
  6457  1F45                     	;# 
  6458  1F46                     	;# 
  6459  1F47                     	;# 
  6460  1F48                     	;# 
  6461  1F49                     	;# 
  6462  1F4A                     	;# 
  6463  1F4E                     	;# 
  6464  1F4F                     	;# 
  6465  1F50                     	;# 
  6466  1F51                     	;# 
  6467  1F52                     	;# 
  6468  1F53                     	;# 
  6469  1F54                     	;# 
  6470  1F55                     	;# 
  6471  1FE4                     	;# 
  6472  1FE5                     	;# 
  6473  1FE6                     	;# 
  6474  1FE7                     	;# 
  6475  1FE8                     	;# 
  6476  1FE8                     	;# 
  6477  1FE9                     	;# 
  6478  1FEA                     	;# 
  6479  1FEB                     	;# 
  6480  1FED                     	;# 
  6481  1FEE                     	;# 
  6482  1FEF                     	;_input
  6483                           
  6484                           	psect	idataBANK1
  6485  157F                     __pidataBANK1:	
  6486                           
  6487                           ;initializer for _delay
  6488  157F  340A               	retlw	10
  6489  1580  3400               	retlw	0
  6490                           
  6491                           ;initializer for _threshold
  6492  1581  3490               	retlw	144
  6493  1582  3406               	retlw	6
  6494                           
  6495                           ;initializer for _address
  6496  1583  3401               	retlw	1
  6497  1584  3400               	retlw	0
  6498                           
  6499                           	psect	stringtext1
  6500  1000                     __pstringtext1:	
  6501  1000                     TM1650_setDigit@charTable:	
  6502  1000  3400               	retlw	0
  6503  1001  3482               	retlw	130
  6504  1002  3421               	retlw	33
  6505  1003  3400               	retlw	0
  6506  1004  3400               	retlw	0
  6507  1005  3400               	retlw	0
  6508  1006  3400               	retlw	0
  6509  1007  3402               	retlw	2
  6510  1008  3439               	retlw	57
  6511  1009  340F               	retlw	15
  6512  100A  3400               	retlw	0
  6513  100B  3400               	retlw	0
  6514  100C  3400               	retlw	0
  6515  100D  3440               	retlw	64
  6516  100E  3480               	retlw	128
  6517  100F  3400               	retlw	0
  6518  1010  343F               	retlw	63
  6519  1011  3406               	retlw	6
  6520  1012  345B               	retlw	91
  6521  1013  344F               	retlw	79
  6522  1014  3466               	retlw	102
  6523  1015  346D               	retlw	109
  6524  1016  347D               	retlw	125
  6525  1017  3407               	retlw	7
  6526  1018  347F               	retlw	127
  6527  1019  346F               	retlw	111
  6528  101A  3400               	retlw	0
  6529  101B  3400               	retlw	0
  6530  101C  3400               	retlw	0
  6531  101D  3448               	retlw	72
  6532  101E  3400               	retlw	0
  6533  101F  3453               	retlw	83
  6534  1020  3400               	retlw	0
  6535  1021  3477               	retlw	119
  6536  1022  347C               	retlw	124
  6537  1023  3439               	retlw	57
  6538  1024  345E               	retlw	94
  6539  1025  3479               	retlw	121
  6540  1026  3471               	retlw	113
  6541  1027  346F               	retlw	111
  6542  1028  3476               	retlw	118
  6543  1029  3406               	retlw	6
  6544  102A  341E               	retlw	30
  6545  102B  3400               	retlw	0
  6546  102C  3438               	retlw	56
  6547  102D  3400               	retlw	0
  6548  102E  3454               	retlw	84
  6549  102F  343F               	retlw	63
  6550  1030  3473               	retlw	115
  6551  1031  3467               	retlw	103
  6552  1032  3450               	retlw	80
  6553  1033  346D               	retlw	109
  6554  1034  3478               	retlw	120
  6555  1035  343E               	retlw	62
  6556  1036  3400               	retlw	0
  6557  1037  3400               	retlw	0
  6558  1038  3400               	retlw	0
  6559  1039  346E               	retlw	110
  6560  103A  3400               	retlw	0
  6561  103B  3439               	retlw	57
  6562  103C  3400               	retlw	0
  6563  103D  340F               	retlw	15
  6564  103E  3400               	retlw	0
  6565  103F  3408               	retlw	8
  6566  1040  3463               	retlw	99
  6567  1041  345F               	retlw	95
  6568  1042  347C               	retlw	124
  6569  1043  3458               	retlw	88
  6570  1044  345E               	retlw	94
  6571  1045  347B               	retlw	123
  6572  1046  3471               	retlw	113
  6573  1047  346F               	retlw	111
  6574  1048  3474               	retlw	116
  6575  1049  3402               	retlw	2
  6576  104A  341E               	retlw	30
  6577  104B  3400               	retlw	0
  6578  104C  3406               	retlw	6
  6579  104D  3400               	retlw	0
  6580  104E  3454               	retlw	84
  6581  104F  345C               	retlw	92
  6582  1050  3473               	retlw	115
  6583  1051  3467               	retlw	103
  6584  1052  3450               	retlw	80
  6585  1053  346D               	retlw	109
  6586  1054  3478               	retlw	120
  6587  1055  341C               	retlw	28
  6588  1056  3400               	retlw	0
  6589  1057  3400               	retlw	0
  6590  1058  3400               	retlw	0
  6591  1059  346E               	retlw	110
  6592  105A  3400               	retlw	0
  6593  105B  3439               	retlw	57
  6594  105C  3430               	retlw	48
  6595  105D  340F               	retlw	15
  6596  105E  3400               	retlw	0
  6597  105F  3400               	retlw	0
  6598  1060                     __end_ofTM1650_setDigit@charTable:	
  6599                           
  6600                           	psect	nvBANK1
  6601  00EC                     __pnvBANK1:	
  6602  00EC                     _ADCC_ADTI_InterruptHandler:	
  6603  00EC                     	ds	2
  6604  00EE                     _eusart1TxBufferRemaining:	
  6605  00EE                     	ds	1
  6606                           
  6607                           	psect	nvBANK2
  6608  015C                     __pnvBANK2:	
  6609  015C                     _EUSART1_ErrorHandler:	
  6610  015C                     	ds	2
  6611  015E                     _EUSART1_OverrunErrorHandler:	
  6612  015E                     	ds	2
  6613  0160                     _EUSART1_FramingErrorHandler:	
  6614  0160                     	ds	2
  6615  0162                     _EUSART1_RxDefaultInterruptHandler:	
  6616  0162                     	ds	2
  6617  0164                     _EUSART1_TxDefaultInterruptHandler:	
  6618  0164                     	ds	2
  6619  0014                     _TRISC	set	20
  6620  0013                     _TRISB	set	19
  6621  0012                     _TRISA	set	18
  6622  001A                     _LATC	set	26
  6623  0019                     _LATB	set	25
  6624  0018                     _LATA	set	24
  6625  000B                     _INTCONbits	set	11
  6626  000C                     _PORTA	set	12
  6627  000E                     _PORTC	set	14
  6628  00A4                     _TRISC4	set	164
  6629  00A3                     _TRISC3	set	163
  6630  00A6                     _TRISC6	set	166
  6631  00A7                     _TRISC7	set	167
  6632  009C                     _TRISB4	set	156
  6633  00D5                     _LATC5	set	213
  6634  00A5                     _TRISC5	set	165
  6635  0090                     _ADERRL	set	144
  6636  0091                     _ADERRH	set	145
  6637  009B                     _ADPREVL	set	155
  6638  009C                     _ADPREVH	set	156
  6639  0094                     _ADFLTRL	set	148
  6640  0095                     _ADFLTRH	set	149
  6641  0096                     _ADACCL	set	150
  6642  0097                     _ADACCH	set	151
  6643  0099                     _ADCNT	set	153
  6644  009D                     _ADRESL	set	157
  6645  009E                     _ADRESH	set	158
  6646  009F                     _ADPCH	set	159
  6647  009A                     _ADRPT	set	154
  6648  0098                     _ADACCU	set	152
  6649  0093                     _ADSTPTH	set	147
  6650  0092                     _ADSTPTL	set	146
  6651  008F                     _ADUTHH	set	143
  6652  008E                     _ADUTHL	set	142
  6653  008D                     _ADLTHH	set	141
  6654  008C                     _ADLTHL	set	140
  6655  011B                     _SP1BRG	set	283
  6656  011F                     _BAUD1CONbits	set	287
  6657  0112                     _ADCON1bits	set	274
  6658  0115                     _ADSTATbits	set	277
  6659  0113                     _ADCON2bits	set	275
  6660  0114                     _ADCON3bits	set	276
  6661  0111                     _ADCON0bits	set	273
  6662  0111                     _ADCON0	set	273
  6663  0118                     _ADCLK	set	280
  6664  0117                     _ADACT	set	279
  6665  0116                     _ADREF	set	278
  6666  0115                     _ADSTAT	set	277
  6667  0114                     _ADCON3	set	276
  6668  0113                     _ADCON2	set	275
  6669  0112                     _ADCON1	set	274
  6670  0110                     _ADPREH	set	272
  6671  010F                     _ADPREL	set	271
  6672  010E                     _ADCAP	set	270
  6673  010D                     _ADACQH	set	269
  6674  010C                     _ADACQL	set	268
  6675  0119                     _RC1REG	set	281
  6676  011D                     _RC1STAbits	set	285
  6677  011A                     _TX1REG	set	282
  6678  011E                     _TX1STAbits	set	286
  6679  011C                     _SP1BRGH	set	284
  6680  011B                     _SP1BRGL	set	283
  6681  011E                     _TX1STA	set	286
  6682  011D                     _RC1STA	set	285
  6683  011F                     _BAUD1CON	set	287
  6684  018C                     _SSP1BUF	set	396
  6685  0191                     _SSP1CON2bits	set	401
  6686  0190                     _SSP1CON1bits	set	400
  6687  018D                     _SSP1ADD	set	397
  6688  0192                     _SSP1CON3	set	402
  6689  0190                     _SSP1CON1	set	400
  6690  018F                     _SSP1STAT	set	399
  6691  028E                     _T2CONbits	set	654
  6692  0290                     _T2CLKCON	set	656
  6693  0318                     _CCPR4L	set	792
  6694  0319                     _CCPR4H	set	793
  6695  0314                     _CCPR3L	set	788
  6696  0315                     _CCPR3H	set	789
  6697  0310                     _CCPR2L	set	784
  6698  0311                     _CCPR2H	set	785
  6699  030C                     _CCPR1L	set	780
  6700  030D                     _CCPR1H	set	781
  6701  031A                     _CCP4CONbits	set	794
  6702  0316                     _CCP3CONbits	set	790
  6703  0312                     _CCP2CONbits	set	786
  6704  030E                     _CCP1CONbits	set	782
  6705  059E                     _T0CON0bits	set	1438
  6706  059D                     _TMR0H	set	1437
  6707  059F                     _T0CON1bits	set	1439
  6708  0716                     _PIE0bits	set	1814
  6709  070D                     _PIR1bits	set	1805
  6710  0717                     _PIE1bits	set	1815
  6711  070C                     _PIR0bits	set	1804
  6712  070F                     _PIR3bits	set	1807
  6713  0719                     _PIE3bits	set	1817
  6714  079D                     _PMD7	set	1949
  6715  079C                     _PMD6	set	1948
  6716  079B                     _PMD5	set	1947
  6717  079A                     _PMD4	set	1946
  6718  0799                     _PMD3	set	1945
  6719  0798                     _PMD2	set	1944
  6720  0797                     _PMD1	set	1943
  6721  0796                     _PMD0	set	1942
  6722  0892                     _OSCTUNE	set	2194
  6723  0893                     _OSCFRQ	set	2195
  6724  0891                     _OSCEN	set	2193
  6725  088F                     _OSCCON3	set	2191
  6726  088D                     _OSCCON1	set	2189
  6727  1ECB                     _RX1PPS	set	7883
  6728  1ECB                     _RX1DTPPS	set	7883
  6729  1EC6                     _SSP1DATPPS	set	7878
  6730  1EC5                     _SSP1CLKPPS	set	7877
  6731  1F24                     _RC4PPS	set	7972
  6732  1F23                     _RC3PPS	set	7971
  6733  1F26                     _RC6PPS	set	7974
  6734  1F27                     _RC7PPS	set	7975
  6735  1F15                     _RA5PPS	set	7957
  6736  1F1E                     _RB6PPS	set	7966
  6737  1F14                     _RA4PPS	set	7956
  6738  1F51                     _SLRCONC	set	8017
  6739  1F46                     _SLRCONB	set	8006
  6740  1F3B                     _SLRCONA	set	7995
  6741  1F50                     _ODCONC	set	8016
  6742  1F45                     _ODCONB	set	8005
  6743  1F3A                     _ODCONA	set	7994
  6744  1F4F                     _WPUC	set	8015
  6745  1F39                     _WPUA	set	7993
  6746  1F44                     _WPUB	set	8004
  6747  1F38                     _ANSELA	set	7992
  6748  1F43                     _ANSELB	set	8003
  6749  1F4E                     _ANSELC	set	8014
  6750                           
  6751                           ; #config settings
  6752  0000                     
  6753                           	psect	cinit
  6754  003E                     start_initialization:	
  6755  003E                     __initialization:		;BIGRAM
  6756                           
  6757                           ; Initialize objects allocated to BANK1
  6758  003E  307F               	movlw	low __pidataBANK1
  6759  003F  0084               	movwf	4
  6760  0040  3095               	movlw	(high __pidataBANK1)| (0+128)
  6761  0041  0085               	movwf	5
  6762  0042  0141               	movlb	1	; select bank1
  6763  0043  0012               	moviw fsr0++
  6764  0044  00E6               	movwf	__pdataBANK1& (0+127)
  6765  0045  0012               	moviw fsr0++
  6766  0046  00E7               	movwf	(__pdataBANK1+1)& (0+127)
  6767  0047  0012               	moviw fsr0++
  6768  0048  00E8               	movwf	(__pdataBANK1+2)& (0+127)
  6769  0049  0012               	moviw fsr0++
  6770  004A  00E9               	movwf	(__pdataBANK1+3)& (0+127)
  6771  004B  0012               	moviw fsr0++
  6772  004C  00EA               	movwf	(__pdataBANK1+4)& (0+127)
  6773  004D  0012               	moviw fsr0++
  6774  004E  00EB               	movwf	(__pdataBANK1+5)& (0+127)
  6775                           
  6776                           ; Clear objects allocated to BIGRAM
  6777  004F  30EF               	movlw	low (0+9711)
  6778  0050  0084               	movwf	4
  6779  0051  3025               	movlw	high (0+9711)
  6780  0052  0085               	movwf	5
  6781  0053  3001               	movlw	1
  6782  0054  00FE               	movwf	btemp
  6783  0055  3002               	movlw	2
  6784  0056  00FF               	movwf	btemp+1
  6785  0057  3195  25FD  3180   	fcall	clear_ram0
  6786                           
  6787                           ; Clear objects allocated to COMMON
  6788  005A  01F0               	clrf	__pbssCOMMON& (0+127)
  6789  005B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  6790  005C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  6791  005D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  6792  005E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  6793  005F  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  6794                           
  6795                           ; Clear objects allocated to BANK1
  6796  0060  30A0               	movlw	low __pbssBANK1
  6797  0061  0084               	movwf	4
  6798  0062  3000               	movlw	high __pbssBANK1
  6799  0063  0085               	movwf	5
  6800  0064  3031               	movlw	49
  6801  0065  00FE               	movwf	btemp
  6802  0066  3000               	movlw	0
  6803  0067  00FF               	movwf	btemp+1
  6804  0068  3195  25FD  3180   	fcall	clear_ram0
  6805                           
  6806                           ; Clear objects allocated to BANK2
  6807  006B  3020               	movlw	low __pbssBANK2
  6808  006C  0084               	movwf	4
  6809  006D  3001               	movlw	high __pbssBANK2
  6810  006E  0085               	movwf	5
  6811  006F  303C               	movlw	60
  6812  0070  00FE               	movwf	btemp
  6813  0071  3000               	movlw	0
  6814  0072  00FF               	movwf	btemp+1
  6815  0073  3195  25FD         	fcall	clear_ram0
  6816  0075                     end_of_initialization:	
  6817                           ;End of C runtime variable initialization code
  6818                           
  6819  0075                     __end_of__initialization:	
  6820  0075  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6821  0076  0140               	movlb	0
  6822  0077  318B  2BB9         	ljmp	_main	;jump to C main() function
  6823                           
  6824                           	psect	bssCOMMON
  6825  0070                     __pbssCOMMON:	
  6826  0070                     _eusart1RxTail:	
  6827  0070                     	ds	1
  6828  0071                     _eusart1RxHead:	
  6829  0071                     	ds	1
  6830  0072                     _eusart1TxTail:	
  6831  0072                     	ds	1
  6832  0073                     _eusart1TxHead:	
  6833  0073                     	ds	1
  6834  0074                     I2C1_ISR@i2c_address:	
  6835  0074                     	ds	2
  6836                           
  6837                           	psect	bssBANK1
  6838  00A0                     __pbssBANK1:	
  6839  00A0                     _i2c1_object:	
  6840  00A0                     	ds	5
  6841  00A5                     _point:	
  6842  00A5                     	ds	2
  6843  00A7                     _thresholdCount:	
  6844  00A7                     	ds	2
  6845  00A9                     _lastRun:	
  6846  00A9                     	ds	2
  6847  00AB                     _bpm:	
  6848  00AB                     	ds	2
  6849  00AD                     _lastBeat:	
  6850  00AD                     	ds	2
  6851  00AF                     _lastTime:	
  6852  00AF                     	ds	2
  6853  00B1                     _lastActiveTime:	
  6854  00B1                     	ds	2
  6855  00B3                     _count:	
  6856  00B3                     	ds	2
  6857  00B5                     _p_i2c1_trb_current:	
  6858  00B5                     	ds	2
  6859  00B7                     _ClockCurrentTime:	
  6860  00B7                     	ds	2
  6861  00B9                     _lastDetected:	
  6862  00B9                     	ds	1
  6863  00BA                     _thresholdExceeded:	
  6864  00BA                     	ds	1
  6865  00BB                     _detected:	
  6866  00BB                     	ds	1
  6867  00BC                     _menu:	
  6868  00BC                     	ds	1
  6869  00BD                     _enter:	
  6870  00BD                     	ds	1
  6871  00BE                     _down:	
  6872  00BE                     	ds	1
  6873  00BF                     _up:	
  6874  00BF                     	ds	1
  6875  00C0                     _displayState:	
  6876  00C0                     	ds	1
  6877  00C1                     I2C1_ISR@i2c_10bit_address_restart:	
  6878  00C1                     	ds	1
  6879  00C2                     I2C1_ISR@i2c_bytes_left:	
  6880  00C2                     	ds	1
  6881  00C3                     I2C1_ISR@pi2c_buf_ptr:	
  6882  00C3                     	ds	1
  6883  00C4                     _p_i2c1_current:	
  6884  00C4                     	ds	1
  6885  00C5                     _i2c1_trb_count:	
  6886  00C5                     	ds	1
  6887  00C6                     _i2c1_state:	
  6888  00C6                     	ds	1
  6889  00C7                     _eusart1RxLastError:	
  6890  00C7                     	ds	1
  6891  00C8                     _eusart1RxCount:	
  6892  00C8                     	ds	1
  6893  00C9                     I2C1_MasterWrite@trBlock:	
  6894  00C9                     	ds	4
  6895  00CD                     _i2c1_tr_queue:	
  6896  00CD                     	ds	4
  6897                           
  6898                           	psect	dataBANK1
  6899  00E6                     __pdataBANK1:	
  6900  00E6                     _delay:	
  6901  00E6                     	ds	2
  6902  00E8                     _threshold:	
  6903  00E8                     	ds	2
  6904  00EA                     _address:	
  6905  00EA                     	ds	2
  6906                           
  6907                           	psect	bssBANK2
  6908  0120                     __pbssBANK2:	
  6909  0120                     _eusart1RxStatusBuffer:	
  6910  0120                     	ds	8
  6911  0128                     _eusart1RxBuffer:	
  6912  0128                     	ds	8
  6913  0130                     _eusart1TxBuffer:	
  6914  0130                     	ds	8
  6915  0138                     _buttons:	
  6916  0138                     	ds	32
  6917  0158                     I2C1_MasterRead@trBlock:	
  6918  0158                     	ds	4
  6919                           
  6920                           	psect	clrtext
  6921  15FD                     clear_ram0:	
  6922                           ;	Called with FSR0 containing the base address, and
  6923                           ;	btemp/btemp+1 has the size to clear
  6924                           
  6925  15FD  0064               	clrwdt	;clear the watchdog before getting into this loop
  6926  15FE                     clrloop0:	
  6927  15FE  0180               	clrf	0	;clear RAM location pointed to by FSR
  6928  15FF  3101               	addfsr 0,1
  6929  1600  3001               	movlw	1
  6930  1601  02FE               	subwf	126,f
  6931  1602  3000               	movlw	0
  6932  1603  3BFF               	subwfb	127,f
  6933  1604  087F               	movf	127,w
  6934  1605  047E               	iorwf	126,w
  6935  1606  1903               	btfsc	3,2
  6936  1607  3400               	retlw	0	;all done for this memory range, return
  6937  1608  2DFE               	goto	clrloop0	;have we reached the end yet?
  6938                           
  6939                           	psect	cstackBANK1
  6940  00D1                     __pcstackBANK1:	
  6941  00D1                     ??_LED_setColor:	
  6942                           
  6943                           ; 1 bytes @ 0x0
  6944  00D1                     	ds	5
  6945  00D6                     LED_setColor@R:	
  6946                           
  6947                           ; 1 bytes @ 0x5
  6948  00D6                     	ds	1
  6949  00D7                     ??_main:	
  6950                           
  6951                           ; 1 bytes @ 0x6
  6952  00D7                     	ds	11
  6953  00E2                     main@lastTime:	
  6954                           
  6955                           ; 2 bytes @ 0x11
  6956  00E2                     	ds	2
  6957  00E4                     main@time:	
  6958                           
  6959                           ; 2 bytes @ 0x13
  6960  00E4                     	ds	2
  6961                           
  6962                           	psect	cstackCOMMON
  6963  0076                     __pcstackCOMMON:	
  6964  0076                     ?_EUSART1_Receive_ISR:	
  6965  0076                     ?_EUSART1_Transmit_ISR:	
  6966                           ; 1 bytes @ 0x0
  6967                           
  6968  0076                     ??_EUSART1_Transmit_ISR:	
  6969                           ; 1 bytes @ 0x0
  6970                           
  6971  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  6972                           ; 1 bytes @ 0x0
  6973                           
  6974  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  6975                           ; 1 bytes @ 0x0
  6976                           
  6977  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  6978                           ; 1 bytes @ 0x0
  6979                           
  6980  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  6981                           ; 1 bytes @ 0x0
  6982                           
  6983  0076                     ?_EUSART1_DefaultErrorHandler:	
  6984                           ; 1 bytes @ 0x0
  6985                           
  6986  0076                     ?_EUSART1_RxDataHandler:	
  6987                           ; 1 bytes @ 0x0
  6988                           
  6989  0076                     ??_EUSART1_RxDataHandler:	
  6990                           ; 1 bytes @ 0x0
  6991                           
  6992  0076                     ?_I2C1_BusCollisionISR:	
  6993                           ; 1 bytes @ 0x0
  6994                           
  6995  0076                     ??_I2C1_BusCollisionISR:	
  6996                           ; 1 bytes @ 0x0
  6997                           
  6998  0076                     ?_I2C1_ISR:	
  6999                           ; 1 bytes @ 0x0
  7000                           
  7001  0076                     ?_ADCC_ThresholdISR:	
  7002                           ; 1 bytes @ 0x0
  7003                           
  7004  0076                     ??_ADCC_ThresholdISR:	
  7005                           ; 1 bytes @ 0x0
  7006                           
  7007  0076                     ?_PMD_Initialize:	
  7008                           ; 1 bytes @ 0x0
  7009                           
  7010  0076                     ?_PIN_MANAGER_Initialize:	
  7011                           ; 1 bytes @ 0x0
  7012                           
  7013  0076                     ?_OSCILLATOR_Initialize:	
  7014                           ; 1 bytes @ 0x0
  7015                           
  7016  0076                     ?_I2C1_Initialize:	
  7017                           ; 1 bytes @ 0x0
  7018                           
  7019  0076                     ?_ADCC_Initialize:	
  7020                           ; 1 bytes @ 0x0
  7021                           
  7022  0076                     ?_I2C1_Stop:	
  7023                           ; 1 bytes @ 0x0
  7024                           
  7025  0076                     ??_I2C1_Stop:	
  7026                           ; 1 bytes @ 0x0
  7027                           
  7028  0076                     ?_I2C1_FunctionComplete:	
  7029                           ; 1 bytes @ 0x0
  7030                           
  7031  0076                     ??_I2C1_FunctionComplete:	
  7032                           ; 1 bytes @ 0x0
  7033                           
  7034  0076                     ?_ADCC_DefaultInterruptHandler:	
  7035                           ; 1 bytes @ 0x0
  7036                           
  7037  0076                     ??_ADCC_DefaultInterruptHandler:	
  7038                           ; 1 bytes @ 0x0
  7039                           
  7040  0076                     ?_TM1650_init:	
  7041                           ; 1 bytes @ 0x0
  7042                           
  7043  0076                     ?_CLOCK_init:	
  7044                           ; 1 bytes @ 0x0
  7045                           
  7046  0076                     ?_BUTTONS_init:	
  7047                           ; 1 bytes @ 0x0
  7048                           
  7049  0076                     ?_CONTROLLER_init:	
  7050                           ; 1 bytes @ 0x0
  7051                           
  7052  0076                     ?_DMX_init:	
  7053                           ; 1 bytes @ 0x0
  7054                           
  7055  0076                     ?_LED_init:	
  7056                           ; 1 bytes @ 0x0
  7057                           
  7058  0076                     ?_BEAT_init:	
  7059                           ; 1 bytes @ 0x0
  7060                           
  7061  0076                     ?_BUTTONS_task:	
  7062                           ; 1 bytes @ 0x0
  7063                           
  7064  0076                     ?_CONTROLLER_task:	
  7065                           ; 1 bytes @ 0x0
  7066                           
  7067  0076                     ?_BEAT_task:	
  7068                           ; 1 bytes @ 0x0
  7069                           
  7070  0076                     ?_BEAT_detected:	
  7071                           ; 1 bytes @ 0x0
  7072                           
  7073  0076                     ?_TM1650_enable:	
  7074                           ; 1 bytes @ 0x0
  7075                           
  7076  0076                     ?_EUSART1_Initialize:	
  7077                           ; 1 bytes @ 0x0
  7078                           
  7079  0076                     ?_INTERRUPT_InterruptManager:	
  7080                           ; 1 bytes @ 0x0
  7081                           
  7082  0076                     ?_SYSTEM_Initialize:	
  7083                           ; 1 bytes @ 0x0
  7084                           
  7085  0076                     ?_I2C1_WaitForLastPacketToComplete:	
  7086                           ; 1 bytes @ 0x0
  7087                           
  7088  0076                     ?_ADCC_StartConversion:	
  7089                           ; 1 bytes @ 0x0
  7090                           
  7091  0076                     ?_main:	
  7092                           ; 1 bytes @ 0x0
  7093                           
  7094  0076                     ?_TM1650_isEnabled:	
  7095                           ; 1 bytes @ 0x0
  7096                           
  7097  0076                     ?_BUTTONS_isClicked:	
  7098                           ; 1 bytes @ 0x0
  7099                           
  7100  0076                     ?_BUTTONS_isHeld:	
  7101                           ; 1 bytes @ 0x0
  7102                           
  7103  0076                     ?_address_inc:	
  7104                           ; 1 bytes @ 0x0
  7105                           
  7106  0076                     ?_address_dec:	
  7107                           ; 1 bytes @ 0x0
  7108                           
  7109  0076                     ?_adcThresholdHandler:	
  7110                           ; 1 bytes @ 0x0
  7111                           
  7112  0076                     ??_adcThresholdHandler:	
  7113                           ; 1 bytes @ 0x0
  7114                           
  7115  0076                     ?_handler:	
  7116                           ; 1 bytes @ 0x0
  7117                           
  7118  0076                     ??_handler:	
  7119                           ; 1 bytes @ 0x0
  7120                           
  7121                           
  7122                           ; 1 bytes @ 0x0
  7123  0076                     	ds	1
  7124  0077                     ??_EUSART1_Receive_ISR:	
  7125  0077                     ??_EUSART1_DefaultErrorHandler:	
  7126                           ; 1 bytes @ 0x1
  7127                           
  7128  0077                     I2C1_Stop@completion_code:	
  7129                           ; 1 bytes @ 0x1
  7130                           
  7131                           
  7132                           ; 1 bytes @ 0x1
  7133  0077                     	ds	1
  7134  0078                     ??_I2C1_ISR:	
  7135                           
  7136                           ; 1 bytes @ 0x2
  7137  0078                     	ds	2
  7138  007A                     handler@dataIn:	
  7139                           
  7140                           ; 1 bytes @ 0x4
  7141  007A                     	ds	2
  7142  007C                     ??_INTERRUPT_InterruptManager:	
  7143                           
  7144                           	psect	cstackBANK0
  7145  0020                     __pcstackBANK0:	
  7146                           ; 1 bytes @ 0x6
  7147                           
  7148  0020                     ?_EUSART1_SetRxInterruptHandler:	
  7149  0020                     ?_EUSART1_SetTxInterruptHandler:	
  7150                           ; 1 bytes @ 0x0
  7151                           
  7152  0020                     ?_EUSART1_SetFramingErrorHandler:	
  7153                           ; 1 bytes @ 0x0
  7154                           
  7155  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  7156                           ; 1 bytes @ 0x0
  7157                           
  7158  0020                     ?_EUSART1_SetErrorHandler:	
  7159                           ; 1 bytes @ 0x0
  7160                           
  7161  0020                     ??_PMD_Initialize:	
  7162                           ; 1 bytes @ 0x0
  7163                           
  7164  0020                     ??_PIN_MANAGER_Initialize:	
  7165                           ; 1 bytes @ 0x0
  7166                           
  7167  0020                     ??_OSCILLATOR_Initialize:	
  7168                           ; 1 bytes @ 0x0
  7169                           
  7170  0020                     ??_I2C1_Initialize:	
  7171                           ; 1 bytes @ 0x0
  7172                           
  7173  0020                     ?_I2C1_MasterWriteTRBBuild:	
  7174                           ; 1 bytes @ 0x0
  7175                           
  7176  0020                     ?_I2C1_MasterTRBInsert:	
  7177                           ; 1 bytes @ 0x0
  7178                           
  7179  0020                     ?_ADCC_SetADTIInterruptHandler:	
  7180                           ; 1 bytes @ 0x0
  7181                           
  7182  0020                     ??_CLOCK_init:	
  7183                           ; 1 bytes @ 0x0
  7184                           
  7185  0020                     ??_LED_init:	
  7186                           ; 1 bytes @ 0x0
  7187                           
  7188  0020                     ??_BEAT_detected:	
  7189                           ; 1 bytes @ 0x0
  7190                           
  7191  0020                     ??_I2C1_WaitForLastPacketToComplete:	
  7192                           ; 1 bytes @ 0x0
  7193                           
  7194  0020                     ??_ADCC_StartConversion:	
  7195                           ; 1 bytes @ 0x0
  7196                           
  7197  0020                     ?_ADCC_SetUpperThreshold:	
  7198                           ; 1 bytes @ 0x0
  7199                           
  7200  0020                     ??_TM1650_isEnabled:	
  7201                           ; 1 bytes @ 0x0
  7202                           
  7203  0020                     ?_init:	
  7204                           ; 1 bytes @ 0x0
  7205                           
  7206  0020                     ??_BUTTONS_isClicked:	
  7207                           ; 1 bytes @ 0x0
  7208                           
  7209  0020                     ??_BUTTONS_isHeld:	
  7210                           ; 1 bytes @ 0x0
  7211                           
  7212  0020                     ?_CLOCK_getTime:	
  7213                           ; 1 bytes @ 0x0
  7214                           
  7215  0020                     ?__Umul8_16:	
  7216                           ; 2 bytes @ 0x0
  7217                           
  7218  0020                     ?___lwmod:	
  7219                           ; 2 bytes @ 0x0
  7220                           
  7221  0020                     ?___xxtofl:	
  7222                           ; 2 bytes @ 0x0
  7223                           
  7224  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  7225                           ; 4 bytes @ 0x0
  7226                           
  7227  0020                     ADCC_StartConversion@channel:	
  7228                           ; 1 bytes @ 0x0
  7229                           
  7230  0020                     BUTTONS_isClicked@button:	
  7231                           ; 1 bytes @ 0x0
  7232                           
  7233  0020                     BUTTONS_isHeld@button:	
  7234                           ; 1 bytes @ 0x0
  7235                           
  7236  0020                     __Umul8_16@multiplicand:	
  7237                           ; 1 bytes @ 0x0
  7238                           
  7239  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7240                           ; 1 bytes @ 0x0
  7241                           
  7242  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7243                           ; 2 bytes @ 0x0
  7244                           
  7245  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  7246                           ; 2 bytes @ 0x0
  7247                           
  7248  0020                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  7249                           ; 2 bytes @ 0x0
  7250                           
  7251  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7252                           ; 2 bytes @ 0x0
  7253                           
  7254  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  7255                           ; 2 bytes @ 0x0
  7256                           
  7257  0020                     ADCC_SetUpperThreshold@upperThreshold:	
  7258                           ; 2 bytes @ 0x0
  7259                           
  7260  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
  7261                           ; 2 bytes @ 0x0
  7262                           
  7263  0020                     init@port:	
  7264                           ; 2 bytes @ 0x0
  7265                           
  7266  0020                     ___lwmod@divisor:	
  7267                           ; 2 bytes @ 0x0
  7268                           
  7269  0020                     ___xxtofl@val:	
  7270                           ; 2 bytes @ 0x0
  7271                           
  7272                           
  7273                           ; 4 bytes @ 0x0
  7274  0020                     	ds	1
  7275  0021                     I2C1_MasterWriteTRBBuild@length:	
  7276                           
  7277                           ; 1 bytes @ 0x1
  7278  0021                     	ds	1
  7279  0022                     ??_EUSART1_SetRxInterruptHandler:	
  7280  0022                     ??_EUSART1_SetTxInterruptHandler:	
  7281                           ; 1 bytes @ 0x2
  7282                           
  7283  0022                     ??_EUSART1_SetFramingErrorHandler:	
  7284                           ; 1 bytes @ 0x2
  7285                           
  7286  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  7287                           ; 1 bytes @ 0x2
  7288                           
  7289  0022                     ??_EUSART1_SetErrorHandler:	
  7290                           ; 1 bytes @ 0x2
  7291                           
  7292  0022                     ??_ADCC_Initialize:	
  7293                           ; 1 bytes @ 0x2
  7294                           
  7295  0022                     ??_ADCC_SetADTIInterruptHandler:	
  7296                           ; 1 bytes @ 0x2
  7297                           
  7298  0022                     ??_DMX_init:	
  7299                           ; 1 bytes @ 0x2
  7300                           
  7301  0022                     ??_BEAT_init:	
  7302                           ; 1 bytes @ 0x2
  7303                           
  7304  0022                     ??_BUTTONS_task:	
  7305                           ; 1 bytes @ 0x2
  7306                           
  7307  0022                     ??_CLOCK_getTime:	
  7308                           ; 1 bytes @ 0x2
  7309                           
  7310  0022                     ??__Umul8_16:	
  7311                           ; 1 bytes @ 0x2
  7312                           
  7313  0022                     ??_EUSART1_Initialize:	
  7314                           ; 1 bytes @ 0x2
  7315                           
  7316  0022                     ??_ADCC_SetUpperThreshold:	
  7317                           ; 1 bytes @ 0x2
  7318                           
  7319  0022                     I2C1_MasterTRBInsert@pflag:	
  7320                           ; 1 bytes @ 0x2
  7321                           
  7322  0022                     init@pin:	
  7323                           ; 1 bytes @ 0x2
  7324                           
  7325  0022                     I2C1_MasterWriteTRBBuild@address:	
  7326                           ; 1 bytes @ 0x2
  7327                           
  7328  0022                     ___lwmod@dividend:	
  7329                           ; 2 bytes @ 0x2
  7330                           
  7331                           
  7332                           ; 2 bytes @ 0x2
  7333  0022                     	ds	1
  7334  0023                     ??_I2C1_MasterTRBInsert:	
  7335  0023                     ??_SYSTEM_Initialize:	
  7336                           ; 1 bytes @ 0x3
  7337                           
  7338  0023                     ??_init:	
  7339                           ; 1 bytes @ 0x3
  7340                           
  7341                           
  7342                           ; 1 bytes @ 0x3
  7343  0023                     	ds	1
  7344  0024                     ??_I2C1_MasterWriteTRBBuild:	
  7345  0024                     ??___lwmod:	
  7346                           ; 1 bytes @ 0x4
  7347                           
  7348  0024                     ??___xxtofl:	
  7349                           ; 1 bytes @ 0x4
  7350                           
  7351  0024                     I2C1_MasterTRBInsert@count:	
  7352                           ; 1 bytes @ 0x4
  7353                           
  7354  0024                     init@btn:	
  7355                           ; 1 bytes @ 0x4
  7356                           
  7357  0024                     __Umul8_16@product:	
  7358                           ; 1 bytes @ 0x4
  7359                           
  7360                           
  7361                           ; 2 bytes @ 0x4
  7362  0024                     	ds	1
  7363  0025                     ??_BUTTONS_init:	
  7364  0025                     BUTTONS_task@i:	
  7365                           ; 1 bytes @ 0x5
  7366                           
  7367  0025                     ___lwmod@counter:	
  7368                           ; 1 bytes @ 0x5
  7369                           
  7370                           
  7371                           ; 1 bytes @ 0x5
  7372  0025                     	ds	1
  7373  0026                     ?___lwdiv:	
  7374  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  7375                           ; 2 bytes @ 0x6
  7376                           
  7377  0026                     BUTTONS_task@time:	
  7378                           ; 1 bytes @ 0x6
  7379                           
  7380  0026                     ___lwdiv@divisor:	
  7381                           ; 2 bytes @ 0x6
  7382                           
  7383  0026                     __Umul8_16@word_mpld:	
  7384                           ; 2 bytes @ 0x6
  7385                           
  7386                           
  7387                           ; 2 bytes @ 0x6
  7388  0026                     	ds	1
  7389  0027                     ?_I2C1_MasterWrite:	
  7390  0027                     I2C1_MasterWrite@length:	
  7391                           ; 1 bytes @ 0x7
  7392                           
  7393                           
  7394                           ; 1 bytes @ 0x7
  7395  0027                     	ds	1
  7396  0028                     BUTTONS_task@btn:	
  7397  0028                     ___xxtofl@sign:	
  7398                           ; 1 bytes @ 0x8
  7399                           
  7400  0028                     __Umul8_16@multiplier:	
  7401                           ; 1 bytes @ 0x8
  7402                           
  7403  0028                     I2C1_MasterWrite@address:	
  7404                           ; 1 bytes @ 0x8
  7405                           
  7406  0028                     ___lwdiv@dividend:	
  7407                           ; 2 bytes @ 0x8
  7408                           
  7409                           
  7410                           ; 2 bytes @ 0x8
  7411  0028                     	ds	1
  7412  0029                     ___xxtofl@exp:	
  7413                           
  7414                           ; 1 bytes @ 0x9
  7415  0029                     	ds	1
  7416  002A                     ??___lwdiv:	
  7417  002A                     I2C1_MasterWrite@pflag:	
  7418                           ; 1 bytes @ 0xA
  7419                           
  7420  002A                     ___xxtofl@arg:	
  7421                           ; 1 bytes @ 0xA
  7422                           
  7423                           
  7424                           ; 4 bytes @ 0xA
  7425  002A                     	ds	1
  7426  002B                     ??_I2C1_MasterWrite:	
  7427  002B                     ___lwdiv@quotient:	
  7428                           ; 1 bytes @ 0xB
  7429                           
  7430                           
  7431                           ; 2 bytes @ 0xB
  7432  002B                     	ds	2
  7433  002D                     I2C1_MasterWrite@pdata:	
  7434  002D                     ___lwdiv@counter:	
  7435                           ; 1 bytes @ 0xD
  7436                           
  7437                           
  7438                           ; 1 bytes @ 0xD
  7439  002D                     	ds	1
  7440  002E                     ??_BEAT_task:	
  7441  002E                     ?_writeData:	
  7442                           ; 1 bytes @ 0xE
  7443                           
  7444  002E                     ?___fldiv:	
  7445                           ; 1 bytes @ 0xE
  7446                           
  7447  002E                     writeData@data:	
  7448                           ; 4 bytes @ 0xE
  7449                           
  7450  002E                     ___fldiv@a:	
  7451                           ; 1 bytes @ 0xE
  7452                           
  7453                           
  7454                           ; 4 bytes @ 0xE
  7455  002E                     	ds	1
  7456  002F                     ??_writeData:	
  7457                           
  7458                           ; 1 bytes @ 0xF
  7459  002F                     	ds	1
  7460  0030                     BEAT_task@offset:	
  7461                           
  7462                           ; 2 bytes @ 0x10
  7463  0030                     	ds	2
  7464  0032                     writeData@address:	
  7465  0032                     ___fldiv@b:	
  7466                           ; 1 bytes @ 0x12
  7467                           
  7468                           
  7469                           ; 4 bytes @ 0x12
  7470  0032                     	ds	1
  7471  0033                     writeData@dataToSend:	
  7472                           
  7473                           ; 1 bytes @ 0x13
  7474  0033                     	ds	1
  7475  0034                     writeData@status:	
  7476                           
  7477                           ; 1 bytes @ 0x14
  7478  0034                     	ds	1
  7479  0035                     ??_TM1650_enable:	
  7480  0035                     ?_TM1650_setDigit:	
  7481                           ; 1 bytes @ 0x15
  7482                           
  7483  0035                     TM1650_setDigit@num:	
  7484                           ; 1 bytes @ 0x15
  7485                           
  7486  0035                     TM1650_enable@enable:	
  7487                           ; 1 bytes @ 0x15
  7488                           
  7489                           
  7490                           ; 1 bytes @ 0x15
  7491  0035                     	ds	1
  7492  0036                     ??_TM1650_init:	
  7493  0036                     ??___fldiv:	
  7494                           ; 1 bytes @ 0x16
  7495                           
  7496  0036                     TM1650_setDigit@dp:	
  7497                           ; 1 bytes @ 0x16
  7498                           
  7499                           
  7500                           ; 1 bytes @ 0x16
  7501  0036                     	ds	1
  7502  0037                     ??_TM1650_setDigit:	
  7503                           
  7504                           ; 1 bytes @ 0x17
  7505  0037                     	ds	2
  7506  0039                     TM1650_setDigit@digit:	
  7507                           
  7508                           ; 1 bytes @ 0x19
  7509  0039                     	ds	1
  7510  003A                     TM1650_setDigit@data:	
  7511                           
  7512                           ; 1 bytes @ 0x1A
  7513  003A                     	ds	1
  7514  003B                     ?_TM1650_fastPrintNum:	
  7515  003B                     TM1650_fastPrintNum@num:	
  7516                           ; 1 bytes @ 0x1B
  7517                           
  7518  003B                     ___fldiv@rem:	
  7519                           ; 2 bytes @ 0x1B
  7520                           
  7521                           
  7522                           ; 4 bytes @ 0x1B
  7523  003B                     	ds	2
  7524  003D                     ??_TM1650_fastPrintNum:	
  7525                           
  7526                           ; 1 bytes @ 0x1D
  7527  003D                     	ds	1
  7528  003E                     _TM1650_fastPrintNum$2841:	
  7529                           
  7530                           ; 2 bytes @ 0x1E
  7531  003E                     	ds	1
  7532  003F                     ___fldiv@sign:	
  7533                           
  7534                           ; 1 bytes @ 0x1F
  7535  003F                     	ds	1
  7536  0040                     ___fldiv@new_exp:	
  7537  0040                     _TM1650_fastPrintNum$2840:	
  7538                           ; 2 bytes @ 0x20
  7539                           
  7540                           
  7541                           ; 2 bytes @ 0x20
  7542  0040                     	ds	2
  7543  0042                     TM1650_fastPrintNum@array:	
  7544  0042                     ___fldiv@grs:	
  7545                           ; 4 bytes @ 0x22
  7546                           
  7547                           
  7548                           ; 4 bytes @ 0x22
  7549  0042                     	ds	4
  7550  0046                     ___fldiv@bexp:	
  7551  0046                     _TM1650_fastPrintNum$2839:	
  7552                           ; 1 bytes @ 0x26
  7553                           
  7554                           
  7555                           ; 2 bytes @ 0x26
  7556  0046                     	ds	1
  7557  0047                     ___fldiv@aexp:	
  7558                           
  7559                           ; 1 bytes @ 0x27
  7560  0047                     	ds	1
  7561  0048                     ??_CONTROLLER_init:	
  7562  0048                     ??_CONTROLLER_task:	
  7563                           ; 1 bytes @ 0x28
  7564                           
  7565  0048                     ??_address_inc:	
  7566                           ; 1 bytes @ 0x28
  7567                           
  7568  0048                     ??_address_dec:	
  7569                           ; 1 bytes @ 0x28
  7570                           
  7571  0048                     ?___flmul:	
  7572                           ; 1 bytes @ 0x28
  7573                           
  7574  0048                     ___flmul@b:	
  7575                           ; 4 bytes @ 0x28
  7576                           
  7577                           
  7578                           ; 4 bytes @ 0x28
  7579  0048                     	ds	2
  7580  004A                     CONTROLLER_task@active:	
  7581                           
  7582                           ; 1 bytes @ 0x2A
  7583  004A                     	ds	2
  7584  004C                     ___flmul@a:	
  7585                           
  7586                           ; 4 bytes @ 0x2C
  7587  004C                     	ds	4
  7588  0050                     ??___flmul:	
  7589                           
  7590                           ; 1 bytes @ 0x30
  7591  0050                     	ds	5
  7592  0055                     ___flmul@sign:	
  7593                           
  7594                           ; 1 bytes @ 0x35
  7595  0055                     	ds	1
  7596  0056                     ___flmul@aexp:	
  7597                           
  7598                           ; 1 bytes @ 0x36
  7599  0056                     	ds	1
  7600  0057                     ___flmul@grs:	
  7601                           
  7602                           ; 4 bytes @ 0x37
  7603  0057                     	ds	4
  7604  005B                     ___flmul@bexp:	
  7605                           
  7606                           ; 1 bytes @ 0x3B
  7607  005B                     	ds	1
  7608  005C                     ___flmul@prod:	
  7609                           
  7610                           ; 4 bytes @ 0x3C
  7611  005C                     	ds	4
  7612  0060                     ___flmul@temp:	
  7613                           
  7614                           ; 2 bytes @ 0x40
  7615  0060                     	ds	2
  7616  0062                     ?___fltol:	
  7617  0062                     ___fltol@f1:	
  7618                           ; 4 bytes @ 0x42
  7619                           
  7620                           
  7621                           ; 4 bytes @ 0x42
  7622  0062                     	ds	4
  7623  0066                     ??___fltol:	
  7624                           
  7625                           ; 1 bytes @ 0x46
  7626  0066                     	ds	5
  7627  006B                     ___fltol@sign1:	
  7628                           
  7629                           ; 1 bytes @ 0x4B
  7630  006B                     	ds	1
  7631  006C                     ___fltol@exp1:	
  7632                           
  7633                           ; 1 bytes @ 0x4C
  7634  006C                     	ds	1
  7635  006D                     ?_LED_setColor:	
  7636  006D                     LED_setColor@G:	
  7637                           ; 1 bytes @ 0x4D
  7638                           
  7639                           
  7640                           ; 1 bytes @ 0x4D
  7641  006D                     	ds	1
  7642  006E                     LED_setColor@B:	
  7643                           
  7644                           ; 1 bytes @ 0x4E
  7645  006E                     	ds	1
  7646  006F                     LED_setColor@W:	
  7647                           
  7648                           ; 1 bytes @ 0x4F
  7649  006F                     	ds	1
  7650                           
  7651                           	psect	maintext
  7652  0BB9                     __pmaintext:	
  7653 ;;
  7654 ;;Main: autosize = 0, tempsize = 11, incstack = 0, save=0
  7655 ;;
  7656 ;; *************** function _main *****************
  7657 ;; Defined at:
  7658 ;;		line 55 in file "main.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;		None
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;  time            2   19[BANK1 ] unsigned short 
  7663 ;;  lastTime        2   17[BANK1 ] unsigned short 
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  1    wreg      void 
  7666 ;; Registers used:
  7667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7668 ;; Tracked objects:
  7669 ;;		On entry : B3F/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7674 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7675 ;;      Temps:          0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7676 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7677 ;;Total ram usage:       15 bytes
  7678 ;; Hardware stack levels required when called:   12
  7679 ;; This function calls:
  7680 ;;		_BEAT_detected
  7681 ;;		_BEAT_init
  7682 ;;		_BEAT_task
  7683 ;;		_BUTTONS_init
  7684 ;;		_BUTTONS_task
  7685 ;;		_CLOCK_getTime
  7686 ;;		_CLOCK_init
  7687 ;;		_CONTROLLER_init
  7688 ;;		_CONTROLLER_task
  7689 ;;		_DMX_init
  7690 ;;		_LED_init
  7691 ;;		_LED_setColor
  7692 ;;		_SYSTEM_Initialize
  7693 ;;		_TM1650_fastPrintNum
  7694 ;;		_TM1650_init
  7695 ;; This function is called by:
  7696 ;;		Startup code after reset
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           
  7701                           ;psect for function _main
  7702  0BB9                     _main:	
  7703                           
  7704                           ;main.c: 57:     SYSTEM_Initialize();
  7705                           
  7706                           ;incstack = 0
  7707                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7708  0BB9  3196  2655  318B   	fcall	_SYSTEM_Initialize
  7709                           
  7710                           ;main.c: 58:     _delay((unsigned long)((50)*(32000000/4000.0)));
  7711  0BBC  3003               	movlw	3
  7712  0BBD  0141               	movlb	1	; select bank1
  7713  0BBE  00D8               	movwf	(??_main^(0+128)+1)
  7714  0BBF  3008               	movlw	8
  7715  0BC0  00D7               	movwf	??_main^(0+128)
  7716  0BC1  3077               	movlw	119
  7717  0BC2                     u5197:	
  7718  0BC2  0B89               	decfsz	9,f
  7719  0BC3  2BC2               	goto	u5197
  7720  0BC4  0BD7               	decfsz	??_main^(0+128),f
  7721  0BC5  2BC2               	goto	u5197
  7722  0BC6  0BD8               	decfsz	(??_main^(0+128)+1),f
  7723  0BC7  2BC2               	goto	u5197
  7724                           
  7725                           ;main.c: 59:     TM1650_init();
  7726  0BC8  3195  2579  318B   	fcall	_TM1650_init
  7727                           
  7728                           ;main.c: 60:     CLOCK_init();
  7729  0BCB  3196  2634  318B   	fcall	_CLOCK_init
  7730                           
  7731                           ;main.c: 61:     BUTTONS_init();
  7732  0BCE  3189  21BB  318B   	fcall	_BUTTONS_init
  7733                           
  7734                           ;main.c: 62:     CONTROLLER_init();
  7735  0BD1  3195  25F2  318B   	fcall	_CONTROLLER_init
  7736                           
  7737                           ;main.c: 63:     DMX_init();
  7738  0BD4  3196  2625  318B   	fcall	_DMX_init
  7739                           
  7740                           ;main.c: 65:     LED_init();
  7741  0BD7  3188  20F7  318B   	fcall	_LED_init
  7742                           
  7743                           ;main.c: 66:     BEAT_init();
  7744  0BDA  3196  267B  318B   	fcall	_BEAT_init
  7745                           
  7746                           ;main.c: 67:     TRISC5 = 0;
  7747  0BDD  0140               	movlb	0	; select bank0
  7748  0BDE  1294               	bcf	20,5	;volatile
  7749                           
  7750                           ;main.c: 68:     LATC5 = 0;
  7751  0BDF  129A               	bcf	26,5	;volatile
  7752                           
  7753                           ;main.c: 70:     time_t lastTime = 0;
  7754  0BE0  0141               	movlb	1	; select bank1
  7755  0BE1  01E2               	clrf	main@lastTime^(0+128)
  7756  0BE2  01E3               	clrf	(main@lastTime+1)^(0+128)
  7757  0BE3  2BFA               	goto	l5685
  7758  0BE4                     l5705:	
  7759                           
  7760                           ;main.c: 91:         LED_setColor(127,127,127,127);
  7761  0BE4  307F               	movlw	127
  7762  0BE5  0141               	movlb	1	; select bank1
  7763  0BE6  00D7               	movwf	??_main^(0+128)
  7764  0BE7  0857               	movf	??_main^(0+128),w
  7765  0BE8  0140               	movlb	0	; select bank0
  7766  0BE9  00ED               	movwf	LED_setColor@G
  7767  0BEA  307F               	movlw	127
  7768  0BEB  0141               	movlb	1	; select bank1
  7769  0BEC  00D8               	movwf	(??_main+1)^(0+128)
  7770  0BED  0858               	movf	(??_main+1)^(0+128),w
  7771  0BEE  0140               	movlb	0	; select bank0
  7772  0BEF  00EE               	movwf	LED_setColor@B
  7773  0BF0  307F               	movlw	127
  7774  0BF1  0141               	movlb	1	; select bank1
  7775  0BF2  00D9               	movwf	(??_main+2)^(0+128)
  7776  0BF3  0859               	movf	(??_main+2)^(0+128),w
  7777  0BF4  0140               	movlb	0	; select bank0
  7778  0BF5  00EF               	movwf	LED_setColor@W
  7779  0BF6  307F               	movlw	127
  7780  0BF7                     L1:	
  7781  0BF7  318E  269A  318B   	fcall	_LED_setColor
  7782  0BFA                     l5685:	
  7783                           
  7784                           ;main.c: 73:     {;main.c: 74:         BUTTONS_task();
  7785  0BFA  3186  26EA  318B   	fcall	_BUTTONS_task
  7786                           
  7787                           ;main.c: 75:         CONTROLLER_task();
  7788  0BFD  318A  2258  318B   	fcall	_CONTROLLER_task
  7789                           
  7790                           ;main.c: 76:         BEAT_task();
  7791  0C00  318C  2475  318B   	fcall	_BEAT_task
  7792                           
  7793                           ;main.c: 77:         TM1650_fastPrintNum(address);
  7794  0C03  0141               	movlb	1	; select bank1
  7795  0C04  086B               	movf	(_address+1)^(0+128),w
  7796  0C05  0140               	movlb	0	; select bank0
  7797  0C06  00BC               	movwf	TM1650_fastPrintNum@num+1
  7798  0C07  0141               	movlb	1	; select bank1
  7799  0C08  086A               	movf	_address^(0+128),w
  7800  0C09  0140               	movlb	0	; select bank0
  7801  0C0A  00BB               	movwf	TM1650_fastPrintNum@num
  7802  0C0B  3180  2079  318B   	fcall	_TM1650_fastPrintNum
  7803                           
  7804                           ;main.c: 78:         LED_setColor(input[address],input[address+1],input[address+2],input
      +                          [address+3]);
  7805  0C0E  30F0               	movlw	240
  7806  0C0F  0141               	movlb	1	; select bank1
  7807  0C10  00D7               	movwf	??_main^(0+128)
  7808  0C11  3025               	movlw	37
  7809  0C12  00D8               	movwf	(??_main^(0+128)+1)
  7810  0C13  086A               	movf	_address^(0+128),w
  7811  0C14  0757               	addwf	??_main^(0+128),w
  7812  0C15  0086               	movwf	6
  7813  0C16  086B               	movf	(_address+1)^(0+128),w
  7814  0C17  3D58               	addwfc	(??_main+1)^(0+128),w
  7815  0C18  0087               	movwf	7
  7816  0C19  0801               	movf	1,w
  7817  0C1A  00D9               	movwf	(??_main+2)^(0+128)
  7818  0C1B  0859               	movf	(??_main+2)^(0+128),w
  7819  0C1C  0140               	movlb	0	; select bank0
  7820  0C1D  00ED               	movwf	LED_setColor@G
  7821  0C1E  30F1               	movlw	241
  7822  0C1F  0141               	movlb	1	; select bank1
  7823  0C20  00DA               	movwf	(??_main+3)^(0+128)
  7824  0C21  3025               	movlw	37
  7825  0C22  00DB               	movwf	((??_main+3)^(0+128)+1)
  7826  0C23  086A               	movf	_address^(0+128),w
  7827  0C24  075A               	addwf	(??_main+3)^(0+128),w
  7828  0C25  0086               	movwf	6
  7829  0C26  086B               	movf	(_address+1)^(0+128),w
  7830  0C27  3D5B               	addwfc	(??_main+4)^(0+128),w
  7831  0C28  0087               	movwf	7
  7832  0C29  0801               	movf	1,w
  7833  0C2A  00DC               	movwf	(??_main+5)^(0+128)
  7834  0C2B  085C               	movf	(??_main+5)^(0+128),w
  7835  0C2C  0140               	movlb	0	; select bank0
  7836  0C2D  00EE               	movwf	LED_setColor@B
  7837  0C2E  30F2               	movlw	242
  7838  0C2F  0141               	movlb	1	; select bank1
  7839  0C30  00DD               	movwf	(??_main+6)^(0+128)
  7840  0C31  3025               	movlw	37
  7841  0C32  00DE               	movwf	((??_main+6)^(0+128)+1)
  7842  0C33  086A               	movf	_address^(0+128),w
  7843  0C34  075D               	addwf	(??_main+6)^(0+128),w
  7844  0C35  0086               	movwf	6
  7845  0C36  086B               	movf	(_address+1)^(0+128),w
  7846  0C37  3D5E               	addwfc	(??_main+7)^(0+128),w
  7847  0C38  0087               	movwf	7
  7848  0C39  0801               	movf	1,w
  7849  0C3A  00DF               	movwf	(??_main+8)^(0+128)
  7850  0C3B  085F               	movf	(??_main+8)^(0+128),w
  7851  0C3C  0140               	movlb	0	; select bank0
  7852  0C3D  00EF               	movwf	LED_setColor@W
  7853  0C3E  30EF               	movlw	239
  7854  0C3F  0141               	movlb	1	; select bank1
  7855  0C40  00E0               	movwf	(??_main+9)^(0+128)
  7856  0C41  3025               	movlw	37
  7857  0C42  00E1               	movwf	((??_main+9)^(0+128)+1)
  7858  0C43  086A               	movf	_address^(0+128),w
  7859  0C44  0760               	addwf	(??_main+9)^(0+128),w
  7860  0C45  0086               	movwf	6
  7861  0C46  086B               	movf	(_address+1)^(0+128),w
  7862  0C47  3D61               	addwfc	(??_main+10)^(0+128),w
  7863  0C48  0087               	movwf	7
  7864  0C49  0801               	movf	1,w
  7865  0C4A  318E  269A  318B   	fcall	_LED_setColor
  7866                           
  7867                           ;main.c: 83:         time_t time = CLOCK_getTime();
  7868  0C4D  3195  25A9  318B   	fcall	_CLOCK_getTime
  7869  0C50  0140               	movlb	0	; select bank0
  7870  0C51  0821               	movf	?_CLOCK_getTime+1,w
  7871  0C52  0141               	movlb	1	; select bank1
  7872  0C53  00E5               	movwf	(main@time+1)^(0+128)
  7873  0C54  0140               	movlb	0	; select bank0
  7874  0C55  0820               	movf	?_CLOCK_getTime,w
  7875  0C56  0141               	movlb	1	; select bank1
  7876  0C57  00E4               	movwf	main@time^(0+128)
  7877                           
  7878                           ;main.c: 86:     if (time - lastTime < 100)
  7879  0C58  0862               	movf	main@lastTime^(0+128),w
  7880  0C59  0264               	subwf	main@time^(0+128),w
  7881  0C5A  00D7               	movwf	??_main^(0+128)
  7882  0C5B  0863               	movf	(main@lastTime+1)^(0+128),w
  7883  0C5C  3B65               	subwfb	(main@time+1)^(0+128),w
  7884  0C5D  00D8               	movwf	(??_main+1)^(0+128)
  7885  0C5E  3000               	movlw	0
  7886  0C5F  0258               	subwf	(??_main+1)^(0+128),w
  7887  0C60  3064               	movlw	100
  7888  0C61  1903               	skipnz
  7889  0C62  0257               	subwf	??_main^(0+128),w
  7890  0C63  1C03               	btfss	3,0
  7891  0C64  2BFA               	goto	l5685
  7892                           
  7893                           ;main.c: 89:     lastTime = time;
  7894  0C65  0865               	movf	(main@time+1)^(0+128),w
  7895  0C66  00E3               	movwf	(main@lastTime+1)^(0+128)
  7896  0C67  0864               	movf	main@time^(0+128),w
  7897  0C68  00E2               	movwf	main@lastTime^(0+128)
  7898                           
  7899                           ;main.c: 90:     if(BEAT_detected())
  7900  0C69  3195  2585  318B   	fcall	_BEAT_detected
  7901  0C6C  3A00               	xorlw	0
  7902  0C6D  1D03               	btfss	3,2
  7903  0C6E  2BE4               	goto	l5705
  7904                           
  7905                           ;main.c: 93:         LED_setColor(0,0,0,0);
  7906  0C6F  0140               	movlb	0	; select bank0
  7907  0C70  01ED               	clrf	LED_setColor@G
  7908  0C71  01EE               	clrf	LED_setColor@B
  7909  0C72  01EF               	clrf	LED_setColor@W
  7910  0C73  3000               	movlw	0
  7911  0C74  2BF7               	goto	L1
  7912  0C75                     __end_of_main:	
  7913                           
  7914                           	psect	text1
  7915  1579                     __ptext1:	
  7916 ;; *************** function _TM1650_init *****************
  7917 ;; Defined at:
  7918 ;;		line 12 in file "tm1650.c"
  7919 ;; Parameters:    Size  Location     Type
  7920 ;;		None
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;		None
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  1    wreg      void 
  7925 ;; Registers used:
  7926 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7936 ;;Total ram usage:        0 bytes
  7937 ;; Hardware stack levels used:    1
  7938 ;; Hardware stack levels required when called:    9
  7939 ;; This function calls:
  7940 ;;		_TM1650_enable
  7941 ;; This function is called by:
  7942 ;;		_main
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           
  7947                           ;psect for function _TM1650_init
  7948  1579                     _TM1650_init:	
  7949                           
  7950                           ;tm1650.c: 13:     (INTCONbits.GIE = 1);
  7951                           
  7952                           ;incstack = 0
  7953                           ; Regs used in _TM1650_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7954  1579  178B               	bsf	11,7	;volatile
  7955                           
  7956                           ;tm1650.c: 14:     (INTCONbits.PEIE = 1);
  7957  157A  170B               	bsf	11,6	;volatile
  7958                           
  7959                           ;tm1650.c: 16:     TM1650_enable(1);
  7960  157B  3001               	movlw	1
  7961  157C  3196  26C2         	fcall	_TM1650_enable
  7962  157E  0008               	return
  7963  157F                     __end_of_TM1650_init:	
  7964                           
  7965                           	psect	text2
  7966  1655                     __ptext2:	
  7967 ;; *************** function _SYSTEM_Initialize *****************
  7968 ;; Defined at:
  7969 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;		None
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;		None
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  1    wreg      void 
  7976 ;; Registers used:
  7977 ;;		wreg, status,2, status,0, pclath, cstack
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7987 ;;Total ram usage:        0 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; Hardware stack levels required when called:    6
  7990 ;; This function calls:
  7991 ;;		_ADCC_Initialize
  7992 ;;		_EUSART1_Initialize
  7993 ;;		_I2C1_Initialize
  7994 ;;		_OSCILLATOR_Initialize
  7995 ;;		_PIN_MANAGER_Initialize
  7996 ;;		_PMD_Initialize
  7997 ;; This function is called by:
  7998 ;;		_main
  7999 ;; This function uses a non-reentrant model
  8000 ;;
  8001                           
  8002                           
  8003                           ;psect for function _SYSTEM_Initialize
  8004  1655                     _SYSTEM_Initialize:	
  8005                           
  8006                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8007                           
  8008                           ;incstack = 0
  8009                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8010  1655  3195  25E8  3196   	fcall	_PMD_Initialize
  8011                           
  8012                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8013  1658  3188  202A  3196   	fcall	_PIN_MANAGER_Initialize
  8014                           
  8015                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8016  165B  3195  25DF  3196   	fcall	_OSCILLATOR_Initialize
  8017                           
  8018                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
  8019  165E  3196  26F2  3196   	fcall	_I2C1_Initialize
  8020                           
  8021                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  8022  1661  3197  27AD  3196   	fcall	_ADCC_Initialize
  8023                           
  8024                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
  8025  1664  3189  212D         	fcall	_EUSART1_Initialize
  8026  1666  0008               	return
  8027  1667                     __end_of_SYSTEM_Initialize:	
  8028                           
  8029                           	psect	text3
  8030  15E8                     __ptext3:	
  8031 ;; *************** function _PMD_Initialize *****************
  8032 ;; Defined at:
  8033 ;;		line 74 in file "mcc_generated_files/mcc.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;		None
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;		None
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  1    wreg      void 
  8040 ;; Registers used:
  8041 ;;		status,2
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8051 ;;Total ram usage:        0 bytes
  8052 ;; Hardware stack levels used:    1
  8053 ;; Hardware stack levels required when called:    4
  8054 ;; This function calls:
  8055 ;;		Nothing
  8056 ;; This function is called by:
  8057 ;;		_SYSTEM_Initialize
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           
  8062                           ;psect for function _PMD_Initialize
  8063  15E8                     _PMD_Initialize:	
  8064                           
  8065                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  8066                           
  8067                           ;incstack = 0
  8068                           ; Regs used in _PMD_Initialize: [status,2]
  8069  15E8  014F               	movlb	15	; select bank15
  8070  15E9  0196               	clrf	22	;volatile
  8071                           
  8072                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  8073  15EA  0197               	clrf	23	;volatile
  8074                           
  8075                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
  8076  15EB  0198               	clrf	24	;volatile
  8077                           
  8078                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
  8079  15EC  0199               	clrf	25	;volatile
  8080                           
  8081                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
  8082  15ED  019A               	clrf	26	;volatile
  8083                           
  8084                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
  8085  15EE  019B               	clrf	27	;volatile
  8086                           
  8087                           ;mcc_generated_files/mcc.c: 89:     PMD6 = 0x00;
  8088  15EF  019C               	clrf	28	;volatile
  8089                           
  8090                           ;mcc_generated_files/mcc.c: 91:     PMD7 = 0x00;
  8091  15F0  019D               	clrf	29	;volatile
  8092  15F1  0008               	return
  8093  15F2                     __end_of_PMD_Initialize:	
  8094                           
  8095                           	psect	text4
  8096  082A                     __ptext4:	
  8097 ;; *************** function _PIN_MANAGER_Initialize *****************
  8098 ;; Defined at:
  8099 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8100 ;; Parameters:    Size  Location     Type
  8101 ;;		None
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;		None
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      void 
  8106 ;; Registers used:
  8107 ;;		wreg, status,2
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8117 ;;Total ram usage:        0 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:    4
  8120 ;; This function calls:
  8121 ;;		Nothing
  8122 ;; This function is called by:
  8123 ;;		_SYSTEM_Initialize
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           
  8128                           ;psect for function _PIN_MANAGER_Initialize
  8129  082A                     _PIN_MANAGER_Initialize:	
  8130                           
  8131                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8132                           
  8133                           ;incstack = 0
  8134                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8135  082A  0140               	movlb	0	; select bank0
  8136  082B  0198               	clrf	24	;volatile
  8137                           
  8138                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8139  082C  0199               	clrf	25	;volatile
  8140                           
  8141                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8142  082D  019A               	clrf	26	;volatile
  8143                           
  8144                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  8145  082E  303F               	movlw	63
  8146  082F  0092               	movwf	18	;volatile
  8147                           
  8148                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xB0;
  8149  0830  30B0               	movlw	176
  8150  0831  0093               	movwf	19	;volatile
  8151                           
  8152                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  8153  0832  30FF               	movlw	255
  8154  0833  0094               	movwf	20	;volatile
  8155                           
  8156                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xF8;
  8157  0834  30F8               	movlw	248
  8158  0835  017E               	movlb	62	; select bank62
  8159  0836  00CE               	movwf	78	;volatile
  8160                           
  8161                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
  8162  0837  30E0               	movlw	224
  8163  0838  00C3               	movwf	67	;volatile
  8164                           
  8165                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x03;
  8166  0839  3003               	movlw	3
  8167  083A  00B8               	movwf	56	;volatile
  8168                           
  8169                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8170  083B  01C4               	clrf	68	;volatile
  8171                           
  8172                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x04;
  8173  083C  3004               	movlw	4
  8174  083D  00B9               	movwf	57	;volatile
  8175                           
  8176                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x07;
  8177  083E  3007               	movlw	7
  8178  083F  00CF               	movwf	79	;volatile
  8179                           
  8180                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  8181  0840  01BA               	clrf	58	;volatile
  8182                           
  8183                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  8184  0841  01C5               	clrf	69	;volatile
  8185                           
  8186                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  8187  0842  01D0               	clrf	80	;volatile
  8188                           
  8189                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  8190  0843  3037               	movlw	55
  8191  0844  00BB               	movwf	59	;volatile
  8192                           
  8193                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  8194  0845  30F0               	movlw	240
  8195  0846  00C6               	movwf	70	;volatile
  8196                           
  8197                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  8198  0847  30FF               	movlw	255
  8199  0848  00D1               	movwf	81	;volatile
  8200                           
  8201                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
  8202  0849  3005               	movlw	5
  8203  084A  017D               	movlb	61	; select bank61
  8204  084B  00C5               	movwf	69	;volatile
  8205                           
  8206                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
  8207  084C  3014               	movlw	20
  8208  084D  017E               	movlb	62	; select bank62
  8209  084E  0094               	movwf	20	;volatile
  8210                           
  8211                           ;mcc_generated_files/pin_manager.c: 108:     RB6PPS = 0x0F;
  8212  084F  300F               	movlw	15
  8213  0850  009E               	movwf	30	;volatile
  8214                           
  8215                           ;mcc_generated_files/pin_manager.c: 109:     RA5PPS = 0x13;
  8216  0851  3013               	movlw	19
  8217  0852  0095               	movwf	21	;volatile
  8218                           
  8219                           ;mcc_generated_files/pin_manager.c: 110:     SSP1DATPPS = 0x04;
  8220  0853  3004               	movlw	4
  8221  0854  017D               	movlb	61	; select bank61
  8222  0855  00C6               	movwf	70	;volatile
  8223                           
  8224                           ;mcc_generated_files/pin_manager.c: 111:     RX1DTPPS = 0x0C;
  8225  0856  300C               	movlw	12
  8226  0857  00CB               	movwf	75	;volatile
  8227  0858  0008               	return
  8228  0859                     __end_of_PIN_MANAGER_Initialize:	
  8229                           
  8230                           	psect	text5
  8231  15DF                     __ptext5:	
  8232 ;; *************** function _OSCILLATOR_Initialize *****************
  8233 ;; Defined at:
  8234 ;;		line 60 in file "mcc_generated_files/mcc.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;		None
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;		None
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  1    wreg      void 
  8241 ;; Registers used:
  8242 ;;		wreg, status,2
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8252 ;;Total ram usage:        0 bytes
  8253 ;; Hardware stack levels used:    1
  8254 ;; Hardware stack levels required when called:    4
  8255 ;; This function calls:
  8256 ;;		Nothing
  8257 ;; This function is called by:
  8258 ;;		_SYSTEM_Initialize
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           
  8263                           ;psect for function _OSCILLATOR_Initialize
  8264  15DF                     _OSCILLATOR_Initialize:	
  8265                           
  8266                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x60;
  8267                           
  8268                           ;incstack = 0
  8269                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8270  15DF  3060               	movlw	96
  8271  15E0  0151               	movlb	17	; select bank17
  8272  15E1  008D               	movwf	13	;volatile
  8273                           
  8274                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  8275  15E2  018F               	clrf	15	;volatile
  8276                           
  8277                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  8278  15E3  0191               	clrf	17	;volatile
  8279                           
  8280                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x06;
  8281  15E4  3006               	movlw	6
  8282  15E5  0093               	movwf	19	;volatile
  8283                           
  8284                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  8285  15E6  0192               	clrf	18	;volatile
  8286  15E7  0008               	return
  8287  15E8                     __end_of_OSCILLATOR_Initialize:	
  8288                           
  8289                           	psect	text6
  8290  16F2                     __ptext6:	
  8291 ;; *************** function _I2C1_Initialize *****************
  8292 ;; Defined at:
  8293 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  8294 ;; Parameters:    Size  Location     Type
  8295 ;;		None
  8296 ;; Auto vars:     Size  Location     Type
  8297 ;;		None
  8298 ;; Return value:  Size  Location     Type
  8299 ;;                  1    wreg      void 
  8300 ;; Registers used:
  8301 ;;		wreg, status,2
  8302 ;; Tracked objects:
  8303 ;;		On entry : 0/0
  8304 ;;		On exit  : 0/0
  8305 ;;		Unchanged: 0/0
  8306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8309 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8310 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8311 ;;Total ram usage:        1 bytes
  8312 ;; Hardware stack levels used:    1
  8313 ;; Hardware stack levels required when called:    4
  8314 ;; This function calls:
  8315 ;;		Nothing
  8316 ;; This function is called by:
  8317 ;;		_SYSTEM_Initialize
  8318 ;; This function uses a non-reentrant model
  8319 ;;
  8320                           
  8321                           
  8322                           ;psect for function _I2C1_Initialize
  8323  16F2                     _I2C1_Initialize:	
  8324                           
  8325                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
  8326                           
  8327                           ;incstack = 0
  8328                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  8329  16F2  30CD               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  8330  16F3  0140               	movlb	0	; select bank0
  8331  16F4  00A0               	movwf	??_I2C1_Initialize
  8332  16F5  0820               	movf	??_I2C1_Initialize,w
  8333  16F6  0141               	movlb	1	; select bank1
  8334  16F7  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
  8335                           
  8336                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
  8337  16F8  30CD               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  8338  16F9  0140               	movlb	0	; select bank0
  8339  16FA  00A0               	movwf	??_I2C1_Initialize
  8340  16FB  0820               	movf	??_I2C1_Initialize,w
  8341  16FC  0141               	movlb	1	; select bank1
  8342  16FD  00A0               	movwf	_i2c1_object^(0+128)
  8343                           
  8344                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
  8345  16FE  14A2               	bsf	(_i2c1_object^(0+128)+2),1
  8346                           
  8347                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
  8348  16FF  1022               	bcf	(_i2c1_object^(0+128)+2),0
  8349                           
  8350                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
  8351  1700  01A4               	clrf	(_i2c1_object^(0+128)+4)
  8352                           
  8353                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
  8354  1701  0143               	movlb	3	; select bank3
  8355  1702  018F               	clrf	15	;volatile
  8356                           
  8357                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
  8358  1703  3028               	movlw	40
  8359  1704  0090               	movwf	16	;volatile
  8360                           
  8361                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
  8362  1705  0192               	clrf	18	;volatile
  8363                           
  8364                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x27;
  8365  1706  3027               	movlw	39
  8366  1707  008D               	movwf	13	;volatile
  8367                           
  8368                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
  8369  1708  014E               	movlb	14	; select bank14
  8370  1709  100F               	bcf	15,0	;volatile
  8371                           
  8372                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
  8373  170A  108F               	bcf	15,1	;volatile
  8374                           
  8375                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
  8376  170B  1419               	bsf	25,0	;volatile
  8377                           
  8378                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
  8379  170C  1499               	bsf	25,1	;volatile
  8380  170D  0008               	return
  8381  170E                     __end_of_I2C1_Initialize:	
  8382                           
  8383                           	psect	text7
  8384  092D                     __ptext7:	
  8385 ;; *************** function _EUSART1_Initialize *****************
  8386 ;; Defined at:
  8387 ;;		line 85 in file "mcc_generated_files/eusart1.c"
  8388 ;; Parameters:    Size  Location     Type
  8389 ;;		None
  8390 ;; Auto vars:     Size  Location     Type
  8391 ;;		None
  8392 ;; Return value:  Size  Location     Type
  8393 ;;                  1    wreg      void 
  8394 ;; Registers used:
  8395 ;;		wreg, status,2, status,0, pclath, cstack
  8396 ;; Tracked objects:
  8397 ;;		On entry : 0/0
  8398 ;;		On exit  : 0/0
  8399 ;;		Unchanged: 0/0
  8400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8403 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8404 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8405 ;;Total ram usage:        1 bytes
  8406 ;; Hardware stack levels used:    1
  8407 ;; Hardware stack levels required when called:    5
  8408 ;; This function calls:
  8409 ;;		_EUSART1_SetErrorHandler
  8410 ;;		_EUSART1_SetFramingErrorHandler
  8411 ;;		_EUSART1_SetOverrunErrorHandler
  8412 ;;		_EUSART1_SetRxInterruptHandler
  8413 ;;		_EUSART1_SetTxInterruptHandler
  8414 ;; This function is called by:
  8415 ;;		_SYSTEM_Initialize
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           
  8420                           ;psect for function _EUSART1_Initialize
  8421  092D                     _EUSART1_Initialize:	
  8422                           
  8423                           ;mcc_generated_files/eusart1.c: 88:     PIE3bits.RC1IE = 0;
  8424                           
  8425                           ;incstack = 0
  8426                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8427  092D  014E               	movlb	14	; select bank14
  8428  092E  1299               	bcf	25,5	;volatile
  8429                           
  8430                           ;mcc_generated_files/eusart1.c: 89:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  8431  092F  3059               	movlw	low _EUSART1_Receive_ISR
  8432  0930  0140               	movlb	0	; select bank0
  8433  0931  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8434  0932  3008               	movlw	high _EUSART1_Receive_ISR
  8435  0933  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8436  0934  3195  25B2  3189   	fcall	_EUSART1_SetRxInterruptHandler
  8437                           
  8438                           ;mcc_generated_files/eusart1.c: 90:     PIE3bits.TX1IE = 0;
  8439  0937  014E               	movlb	14	; select bank14
  8440  0938  1219               	bcf	25,4	;volatile
  8441                           
  8442                           ;mcc_generated_files/eusart1.c: 91:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  8443  0939  300E               	movlw	low _EUSART1_Transmit_ISR
  8444  093A  0140               	movlb	0	; select bank0
  8445  093B  00A0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  8446  093C  3017               	movlw	high _EUSART1_Transmit_ISR
  8447  093D  00A1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  8448  093E  3195  25D6  3189   	fcall	_EUSART1_SetTxInterruptHandler
  8449                           
  8450                           ;mcc_generated_files/eusart1.c: 95:     BAUD1CON = 0x08;
  8451  0941  3008               	movlw	8
  8452  0942  0142               	movlb	2	; select bank2
  8453  0943  009F               	movwf	31	;volatile
  8454                           
  8455                           ;mcc_generated_files/eusart1.c: 98:     RC1STA = 0x90;
  8456  0944  3090               	movlw	144
  8457  0945  009D               	movwf	29	;volatile
  8458                           
  8459                           ;mcc_generated_files/eusart1.c: 101:     TX1STA = 0x04;
  8460  0946  3004               	movlw	4
  8461  0947  009E               	movwf	30	;volatile
  8462                           
  8463                           ;mcc_generated_files/eusart1.c: 104:     SP1BRGL = 0x1F;
  8464  0948  301F               	movlw	31
  8465  0949  009B               	movwf	27	;volatile
  8466                           
  8467                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGH = 0x00;
  8468  094A  019C               	clrf	28	;volatile
  8469                           
  8470                           ;mcc_generated_files/eusart1.c: 110:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  8471  094B  30FF               	movlw	low _EUSART1_DefaultFramingErrorHandler
  8472  094C  0140               	movlb	0	; select bank0
  8473  094D  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  8474  094E  3007               	movlw	high _EUSART1_DefaultFramingErrorHandler
  8475  094F  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  8476  0950  3195  25C4  3189   	fcall	_EUSART1_SetFramingErrorHandler
  8477                           
  8478                           ;mcc_generated_files/eusart1.c: 111:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  8479  0953  3070               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  8480  0954  0140               	movlb	0	; select bank0
  8481  0955  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  8482  0956  3015               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  8483  0957  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  8484  0958  3195  25CD  3189   	fcall	_EUSART1_SetOverrunErrorHandler
  8485                           
  8486                           ;mcc_generated_files/eusart1.c: 112:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  8487  095B  3063               	movlw	low _EUSART1_DefaultErrorHandler
  8488  095C  0140               	movlb	0	; select bank0
  8489  095D  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  8490  095E  3015               	movlw	high _EUSART1_DefaultErrorHandler
  8491  095F  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  8492  0960  3195  25BB         	fcall	_EUSART1_SetErrorHandler
  8493                           
  8494                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxLastError.status = 0;
  8495  0962  0141               	movlb	1	; select bank1
  8496  0963  01C7               	clrf	_eusart1RxLastError^(0+128)	;volatile
  8497                           
  8498                           ;mcc_generated_files/eusart1.c: 117:     eusart1TxHead = 0;
  8499  0964  01F3               	clrf	_eusart1TxHead	;volatile
  8500                           
  8501                           ;mcc_generated_files/eusart1.c: 118:     eusart1TxTail = 0;
  8502  0965  01F2               	clrf	_eusart1TxTail	;volatile
  8503                           
  8504                           ;mcc_generated_files/eusart1.c: 119:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  8505  0966  3008               	movlw	8
  8506  0967  0140               	movlb	0	; select bank0
  8507  0968  00A2               	movwf	??_EUSART1_Initialize
  8508  0969  0822               	movf	??_EUSART1_Initialize,w
  8509  096A  0141               	movlb	1	; select bank1
  8510  096B  00EE               	movwf	_eusart1TxBufferRemaining^(0+128)	;volatile
  8511                           
  8512                           ;mcc_generated_files/eusart1.c: 121:     eusart1RxHead = 0;
  8513  096C  01F1               	clrf	_eusart1RxHead	;volatile
  8514                           
  8515                           ;mcc_generated_files/eusart1.c: 122:     eusart1RxTail = 0;
  8516  096D  01F0               	clrf	_eusart1RxTail	;volatile
  8517                           
  8518                           ;mcc_generated_files/eusart1.c: 123:     eusart1RxCount = 0;
  8519  096E  01C8               	clrf	_eusart1RxCount^(0+128)	;volatile
  8520                           
  8521                           ;mcc_generated_files/eusart1.c: 126:     PIE3bits.RC1IE = 1;
  8522  096F  014E               	movlb	14	; select bank14
  8523  0970  1699               	bsf	25,5	;volatile
  8524  0971  0008               	return
  8525  0972                     __end_of_EUSART1_Initialize:	
  8526                           
  8527                           	psect	text8
  8528  15D6                     __ptext8:	
  8529 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  8530 ;; Defined at:
  8531 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8534 ;;		 -> EUSART1_Transmit_ISR(1), 
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;		None
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  1    wreg      void 
  8539 ;; Registers used:
  8540 ;;		wreg
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8546 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8549 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8550 ;;Total ram usage:        2 bytes
  8551 ;; Hardware stack levels used:    1
  8552 ;; Hardware stack levels required when called:    4
  8553 ;; This function calls:
  8554 ;;		Nothing
  8555 ;; This function is called by:
  8556 ;;		_EUSART1_Initialize
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560                           
  8561                           ;psect for function _EUSART1_SetTxInterruptHandler
  8562  15D6                     _EUSART1_SetTxInterruptHandler:	
  8563                           
  8564                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8565                           
  8566                           ;incstack = 0
  8567                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  8568  15D6  0140               	movlb	0	; select bank0
  8569  15D7  0821               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  8570  15D8  0142               	movlb	2	; select bank2
  8571  15D9  00E5               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
  8572  15DA  0140               	movlb	0	; select bank0
  8573  15DB  0820               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  8574  15DC  0142               	movlb	2	; select bank2
  8575  15DD  00E4               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
  8576  15DE  0008               	return
  8577  15DF                     __end_of_EUSART1_SetTxInterruptHandler:	
  8578                           
  8579                           	psect	text9
  8580  15CD                     __ptext9:	
  8581 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8582 ;; Defined at:
  8583 ;;		line 265 in file "mcc_generated_files/eusart1.c"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8586 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8587 ;; Auto vars:     Size  Location     Type
  8588 ;;		None
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  1    wreg      void 
  8591 ;; Registers used:
  8592 ;;		wreg
  8593 ;; Tracked objects:
  8594 ;;		On entry : 0/0
  8595 ;;		On exit  : 0/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8598 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8601 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8602 ;;Total ram usage:        2 bytes
  8603 ;; Hardware stack levels used:    1
  8604 ;; Hardware stack levels required when called:    4
  8605 ;; This function calls:
  8606 ;;		Nothing
  8607 ;; This function is called by:
  8608 ;;		_EUSART1_Initialize
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           
  8613                           ;psect for function _EUSART1_SetOverrunErrorHandler
  8614  15CD                     _EUSART1_SetOverrunErrorHandler:	
  8615                           
  8616                           ;mcc_generated_files/eusart1.c: 266:     EUSART1_OverrunErrorHandler = interruptHandler;
  8617                           
  8618                           ;incstack = 0
  8619                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  8620  15CD  0140               	movlb	0	; select bank0
  8621  15CE  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  8622  15CF  0142               	movlb	2	; select bank2
  8623  15D0  00DF               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
  8624  15D1  0140               	movlb	0	; select bank0
  8625  15D2  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  8626  15D3  0142               	movlb	2	; select bank2
  8627  15D4  00DE               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
  8628  15D5  0008               	return
  8629  15D6                     __end_of_EUSART1_SetOverrunErrorHandler:	
  8630                           
  8631                           	psect	text10
  8632  15C4                     __ptext10:	
  8633 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8634 ;; Defined at:
  8635 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8638 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;		None
  8641 ;; Return value:  Size  Location     Type
  8642 ;;                  1    wreg      void 
  8643 ;; Registers used:
  8644 ;;		wreg
  8645 ;; Tracked objects:
  8646 ;;		On entry : 0/0
  8647 ;;		On exit  : 0/0
  8648 ;;		Unchanged: 0/0
  8649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8650 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8653 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8654 ;;Total ram usage:        2 bytes
  8655 ;; Hardware stack levels used:    1
  8656 ;; Hardware stack levels required when called:    4
  8657 ;; This function calls:
  8658 ;;		Nothing
  8659 ;; This function is called by:
  8660 ;;		_EUSART1_Initialize
  8661 ;; This function uses a non-reentrant model
  8662 ;;
  8663                           
  8664                           
  8665                           ;psect for function _EUSART1_SetFramingErrorHandler
  8666  15C4                     _EUSART1_SetFramingErrorHandler:	
  8667                           
  8668                           ;mcc_generated_files/eusart1.c: 262:     EUSART1_FramingErrorHandler = interruptHandler;
  8669                           
  8670                           ;incstack = 0
  8671                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  8672  15C4  0140               	movlb	0	; select bank0
  8673  15C5  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  8674  15C6  0142               	movlb	2	; select bank2
  8675  15C7  00E1               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
  8676  15C8  0140               	movlb	0	; select bank0
  8677  15C9  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  8678  15CA  0142               	movlb	2	; select bank2
  8679  15CB  00E0               	movwf	_EUSART1_FramingErrorHandler^(0+256)
  8680  15CC  0008               	return
  8681  15CD                     __end_of_EUSART1_SetFramingErrorHandler:	
  8682                           
  8683                           	psect	text11
  8684  15BB                     __ptext11:	
  8685 ;; *************** function _EUSART1_SetErrorHandler *****************
  8686 ;; Defined at:
  8687 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8690 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  8691 ;; Auto vars:     Size  Location     Type
  8692 ;;		None
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  1    wreg      void 
  8695 ;; Registers used:
  8696 ;;		wreg
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/0
  8699 ;;		On exit  : 0/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8702 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8705 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8706 ;;Total ram usage:        2 bytes
  8707 ;; Hardware stack levels used:    1
  8708 ;; Hardware stack levels required when called:    4
  8709 ;; This function calls:
  8710 ;;		Nothing
  8711 ;; This function is called by:
  8712 ;;		_EUSART1_Initialize
  8713 ;; This function uses a non-reentrant model
  8714 ;;
  8715                           
  8716                           
  8717                           ;psect for function _EUSART1_SetErrorHandler
  8718  15BB                     _EUSART1_SetErrorHandler:	
  8719                           
  8720                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_ErrorHandler = interruptHandler;
  8721                           
  8722                           ;incstack = 0
  8723                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  8724  15BB  0140               	movlb	0	; select bank0
  8725  15BC  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  8726  15BD  0142               	movlb	2	; select bank2
  8727  15BE  00DD               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
  8728  15BF  0140               	movlb	0	; select bank0
  8729  15C0  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  8730  15C1  0142               	movlb	2	; select bank2
  8731  15C2  00DC               	movwf	_EUSART1_ErrorHandler^(0+256)
  8732  15C3  0008               	return
  8733  15C4                     __end_of_EUSART1_SetErrorHandler:	
  8734                           
  8735                           	psect	text12
  8736  17AD                     __ptext12:	
  8737 ;; *************** function _ADCC_Initialize *****************
  8738 ;; Defined at:
  8739 ;;		line 64 in file "mcc_generated_files/adcc.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;		None
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;		None
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  1    wreg      void 
  8746 ;; Registers used:
  8747 ;;		wreg, status,2, status,0, pclath, cstack
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8757 ;;Total ram usage:        0 bytes
  8758 ;; Hardware stack levels used:    1
  8759 ;; Hardware stack levels required when called:    5
  8760 ;; This function calls:
  8761 ;;		_ADCC_SetADTIInterruptHandler
  8762 ;; This function is called by:
  8763 ;;		_SYSTEM_Initialize
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           
  8768                           ;psect for function _ADCC_Initialize
  8769  17AD                     _ADCC_Initialize:	
  8770                           
  8771                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
  8772                           
  8773                           ;incstack = 0
  8774                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8775  17AD  0141               	movlb	1	; select bank1
  8776  17AE  018C               	clrf	12	;volatile
  8777                           
  8778                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
  8779  17AF  018D               	clrf	13	;volatile
  8780                           
  8781                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
  8782  17B0  018E               	clrf	14	;volatile
  8783                           
  8784                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
  8785  17B1  018F               	clrf	15	;volatile
  8786                           
  8787                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
  8788  17B2  0192               	clrf	18	;volatile
  8789                           
  8790                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
  8791  17B3  0193               	clrf	19	;volatile
  8792                           
  8793                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
  8794  17B4  0198               	clrf	24	;volatile
  8795                           
  8796                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
  8797  17B5  019A               	clrf	26	;volatile
  8798                           
  8799                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
  8800  17B6  019F               	clrf	31	;volatile
  8801                           
  8802                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
  8803  17B7  0142               	movlb	2	; select bank2
  8804  17B8  018C               	clrf	12	;volatile
  8805                           
  8806                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
  8807  17B9  018D               	clrf	13	;volatile
  8808                           
  8809                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
  8810  17BA  018E               	clrf	14	;volatile
  8811                           
  8812                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
  8813  17BB  018F               	clrf	15	;volatile
  8814                           
  8815                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
  8816  17BC  0190               	clrf	16	;volatile
  8817                           
  8818                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
  8819  17BD  0192               	clrf	18	;volatile
  8820                           
  8821                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
  8822  17BE  3054               	movlw	84
  8823  17BF  0093               	movwf	19	;volatile
  8824                           
  8825                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
  8826  17C0  3056               	movlw	86
  8827  17C1  0094               	movwf	20	;volatile
  8828                           
  8829                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
  8830  17C2  0195               	clrf	21	;volatile
  8831                           
  8832                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
  8833  17C3  0196               	clrf	22	;volatile
  8834                           
  8835                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
  8836  17C4  0197               	clrf	23	;volatile
  8837                           
  8838                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
  8839  17C5  0198               	clrf	24	;volatile
  8840                           
  8841                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
  8842  17C6  30D4               	movlw	212
  8843  17C7  0091               	movwf	17	;volatile
  8844                           
  8845                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
  8846  17C8  014E               	movlb	14	; select bank14
  8847  17C9  108D               	bcf	13,1	;volatile
  8848                           
  8849                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
  8850  17CA  1497               	bsf	23,1	;volatile
  8851                           
  8852                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  8853  17CB  3003               	movlw	low _ADCC_DefaultInterruptHandler
  8854  17CC  0140               	movlb	0	; select bank0
  8855  17CD  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
  8856  17CE  3000               	movlw	high _ADCC_DefaultInterruptHandler
  8857  17CF  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
  8858  17D0  3195  258E         	fcall	_ADCC_SetADTIInterruptHandler
  8859  17D2  0008               	return
  8860  17D3                     __end_of_ADCC_Initialize:	
  8861                           
  8862                           	psect	text13
  8863  0E9A                     __ptext13:	
  8864 ;; *************** function _LED_setColor *****************
  8865 ;; Defined at:
  8866 ;;		line 101 in file "dmx.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;  R               1    wreg     unsigned char 
  8869 ;;  G               1   77[BANK0 ] unsigned char 
  8870 ;;  B               1   78[BANK0 ] unsigned char 
  8871 ;;  W               1   79[BANK0 ] unsigned char 
  8872 ;; Auto vars:     Size  Location     Type
  8873 ;;  R               1    5[BANK1 ] unsigned char 
  8874 ;; Return value:  Size  Location     Type
  8875 ;;                  1    wreg      void 
  8876 ;; Registers used:
  8877 ;;		wreg, status,2, status,0, pclath, cstack
  8878 ;; Tracked objects:
  8879 ;;		On entry : 0/0
  8880 ;;		On exit  : 0/0
  8881 ;;		Unchanged: 0/0
  8882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8883 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8884 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8885 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8886 ;;      Totals:         0       3       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8887 ;;Total ram usage:        9 bytes
  8888 ;; Hardware stack levels used:    1
  8889 ;; Hardware stack levels required when called:    6
  8890 ;; This function calls:
  8891 ;;		___fldiv
  8892 ;;		___flmul
  8893 ;;		___fltol
  8894 ;;		___xxtofl
  8895 ;; This function is called by:
  8896 ;;		_main
  8897 ;; This function uses a non-reentrant model
  8898 ;;
  8899                           
  8900                           
  8901                           ;psect for function _LED_setColor
  8902  0E9A                     _LED_setColor:	
  8903                           
  8904                           ;incstack = 0
  8905                           ; Regs used in _LED_setColor: [wreg+status,2+status,0+pclath+cstack]
  8906                           ;LED_setColor@R stored from wreg
  8907  0E9A  0141               	movlb	1	; select bank1
  8908  0E9B  00D6               	movwf	LED_setColor@R^(0+128)
  8909                           
  8910                           ;dmx.c: 103:     R = ((float)R/2048)*(4000000/(122 * 32));
  8911  0E9C  0856               	movf	LED_setColor@R^(0+128),w
  8912  0E9D  00D1               	movwf	??_LED_setColor^(0+128)
  8913  0E9E  01D2               	clrf	(??_LED_setColor^(0+128)+1)
  8914  0E9F  01D3               	clrf	(??_LED_setColor^(0+128)+2)
  8915  0EA0  01D4               	clrf	(??_LED_setColor^(0+128)+3)
  8916  0EA1  0854               	movf	(??_LED_setColor+3)^(0+128),w
  8917  0EA2  0140               	movlb	0	; select bank0
  8918  0EA3  00A3               	movwf	___xxtofl@val+3
  8919  0EA4  0141               	movlb	1	; select bank1
  8920  0EA5  0853               	movf	(??_LED_setColor+2)^(0+128),w
  8921  0EA6  0140               	movlb	0	; select bank0
  8922  0EA7  00A2               	movwf	___xxtofl@val+2
  8923  0EA8  0141               	movlb	1	; select bank1
  8924  0EA9  0852               	movf	(??_LED_setColor+1)^(0+128),w
  8925  0EAA  0140               	movlb	0	; select bank0
  8926  0EAB  00A1               	movwf	___xxtofl@val+1
  8927  0EAC  0141               	movlb	1	; select bank1
  8928  0EAD  0851               	movf	??_LED_setColor^(0+128),w
  8929  0EAE  0140               	movlb	0	; select bank0
  8930  0EAF  00A0               	movwf	___xxtofl@val
  8931  0EB0  3000               	movlw	0
  8932  0EB1  318B  2323  318E   	fcall	___xxtofl
  8933  0EB4  0140               	movlb	0	; select bank0
  8934  0EB5  0823               	movf	?___xxtofl+3,w
  8935  0EB6  00B5               	movwf	___fldiv@b+3
  8936  0EB7  0822               	movf	?___xxtofl+2,w
  8937  0EB8  00B4               	movwf	___fldiv@b+2
  8938  0EB9  0821               	movf	?___xxtofl+1,w
  8939  0EBA  00B3               	movwf	___fldiv@b+1
  8940  0EBB  0820               	movf	?___xxtofl,w
  8941  0EBC  00B2               	movwf	___fldiv@b
  8942  0EBD  3045               	movlw	69
  8943  0EBE  00B1               	movwf	___fldiv@a+3
  8944  0EBF  3000               	movlw	0
  8945  0EC0  00B0               	movwf	___fldiv@a+2
  8946  0EC1  3000               	movlw	0
  8947  0EC2  00AF               	movwf	___fldiv@a+1
  8948  0EC3  3000               	movlw	0
  8949  0EC4  00AE               	movwf	___fldiv@a
  8950  0EC5  3185  2570  318E   	fcall	___fldiv
  8951  0EC8  0140               	movlb	0	; select bank0
  8952  0EC9  0831               	movf	?___fldiv+3,w
  8953  0ECA  00CF               	movwf	___flmul@a+3
  8954  0ECB  0830               	movf	?___fldiv+2,w
  8955  0ECC  00CE               	movwf	___flmul@a+2
  8956  0ECD  082F               	movf	?___fldiv+1,w
  8957  0ECE  00CD               	movwf	___flmul@a+1
  8958  0ECF  082E               	movf	?___fldiv,w
  8959  0ED0  00CC               	movwf	___flmul@a
  8960  0ED1  3044               	movlw	68
  8961  0ED2  00CB               	movwf	___flmul@b+3
  8962  0ED3  3080               	movlw	128
  8963  0ED4  00CA               	movwf	___flmul@b+2
  8964  0ED5  3000               	movlw	0
  8965  0ED6  00C9               	movwf	___flmul@b+1
  8966  0ED7  3000               	movlw	0
  8967  0ED8  00C8               	movwf	___flmul@b
  8968  0ED9  3183  2344  318E   	fcall	___flmul
  8969  0EDC  0140               	movlb	0	; select bank0
  8970  0EDD  084B               	movf	?___flmul+3,w
  8971  0EDE  00E5               	movwf	___fltol@f1+3
  8972  0EDF  084A               	movf	?___flmul+2,w
  8973  0EE0  00E4               	movwf	___fltol@f1+2
  8974  0EE1  0849               	movf	?___flmul+1,w
  8975  0EE2  00E3               	movwf	___fltol@f1+1
  8976  0EE3  0848               	movf	?___flmul,w
  8977  0EE4  00E2               	movwf	___fltol@f1
  8978  0EE5  318A  22BD  318E   	fcall	___fltol
  8979  0EE8  0140               	movlb	0	; select bank0
  8980  0EE9  0862               	movf	?___fltol,w
  8981  0EEA  0141               	movlb	1	; select bank1
  8982  0EEB  00D5               	movwf	(??_LED_setColor+4)^(0+128)
  8983  0EEC  0855               	movf	(??_LED_setColor+4)^(0+128),w
  8984  0EED  00D6               	movwf	LED_setColor@R^(0+128)
  8985                           
  8986                           ;dmx.c: 104:     G = ((float)G/2048)*(4000000/(122 * 32));
  8987  0EEE  0140               	movlb	0	; select bank0
  8988  0EEF  086D               	movf	LED_setColor@G,w
  8989  0EF0  0141               	movlb	1	; select bank1
  8990  0EF1  00D1               	movwf	??_LED_setColor^(0+128)
  8991  0EF2  01D2               	clrf	(??_LED_setColor^(0+128)+1)
  8992  0EF3  01D3               	clrf	(??_LED_setColor^(0+128)+2)
  8993  0EF4  01D4               	clrf	(??_LED_setColor^(0+128)+3)
  8994  0EF5  0854               	movf	(??_LED_setColor+3)^(0+128),w
  8995  0EF6  0140               	movlb	0	; select bank0
  8996  0EF7  00A3               	movwf	___xxtofl@val+3
  8997  0EF8  0141               	movlb	1	; select bank1
  8998  0EF9  0853               	movf	(??_LED_setColor+2)^(0+128),w
  8999  0EFA  0140               	movlb	0	; select bank0
  9000  0EFB  00A2               	movwf	___xxtofl@val+2
  9001  0EFC  0141               	movlb	1	; select bank1
  9002  0EFD  0852               	movf	(??_LED_setColor+1)^(0+128),w
  9003  0EFE  0140               	movlb	0	; select bank0
  9004  0EFF  00A1               	movwf	___xxtofl@val+1
  9005  0F00  0141               	movlb	1	; select bank1
  9006  0F01  0851               	movf	??_LED_setColor^(0+128),w
  9007  0F02  0140               	movlb	0	; select bank0
  9008  0F03  00A0               	movwf	___xxtofl@val
  9009  0F04  3000               	movlw	0
  9010  0F05  318B  2323  318E   	fcall	___xxtofl
  9011  0F08  0140               	movlb	0	; select bank0
  9012  0F09  0823               	movf	?___xxtofl+3,w
  9013  0F0A  00B5               	movwf	___fldiv@b+3
  9014  0F0B  0822               	movf	?___xxtofl+2,w
  9015  0F0C  00B4               	movwf	___fldiv@b+2
  9016  0F0D  0821               	movf	?___xxtofl+1,w
  9017  0F0E  00B3               	movwf	___fldiv@b+1
  9018  0F0F  0820               	movf	?___xxtofl,w
  9019  0F10  00B2               	movwf	___fldiv@b
  9020  0F11  3045               	movlw	69
  9021  0F12  00B1               	movwf	___fldiv@a+3
  9022  0F13  3000               	movlw	0
  9023  0F14  00B0               	movwf	___fldiv@a+2
  9024  0F15  3000               	movlw	0
  9025  0F16  00AF               	movwf	___fldiv@a+1
  9026  0F17  3000               	movlw	0
  9027  0F18  00AE               	movwf	___fldiv@a
  9028  0F19  3185  2570  318E   	fcall	___fldiv
  9029  0F1C  0140               	movlb	0	; select bank0
  9030  0F1D  0831               	movf	?___fldiv+3,w
  9031  0F1E  00CF               	movwf	___flmul@a+3
  9032  0F1F  0830               	movf	?___fldiv+2,w
  9033  0F20  00CE               	movwf	___flmul@a+2
  9034  0F21  082F               	movf	?___fldiv+1,w
  9035  0F22  00CD               	movwf	___flmul@a+1
  9036  0F23  082E               	movf	?___fldiv,w
  9037  0F24  00CC               	movwf	___flmul@a
  9038  0F25  3044               	movlw	68
  9039  0F26  00CB               	movwf	___flmul@b+3
  9040  0F27  3080               	movlw	128
  9041  0F28  00CA               	movwf	___flmul@b+2
  9042  0F29  3000               	movlw	0
  9043  0F2A  00C9               	movwf	___flmul@b+1
  9044  0F2B  3000               	movlw	0
  9045  0F2C  00C8               	movwf	___flmul@b
  9046  0F2D  3183  2344  318E   	fcall	___flmul
  9047  0F30  0140               	movlb	0	; select bank0
  9048  0F31  084B               	movf	?___flmul+3,w
  9049  0F32  00E5               	movwf	___fltol@f1+3
  9050  0F33  084A               	movf	?___flmul+2,w
  9051  0F34  00E4               	movwf	___fltol@f1+2
  9052  0F35  0849               	movf	?___flmul+1,w
  9053  0F36  00E3               	movwf	___fltol@f1+1
  9054  0F37  0848               	movf	?___flmul,w
  9055  0F38  00E2               	movwf	___fltol@f1
  9056  0F39  318A  22BD  318E   	fcall	___fltol
  9057  0F3C  0140               	movlb	0	; select bank0
  9058  0F3D  0862               	movf	?___fltol,w
  9059  0F3E  0141               	movlb	1	; select bank1
  9060  0F3F  00D5               	movwf	(??_LED_setColor+4)^(0+128)
  9061  0F40  0855               	movf	(??_LED_setColor+4)^(0+128),w
  9062  0F41  0140               	movlb	0	; select bank0
  9063  0F42  00ED               	movwf	LED_setColor@G
  9064                           
  9065                           ;dmx.c: 105:     B = ((float)B/2048)*(4000000/(122 * 32));
  9066  0F43  086E               	movf	LED_setColor@B,w
  9067  0F44  0141               	movlb	1	; select bank1
  9068  0F45  00D1               	movwf	??_LED_setColor^(0+128)
  9069  0F46  01D2               	clrf	(??_LED_setColor^(0+128)+1)
  9070  0F47  01D3               	clrf	(??_LED_setColor^(0+128)+2)
  9071  0F48  01D4               	clrf	(??_LED_setColor^(0+128)+3)
  9072  0F49  0854               	movf	(??_LED_setColor+3)^(0+128),w
  9073  0F4A  0140               	movlb	0	; select bank0
  9074  0F4B  00A3               	movwf	___xxtofl@val+3
  9075  0F4C  0141               	movlb	1	; select bank1
  9076  0F4D  0853               	movf	(??_LED_setColor+2)^(0+128),w
  9077  0F4E  0140               	movlb	0	; select bank0
  9078  0F4F  00A2               	movwf	___xxtofl@val+2
  9079  0F50  0141               	movlb	1	; select bank1
  9080  0F51  0852               	movf	(??_LED_setColor+1)^(0+128),w
  9081  0F52  0140               	movlb	0	; select bank0
  9082  0F53  00A1               	movwf	___xxtofl@val+1
  9083  0F54  0141               	movlb	1	; select bank1
  9084  0F55  0851               	movf	??_LED_setColor^(0+128),w
  9085  0F56  0140               	movlb	0	; select bank0
  9086  0F57  00A0               	movwf	___xxtofl@val
  9087  0F58  3000               	movlw	0
  9088  0F59  318B  2323  318E   	fcall	___xxtofl
  9089  0F5C  0140               	movlb	0	; select bank0
  9090  0F5D  0823               	movf	?___xxtofl+3,w
  9091  0F5E  00B5               	movwf	___fldiv@b+3
  9092  0F5F  0822               	movf	?___xxtofl+2,w
  9093  0F60  00B4               	movwf	___fldiv@b+2
  9094  0F61  0821               	movf	?___xxtofl+1,w
  9095  0F62  00B3               	movwf	___fldiv@b+1
  9096  0F63  0820               	movf	?___xxtofl,w
  9097  0F64  00B2               	movwf	___fldiv@b
  9098  0F65  3045               	movlw	69
  9099  0F66  00B1               	movwf	___fldiv@a+3
  9100  0F67  3000               	movlw	0
  9101  0F68  00B0               	movwf	___fldiv@a+2
  9102  0F69  3000               	movlw	0
  9103  0F6A  00AF               	movwf	___fldiv@a+1
  9104  0F6B  3000               	movlw	0
  9105  0F6C  00AE               	movwf	___fldiv@a
  9106  0F6D  3185  2570  318E   	fcall	___fldiv
  9107  0F70  0140               	movlb	0	; select bank0
  9108  0F71  0831               	movf	?___fldiv+3,w
  9109  0F72  00CF               	movwf	___flmul@a+3
  9110  0F73  0830               	movf	?___fldiv+2,w
  9111  0F74  00CE               	movwf	___flmul@a+2
  9112  0F75  082F               	movf	?___fldiv+1,w
  9113  0F76  00CD               	movwf	___flmul@a+1
  9114  0F77  082E               	movf	?___fldiv,w
  9115  0F78  00CC               	movwf	___flmul@a
  9116  0F79  3044               	movlw	68
  9117  0F7A  00CB               	movwf	___flmul@b+3
  9118  0F7B  3080               	movlw	128
  9119  0F7C  00CA               	movwf	___flmul@b+2
  9120  0F7D  3000               	movlw	0
  9121  0F7E  00C9               	movwf	___flmul@b+1
  9122  0F7F  3000               	movlw	0
  9123  0F80  00C8               	movwf	___flmul@b
  9124  0F81  3183  2344  318E   	fcall	___flmul
  9125  0F84  0140               	movlb	0	; select bank0
  9126  0F85  084B               	movf	?___flmul+3,w
  9127  0F86  00E5               	movwf	___fltol@f1+3
  9128  0F87  084A               	movf	?___flmul+2,w
  9129  0F88  00E4               	movwf	___fltol@f1+2
  9130  0F89  0849               	movf	?___flmul+1,w
  9131  0F8A  00E3               	movwf	___fltol@f1+1
  9132  0F8B  0848               	movf	?___flmul,w
  9133  0F8C  00E2               	movwf	___fltol@f1
  9134  0F8D  318A  22BD  318E   	fcall	___fltol
  9135  0F90  0140               	movlb	0	; select bank0
  9136  0F91  0862               	movf	?___fltol,w
  9137  0F92  0141               	movlb	1	; select bank1
  9138  0F93  00D5               	movwf	(??_LED_setColor+4)^(0+128)
  9139  0F94  0855               	movf	(??_LED_setColor+4)^(0+128),w
  9140  0F95  0140               	movlb	0	; select bank0
  9141  0F96  00EE               	movwf	LED_setColor@B
  9142                           
  9143                           ;dmx.c: 106:     W = ((float)W/2048)*(4000000/(122 * 32));
  9144  0F97  086F               	movf	LED_setColor@W,w
  9145  0F98  0141               	movlb	1	; select bank1
  9146  0F99  00D1               	movwf	??_LED_setColor^(0+128)
  9147  0F9A  01D2               	clrf	(??_LED_setColor^(0+128)+1)
  9148  0F9B  01D3               	clrf	(??_LED_setColor^(0+128)+2)
  9149  0F9C  01D4               	clrf	(??_LED_setColor^(0+128)+3)
  9150  0F9D  0854               	movf	(??_LED_setColor+3)^(0+128),w
  9151  0F9E  0140               	movlb	0	; select bank0
  9152  0F9F  00A3               	movwf	___xxtofl@val+3
  9153  0FA0  0141               	movlb	1	; select bank1
  9154  0FA1  0853               	movf	(??_LED_setColor+2)^(0+128),w
  9155  0FA2  0140               	movlb	0	; select bank0
  9156  0FA3  00A2               	movwf	___xxtofl@val+2
  9157  0FA4  0141               	movlb	1	; select bank1
  9158  0FA5  0852               	movf	(??_LED_setColor+1)^(0+128),w
  9159  0FA6  0140               	movlb	0	; select bank0
  9160  0FA7  00A1               	movwf	___xxtofl@val+1
  9161  0FA8  0141               	movlb	1	; select bank1
  9162  0FA9  0851               	movf	??_LED_setColor^(0+128),w
  9163  0FAA  0140               	movlb	0	; select bank0
  9164  0FAB  00A0               	movwf	___xxtofl@val
  9165  0FAC  3000               	movlw	0
  9166  0FAD  318B  2323  318E   	fcall	___xxtofl
  9167  0FB0  0140               	movlb	0	; select bank0
  9168  0FB1  0823               	movf	?___xxtofl+3,w
  9169  0FB2  00B5               	movwf	___fldiv@b+3
  9170  0FB3  0822               	movf	?___xxtofl+2,w
  9171  0FB4  00B4               	movwf	___fldiv@b+2
  9172  0FB5  0821               	movf	?___xxtofl+1,w
  9173  0FB6  00B3               	movwf	___fldiv@b+1
  9174  0FB7  0820               	movf	?___xxtofl,w
  9175  0FB8  00B2               	movwf	___fldiv@b
  9176  0FB9  3045               	movlw	69
  9177  0FBA  00B1               	movwf	___fldiv@a+3
  9178  0FBB  3000               	movlw	0
  9179  0FBC  00B0               	movwf	___fldiv@a+2
  9180  0FBD  3000               	movlw	0
  9181  0FBE  00AF               	movwf	___fldiv@a+1
  9182  0FBF  3000               	movlw	0
  9183  0FC0  00AE               	movwf	___fldiv@a
  9184  0FC1  3185  2570  318E   	fcall	___fldiv
  9185  0FC4  0140               	movlb	0	; select bank0
  9186  0FC5  0831               	movf	?___fldiv+3,w
  9187  0FC6  00CF               	movwf	___flmul@a+3
  9188  0FC7  0830               	movf	?___fldiv+2,w
  9189  0FC8  00CE               	movwf	___flmul@a+2
  9190  0FC9  082F               	movf	?___fldiv+1,w
  9191  0FCA  00CD               	movwf	___flmul@a+1
  9192  0FCB  082E               	movf	?___fldiv,w
  9193  0FCC  00CC               	movwf	___flmul@a
  9194  0FCD  3044               	movlw	68
  9195  0FCE  00CB               	movwf	___flmul@b+3
  9196  0FCF  3080               	movlw	128
  9197  0FD0  00CA               	movwf	___flmul@b+2
  9198  0FD1  3000               	movlw	0
  9199  0FD2  00C9               	movwf	___flmul@b+1
  9200  0FD3  3000               	movlw	0
  9201  0FD4  00C8               	movwf	___flmul@b
  9202  0FD5  3183  2344  318E   	fcall	___flmul
  9203  0FD8  0140               	movlb	0	; select bank0
  9204  0FD9  084B               	movf	?___flmul+3,w
  9205  0FDA  00E5               	movwf	___fltol@f1+3
  9206  0FDB  084A               	movf	?___flmul+2,w
  9207  0FDC  00E4               	movwf	___fltol@f1+2
  9208  0FDD  0849               	movf	?___flmul+1,w
  9209  0FDE  00E3               	movwf	___fltol@f1+1
  9210  0FDF  0848               	movf	?___flmul,w
  9211  0FE0  00E2               	movwf	___fltol@f1
  9212  0FE1  318A  22BD         	fcall	___fltol
  9213  0FE3  0140               	movlb	0	; select bank0
  9214  0FE4  0862               	movf	?___fltol,w
  9215  0FE5  0141               	movlb	1	; select bank1
  9216  0FE6  00D5               	movwf	(??_LED_setColor+4)^(0+128)
  9217  0FE7  0855               	movf	(??_LED_setColor+4)^(0+128),w
  9218  0FE8  0140               	movlb	0	; select bank0
  9219  0FE9  00EF               	movwf	LED_setColor@W
  9220                           
  9221                           ;dmx.c: 107:     CCPR1H = R >> 8;
  9222  0FEA  0146               	movlb	6	; select bank6
  9223  0FEB  018D               	clrf	13	;volatile
  9224                           
  9225                           ;dmx.c: 108:     CCPR1L = R;
  9226  0FEC  0141               	movlb	1	; select bank1
  9227  0FED  0856               	movf	LED_setColor@R^(0+128),w
  9228  0FEE  0146               	movlb	6	; select bank6
  9229  0FEF  008C               	movwf	12	;volatile
  9230                           
  9231                           ;dmx.c: 109:     CCPR2H = G >> 8;
  9232  0FF0  0191               	clrf	17	;volatile
  9233                           
  9234                           ;dmx.c: 110:     CCPR2L = G;
  9235  0FF1  0140               	movlb	0	; select bank0
  9236  0FF2  086D               	movf	LED_setColor@G,w
  9237  0FF3  0146               	movlb	6	; select bank6
  9238  0FF4  0090               	movwf	16	;volatile
  9239                           
  9240                           ;dmx.c: 111:     CCPR3H = B >> 8;
  9241  0FF5  0195               	clrf	21	;volatile
  9242                           
  9243                           ;dmx.c: 112:     CCPR3L = B;
  9244  0FF6  0140               	movlb	0	; select bank0
  9245  0FF7  086E               	movf	LED_setColor@B,w
  9246  0FF8  0146               	movlb	6	; select bank6
  9247  0FF9  0094               	movwf	20	;volatile
  9248                           
  9249                           ;dmx.c: 113:     CCPR4H = W >> 8;
  9250  0FFA  0199               	clrf	25	;volatile
  9251                           
  9252                           ;dmx.c: 114:     CCPR4L = W;
  9253  0FFB  0140               	movlb	0	; select bank0
  9254  0FFC  086F               	movf	LED_setColor@W,w
  9255  0FFD  0146               	movlb	6	; select bank6
  9256  0FFE  0098               	movwf	24	;volatile
  9257  0FFF  0008               	return
  9258  1000                     __end_of_LED_setColor:	
  9259                           
  9260                           	psect	text14
  9261  0B23                     __ptext14:	
  9262 ;; *************** function ___xxtofl *****************
  9263 ;; Defined at:
  9264 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;  sign            1    wreg     unsigned char 
  9267 ;;  val             4    0[BANK0 ] long 
  9268 ;; Auto vars:     Size  Location     Type
  9269 ;;  sign            1    8[BANK0 ] unsigned char 
  9270 ;;  arg             4   10[BANK0 ] unsigned long 
  9271 ;;  exp             1    9[BANK0 ] unsigned char 
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  4    0[BANK0 ] unsigned char 
  9274 ;; Registers used:
  9275 ;;		wreg, status,2, status,0
  9276 ;; Tracked objects:
  9277 ;;		On entry : 0/0
  9278 ;;		On exit  : 0/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9281 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9282 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9283 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9284 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9285 ;;Total ram usage:       14 bytes
  9286 ;; Hardware stack levels used:    1
  9287 ;; Hardware stack levels required when called:    4
  9288 ;; This function calls:
  9289 ;;		Nothing
  9290 ;; This function is called by:
  9291 ;;		_LED_setColor
  9292 ;;		_LED_setBrightness
  9293 ;; This function uses a non-reentrant model
  9294 ;;
  9295                           
  9296                           
  9297                           ;psect for function ___xxtofl
  9298  0B23                     ___xxtofl:	
  9299                           
  9300                           ;incstack = 0
  9301                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9302                           ;___xxtofl@sign stored from wreg
  9303  0B23  0140               	movlb	0	; select bank0
  9304  0B24  00A8               	movwf	___xxtofl@sign
  9305  0B25  0828               	movf	___xxtofl@sign,w
  9306  0B26  1D03               	btfss	3,2
  9307  0B27  1FA3               	btfss	___xxtofl@val+3,7
  9308  0B28  2B39               	goto	l3927
  9309  0B29  0920               	comf	___xxtofl@val,w
  9310  0B2A  00AA               	movwf	___xxtofl@arg
  9311  0B2B  0921               	comf	___xxtofl@val+1,w
  9312  0B2C  00AB               	movwf	___xxtofl@arg+1
  9313  0B2D  0922               	comf	___xxtofl@val+2,w
  9314  0B2E  00AC               	movwf	___xxtofl@arg+2
  9315  0B2F  0923               	comf	___xxtofl@val+3,w
  9316  0B30  00AD               	movwf	___xxtofl@arg+3
  9317  0B31  0AAA               	incf	___xxtofl@arg,f
  9318  0B32  1903               	skipnz
  9319  0B33  0AAB               	incf	___xxtofl@arg+1,f
  9320  0B34  1903               	skipnz
  9321  0B35  0AAC               	incf	___xxtofl@arg+2,f
  9322  0B36  1903               	skipnz
  9323  0B37  0AAD               	incf	___xxtofl@arg+3,f
  9324  0B38  2B41               	goto	l1626
  9325  0B39                     l3927:	
  9326  0B39  0823               	movf	___xxtofl@val+3,w
  9327  0B3A  00AD               	movwf	___xxtofl@arg+3
  9328  0B3B  0822               	movf	___xxtofl@val+2,w
  9329  0B3C  00AC               	movwf	___xxtofl@arg+2
  9330  0B3D  0821               	movf	___xxtofl@val+1,w
  9331  0B3E  00AB               	movwf	___xxtofl@arg+1
  9332  0B3F  0820               	movf	___xxtofl@val,w
  9333  0B40  00AA               	movwf	___xxtofl@arg
  9334  0B41                     l1626:	
  9335  0B41  0823               	movf	___xxtofl@val+3,w
  9336  0B42  0422               	iorwf	___xxtofl@val+2,w
  9337  0B43  0421               	iorwf	___xxtofl@val+1,w
  9338  0B44  0420               	iorwf	___xxtofl@val,w
  9339  0B45  1D03               	skipz
  9340  0B46  2B50               	goto	l3933
  9341  0B47  3000               	movlw	0
  9342  0B48  00A3               	movwf	?___xxtofl+3
  9343  0B49  3000               	movlw	0
  9344  0B4A  00A2               	movwf	?___xxtofl+2
  9345  0B4B  3000               	movlw	0
  9346  0B4C  00A1               	movwf	?___xxtofl+1
  9347  0B4D  3000               	movlw	0
  9348  0B4E  00A0               	movwf	?___xxtofl
  9349  0B4F  0008               	return
  9350  0B50                     l3933:	
  9351  0B50  3096               	movlw	150
  9352  0B51  00A4               	movwf	??___xxtofl
  9353  0B52  0824               	movf	??___xxtofl,w
  9354  0B53  00A9               	movwf	___xxtofl@exp
  9355  0B54                     l3937:	
  9356  0B54  30FE               	movlw	254
  9357  0B55  052D               	andwf	___xxtofl@arg+3,w
  9358  0B56  1903               	btfsc	3,2
  9359  0B57  2B77               	goto	l1632
  9360  0B58  3001               	movlw	1
  9361  0B59  00A4               	movwf	??___xxtofl
  9362  0B5A  0824               	movf	??___xxtofl,w
  9363  0B5B  07A9               	addwf	___xxtofl@exp,f
  9364  0B5C  3001               	movlw	1
  9365  0B5D                     u3045:	
  9366  0B5D  36AD               	lsrf	___xxtofl@arg+3,f
  9367  0B5E  0CAC               	rrf	___xxtofl@arg+2,f
  9368  0B5F  0CAB               	rrf	___xxtofl@arg+1,f
  9369  0B60  0CAA               	rrf	___xxtofl@arg,f
  9370  0B61  0B89               	decfsz	9,f
  9371  0B62  2B5D               	goto	u3045
  9372  0B63  2B54               	goto	l3937
  9373  0B64                     l3939:	
  9374  0B64  3001               	movlw	1
  9375  0B65  00A4               	movwf	??___xxtofl
  9376  0B66  0824               	movf	??___xxtofl,w
  9377  0B67  07A9               	addwf	___xxtofl@exp,f
  9378  0B68  3001               	movlw	1
  9379  0B69  07AA               	addwf	___xxtofl@arg,f
  9380  0B6A  3000               	movlw	0
  9381  0B6B  3DAB               	addwfc	___xxtofl@arg+1,f
  9382  0B6C  3000               	movlw	0
  9383  0B6D  3DAC               	addwfc	___xxtofl@arg+2,f
  9384  0B6E  3000               	movlw	0
  9385  0B6F  3DAD               	addwfc	___xxtofl@arg+3,f
  9386  0B70  3001               	movlw	1
  9387  0B71                     u3065:	
  9388  0B71  36AD               	lsrf	___xxtofl@arg+3,f
  9389  0B72  0CAC               	rrf	___xxtofl@arg+2,f
  9390  0B73  0CAB               	rrf	___xxtofl@arg+1,f
  9391  0B74  0CAA               	rrf	___xxtofl@arg,f
  9392  0B75  0B89               	decfsz	9,f
  9393  0B76  2B71               	goto	u3065
  9394  0B77                     l1632:	
  9395  0B77  30FF               	movlw	255
  9396  0B78  052D               	andwf	___xxtofl@arg+3,w
  9397  0B79  1903               	btfsc	3,2
  9398  0B7A  2B89               	goto	l3947
  9399  0B7B  2B64               	goto	l3939
  9400  0B7C                     l3949:	
  9401  0B7C  3002               	movlw	2
  9402  0B7D  0229               	subwf	___xxtofl@exp,w
  9403  0B7E  1C03               	btfss	3,0
  9404  0B7F  2B8B               	goto	l1639
  9405  0B80  3001               	movlw	1
  9406  0B81  02A9               	subwf	___xxtofl@exp,f
  9407  0B82  3001               	movlw	1
  9408  0B83                     u3085:	
  9409  0B83  35AA               	lslf	___xxtofl@arg,f
  9410  0B84  0DAB               	rlf	___xxtofl@arg+1,f
  9411  0B85  0DAC               	rlf	___xxtofl@arg+2,f
  9412  0B86  0DAD               	rlf	___xxtofl@arg+3,f
  9413  0B87  0B89               	decfsz	9,f
  9414  0B88  2B83               	goto	u3085
  9415  0B89                     l3947:	
  9416  0B89  1FAC               	btfss	___xxtofl@arg+2,7
  9417  0B8A  2B7C               	goto	l3949
  9418  0B8B                     l1639:	
  9419  0B8B  1829               	btfsc	___xxtofl@exp,0
  9420  0B8C  2B95               	goto	l1640
  9421  0B8D  30FF               	movlw	255
  9422  0B8E  05AA               	andwf	___xxtofl@arg,f
  9423  0B8F  30FF               	movlw	255
  9424  0B90  05AB               	andwf	___xxtofl@arg+1,f
  9425  0B91  307F               	movlw	127
  9426  0B92  05AC               	andwf	___xxtofl@arg+2,f
  9427  0B93  30FF               	movlw	255
  9428  0B94  05AD               	andwf	___xxtofl@arg+3,f
  9429  0B95                     l1640:	
  9430  0B95  1003               	clrc
  9431  0B96  0CA9               	rrf	___xxtofl@exp,f
  9432  0B97  0829               	movf	___xxtofl@exp,w
  9433  0B98  00A4               	movwf	??___xxtofl
  9434  0B99  01A5               	clrf	??___xxtofl+1
  9435  0B9A  01A6               	clrf	??___xxtofl+2
  9436  0B9B  01A7               	clrf	??___xxtofl+3
  9437  0B9C  3018               	movlw	24
  9438  0B9D                     u3125:	
  9439  0B9D  35A4               	lslf	??___xxtofl,f
  9440  0B9E  0DA5               	rlf	??___xxtofl+1,f
  9441  0B9F  0DA6               	rlf	??___xxtofl+2,f
  9442  0BA0  0DA7               	rlf	??___xxtofl+3,f
  9443  0BA1  0B89               	decfsz	9,f
  9444  0BA2  2B9D               	goto	u3125
  9445  0BA3  0824               	movf	??___xxtofl,w
  9446  0BA4  04AA               	iorwf	___xxtofl@arg,f
  9447  0BA5  0825               	movf	??___xxtofl+1,w
  9448  0BA6  04AB               	iorwf	___xxtofl@arg+1,f
  9449  0BA7  0826               	movf	??___xxtofl+2,w
  9450  0BA8  04AC               	iorwf	___xxtofl@arg+2,f
  9451  0BA9  0827               	movf	??___xxtofl+3,w
  9452  0BAA  04AD               	iorwf	___xxtofl@arg+3,f
  9453  0BAB  0828               	movf	___xxtofl@sign,w
  9454  0BAC  1D03               	btfss	3,2
  9455  0BAD  1FA3               	btfss	___xxtofl@val+3,7
  9456  0BAE  2BB0               	goto	l3961
  9457  0BAF  17AD               	bsf	___xxtofl@arg+3,7
  9458  0BB0                     l3961:	
  9459  0BB0  082D               	movf	___xxtofl@arg+3,w
  9460  0BB1  00A3               	movwf	?___xxtofl+3
  9461  0BB2  082C               	movf	___xxtofl@arg+2,w
  9462  0BB3  00A2               	movwf	?___xxtofl+2
  9463  0BB4  082B               	movf	___xxtofl@arg+1,w
  9464  0BB5  00A1               	movwf	?___xxtofl+1
  9465  0BB6  082A               	movf	___xxtofl@arg,w
  9466  0BB7  00A0               	movwf	?___xxtofl
  9467  0BB8  0008               	return
  9468  0BB9                     __end_of___xxtofl:	
  9469                           
  9470                           	psect	text15
  9471  0ABD                     __ptext15:	
  9472 ;; *************** function ___fltol *****************
  9473 ;; Defined at:
  9474 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  9475 ;; Parameters:    Size  Location     Type
  9476 ;;  f1              4   66[BANK0 ] unsigned char 
  9477 ;; Auto vars:     Size  Location     Type
  9478 ;;  exp1            1   76[BANK0 ] unsigned char 
  9479 ;;  sign1           1   75[BANK0 ] unsigned char 
  9480 ;; Return value:  Size  Location     Type
  9481 ;;                  4   66[BANK0 ] long 
  9482 ;; Registers used:
  9483 ;;		wreg, status,2, status,0
  9484 ;; Tracked objects:
  9485 ;;		On entry : 0/0
  9486 ;;		On exit  : 0/0
  9487 ;;		Unchanged: 0/0
  9488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9489 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9490 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9491 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9492 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9493 ;;Total ram usage:       11 bytes
  9494 ;; Hardware stack levels used:    1
  9495 ;; Hardware stack levels required when called:    4
  9496 ;; This function calls:
  9497 ;;		Nothing
  9498 ;; This function is called by:
  9499 ;;		_LED_setColor
  9500 ;;		_LED_setBrightness
  9501 ;; This function uses a non-reentrant model
  9502 ;;
  9503                           
  9504                           
  9505                           ;psect for function ___fltol
  9506  0ABD                     ___fltol:	
  9507                           
  9508                           ;incstack = 0
  9509                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  9510  0ABD  1003               	clrc
  9511  0ABE  0140               	movlb	0	; select bank0
  9512  0ABF  0D64               	rlf	___fltol@f1+2,w
  9513  0AC0  0D65               	rlf	___fltol@f1+3,w
  9514  0AC1  00E6               	movwf	??___fltol
  9515  0AC2  0866               	movf	??___fltol,w
  9516  0AC3  00EC               	movwf	___fltol@exp1
  9517  0AC4  086C               	movf	___fltol@exp1,w
  9518  0AC5  1D03               	btfss	3,2
  9519  0AC6  2AD0               	goto	l3611
  9520  0AC7                     l3607:	
  9521  0AC7  3000               	movlw	0
  9522  0AC8  00E5               	movwf	?___fltol+3
  9523  0AC9  3000               	movlw	0
  9524  0ACA  00E4               	movwf	?___fltol+2
  9525  0ACB  3000               	movlw	0
  9526  0ACC  00E3               	movwf	?___fltol+1
  9527  0ACD  3000               	movlw	0
  9528  0ACE  00E2               	movwf	?___fltol
  9529  0ACF  0008               	return
  9530  0AD0                     l3611:	
  9531  0AD0  0862               	movf	___fltol@f1,w
  9532  0AD1  00E6               	movwf	??___fltol
  9533  0AD2  0863               	movf	___fltol@f1+1,w
  9534  0AD3  00E7               	movwf	??___fltol+1
  9535  0AD4  0864               	movf	___fltol@f1+2,w
  9536  0AD5  00E8               	movwf	??___fltol+2
  9537  0AD6  0865               	movf	___fltol@f1+3,w
  9538  0AD7  00E9               	movwf	??___fltol+3
  9539  0AD8  301F               	movlw	31
  9540  0AD9                     u2375:	
  9541  0AD9  36E9               	lsrf	??___fltol+3,f
  9542  0ADA  0CE8               	rrf	??___fltol+2,f
  9543  0ADB  0CE7               	rrf	??___fltol+1,f
  9544  0ADC  0CE6               	rrf	??___fltol,f
  9545  0ADD  0B89               	decfsz	9,f
  9546  0ADE  2AD9               	goto	u2375
  9547  0ADF  0866               	movf	??___fltol,w
  9548  0AE0  00EA               	movwf	??___fltol+4
  9549  0AE1  086A               	movf	??___fltol+4,w
  9550  0AE2  00EB               	movwf	___fltol@sign1
  9551  0AE3  17E4               	bsf	___fltol@f1+2,7
  9552  0AE4  30FF               	movlw	255
  9553  0AE5  05E2               	andwf	___fltol@f1,f
  9554  0AE6  30FF               	movlw	255
  9555  0AE7  05E3               	andwf	___fltol@f1+1,f
  9556  0AE8  30FF               	movlw	255
  9557  0AE9  05E4               	andwf	___fltol@f1+2,f
  9558  0AEA  3000               	movlw	0
  9559  0AEB  05E5               	andwf	___fltol@f1+3,f
  9560  0AEC  3096               	movlw	150
  9561  0AED  02EC               	subwf	___fltol@exp1,f
  9562  0AEE  1FEC               	btfss	___fltol@exp1,7
  9563  0AEF  2B03               	goto	l3629
  9564  0AF0  086C               	movf	___fltol@exp1,w
  9565  0AF1  3A80               	xorlw	128
  9566  0AF2  3E97               	addlw	151
  9567  0AF3  1C03               	btfss	3,0
  9568  0AF4  2AC7               	goto	l3607
  9569  0AF5                     l3627:	
  9570  0AF5  3001               	movlw	1
  9571  0AF6                     u2405:	
  9572  0AF6  36E5               	lsrf	___fltol@f1+3,f
  9573  0AF7  0CE4               	rrf	___fltol@f1+2,f
  9574  0AF8  0CE3               	rrf	___fltol@f1+1,f
  9575  0AF9  0CE2               	rrf	___fltol@f1,f
  9576  0AFA  0B89               	decfsz	9,f
  9577  0AFB  2AF6               	goto	u2405
  9578  0AFC  3001               	movlw	1
  9579  0AFD  00E6               	movwf	??___fltol
  9580  0AFE  0866               	movf	??___fltol,w
  9581  0AFF  07EC               	addwf	___fltol@exp1,f
  9582  0B00  1903               	btfsc	3,2
  9583  0B01  2B14               	goto	l3637
  9584  0B02  2AF5               	goto	l3627
  9585  0B03                     l3629:	
  9586  0B03  3020               	movlw	32
  9587  0B04  026C               	subwf	___fltol@exp1,w
  9588  0B05  1803               	btfsc	3,0
  9589  0B06  2AC7               	goto	l3607
  9590  0B07                     l1392:	
  9591  0B07  086C               	movf	___fltol@exp1,w
  9592  0B08  1903               	btfsc	3,2
  9593  0B09  2B14               	goto	l3637
  9594  0B0A  3001               	movlw	1
  9595  0B0B                     u2435:	
  9596  0B0B  35E2               	lslf	___fltol@f1,f
  9597  0B0C  0DE3               	rlf	___fltol@f1+1,f
  9598  0B0D  0DE4               	rlf	___fltol@f1+2,f
  9599  0B0E  0DE5               	rlf	___fltol@f1+3,f
  9600  0B0F  0B89               	decfsz	9,f
  9601  0B10  2B0B               	goto	u2435
  9602  0B11  3001               	movlw	1
  9603  0B12  02EC               	subwf	___fltol@exp1,f
  9604  0B13  2B07               	goto	l1392
  9605  0B14                     l3637:	
  9606  0B14  086B               	movf	___fltol@sign1,w
  9607  0B15  1903               	btfsc	3,2
  9608  0B16  0008               	return
  9609  0B17  09E2               	comf	___fltol@f1,f
  9610  0B18  09E3               	comf	___fltol@f1+1,f
  9611  0B19  09E4               	comf	___fltol@f1+2,f
  9612  0B1A  09E5               	comf	___fltol@f1+3,f
  9613  0B1B  0AE2               	incf	___fltol@f1,f
  9614  0B1C  1903               	skipnz
  9615  0B1D  0AE3               	incf	___fltol@f1+1,f
  9616  0B1E  1903               	skipnz
  9617  0B1F  0AE4               	incf	___fltol@f1+2,f
  9618  0B20  1903               	skipnz
  9619  0B21  0AE5               	incf	___fltol@f1+3,f
  9620  0B22  0008               	return
  9621  0B23                     __end_of___fltol:	
  9622                           
  9623                           	psect	text16
  9624  0344                     __ptext16:	
  9625 ;; *************** function ___flmul *****************
  9626 ;; Defined at:
  9627 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  9628 ;; Parameters:    Size  Location     Type
  9629 ;;  b               4   40[BANK0 ] long 
  9630 ;;  a               4   44[BANK0 ] long 
  9631 ;; Auto vars:     Size  Location     Type
  9632 ;;  prod            4   60[BANK0 ] struct .
  9633 ;;  grs             4   55[BANK0 ] unsigned long 
  9634 ;;  temp            2   64[BANK0 ] struct .
  9635 ;;  bexp            1   59[BANK0 ] unsigned char 
  9636 ;;  aexp            1   54[BANK0 ] unsigned char 
  9637 ;;  sign            1   53[BANK0 ] unsigned char 
  9638 ;; Return value:  Size  Location     Type
  9639 ;;                  4   40[BANK0 ] unsigned char 
  9640 ;; Registers used:
  9641 ;;		wreg, status,2, status,0, pclath, cstack
  9642 ;; Tracked objects:
  9643 ;;		On entry : 0/0
  9644 ;;		On exit  : 0/0
  9645 ;;		Unchanged: 0/0
  9646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9647 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9648 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9649 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9650 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9651 ;;Total ram usage:       26 bytes
  9652 ;; Hardware stack levels used:    1
  9653 ;; Hardware stack levels required when called:    5
  9654 ;; This function calls:
  9655 ;;		__Umul8_16
  9656 ;; This function is called by:
  9657 ;;		_LED_setColor
  9658 ;;		_LED_setBrightness
  9659 ;; This function uses a non-reentrant model
  9660 ;;
  9661                           
  9662                           
  9663                           ;psect for function ___flmul
  9664  0344                     ___flmul:	
  9665                           
  9666                           ;incstack = 0
  9667                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9668  0344  0140               	movlb	0	; select bank0
  9669  0345  084B               	movf	___flmul@b+3,w
  9670  0346  3980               	andlw	128
  9671  0347  00D0               	movwf	??___flmul
  9672  0348  0850               	movf	??___flmul,w
  9673  0349  00D5               	movwf	___flmul@sign
  9674  034A  354B               	lslf	___flmul@b+3,w
  9675  034B  00D0               	movwf	??___flmul
  9676  034C  0850               	movf	??___flmul,w
  9677  034D  00DB               	movwf	___flmul@bexp
  9678  034E  1BCA               	btfsc	___flmul@b+2,7
  9679  034F  145B               	bsf	___flmul@bexp,0
  9680  0350  085B               	movf	___flmul@bexp,w
  9681  0351  1903               	btfsc	3,2
  9682  0352  2B60               	goto	l5045
  9683  0353  0A5B               	incf	___flmul@bexp,w
  9684  0354  1D03               	btfss	3,2
  9685  0355  2B5E               	goto	l5043
  9686  0356  3000               	movlw	0
  9687  0357  00CB               	movwf	___flmul@b+3
  9688  0358  3000               	movlw	0
  9689  0359  00CA               	movwf	___flmul@b+2
  9690  035A  3000               	movlw	0
  9691  035B  00C9               	movwf	___flmul@b+1
  9692  035C  3000               	movlw	0
  9693  035D  00C8               	movwf	___flmul@b
  9694  035E                     l5043:	
  9695  035E  17CA               	bsf	___flmul@b+2,7
  9696  035F  2B68               	goto	l5047
  9697  0360                     l5045:	
  9698  0360  3000               	movlw	0
  9699  0361  00CB               	movwf	___flmul@b+3
  9700  0362  3000               	movlw	0
  9701  0363  00CA               	movwf	___flmul@b+2
  9702  0364  3000               	movlw	0
  9703  0365  00C9               	movwf	___flmul@b+1
  9704  0366  3000               	movlw	0
  9705  0367  00C8               	movwf	___flmul@b
  9706  0368                     l5047:	
  9707  0368  084F               	movf	___flmul@a+3,w
  9708  0369  3980               	andlw	128
  9709  036A  00D0               	movwf	??___flmul
  9710  036B  0850               	movf	??___flmul,w
  9711  036C  06D5               	xorwf	___flmul@sign,f
  9712  036D  354F               	lslf	___flmul@a+3,w
  9713  036E  00D0               	movwf	??___flmul
  9714  036F  0850               	movf	??___flmul,w
  9715  0370  00D6               	movwf	___flmul@aexp
  9716  0371  1BCE               	btfsc	___flmul@a+2,7
  9717  0372  1456               	bsf	___flmul@aexp,0
  9718  0373  0856               	movf	___flmul@aexp,w
  9719  0374  1903               	btfsc	3,2
  9720  0375  2B83               	goto	l5063
  9721  0376  0A56               	incf	___flmul@aexp,w
  9722  0377  1D03               	btfss	3,2
  9723  0378  2B81               	goto	l5061
  9724  0379  3000               	movlw	0
  9725  037A  00CF               	movwf	___flmul@a+3
  9726  037B  3000               	movlw	0
  9727  037C  00CE               	movwf	___flmul@a+2
  9728  037D  3000               	movlw	0
  9729  037E  00CD               	movwf	___flmul@a+1
  9730  037F  3000               	movlw	0
  9731  0380  00CC               	movwf	___flmul@a
  9732  0381                     l5061:	
  9733  0381  17CE               	bsf	___flmul@a+2,7
  9734  0382  2B8B               	goto	l5065
  9735  0383                     l5063:	
  9736  0383  3000               	movlw	0
  9737  0384  00CF               	movwf	___flmul@a+3
  9738  0385  3000               	movlw	0
  9739  0386  00CE               	movwf	___flmul@a+2
  9740  0387  3000               	movlw	0
  9741  0388  00CD               	movwf	___flmul@a+1
  9742  0389  3000               	movlw	0
  9743  038A  00CC               	movwf	___flmul@a
  9744  038B                     l5065:	
  9745  038B  0856               	movf	___flmul@aexp,w
  9746  038C  1D03               	btfss	3,2
  9747  038D  085B               	movf	___flmul@bexp,w
  9748  038E  1D03               	btfss	3,2
  9749  038F  2B99               	goto	l5073
  9750  0390  3000               	movlw	0
  9751  0391  00CB               	movwf	?___flmul+3
  9752  0392  3000               	movlw	0
  9753  0393  00CA               	movwf	?___flmul+2
  9754  0394  3000               	movlw	0
  9755  0395  00C9               	movwf	?___flmul+1
  9756  0396  3000               	movlw	0
  9757  0397  00C8               	movwf	?___flmul
  9758  0398  0008               	return
  9759  0399                     l5073:	
  9760  0399  0848               	movf	___flmul@b,w
  9761  039A  00D0               	movwf	??___flmul
  9762  039B  0850               	movf	??___flmul,w
  9763  039C  00A0               	movwf	__Umul8_16@multiplicand
  9764  039D  084E               	movf	___flmul@a+2,w
  9765  039E  3197  276C  3183   	fcall	__Umul8_16
  9766  03A1  0140               	movlb	0	; select bank0
  9767  03A2  0821               	movf	?__Umul8_16+1,w
  9768  03A3  00E1               	movwf	___flmul@temp+1
  9769  03A4  0820               	movf	?__Umul8_16,w
  9770  03A5  00E0               	movwf	___flmul@temp
  9771  03A6  0860               	movf	___flmul@temp,w
  9772  03A7  00D0               	movwf	??___flmul
  9773  03A8  01D1               	clrf	??___flmul+1
  9774  03A9  01D2               	clrf	??___flmul+2
  9775  03AA  01D3               	clrf	??___flmul+3
  9776  03AB  0853               	movf	??___flmul+3,w
  9777  03AC  00DA               	movwf	___flmul@grs+3
  9778  03AD  0852               	movf	??___flmul+2,w
  9779  03AE  00D9               	movwf	___flmul@grs+2
  9780  03AF  0851               	movf	??___flmul+1,w
  9781  03B0  00D8               	movwf	___flmul@grs+1
  9782  03B1  0850               	movf	??___flmul,w
  9783  03B2  00D7               	movwf	___flmul@grs
  9784  03B3  0861               	movf	___flmul@temp+1,w
  9785  03B4  00D0               	movwf	??___flmul
  9786  03B5  01D1               	clrf	??___flmul+1
  9787  03B6  01D2               	clrf	??___flmul+2
  9788  03B7  01D3               	clrf	??___flmul+3
  9789  03B8  0853               	movf	??___flmul+3,w
  9790  03B9  00DF               	movwf	___flmul@prod+3
  9791  03BA  0852               	movf	??___flmul+2,w
  9792  03BB  00DE               	movwf	___flmul@prod+2
  9793  03BC  0851               	movf	??___flmul+1,w
  9794  03BD  00DD               	movwf	___flmul@prod+1
  9795  03BE  0850               	movf	??___flmul,w
  9796  03BF  00DC               	movwf	___flmul@prod
  9797  03C0  0849               	movf	___flmul@b+1,w
  9798  03C1  00D0               	movwf	??___flmul
  9799  03C2  0850               	movf	??___flmul,w
  9800  03C3  00A0               	movwf	__Umul8_16@multiplicand
  9801  03C4  084D               	movf	___flmul@a+1,w
  9802  03C5  3197  276C  3183   	fcall	__Umul8_16
  9803  03C8  0140               	movlb	0	; select bank0
  9804  03C9  0821               	movf	?__Umul8_16+1,w
  9805  03CA  00E1               	movwf	___flmul@temp+1
  9806  03CB  0820               	movf	?__Umul8_16,w
  9807  03CC  00E0               	movwf	___flmul@temp
  9808  03CD  0860               	movf	___flmul@temp,w
  9809  03CE  00D0               	movwf	??___flmul
  9810  03CF  01D1               	clrf	??___flmul+1
  9811  03D0  01D2               	clrf	??___flmul+2
  9812  03D1  01D3               	clrf	??___flmul+3
  9813  03D2  0850               	movf	??___flmul,w
  9814  03D3  07D7               	addwf	___flmul@grs,f
  9815  03D4  0851               	movf	??___flmul+1,w
  9816  03D5  3DD8               	addwfc	___flmul@grs+1,f
  9817  03D6  0852               	movf	??___flmul+2,w
  9818  03D7  3DD9               	addwfc	___flmul@grs+2,f
  9819  03D8  0853               	movf	??___flmul+3,w
  9820  03D9  3DDA               	addwfc	___flmul@grs+3,f
  9821  03DA  0861               	movf	___flmul@temp+1,w
  9822  03DB  00D0               	movwf	??___flmul
  9823  03DC  01D1               	clrf	??___flmul+1
  9824  03DD  01D2               	clrf	??___flmul+2
  9825  03DE  01D3               	clrf	??___flmul+3
  9826  03DF  0850               	movf	??___flmul,w
  9827  03E0  07DC               	addwf	___flmul@prod,f
  9828  03E1  0851               	movf	??___flmul+1,w
  9829  03E2  3DDD               	addwfc	___flmul@prod+1,f
  9830  03E3  0852               	movf	??___flmul+2,w
  9831  03E4  3DDE               	addwfc	___flmul@prod+2,f
  9832  03E5  0853               	movf	??___flmul+3,w
  9833  03E6  3DDF               	addwfc	___flmul@prod+3,f
  9834  03E7  084A               	movf	___flmul@b+2,w
  9835  03E8  00D0               	movwf	??___flmul
  9836  03E9  0850               	movf	??___flmul,w
  9837  03EA  00A0               	movwf	__Umul8_16@multiplicand
  9838  03EB  084C               	movf	___flmul@a,w
  9839  03EC  3197  276C  3183   	fcall	__Umul8_16
  9840  03EF  0140               	movlb	0	; select bank0
  9841  03F0  0821               	movf	?__Umul8_16+1,w
  9842  03F1  00E1               	movwf	___flmul@temp+1
  9843  03F2  0820               	movf	?__Umul8_16,w
  9844  03F3  00E0               	movwf	___flmul@temp
  9845  03F4  0860               	movf	___flmul@temp,w
  9846  03F5  00D0               	movwf	??___flmul
  9847  03F6  01D1               	clrf	??___flmul+1
  9848  03F7  01D2               	clrf	??___flmul+2
  9849  03F8  01D3               	clrf	??___flmul+3
  9850  03F9  0850               	movf	??___flmul,w
  9851  03FA  07D7               	addwf	___flmul@grs,f
  9852  03FB  0851               	movf	??___flmul+1,w
  9853  03FC  3DD8               	addwfc	___flmul@grs+1,f
  9854  03FD  0852               	movf	??___flmul+2,w
  9855  03FE  3DD9               	addwfc	___flmul@grs+2,f
  9856  03FF  0853               	movf	??___flmul+3,w
  9857  0400  3DDA               	addwfc	___flmul@grs+3,f
  9858  0401  0861               	movf	___flmul@temp+1,w
  9859  0402  00D0               	movwf	??___flmul
  9860  0403  01D1               	clrf	??___flmul+1
  9861  0404  01D2               	clrf	??___flmul+2
  9862  0405  01D3               	clrf	??___flmul+3
  9863  0406  0850               	movf	??___flmul,w
  9864  0407  07DC               	addwf	___flmul@prod,f
  9865  0408  0851               	movf	??___flmul+1,w
  9866  0409  3DDD               	addwfc	___flmul@prod+1,f
  9867  040A  0852               	movf	??___flmul+2,w
  9868  040B  3DDE               	addwfc	___flmul@prod+2,f
  9869  040C  0853               	movf	??___flmul+3,w
  9870  040D  3DDF               	addwfc	___flmul@prod+3,f
  9871  040E  3008               	movlw	8
  9872  040F                     u4315:	
  9873  040F  35D7               	lslf	___flmul@grs,f
  9874  0410  0DD8               	rlf	___flmul@grs+1,f
  9875  0411  0DD9               	rlf	___flmul@grs+2,f
  9876  0412  0DDA               	rlf	___flmul@grs+3,f
  9877  0413  0B89               	decfsz	9,f
  9878  0414  2C0F               	goto	u4315
  9879  0415  0849               	movf	___flmul@b+1,w
  9880  0416  00D0               	movwf	??___flmul
  9881  0417  0850               	movf	??___flmul,w
  9882  0418  00A0               	movwf	__Umul8_16@multiplicand
  9883  0419  084C               	movf	___flmul@a,w
  9884  041A  3197  276C  3183   	fcall	__Umul8_16
  9885  041D  0140               	movlb	0	; select bank0
  9886  041E  0821               	movf	?__Umul8_16+1,w
  9887  041F  00E1               	movwf	___flmul@temp+1
  9888  0420  0820               	movf	?__Umul8_16,w
  9889  0421  00E0               	movwf	___flmul@temp
  9890  0422  0860               	movf	___flmul@temp,w
  9891  0423  07D7               	addwf	___flmul@grs,f
  9892  0424  0861               	movf	___flmul@temp+1,w
  9893  0425  3DD8               	addwfc	___flmul@grs+1,f
  9894  0426  3000               	movlw	0
  9895  0427  3DD9               	addwfc	___flmul@grs+2,f
  9896  0428  3DDA               	addwfc	___flmul@grs+3,f
  9897  0429  0848               	movf	___flmul@b,w
  9898  042A  00D0               	movwf	??___flmul
  9899  042B  0850               	movf	??___flmul,w
  9900  042C  00A0               	movwf	__Umul8_16@multiplicand
  9901  042D  084D               	movf	___flmul@a+1,w
  9902  042E  3197  276C  3183   	fcall	__Umul8_16
  9903  0431  0140               	movlb	0	; select bank0
  9904  0432  0821               	movf	?__Umul8_16+1,w
  9905  0433  00E1               	movwf	___flmul@temp+1
  9906  0434  0820               	movf	?__Umul8_16,w
  9907  0435  00E0               	movwf	___flmul@temp
  9908  0436  0860               	movf	___flmul@temp,w
  9909  0437  07D7               	addwf	___flmul@grs,f
  9910  0438  0861               	movf	___flmul@temp+1,w
  9911  0439  3DD8               	addwfc	___flmul@grs+1,f
  9912  043A  3000               	movlw	0
  9913  043B  3DD9               	addwfc	___flmul@grs+2,f
  9914  043C  3DDA               	addwfc	___flmul@grs+3,f
  9915  043D  3008               	movlw	8
  9916  043E                     u4325:	
  9917  043E  35D7               	lslf	___flmul@grs,f
  9918  043F  0DD8               	rlf	___flmul@grs+1,f
  9919  0440  0DD9               	rlf	___flmul@grs+2,f
  9920  0441  0DDA               	rlf	___flmul@grs+3,f
  9921  0442  0B89               	decfsz	9,f
  9922  0443  2C3E               	goto	u4325
  9923  0444  0848               	movf	___flmul@b,w
  9924  0445  00D0               	movwf	??___flmul
  9925  0446  0850               	movf	??___flmul,w
  9926  0447  00A0               	movwf	__Umul8_16@multiplicand
  9927  0448  084C               	movf	___flmul@a,w
  9928  0449  3197  276C  3183   	fcall	__Umul8_16
  9929  044C  0140               	movlb	0	; select bank0
  9930  044D  0821               	movf	?__Umul8_16+1,w
  9931  044E  00E1               	movwf	___flmul@temp+1
  9932  044F  0820               	movf	?__Umul8_16,w
  9933  0450  00E0               	movwf	___flmul@temp
  9934  0451  0860               	movf	___flmul@temp,w
  9935  0452  07D7               	addwf	___flmul@grs,f
  9936  0453  0861               	movf	___flmul@temp+1,w
  9937  0454  3DD8               	addwfc	___flmul@grs+1,f
  9938  0455  3000               	movlw	0
  9939  0456  3DD9               	addwfc	___flmul@grs+2,f
  9940  0457  3DDA               	addwfc	___flmul@grs+3,f
  9941  0458  0849               	movf	___flmul@b+1,w
  9942  0459  00D0               	movwf	??___flmul
  9943  045A  0850               	movf	??___flmul,w
  9944  045B  00A0               	movwf	__Umul8_16@multiplicand
  9945  045C  084E               	movf	___flmul@a+2,w
  9946  045D  3197  276C  3183   	fcall	__Umul8_16
  9947  0460  0140               	movlb	0	; select bank0
  9948  0461  0821               	movf	?__Umul8_16+1,w
  9949  0462  00E1               	movwf	___flmul@temp+1
  9950  0463  0820               	movf	?__Umul8_16,w
  9951  0464  00E0               	movwf	___flmul@temp
  9952  0465  0860               	movf	___flmul@temp,w
  9953  0466  07DC               	addwf	___flmul@prod,f
  9954  0467  0861               	movf	___flmul@temp+1,w
  9955  0468  3DDD               	addwfc	___flmul@prod+1,f
  9956  0469  3000               	movlw	0
  9957  046A  3DDE               	addwfc	___flmul@prod+2,f
  9958  046B  3DDF               	addwfc	___flmul@prod+3,f
  9959  046C  084A               	movf	___flmul@b+2,w
  9960  046D  00D0               	movwf	??___flmul
  9961  046E  0850               	movf	??___flmul,w
  9962  046F  00A0               	movwf	__Umul8_16@multiplicand
  9963  0470  084D               	movf	___flmul@a+1,w
  9964  0471  3197  276C  3183   	fcall	__Umul8_16
  9965  0474  0140               	movlb	0	; select bank0
  9966  0475  0821               	movf	?__Umul8_16+1,w
  9967  0476  00E1               	movwf	___flmul@temp+1
  9968  0477  0820               	movf	?__Umul8_16,w
  9969  0478  00E0               	movwf	___flmul@temp
  9970  0479  0860               	movf	___flmul@temp,w
  9971  047A  07DC               	addwf	___flmul@prod,f
  9972  047B  0861               	movf	___flmul@temp+1,w
  9973  047C  3DDD               	addwfc	___flmul@prod+1,f
  9974  047D  3000               	movlw	0
  9975  047E  3DDE               	addwfc	___flmul@prod+2,f
  9976  047F  3DDF               	addwfc	___flmul@prod+3,f
  9977  0480  084A               	movf	___flmul@b+2,w
  9978  0481  00D0               	movwf	??___flmul
  9979  0482  0850               	movf	??___flmul,w
  9980  0483  00A0               	movwf	__Umul8_16@multiplicand
  9981  0484  084E               	movf	___flmul@a+2,w
  9982  0485  3197  276C  3183   	fcall	__Umul8_16
  9983  0488  0140               	movlb	0	; select bank0
  9984  0489  0821               	movf	?__Umul8_16+1,w
  9985  048A  00E1               	movwf	___flmul@temp+1
  9986  048B  0820               	movf	?__Umul8_16,w
  9987  048C  00E0               	movwf	___flmul@temp
  9988  048D  0860               	movf	___flmul@temp,w
  9989  048E  00D0               	movwf	??___flmul
  9990  048F  0861               	movf	___flmul@temp+1,w
  9991  0490  00D1               	movwf	??___flmul+1
  9992  0491  01D2               	clrf	??___flmul+2
  9993  0492  01D3               	clrf	??___flmul+3
  9994  0493  3008               	movlw	8
  9995  0494                     u4335:	
  9996  0494  35D0               	lslf	??___flmul,f
  9997  0495  0DD1               	rlf	??___flmul+1,f
  9998  0496  0DD2               	rlf	??___flmul+2,f
  9999  0497  0DD3               	rlf	??___flmul+3,f
 10000  0498  0B89               	decfsz	9,f
 10001  0499  2C94               	goto	u4335
 10002  049A  0850               	movf	??___flmul,w
 10003  049B  07DC               	addwf	___flmul@prod,f
 10004  049C  0851               	movf	??___flmul+1,w
 10005  049D  3DDD               	addwfc	___flmul@prod+1,f
 10006  049E  0852               	movf	??___flmul+2,w
 10007  049F  3DDE               	addwfc	___flmul@prod+2,f
 10008  04A0  0853               	movf	??___flmul+3,w
 10009  04A1  3DDF               	addwfc	___flmul@prod+3,f
 10010  04A2  0857               	movf	___flmul@grs,w
 10011  04A3  00D0               	movwf	??___flmul
 10012  04A4  0858               	movf	___flmul@grs+1,w
 10013  04A5  00D1               	movwf	??___flmul+1
 10014  04A6  0859               	movf	___flmul@grs+2,w
 10015  04A7  00D2               	movwf	??___flmul+2
 10016  04A8  085A               	movf	___flmul@grs+3,w
 10017  04A9  00D3               	movwf	??___flmul+3
 10018  04AA  3018               	movlw	24
 10019  04AB                     u4345:	
 10020  04AB  36D3               	lsrf	??___flmul+3,f
 10021  04AC  0CD2               	rrf	??___flmul+2,f
 10022  04AD  0CD1               	rrf	??___flmul+1,f
 10023  04AE  0CD0               	rrf	??___flmul,f
 10024  04AF  0B89               	decfsz	9,f
 10025  04B0  2CAB               	goto	u4345
 10026  04B1  0850               	movf	??___flmul,w
 10027  04B2  07DC               	addwf	___flmul@prod,f
 10028  04B3  0851               	movf	??___flmul+1,w
 10029  04B4  3DDD               	addwfc	___flmul@prod+1,f
 10030  04B5  0852               	movf	??___flmul+2,w
 10031  04B6  3DDE               	addwfc	___flmul@prod+2,f
 10032  04B7  0853               	movf	??___flmul+3,w
 10033  04B8  3DDF               	addwfc	___flmul@prod+3,f
 10034  04B9  3008               	movlw	8
 10035  04BA                     u4355:	
 10036  04BA  35D7               	lslf	___flmul@grs,f
 10037  04BB  0DD8               	rlf	___flmul@grs+1,f
 10038  04BC  0DD9               	rlf	___flmul@grs+2,f
 10039  04BD  0DDA               	rlf	___flmul@grs+3,f
 10040  04BE  0B89               	decfsz	9,f
 10041  04BF  2CBA               	goto	u4355
 10042  04C0  085B               	movf	___flmul@bexp,w
 10043  04C1  0756               	addwf	___flmul@aexp,w
 10044  04C2  00D0               	movwf	??___flmul
 10045  04C3  01D1               	clrf	??___flmul+1
 10046  04C4  0DD1               	rlf	??___flmul+1,f
 10047  04C5  0850               	movf	??___flmul,w
 10048  04C6  3E82               	addlw	130
 10049  04C7  00E0               	movwf	___flmul@temp
 10050  04C8  30FF               	movlw	255
 10051  04C9  3D51               	addwfc	??___flmul+1,w
 10052  04CA  00E1               	movwf	___flmul@temp+1
 10053  04CB                     l5125:	
 10054  04CB  1BDE               	btfsc	___flmul@prod+2,7
 10055  04CC  2CE2               	goto	l5127
 10056  04CD  3001               	movlw	1
 10057  04CE                     u4365:	
 10058  04CE  35DC               	lslf	___flmul@prod,f
 10059  04CF  0DDD               	rlf	___flmul@prod+1,f
 10060  04D0  0DDE               	rlf	___flmul@prod+2,f
 10061  04D1  0DDF               	rlf	___flmul@prod+3,f
 10062  04D2  0B89               	decfsz	9,f
 10063  04D3  2CCE               	goto	u4365
 10064  04D4  1BDA               	btfsc	___flmul@grs+3,7
 10065  04D5  145C               	bsf	___flmul@prod,0
 10066  04D6  3001               	movlw	1
 10067  04D7                     u4385:	
 10068  04D7  35D7               	lslf	___flmul@grs,f
 10069  04D8  0DD8               	rlf	___flmul@grs+1,f
 10070  04D9  0DD9               	rlf	___flmul@grs+2,f
 10071  04DA  0DDA               	rlf	___flmul@grs+3,f
 10072  04DB  0B89               	decfsz	9,f
 10073  04DC  2CD7               	goto	u4385
 10074  04DD  30FF               	movlw	255
 10075  04DE  07E0               	addwf	___flmul@temp,f
 10076  04DF  30FF               	movlw	255
 10077  04E0  3DE1               	addwfc	___flmul@temp+1,f
 10078  04E1  2CCB               	goto	l5125
 10079  04E2                     l5127:	
 10080  04E2  01D6               	clrf	___flmul@aexp
 10081  04E3  1FDA               	btfss	___flmul@grs+3,7
 10082  04E4  2CFB               	goto	l5137
 10083  04E5  30FF               	movlw	255
 10084  04E6  0557               	andwf	___flmul@grs,w
 10085  04E7  00D0               	movwf	??___flmul
 10086  04E8  30FF               	movlw	255
 10087  04E9  0558               	andwf	___flmul@grs+1,w
 10088  04EA  00D1               	movwf	??___flmul+1
 10089  04EB  30FF               	movlw	255
 10090  04EC  0559               	andwf	___flmul@grs+2,w
 10091  04ED  00D2               	movwf	??___flmul+2
 10092  04EE  307F               	movlw	127
 10093  04EF  055A               	andwf	___flmul@grs+3,w
 10094  04F0  00D3               	movwf	??___flmul+3
 10095  04F1  0853               	movf	??___flmul+3,w
 10096  04F2  0452               	iorwf	??___flmul+2,w
 10097  04F3  0451               	iorwf	??___flmul+1,w
 10098  04F4  0450               	iorwf	??___flmul,w
 10099  04F5  1903               	skipnz
 10100  04F6  185C               	btfsc	___flmul@prod,0
 10101  04F7  2CF9               	goto	l5133
 10102  04F8  2CFB               	goto	l5137
 10103  04F9                     l5133:	
 10104  04F9  01D6               	clrf	___flmul@aexp
 10105  04FA  0AD6               	incf	___flmul@aexp,f
 10106  04FB                     l5137:	
 10107  04FB  0856               	movf	___flmul@aexp,w
 10108  04FC  1903               	btfsc	3,2
 10109  04FD  2D24               	goto	l5147
 10110  04FE  3001               	movlw	1
 10111  04FF  07DC               	addwf	___flmul@prod,f
 10112  0500  3000               	movlw	0
 10113  0501  3DDD               	addwfc	___flmul@prod+1,f
 10114  0502  3000               	movlw	0
 10115  0503  3DDE               	addwfc	___flmul@prod+2,f
 10116  0504  3000               	movlw	0
 10117  0505  3DDF               	addwfc	___flmul@prod+3,f
 10118  0506  1C5F               	btfss	___flmul@prod+3,0
 10119  0507  2D24               	goto	l5147
 10120  0508  085C               	movf	___flmul@prod,w
 10121  0509  00D0               	movwf	??___flmul
 10122  050A  085D               	movf	___flmul@prod+1,w
 10123  050B  00D1               	movwf	??___flmul+1
 10124  050C  085E               	movf	___flmul@prod+2,w
 10125  050D  00D2               	movwf	??___flmul+2
 10126  050E  085F               	movf	___flmul@prod+3,w
 10127  050F  00D3               	movwf	??___flmul+3
 10128  0510  3001               	movlw	1
 10129  0511  00D4               	movwf	??___flmul+4
 10130  0512                     u4455:	
 10131  0512  37D3               	asrf	??___flmul+3,f
 10132  0513  0CD2               	rrf	??___flmul+2,f
 10133  0514  0CD1               	rrf	??___flmul+1,f
 10134  0515  0CD0               	rrf	??___flmul,f
 10135  0516  0BD4               	decfsz	??___flmul+4,f
 10136  0517  2D12               	goto	u4455
 10137  0518  0853               	movf	??___flmul+3,w
 10138  0519  00DF               	movwf	___flmul@prod+3
 10139  051A  0852               	movf	??___flmul+2,w
 10140  051B  00DE               	movwf	___flmul@prod+2
 10141  051C  0851               	movf	??___flmul+1,w
 10142  051D  00DD               	movwf	___flmul@prod+1
 10143  051E  0850               	movf	??___flmul,w
 10144  051F  00DC               	movwf	___flmul@prod
 10145  0520  3001               	movlw	1
 10146  0521  07E0               	addwf	___flmul@temp,f
 10147  0522  3000               	movlw	0
 10148  0523  3DE1               	addwfc	___flmul@temp+1,f
 10149  0524                     l5147:	
 10150  0524  0861               	movf	___flmul@temp+1,w
 10151  0525  3A80               	xorlw	128
 10152  0526  00D0               	movwf	??___flmul
 10153  0527  3080               	movlw	128
 10154  0528  0250               	subwf	??___flmul,w
 10155  0529  1D03               	skipz
 10156  052A  2D2D               	goto	u4465
 10157  052B  30FF               	movlw	255
 10158  052C  0260               	subwf	___flmul@temp,w
 10159  052D                     u4465:	
 10160  052D  1C03               	skipc
 10161  052E  2D39               	goto	l5151
 10162  052F  307F               	movlw	127
 10163  0530  0140               	movlb	0	; select bank0
 10164  0531  00DF               	movwf	___flmul@prod+3
 10165  0532  3080               	movlw	128
 10166  0533  00DE               	movwf	___flmul@prod+2
 10167  0534  3000               	movlw	0
 10168  0535  00DD               	movwf	___flmul@prod+1
 10169  0536  3000               	movlw	0
 10170  0537  00DC               	movwf	___flmul@prod
 10171  0538  2D63               	goto	l1600
 10172  0539                     l5151:	
 10173  0539  0140               	movlb	0	; select bank0
 10174  053A  0861               	movf	___flmul@temp+1,w
 10175  053B  3A80               	xorlw	128
 10176  053C  00D0               	movwf	??___flmul
 10177  053D  3080               	movlw	128
 10178  053E  0250               	subwf	??___flmul,w
 10179  053F  1D03               	skipz
 10180  0540  2D43               	goto	u4475
 10181  0541  3001               	movlw	1
 10182  0542  0260               	subwf	___flmul@temp,w
 10183  0543                     u4475:	
 10184  0543  1803               	skipnc
 10185  0544  2D50               	goto	l5157
 10186  0545  3000               	movlw	0
 10187  0546  0140               	movlb	0	; select bank0
 10188  0547  00DF               	movwf	___flmul@prod+3
 10189  0548  3000               	movlw	0
 10190  0549  00DE               	movwf	___flmul@prod+2
 10191  054A  3000               	movlw	0
 10192  054B  00DD               	movwf	___flmul@prod+1
 10193  054C  3000               	movlw	0
 10194  054D  00DC               	movwf	___flmul@prod
 10195  054E  01D5               	clrf	___flmul@sign
 10196  054F  2D63               	goto	l1600
 10197  0550                     l5157:	
 10198  0550  0140               	movlb	0	; select bank0
 10199  0551  0860               	movf	___flmul@temp,w
 10200  0552  00D0               	movwf	??___flmul
 10201  0553  0850               	movf	??___flmul,w
 10202  0554  00DB               	movwf	___flmul@bexp
 10203  0555  30FF               	movlw	255
 10204  0556  05DC               	andwf	___flmul@prod,f
 10205  0557  30FF               	movlw	255
 10206  0558  05DD               	andwf	___flmul@prod+1,f
 10207  0559  307F               	movlw	127
 10208  055A  05DE               	andwf	___flmul@prod+2,f
 10209  055B  3000               	movlw	0
 10210  055C  05DF               	andwf	___flmul@prod+3,f
 10211  055D  185B               	btfsc	___flmul@bexp,0
 10212  055E  17DE               	bsf	___flmul@prod+2,7
 10213  055F  365B               	lsrf	___flmul@bexp,w
 10214  0560  00D0               	movwf	??___flmul
 10215  0561  0850               	movf	??___flmul,w
 10216  0562  00DF               	movwf	___flmul@prod+3
 10217  0563                     l1600:	
 10218  0563  0855               	movf	___flmul@sign,w
 10219  0564  00D0               	movwf	??___flmul
 10220  0565  0850               	movf	??___flmul,w
 10221  0566  04DF               	iorwf	___flmul@prod+3,f
 10222  0567  085F               	movf	___flmul@prod+3,w
 10223  0568  00CB               	movwf	?___flmul+3
 10224  0569  085E               	movf	___flmul@prod+2,w
 10225  056A  00CA               	movwf	?___flmul+2
 10226  056B  085D               	movf	___flmul@prod+1,w
 10227  056C  00C9               	movwf	?___flmul+1
 10228  056D  085C               	movf	___flmul@prod,w
 10229  056E  00C8               	movwf	?___flmul
 10230  056F  0008               	return
 10231  0570                     __end_of___flmul:	
 10232                           
 10233                           	psect	text17
 10234  176C                     __ptext17:	
 10235 ;; *************** function __Umul8_16 *****************
 10236 ;; Defined at:
 10237 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 10238 ;; Parameters:    Size  Location     Type
 10239 ;;  multiplier      1    wreg     unsigned char 
 10240 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 10241 ;; Auto vars:     Size  Location     Type
 10242 ;;  multiplier      1    8[BANK0 ] unsigned char 
 10243 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 10244 ;;  product         2    4[BANK0 ] unsigned int 
 10245 ;; Return value:  Size  Location     Type
 10246 ;;                  2    0[BANK0 ] unsigned int 
 10247 ;; Registers used:
 10248 ;;		wreg, status,2, status,0
 10249 ;; Tracked objects:
 10250 ;;		On entry : 0/0
 10251 ;;		On exit  : 0/0
 10252 ;;		Unchanged: 0/0
 10253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10254 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10255 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10256 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10257 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10258 ;;Total ram usage:        9 bytes
 10259 ;; Hardware stack levels used:    1
 10260 ;; Hardware stack levels required when called:    4
 10261 ;; This function calls:
 10262 ;;		Nothing
 10263 ;; This function is called by:
 10264 ;;		___flmul
 10265 ;; This function uses a non-reentrant model
 10266 ;;
 10267                           
 10268                           
 10269                           ;psect for function __Umul8_16
 10270  176C                     __Umul8_16:	
 10271                           
 10272                           ;incstack = 0
 10273                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10274                           ;__Umul8_16@multiplier stored from wreg
 10275  176C  0140               	movlb	0	; select bank0
 10276  176D  00A8               	movwf	__Umul8_16@multiplier
 10277  176E  01A4               	clrf	__Umul8_16@product
 10278  176F  01A5               	clrf	__Umul8_16@product+1
 10279  1770  0820               	movf	__Umul8_16@multiplicand,w
 10280  1771  00A2               	movwf	??__Umul8_16
 10281  1772  01A3               	clrf	??__Umul8_16+1
 10282  1773  0822               	movf	??__Umul8_16,w
 10283  1774  00A6               	movwf	__Umul8_16@word_mpld
 10284  1775  0823               	movf	??__Umul8_16+1,w
 10285  1776  00A7               	movwf	__Umul8_16@word_mpld+1
 10286  1777                     l4809:	
 10287  1777  1C28               	btfss	__Umul8_16@multiplier,0
 10288  1778  2F7D               	goto	l1645
 10289  1779  0826               	movf	__Umul8_16@word_mpld,w
 10290  177A  07A4               	addwf	__Umul8_16@product,f
 10291  177B  0827               	movf	__Umul8_16@word_mpld+1,w
 10292  177C  3DA5               	addwfc	__Umul8_16@product+1,f
 10293  177D                     l1645:	
 10294  177D  3001               	movlw	1
 10295  177E                     u4135:	
 10296  177E  35A6               	lslf	__Umul8_16@word_mpld,f
 10297  177F  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 10298  1780  0B89               	decfsz	9,f
 10299  1781  2F7E               	goto	u4135
 10300  1782  1003               	clrc
 10301  1783  0CA8               	rrf	__Umul8_16@multiplier,f
 10302  1784  0828               	movf	__Umul8_16@multiplier,w
 10303  1785  1D03               	btfss	3,2
 10304  1786  2F77               	goto	l4809
 10305  1787  0825               	movf	__Umul8_16@product+1,w
 10306  1788  00A1               	movwf	?__Umul8_16+1
 10307  1789  0824               	movf	__Umul8_16@product,w
 10308  178A  00A0               	movwf	?__Umul8_16
 10309  178B  0008               	return
 10310  178C                     __end_of__Umul8_16:	
 10311                           
 10312                           	psect	text18
 10313  0570                     __ptext18:	
 10314 ;; *************** function ___fldiv *****************
 10315 ;; Defined at:
 10316 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 10317 ;; Parameters:    Size  Location     Type
 10318 ;;  a               4   14[BANK0 ] unsigned int 
 10319 ;;  b               4   18[BANK0 ] unsigned int 
 10320 ;; Auto vars:     Size  Location     Type
 10321 ;;  grs             4   34[BANK0 ] unsigned long 
 10322 ;;  rem             4   27[BANK0 ] unsigned long 
 10323 ;;  new_exp         2   32[BANK0 ] int 
 10324 ;;  aexp            1   39[BANK0 ] unsigned char 
 10325 ;;  bexp            1   38[BANK0 ] unsigned char 
 10326 ;;  sign            1   31[BANK0 ] unsigned char 
 10327 ;; Return value:  Size  Location     Type
 10328 ;;                  4   14[BANK0 ] unsigned char 
 10329 ;; Registers used:
 10330 ;;		wreg, status,2, status,0
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10336 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10337 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10338 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10339 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10340 ;;Total ram usage:       26 bytes
 10341 ;; Hardware stack levels used:    1
 10342 ;; Hardware stack levels required when called:    4
 10343 ;; This function calls:
 10344 ;;		Nothing
 10345 ;; This function is called by:
 10346 ;;		_LED_setColor
 10347 ;;		_LED_setBrightness
 10348 ;; This function uses a non-reentrant model
 10349 ;;
 10350                           
 10351                           
 10352                           ;psect for function ___fldiv
 10353  0570                     ___fldiv:	
 10354                           
 10355                           ;incstack = 0
 10356                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10357  0570  0140               	movlb	0	; select bank0
 10358  0571  0835               	movf	___fldiv@b+3,w
 10359  0572  3980               	andlw	128
 10360  0573  00B6               	movwf	??___fldiv
 10361  0574  0836               	movf	??___fldiv,w
 10362  0575  00BF               	movwf	___fldiv@sign
 10363  0576  3535               	lslf	___fldiv@b+3,w
 10364  0577  00B6               	movwf	??___fldiv
 10365  0578  0836               	movf	??___fldiv,w
 10366  0579  00C6               	movwf	___fldiv@bexp
 10367  057A  1BB4               	btfsc	___fldiv@b+2,7
 10368  057B  1446               	bsf	___fldiv@bexp,0
 10369  057C  0846               	movf	___fldiv@bexp,w
 10370  057D  1903               	btfsc	3,2
 10371  057E  2D8D               	goto	l3659
 10372  057F  0A46               	incf	___fldiv@bexp,w
 10373  0580  1D03               	btfss	3,2
 10374  0581  2D8A               	goto	l3655
 10375  0582  3000               	movlw	0
 10376  0583  00B5               	movwf	___fldiv@b+3
 10377  0584  3000               	movlw	0
 10378  0585  00B4               	movwf	___fldiv@b+2
 10379  0586  3000               	movlw	0
 10380  0587  00B3               	movwf	___fldiv@b+1
 10381  0588  3000               	movlw	0
 10382  0589  00B2               	movwf	___fldiv@b
 10383  058A                     l3655:	
 10384  058A  17B4               	bsf	___fldiv@b+2,7
 10385  058B  01B5               	clrf	___fldiv@b+3
 10386  058C  2D95               	goto	l3661
 10387  058D                     l3659:	
 10388  058D  3000               	movlw	0
 10389  058E  00B5               	movwf	___fldiv@b+3
 10390  058F  3000               	movlw	0
 10391  0590  00B4               	movwf	___fldiv@b+2
 10392  0591  3000               	movlw	0
 10393  0592  00B3               	movwf	___fldiv@b+1
 10394  0593  3000               	movlw	0
 10395  0594  00B2               	movwf	___fldiv@b
 10396  0595                     l3661:	
 10397  0595  0831               	movf	___fldiv@a+3,w
 10398  0596  3980               	andlw	128
 10399  0597  00B6               	movwf	??___fldiv
 10400  0598  0836               	movf	??___fldiv,w
 10401  0599  06BF               	xorwf	___fldiv@sign,f
 10402  059A  3531               	lslf	___fldiv@a+3,w
 10403  059B  00B6               	movwf	??___fldiv
 10404  059C  0836               	movf	??___fldiv,w
 10405  059D  00C7               	movwf	___fldiv@aexp
 10406  059E  1BB0               	btfsc	___fldiv@a+2,7
 10407  059F  1447               	bsf	___fldiv@aexp,0
 10408  05A0  0847               	movf	___fldiv@aexp,w
 10409  05A1  1903               	btfsc	3,2
 10410  05A2  2DB1               	goto	l3679
 10411  05A3  0A47               	incf	___fldiv@aexp,w
 10412  05A4  1D03               	btfss	3,2
 10413  05A5  2DAE               	goto	l3675
 10414  05A6  3000               	movlw	0
 10415  05A7  00B1               	movwf	___fldiv@a+3
 10416  05A8  3000               	movlw	0
 10417  05A9  00B0               	movwf	___fldiv@a+2
 10418  05AA  3000               	movlw	0
 10419  05AB  00AF               	movwf	___fldiv@a+1
 10420  05AC  3000               	movlw	0
 10421  05AD  00AE               	movwf	___fldiv@a
 10422  05AE                     l3675:	
 10423  05AE  17B0               	bsf	___fldiv@a+2,7
 10424  05AF  01B1               	clrf	___fldiv@a+3
 10425  05B0  2DB9               	goto	l1548
 10426  05B1                     l3679:	
 10427  05B1  3000               	movlw	0
 10428  05B2  00B1               	movwf	___fldiv@a+3
 10429  05B3  3000               	movlw	0
 10430  05B4  00B0               	movwf	___fldiv@a+2
 10431  05B5  3000               	movlw	0
 10432  05B6  00AF               	movwf	___fldiv@a+1
 10433  05B7  3000               	movlw	0
 10434  05B8  00AE               	movwf	___fldiv@a
 10435  05B9                     l1548:	
 10436  05B9  0831               	movf	___fldiv@a+3,w
 10437  05BA  0430               	iorwf	___fldiv@a+2,w
 10438  05BB  042F               	iorwf	___fldiv@a+1,w
 10439  05BC  042E               	iorwf	___fldiv@a,w
 10440  05BD  1D03               	skipz
 10441  05BE  2DD8               	goto	l3689
 10442  05BF  3000               	movlw	0
 10443  05C0  00B5               	movwf	___fldiv@b+3
 10444  05C1  3000               	movlw	0
 10445  05C2  00B4               	movwf	___fldiv@b+2
 10446  05C3  3000               	movlw	0
 10447  05C4  00B3               	movwf	___fldiv@b+1
 10448  05C5  3000               	movlw	0
 10449  05C6  00B2               	movwf	___fldiv@b
 10450  05C7  3080               	movlw	128
 10451  05C8  04B4               	iorwf	___fldiv@b+2,f
 10452  05C9  307F               	movlw	127
 10453  05CA  04B5               	iorwf	___fldiv@b+3,f
 10454  05CB                     L2:	
 10455  05CB  083F               	movf	___fldiv@sign,w
 10456  05CC  00B6               	movwf	??___fldiv
 10457  05CD  0836               	movf	??___fldiv,w
 10458  05CE  04B5               	iorwf	___fldiv@b+3,f
 10459  05CF  0835               	movf	___fldiv@b+3,w
 10460  05D0  00B1               	movwf	?___fldiv+3
 10461  05D1  0834               	movf	___fldiv@b+2,w
 10462  05D2  00B0               	movwf	?___fldiv+2
 10463  05D3  0833               	movf	___fldiv@b+1,w
 10464  05D4  00AF               	movwf	?___fldiv+1
 10465  05D5  0832               	movf	___fldiv@b,w
 10466  05D6  00AE               	movwf	?___fldiv
 10467  05D7  0008               	return
 10468  05D8                     l3689:	
 10469  05D8  0846               	movf	___fldiv@bexp,w
 10470  05D9  1D03               	btfss	3,2
 10471  05DA  2DE4               	goto	l3695
 10472  05DB  3000               	movlw	0
 10473  05DC  00B1               	movwf	?___fldiv+3
 10474  05DD  3000               	movlw	0
 10475  05DE  00B0               	movwf	?___fldiv+2
 10476  05DF  3000               	movlw	0
 10477  05E0  00AF               	movwf	?___fldiv+1
 10478  05E1  3000               	movlw	0
 10479  05E2  00AE               	movwf	?___fldiv
 10480  05E3  0008               	return
 10481  05E4                     l3695:	
 10482  05E4  0846               	movf	___fldiv@bexp,w
 10483  05E5  00B6               	movwf	??___fldiv
 10484  05E6  01B7               	clrf	??___fldiv+1
 10485  05E7  0837               	movf	??___fldiv+1,w
 10486  05E8  00B9               	movwf	??___fldiv+3
 10487  05E9  0847               	movf	___fldiv@aexp,w
 10488  05EA  0236               	subwf	??___fldiv,w
 10489  05EB  00B8               	movwf	??___fldiv+2
 10490  05EC  1C03               	skipc
 10491  05ED  03B9               	decf	??___fldiv+3,f
 10492  05EE  0838               	movf	??___fldiv+2,w
 10493  05EF  3E7F               	addlw	127
 10494  05F0  00C0               	movwf	___fldiv@new_exp
 10495  05F1  3000               	movlw	0
 10496  05F2  3D39               	addwfc	??___fldiv+3,w
 10497  05F3  00C1               	movwf	___fldiv@new_exp+1
 10498  05F4  0835               	movf	___fldiv@b+3,w
 10499  05F5  00BE               	movwf	___fldiv@rem+3
 10500  05F6  0834               	movf	___fldiv@b+2,w
 10501  05F7  00BD               	movwf	___fldiv@rem+2
 10502  05F8  0833               	movf	___fldiv@b+1,w
 10503  05F9  00BC               	movwf	___fldiv@rem+1
 10504  05FA  0832               	movf	___fldiv@b,w
 10505  05FB  00BB               	movwf	___fldiv@rem
 10506  05FC  3000               	movlw	0
 10507  05FD  00B5               	movwf	___fldiv@b+3
 10508  05FE  3000               	movlw	0
 10509  05FF  00B4               	movwf	___fldiv@b+2
 10510  0600  3000               	movlw	0
 10511  0601  00B3               	movwf	___fldiv@b+1
 10512  0602  3000               	movlw	0
 10513  0603  00B2               	movwf	___fldiv@b
 10514  0604  3000               	movlw	0
 10515  0605  00C5               	movwf	___fldiv@grs+3
 10516  0606  3000               	movlw	0
 10517  0607  00C4               	movwf	___fldiv@grs+2
 10518  0608  3000               	movlw	0
 10519  0609  00C3               	movwf	___fldiv@grs+1
 10520  060A  3000               	movlw	0
 10521  060B  00C2               	movwf	___fldiv@grs
 10522  060C  01C7               	clrf	___fldiv@aexp
 10523  060D                     l3723:	
 10524  060D  301A               	movlw	26
 10525  060E  0247               	subwf	___fldiv@aexp,w
 10526  060F  1803               	btfsc	3,0
 10527  0610  2E49               	goto	l3725
 10528  0611  0847               	movf	___fldiv@aexp,w
 10529  0612  1903               	btfsc	3,2
 10530  0613  2E2B               	goto	l3715
 10531  0614  3001               	movlw	1
 10532  0615                     u2555:	
 10533  0615  35BB               	lslf	___fldiv@rem,f
 10534  0616  0DBC               	rlf	___fldiv@rem+1,f
 10535  0617  0DBD               	rlf	___fldiv@rem+2,f
 10536  0618  0DBE               	rlf	___fldiv@rem+3,f
 10537  0619  0B89               	decfsz	9,f
 10538  061A  2E15               	goto	u2555
 10539  061B  3001               	movlw	1
 10540  061C                     u2565:	
 10541  061C  35B2               	lslf	___fldiv@b,f
 10542  061D  0DB3               	rlf	___fldiv@b+1,f
 10543  061E  0DB4               	rlf	___fldiv@b+2,f
 10544  061F  0DB5               	rlf	___fldiv@b+3,f
 10545  0620  0B89               	decfsz	9,f
 10546  0621  2E1C               	goto	u2565
 10547  0622  1BC5               	btfsc	___fldiv@grs+3,7
 10548  0623  1432               	bsf	___fldiv@b,0
 10549  0624  3001               	movlw	1
 10550  0625                     u2585:	
 10551  0625  35C2               	lslf	___fldiv@grs,f
 10552  0626  0DC3               	rlf	___fldiv@grs+1,f
 10553  0627  0DC4               	rlf	___fldiv@grs+2,f
 10554  0628  0DC5               	rlf	___fldiv@grs+3,f
 10555  0629  0B89               	decfsz	9,f
 10556  062A  2E25               	goto	u2585
 10557  062B                     l3715:	
 10558  062B  0831               	movf	___fldiv@a+3,w
 10559  062C  023E               	subwf	___fldiv@rem+3,w
 10560  062D  1D03               	skipz
 10561  062E  2E39               	goto	u2595
 10562  062F  0830               	movf	___fldiv@a+2,w
 10563  0630  023D               	subwf	___fldiv@rem+2,w
 10564  0631  1D03               	skipz
 10565  0632  2E39               	goto	u2595
 10566  0633  082F               	movf	___fldiv@a+1,w
 10567  0634  023C               	subwf	___fldiv@rem+1,w
 10568  0635  1D03               	skipz
 10569  0636  2E39               	goto	u2595
 10570  0637  082E               	movf	___fldiv@a,w
 10571  0638  023B               	subwf	___fldiv@rem,w
 10572  0639                     u2595:	
 10573  0639  1C03               	skipc
 10574  063A  2E44               	goto	l3721
 10575  063B  1745               	bsf	___fldiv@grs+3,6
 10576  063C  082E               	movf	___fldiv@a,w
 10577  063D  02BB               	subwf	___fldiv@rem,f
 10578  063E  082F               	movf	___fldiv@a+1,w
 10579  063F  3BBC               	subwfb	___fldiv@rem+1,f
 10580  0640  0830               	movf	___fldiv@a+2,w
 10581  0641  3BBD               	subwfb	___fldiv@rem+2,f
 10582  0642  0831               	movf	___fldiv@a+3,w
 10583  0643  3BBE               	subwfb	___fldiv@rem+3,f
 10584  0644                     l3721:	
 10585  0644  3001               	movlw	1
 10586  0645  00B6               	movwf	??___fldiv
 10587  0646  0836               	movf	??___fldiv,w
 10588  0647  07C7               	addwf	___fldiv@aexp,f
 10589  0648  2E0D               	goto	l3723
 10590  0649                     l3725:	
 10591  0649  083E               	movf	___fldiv@rem+3,w
 10592  064A  043D               	iorwf	___fldiv@rem+2,w
 10593  064B  043C               	iorwf	___fldiv@rem+1,w
 10594  064C  043B               	iorwf	___fldiv@rem,w
 10595  064D  1D03               	btfss	3,2
 10596  064E  1442               	bsf	___fldiv@grs,0
 10597  064F                     l3739:	
 10598  064F  1BB4               	btfsc	___fldiv@b+2,7
 10599  0650  2E66               	goto	l3741
 10600  0651  3001               	movlw	1
 10601  0652                     u2625:	
 10602  0652  35B2               	lslf	___fldiv@b,f
 10603  0653  0DB3               	rlf	___fldiv@b+1,f
 10604  0654  0DB4               	rlf	___fldiv@b+2,f
 10605  0655  0DB5               	rlf	___fldiv@b+3,f
 10606  0656  0B89               	decfsz	9,f
 10607  0657  2E52               	goto	u2625
 10608  0658  1BC5               	btfsc	___fldiv@grs+3,7
 10609  0659  1432               	bsf	___fldiv@b,0
 10610  065A  3001               	movlw	1
 10611  065B                     u2645:	
 10612  065B  35C2               	lslf	___fldiv@grs,f
 10613  065C  0DC3               	rlf	___fldiv@grs+1,f
 10614  065D  0DC4               	rlf	___fldiv@grs+2,f
 10615  065E  0DC5               	rlf	___fldiv@grs+3,f
 10616  065F  0B89               	decfsz	9,f
 10617  0660  2E5B               	goto	u2645
 10618  0661  30FF               	movlw	255
 10619  0662  07C0               	addwf	___fldiv@new_exp,f
 10620  0663  30FF               	movlw	255
 10621  0664  3DC1               	addwfc	___fldiv@new_exp+1,f
 10622  0665  2E4F               	goto	l3739
 10623  0666                     l3741:	
 10624  0666  01C7               	clrf	___fldiv@aexp
 10625  0667  1FC5               	btfss	___fldiv@grs+3,7
 10626  0668  2E7F               	goto	l3751
 10627  0669  30FF               	movlw	255
 10628  066A  0542               	andwf	___fldiv@grs,w
 10629  066B  00B6               	movwf	??___fldiv
 10630  066C  30FF               	movlw	255
 10631  066D  0543               	andwf	___fldiv@grs+1,w
 10632  066E  00B7               	movwf	??___fldiv+1
 10633  066F  30FF               	movlw	255
 10634  0670  0544               	andwf	___fldiv@grs+2,w
 10635  0671  00B8               	movwf	??___fldiv+2
 10636  0672  307F               	movlw	127
 10637  0673  0545               	andwf	___fldiv@grs+3,w
 10638  0674  00B9               	movwf	??___fldiv+3
 10639  0675  0839               	movf	??___fldiv+3,w
 10640  0676  0438               	iorwf	??___fldiv+2,w
 10641  0677  0437               	iorwf	??___fldiv+1,w
 10642  0678  0436               	iorwf	??___fldiv,w
 10643  0679  1903               	skipnz
 10644  067A  1832               	btfsc	___fldiv@b,0
 10645  067B  2E7D               	goto	l3747
 10646  067C  2E7F               	goto	l3751
 10647  067D                     l3747:	
 10648  067D  01C7               	clrf	___fldiv@aexp
 10649  067E  0AC7               	incf	___fldiv@aexp,f
 10650  067F                     l3751:	
 10651  067F  0847               	movf	___fldiv@aexp,w
 10652  0680  1903               	btfsc	3,2
 10653  0681  2EA8               	goto	l3761
 10654  0682  3001               	movlw	1
 10655  0683  07B2               	addwf	___fldiv@b,f
 10656  0684  3000               	movlw	0
 10657  0685  3DB3               	addwfc	___fldiv@b+1,f
 10658  0686  3000               	movlw	0
 10659  0687  3DB4               	addwfc	___fldiv@b+2,f
 10660  0688  3000               	movlw	0
 10661  0689  3DB5               	addwfc	___fldiv@b+3,f
 10662  068A  1C35               	btfss	___fldiv@b+3,0
 10663  068B  2EA8               	goto	l3761
 10664  068C  0832               	movf	___fldiv@b,w
 10665  068D  00B6               	movwf	??___fldiv
 10666  068E  0833               	movf	___fldiv@b+1,w
 10667  068F  00B7               	movwf	??___fldiv+1
 10668  0690  0834               	movf	___fldiv@b+2,w
 10669  0691  00B8               	movwf	??___fldiv+2
 10670  0692  0835               	movf	___fldiv@b+3,w
 10671  0693  00B9               	movwf	??___fldiv+3
 10672  0694  3001               	movlw	1
 10673  0695  00BA               	movwf	??___fldiv+4
 10674  0696                     u2715:	
 10675  0696  37B9               	asrf	??___fldiv+3,f
 10676  0697  0CB8               	rrf	??___fldiv+2,f
 10677  0698  0CB7               	rrf	??___fldiv+1,f
 10678  0699  0CB6               	rrf	??___fldiv,f
 10679  069A  0BBA               	decfsz	??___fldiv+4,f
 10680  069B  2E96               	goto	u2715
 10681  069C  0839               	movf	??___fldiv+3,w
 10682  069D  00B5               	movwf	___fldiv@b+3
 10683  069E  0838               	movf	??___fldiv+2,w
 10684  069F  00B4               	movwf	___fldiv@b+2
 10685  06A0  0837               	movf	??___fldiv+1,w
 10686  06A1  00B3               	movwf	___fldiv@b+1
 10687  06A2  0836               	movf	??___fldiv,w
 10688  06A3  00B2               	movwf	___fldiv@b
 10689  06A4  3001               	movlw	1
 10690  06A5  07C0               	addwf	___fldiv@new_exp,f
 10691  06A6  3000               	movlw	0
 10692  06A7  3DC1               	addwfc	___fldiv@new_exp+1,f
 10693  06A8                     l3761:	
 10694  06A8  0841               	movf	___fldiv@new_exp+1,w
 10695  06A9  3A80               	xorlw	128
 10696  06AA  00B6               	movwf	??___fldiv
 10697  06AB  3080               	movlw	128
 10698  06AC  0236               	subwf	??___fldiv,w
 10699  06AD  1D03               	skipz
 10700  06AE  2EB1               	goto	u2725
 10701  06AF  30FF               	movlw	255
 10702  06B0  0240               	subwf	___fldiv@new_exp,w
 10703  06B1                     u2725:	
 10704  06B1  1C03               	skipc
 10705  06B2  2EC0               	goto	l1569
 10706  06B3  30FF               	movlw	255
 10707  06B4  0140               	movlb	0	; select bank0
 10708  06B5  00C0               	movwf	___fldiv@new_exp
 10709  06B6  3000               	movlw	0
 10710  06B7  00C1               	movwf	___fldiv@new_exp+1
 10711  06B8  3000               	movlw	0
 10712  06B9  00B5               	movwf	___fldiv@b+3
 10713  06BA  3000               	movlw	0
 10714  06BB  00B4               	movwf	___fldiv@b+2
 10715  06BC  3000               	movlw	0
 10716  06BD  00B3               	movwf	___fldiv@b+1
 10717  06BE  3000               	movlw	0
 10718  06BF  00B2               	movwf	___fldiv@b
 10719  06C0                     l1569:	
 10720  06C0  0140               	movlb	0	; select bank0
 10721  06C1  0841               	movf	___fldiv@new_exp+1,w
 10722  06C2  3A80               	xorlw	128
 10723  06C3  00B6               	movwf	??___fldiv
 10724  06C4  3080               	movlw	128
 10725  06C5  0236               	subwf	??___fldiv,w
 10726  06C6  1D03               	skipz
 10727  06C7  2ECA               	goto	u2735
 10728  06C8  3001               	movlw	1
 10729  06C9  0240               	subwf	___fldiv@new_exp,w
 10730  06CA                     u2735:	
 10731  06CA  1803               	skipnc
 10732  06CB  2ED8               	goto	l1570
 10733  06CC  0140               	movlb	0	; select bank0
 10734  06CD  01C0               	clrf	___fldiv@new_exp
 10735  06CE  01C1               	clrf	___fldiv@new_exp+1
 10736  06CF  3000               	movlw	0
 10737  06D0  00B5               	movwf	___fldiv@b+3
 10738  06D1  3000               	movlw	0
 10739  06D2  00B4               	movwf	___fldiv@b+2
 10740  06D3  3000               	movlw	0
 10741  06D4  00B3               	movwf	___fldiv@b+1
 10742  06D5  3000               	movlw	0
 10743  06D6  00B2               	movwf	___fldiv@b
 10744  06D7  01BF               	clrf	___fldiv@sign
 10745  06D8                     l1570:	
 10746  06D8  0140               	movlb	0	; select bank0
 10747  06D9  0840               	movf	___fldiv@new_exp,w
 10748  06DA  00B6               	movwf	??___fldiv
 10749  06DB  0836               	movf	??___fldiv,w
 10750  06DC  00C6               	movwf	___fldiv@bexp
 10751  06DD  1C46               	btfss	___fldiv@bexp,0
 10752  06DE  2EE1               	goto	l3775
 10753  06DF  17B4               	bsf	___fldiv@b+2,7
 10754  06E0  2EE5               	goto	l1572
 10755  06E1                     l3775:	
 10756  06E1  307F               	movlw	127
 10757  06E2  00B6               	movwf	??___fldiv
 10758  06E3  0836               	movf	??___fldiv,w
 10759  06E4  05B4               	andwf	___fldiv@b+2,f
 10760  06E5                     l1572:	
 10761  06E5  3646               	lsrf	___fldiv@bexp,w
 10762  06E6  00B6               	movwf	??___fldiv
 10763  06E7  0836               	movf	??___fldiv,w
 10764  06E8  00B5               	movwf	___fldiv@b+3
 10765  06E9  2DCB               	goto	L2
 10766  06EA                     __end_of___fldiv:	
 10767                           
 10768                           	psect	text19
 10769  08F7                     __ptext19:	
 10770 ;; *************** function _LED_init *****************
 10771 ;; Defined at:
 10772 ;;		line 68 in file "dmx.c"
 10773 ;; Parameters:    Size  Location     Type
 10774 ;;		None
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;		None
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  1    wreg      void 
 10779 ;; Registers used:
 10780 ;;		wreg, status,2, status,0
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/0
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10790 ;;Total ram usage:        0 bytes
 10791 ;; Hardware stack levels used:    1
 10792 ;; Hardware stack levels required when called:    4
 10793 ;; This function calls:
 10794 ;;		Nothing
 10795 ;; This function is called by:
 10796 ;;		_main
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800                           
 10801                           ;psect for function _LED_init
 10802  08F7                     _LED_init:	
 10803                           
 10804                           ;dmx.c: 69:     CCP1CONbits.MODE = 0b1100;
 10805                           
 10806                           ;incstack = 0
 10807                           ; Regs used in _LED_init: [wreg+status,2+status,0]
 10808  08F7  0146               	movlb	6	; select bank6
 10809  08F8  080E               	movf	14,w	;volatile
 10810  08F9  39F0               	andlw	-16
 10811  08FA  380C               	iorlw	12
 10812  08FB  008E               	movwf	14	;volatile
 10813                           
 10814                           ;dmx.c: 70:     CCP2CONbits.MODE = 0b1100;
 10815  08FC  0812               	movf	18,w	;volatile
 10816  08FD  39F0               	andlw	-16
 10817  08FE  380C               	iorlw	12
 10818  08FF  0092               	movwf	18	;volatile
 10819                           
 10820                           ;dmx.c: 71:     CCP3CONbits.MODE = 0b1100;
 10821  0900  0816               	movf	22,w	;volatile
 10822  0901  39F0               	andlw	-16
 10823  0902  380C               	iorlw	12
 10824  0903  0096               	movwf	22	;volatile
 10825                           
 10826                           ;dmx.c: 72:     CCP4CONbits.MODE = 0b1100;
 10827  0904  081A               	movf	26,w	;volatile
 10828  0905  39F0               	andlw	-16
 10829  0906  380C               	iorlw	12
 10830  0907  009A               	movwf	26	;volatile
 10831                           
 10832                           ;dmx.c: 74:     CCP1CONbits.CCP1EN = 1;
 10833  0908  178E               	bsf	14,7	;volatile
 10834                           
 10835                           ;dmx.c: 75:     CCP2CONbits.CCP2EN = 1;
 10836  0909  1792               	bsf	18,7	;volatile
 10837                           
 10838                           ;dmx.c: 76:     CCP3CONbits.CCP3EN = 1;
 10839  090A  1796               	bsf	22,7	;volatile
 10840                           
 10841                           ;dmx.c: 77:     CCP4CONbits.CCP4EN = 1;
 10842  090B  179A               	bsf	26,7	;volatile
 10843                           
 10844                           ;dmx.c: 78:     T2CLKCON = 0x01;
 10845  090C  3001               	movlw	1
 10846  090D  0145               	movlb	5	; select bank5
 10847  090E  0090               	movwf	16	;volatile
 10848                           
 10849                           ;dmx.c: 80:     TRISC7 = 0;
 10850  090F  0140               	movlb	0	; select bank0
 10851  0910  1394               	bcf	20,7	;volatile
 10852                           
 10853                           ;dmx.c: 81:     TRISC6 = 0;
 10854  0911  1314               	bcf	20,6	;volatile
 10855                           
 10856                           ;dmx.c: 82:     TRISC3 = 0;
 10857  0912  1194               	bcf	20,3	;volatile
 10858                           
 10859                           ;dmx.c: 83:     TRISC4 = 0;
 10860  0913  1214               	bcf	20,4	;volatile
 10861                           
 10862                           ;dmx.c: 85:     RC7PPS = 0x09;
 10863  0914  3009               	movlw	9
 10864  0915  017E               	movlb	62	; select bank62
 10865  0916  00A7               	movwf	39	;volatile
 10866                           
 10867                           ;dmx.c: 86:     RC6PPS = 0x0A;
 10868  0917  300A               	movlw	10
 10869  0918  00A6               	movwf	38	;volatile
 10870                           
 10871                           ;dmx.c: 87:     RC3PPS = 0x0B;
 10872  0919  300B               	movlw	11
 10873  091A  00A3               	movwf	35	;volatile
 10874                           
 10875                           ;dmx.c: 88:     RC4PPS = 0x0C;
 10876  091B  300C               	movlw	12
 10877  091C  00A4               	movwf	36	;volatile
 10878                           
 10879                           ;dmx.c: 90:     CCPR1H = 0x00;
 10880  091D  0146               	movlb	6	; select bank6
 10881  091E  018D               	clrf	13	;volatile
 10882                           
 10883                           ;dmx.c: 91:     CCPR1L = 0x04;
 10884  091F  3004               	movlw	4
 10885  0920  008C               	movwf	12	;volatile
 10886                           
 10887                           ;dmx.c: 92:     CCPR2H = 0x00;
 10888  0921  0191               	clrf	17	;volatile
 10889                           
 10890                           ;dmx.c: 93:     CCPR2L = 0x04;
 10891  0922  3004               	movlw	4
 10892  0923  0090               	movwf	16	;volatile
 10893                           
 10894                           ;dmx.c: 94:     CCPR3H = 0x00;
 10895  0924  0195               	clrf	21	;volatile
 10896                           
 10897                           ;dmx.c: 95:     CCPR3L = 0x04;
 10898  0925  3004               	movlw	4
 10899  0926  0094               	movwf	20	;volatile
 10900                           
 10901                           ;dmx.c: 96:     CCPR4H = 0x00;
 10902  0927  0199               	clrf	25	;volatile
 10903                           
 10904                           ;dmx.c: 97:     CCPR4L = 0x04;
 10905  0928  3004               	movlw	4
 10906  0929  0098               	movwf	24	;volatile
 10907                           
 10908                           ;dmx.c: 98:     T2CONbits.ON = 1;
 10909  092A  0145               	movlb	5	; select bank5
 10910  092B  178E               	bsf	14,7	;volatile
 10911  092C  0008               	return
 10912  092D                     __end_of_LED_init:	
 10913                           
 10914                           	psect	text20
 10915  1625                     __ptext20:	
 10916 ;; *************** function _DMX_init *****************
 10917 ;; Defined at:
 10918 ;;		line 34 in file "dmx.c"
 10919 ;; Parameters:    Size  Location     Type
 10920 ;;		None
 10921 ;; Auto vars:     Size  Location     Type
 10922 ;;		None
 10923 ;; Return value:  Size  Location     Type
 10924 ;;                  1    wreg      void 
 10925 ;; Registers used:
 10926 ;;		wreg, status,2, status,0, pclath, cstack
 10927 ;; Tracked objects:
 10928 ;;		On entry : 0/0
 10929 ;;		On exit  : 0/0
 10930 ;;		Unchanged: 0/0
 10931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10936 ;;Total ram usage:        0 bytes
 10937 ;; Hardware stack levels used:    1
 10938 ;; Hardware stack levels required when called:    5
 10939 ;; This function calls:
 10940 ;;		_EUSART1_SetRxInterruptHandler
 10941 ;; This function is called by:
 10942 ;;		_main
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946                           
 10947                           ;psect for function _DMX_init
 10948  1625                     _DMX_init:	
 10949                           
 10950                           ;dmx.c: 35:     EUSART1_SetRxInterruptHandler(handler);
 10951                           
 10952                           ;incstack = 0
 10953                           ; Regs used in _DMX_init: [wreg+status,2+status,0+pclath+cstack]
 10954  1625  308D               	movlw	low _handler
 10955  1626  0140               	movlb	0	; select bank0
 10956  1627  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
 10957  1628  3008               	movlw	high _handler
 10958  1629  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
 10959  162A  3195  25B2         	fcall	_EUSART1_SetRxInterruptHandler
 10960                           
 10961                           ;dmx.c: 36:     TRISB4 = 1;
 10962  162C  0140               	movlb	0	; select bank0
 10963  162D  1613               	bsf	19,4	;volatile
 10964                           
 10965                           ;dmx.c: 37:     ANSELB = 0x00;
 10966  162E  017E               	movlb	62	; select bank62
 10967  162F  01C3               	clrf	67	;volatile
 10968                           
 10969                           ;dmx.c: 39:     point = 0;
 10970  1630  0141               	movlb	1	; select bank1
 10971  1631  01A5               	clrf	_point^(0+128)
 10972  1632  01A6               	clrf	(_point+1)^(0+128)
 10973  1633  0008               	return
 10974  1634                     __end_of_DMX_init:	
 10975                           
 10976                           	psect	text21
 10977  15B2                     __ptext21:	
 10978 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
 10979 ;; Defined at:
 10980 ;;		line 277 in file "mcc_generated_files/eusart1.c"
 10981 ;; Parameters:    Size  Location     Type
 10982 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 10983 ;;		 -> handler(1), EUSART1_Receive_ISR(1), 
 10984 ;; Auto vars:     Size  Location     Type
 10985 ;;		None
 10986 ;; Return value:  Size  Location     Type
 10987 ;;                  1    wreg      void 
 10988 ;; Registers used:
 10989 ;;		wreg
 10990 ;; Tracked objects:
 10991 ;;		On entry : 0/0
 10992 ;;		On exit  : 0/0
 10993 ;;		Unchanged: 0/0
 10994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10995 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10998 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10999 ;;Total ram usage:        2 bytes
 11000 ;; Hardware stack levels used:    1
 11001 ;; Hardware stack levels required when called:    4
 11002 ;; This function calls:
 11003 ;;		Nothing
 11004 ;; This function is called by:
 11005 ;;		_EUSART1_Initialize
 11006 ;;		_DMX_init
 11007 ;; This function uses a non-reentrant model
 11008 ;;
 11009                           
 11010                           
 11011                           ;psect for function _EUSART1_SetRxInterruptHandler
 11012  15B2                     _EUSART1_SetRxInterruptHandler:	
 11013                           
 11014                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 11015                           
 11016                           ;incstack = 0
 11017                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
 11018  15B2  0140               	movlb	0	; select bank0
 11019  15B3  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
 11020  15B4  0142               	movlb	2	; select bank2
 11021  15B5  00E3               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
 11022  15B6  0140               	movlb	0	; select bank0
 11023  15B7  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
 11024  15B8  0142               	movlb	2	; select bank2
 11025  15B9  00E2               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
 11026  15BA  0008               	return
 11027  15BB                     __end_of_EUSART1_SetRxInterruptHandler:	
 11028                           
 11029                           	psect	text22
 11030  0A58                     __ptext22:	
 11031 ;; *************** function _CONTROLLER_task *****************
 11032 ;; Defined at:
 11033 ;;		line 45 in file "controller.c"
 11034 ;; Parameters:    Size  Location     Type
 11035 ;;		None
 11036 ;; Auto vars:     Size  Location     Type
 11037 ;;  active          1   42[BANK0 ] _Bool 
 11038 ;; Return value:  Size  Location     Type
 11039 ;;                  1    wreg      void 
 11040 ;; Registers used:
 11041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11042 ;; Tracked objects:
 11043 ;;		On entry : 0/0
 11044 ;;		On exit  : 0/0
 11045 ;;		Unchanged: 0/0
 11046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11048 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11049 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11050 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11051 ;;Total ram usage:        3 bytes
 11052 ;; Hardware stack levels used:    1
 11053 ;; Hardware stack levels required when called:   11
 11054 ;; This function calls:
 11055 ;;		_BUTTONS_isClicked
 11056 ;;		_BUTTONS_isHeld
 11057 ;;		_CLOCK_getTime
 11058 ;;		_TM1650_enable
 11059 ;;		_address_dec
 11060 ;;		_address_inc
 11061 ;; This function is called by:
 11062 ;;		_main
 11063 ;; This function uses a non-reentrant model
 11064 ;;
 11065                           
 11066                           
 11067                           ;psect for function _CONTROLLER_task
 11068  0A58                     _CONTROLLER_task:	
 11069                           
 11070                           ;controller.c: 46:     _Bool active = 1;
 11071                           
 11072                           ;incstack = 0
 11073                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11074  0A58  0140               	movlb	0	; select bank0
 11075  0A59  01CA               	clrf	CONTROLLER_task@active
 11076  0A5A  0ACA               	incf	CONTROLLER_task@active,f
 11077                           
 11078                           ;controller.c: 47:     if (BUTTONS_isClicked(up)) {
 11079  0A5B  0141               	movlb	1	; select bank1
 11080  0A5C  083F               	movf	_up^(0+128),w
 11081  0A5D  3196  2667  318A   	fcall	_BUTTONS_isClicked
 11082  0A60  3A00               	xorlw	0
 11083  0A61  1903               	skipnz
 11084  0A62  2A67               	goto	l5497
 11085  0A63                     l5495:	
 11086                           
 11087                           ;controller.c: 48:         address_inc();
 11088  0A63  3187  27E6  318A   	fcall	_address_inc
 11089                           
 11090                           ;controller.c: 49:     }else if(BUTTONS_isHeld(up)){
 11091  0A66  2A85               	goto	l5511
 11092  0A67                     l5497:	
 11093  0A67  0141               	movlb	1	; select bank1
 11094  0A68  083F               	movf	_up^(0+128),w
 11095  0A69  3196  2616  318A   	fcall	_BUTTONS_isHeld
 11096  0A6C  3A00               	xorlw	0
 11097  0A6D  1D03               	btfss	3,2
 11098  0A6E  2A63               	goto	l5495
 11099  0A6F  0141               	movlb	1	; select bank1
 11100  0A70  083E               	movf	_down^(0+128),w
 11101  0A71  3196  2667  318A   	fcall	_BUTTONS_isClicked
 11102  0A74  3A00               	xorlw	0
 11103  0A75  1903               	skipnz
 11104  0A76  2A7B               	goto	l5505
 11105  0A77                     l5503:	
 11106                           
 11107                           ;controller.c: 52:         address_dec();
 11108  0A77  3196  26DA  318A   	fcall	_address_dec
 11109                           
 11110                           ;controller.c: 53:     }else if(BUTTONS_isHeld(down)){
 11111  0A7A  2A85               	goto	l5511
 11112  0A7B                     l5505:	
 11113  0A7B  0141               	movlb	1	; select bank1
 11114  0A7C  083E               	movf	_down^(0+128),w
 11115  0A7D  3196  2616  318A   	fcall	_BUTTONS_isHeld
 11116  0A80  3A00               	xorlw	0
 11117  0A81  1D03               	btfss	3,2
 11118  0A82  2A77               	goto	l5503
 11119                           
 11120                           ;controller.c: 56:         active = 0;
 11121  0A83  0140               	movlb	0	; select bank0
 11122  0A84  01CA               	clrf	CONTROLLER_task@active
 11123  0A85                     l5511:	
 11124                           
 11125                           ;controller.c: 59:     if(active){
 11126  0A85  0140               	movlb	0	; select bank0
 11127  0A86  084A               	movf	CONTROLLER_task@active,w
 11128  0A87  1903               	btfsc	3,2
 11129  0A88  2A98               	goto	l5517
 11130                           
 11131                           ;controller.c: 60:         TM1650_enable(1);
 11132  0A89  3001               	movlw	1
 11133  0A8A  3196  26C2  318A   	fcall	_TM1650_enable
 11134                           
 11135                           ;controller.c: 61:         lastActiveTime = CLOCK_getTime();
 11136  0A8D  3195  25A9  318A   	fcall	_CLOCK_getTime
 11137  0A90  0140               	movlb	0	; select bank0
 11138  0A91  0821               	movf	?_CLOCK_getTime+1,w
 11139  0A92  0141               	movlb	1	; select bank1
 11140  0A93  00B2               	movwf	(_lastActiveTime+1)^(0+128)
 11141  0A94  0140               	movlb	0	; select bank0
 11142  0A95  0820               	movf	?_CLOCK_getTime,w
 11143  0A96  0141               	movlb	1	; select bank1
 11144  0A97  00B1               	movwf	_lastActiveTime^(0+128)
 11145  0A98                     l5517:	
 11146                           
 11147                           ;controller.c: 63:     if(CLOCK_getTime() - lastActiveTime >= 5000){
 11148  0A98  3195  25A9  318A   	fcall	_CLOCK_getTime
 11149  0A9B  0141               	movlb	1	; select bank1
 11150  0A9C  0831               	movf	_lastActiveTime^(0+128),w
 11151  0A9D  0140               	movlb	0	; select bank0
 11152  0A9E  0220               	subwf	?_CLOCK_getTime,w
 11153  0A9F  00C8               	movwf	??_CONTROLLER_task
 11154  0AA0  0141               	movlb	1	; select bank1
 11155  0AA1  0832               	movf	(_lastActiveTime+1)^(0+128),w
 11156  0AA2  0140               	movlb	0	; select bank0
 11157  0AA3  3B21               	subwfb	?_CLOCK_getTime+1,w
 11158  0AA4  00C9               	movwf	??_CONTROLLER_task+1
 11159  0AA5  3013               	movlw	19
 11160  0AA6  0249               	subwf	??_CONTROLLER_task+1,w
 11161  0AA7  3088               	movlw	136
 11162  0AA8  1903               	skipnz
 11163  0AA9  0248               	subwf	??_CONTROLLER_task,w
 11164  0AAA  1C03               	skipc
 11165  0AAB  0008               	return
 11166                           
 11167                           ;controller.c: 64:         TM1650_enable(0);
 11168  0AAC  3000               	movlw	0
 11169  0AAD  3196  26C2  318A   	fcall	_TM1650_enable
 11170                           
 11171                           ;controller.c: 65:         lastActiveTime = CLOCK_getTime() - 5001;
 11172  0AB0  3195  25A9         	fcall	_CLOCK_getTime
 11173  0AB2  0140               	movlb	0	; select bank0
 11174  0AB3  0820               	movf	?_CLOCK_getTime,w
 11175  0AB4  3E77               	addlw	119
 11176  0AB5  0141               	movlb	1	; select bank1
 11177  0AB6  00B1               	movwf	_lastActiveTime^(0+128)
 11178  0AB7  30EC               	movlw	236
 11179  0AB8  0140               	movlb	0	; select bank0
 11180  0AB9  3D21               	addwfc	?_CLOCK_getTime+1,w
 11181  0ABA  0141               	movlb	1	; select bank1
 11182  0ABB  00B2               	movwf	(_lastActiveTime+1)^(0+128)
 11183  0ABC  0008               	return
 11184  0ABD                     __end_of_CONTROLLER_task:	
 11185                           
 11186                           	psect	text23
 11187  07E6                     __ptext23:	
 11188 ;; *************** function _address_inc *****************
 11189 ;; Defined at:
 11190 ;;		line 20 in file "controller.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;		None
 11193 ;; Auto vars:     Size  Location     Type
 11194 ;;		None
 11195 ;; Return value:  Size  Location     Type
 11196 ;;                  1    wreg      void 
 11197 ;; Registers used:
 11198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11199 ;; Tracked objects:
 11200 ;;		On entry : 0/0
 11201 ;;		On exit  : 0/0
 11202 ;;		Unchanged: 0/0
 11203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11208 ;;Total ram usage:        0 bytes
 11209 ;; Hardware stack levels used:    1
 11210 ;; Hardware stack levels required when called:   10
 11211 ;; This function calls:
 11212 ;;		_TM1650_fastPrintNum
 11213 ;; This function is called by:
 11214 ;;		_CONTROLLER_task
 11215 ;; This function uses a non-reentrant model
 11216 ;;
 11217                           
 11218                           
 11219                           ;psect for function _address_inc
 11220  07E6                     _address_inc:	
 11221                           
 11222                           ;controller.c: 22:     if(address == 512)
 11223                           
 11224                           ;incstack = 0
 11225                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11226  07E6  3002               	movlw	2
 11227  07E7  0141               	movlb	1	; select bank1
 11228  07E8  066B               	xorwf	(_address+1)^(0+128),w
 11229  07E9  046A               	iorwf	_address^(0+128),w
 11230  07EA  1D03               	btfss	3,2
 11231  07EB  2FF1               	goto	l5015
 11232                           
 11233                           ;controller.c: 23:         address = 1;
 11234  07EC  3001               	movlw	1
 11235  07ED  00EA               	movwf	_address^(0+128)
 11236  07EE  3000               	movlw	0
 11237  07EF  00EB               	movwf	(_address^(0+128)+1)
 11238  07F0  2FF5               	goto	l5017
 11239  07F1                     l5015:	
 11240                           
 11241                           ;controller.c: 25:         address++;
 11242  07F1  3001               	movlw	1
 11243  07F2  07EA               	addwf	_address^(0+128),f
 11244  07F3  3000               	movlw	0
 11245  07F4  3DEB               	addwfc	(_address+1)^(0+128),f
 11246  07F5                     l5017:	
 11247                           
 11248                           ;controller.c: 28:     TM1650_fastPrintNum(address);
 11249  07F5  086B               	movf	(_address+1)^(0+128),w
 11250  07F6  0140               	movlb	0	; select bank0
 11251  07F7  00BC               	movwf	TM1650_fastPrintNum@num+1
 11252  07F8  0141               	movlb	1	; select bank1
 11253  07F9  086A               	movf	_address^(0+128),w
 11254  07FA  0140               	movlb	0	; select bank0
 11255  07FB  00BB               	movwf	TM1650_fastPrintNum@num
 11256  07FC  3180  2079         	fcall	_TM1650_fastPrintNum
 11257  07FE  0008               	return
 11258  07FF                     __end_of_address_inc:	
 11259                           
 11260                           	psect	text24
 11261  16DA                     __ptext24:	
 11262 ;; *************** function _address_dec *****************
 11263 ;; Defined at:
 11264 ;;		line 34 in file "controller.c"
 11265 ;; Parameters:    Size  Location     Type
 11266 ;;		None
 11267 ;; Auto vars:     Size  Location     Type
 11268 ;;		None
 11269 ;; Return value:  Size  Location     Type
 11270 ;;                  1    wreg      void 
 11271 ;; Registers used:
 11272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11273 ;; Tracked objects:
 11274 ;;		On entry : 0/0
 11275 ;;		On exit  : 0/0
 11276 ;;		Unchanged: 0/0
 11277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11282 ;;Total ram usage:        0 bytes
 11283 ;; Hardware stack levels used:    1
 11284 ;; Hardware stack levels required when called:   10
 11285 ;; This function calls:
 11286 ;;		_TM1650_fastPrintNum
 11287 ;; This function is called by:
 11288 ;;		_CONTROLLER_task
 11289 ;; This function uses a non-reentrant model
 11290 ;;
 11291                           
 11292                           
 11293                           ;psect for function _address_dec
 11294  16DA                     _address_dec:	
 11295                           
 11296                           ;controller.c: 36:     if(address == 1)
 11297                           
 11298                           ;incstack = 0
 11299                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11300  16DA  0141               	movlb	1	; select bank1
 11301  16DB  036A               	decf	_address^(0+128),w
 11302  16DC  046B               	iorwf	(_address+1)^(0+128),w
 11303  16DD  1D03               	btfss	3,2
 11304  16DE  2EE4               	goto	l5023
 11305                           
 11306                           ;controller.c: 37:         address = 512;
 11307  16DF  3000               	movlw	0
 11308  16E0  00EA               	movwf	_address^(0+128)
 11309  16E1  3002               	movlw	2
 11310  16E2  00EB               	movwf	(_address^(0+128)+1)
 11311  16E3  2EE8               	goto	l5025
 11312  16E4                     l5023:	
 11313                           
 11314                           ;controller.c: 39:         address--;
 11315  16E4  3001               	movlw	1
 11316  16E5  02EA               	subwf	_address^(0+128),f
 11317  16E6  3000               	movlw	0
 11318  16E7  3BEB               	subwfb	(_address+1)^(0+128),f
 11319  16E8                     l5025:	
 11320                           
 11321                           ;controller.c: 42:     TM1650_fastPrintNum(address);
 11322  16E8  086B               	movf	(_address+1)^(0+128),w
 11323  16E9  0140               	movlb	0	; select bank0
 11324  16EA  00BC               	movwf	TM1650_fastPrintNum@num+1
 11325  16EB  0141               	movlb	1	; select bank1
 11326  16EC  086A               	movf	_address^(0+128),w
 11327  16ED  0140               	movlb	0	; select bank0
 11328  16EE  00BB               	movwf	TM1650_fastPrintNum@num
 11329  16EF  3180  2079         	fcall	_TM1650_fastPrintNum
 11330  16F1  0008               	return
 11331  16F2                     __end_of_address_dec:	
 11332                           
 11333                           	psect	text25
 11334  16C2                     __ptext25:	
 11335 ;; *************** function _TM1650_enable *****************
 11336 ;; Defined at:
 11337 ;;		line 112 in file "tm1650.c"
 11338 ;; Parameters:    Size  Location     Type
 11339 ;;  enable          1    wreg     _Bool 
 11340 ;; Auto vars:     Size  Location     Type
 11341 ;;  enable          1   21[BANK0 ] _Bool 
 11342 ;; Return value:  Size  Location     Type
 11343 ;;                  1    wreg      void 
 11344 ;; Registers used:
 11345 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11346 ;; Tracked objects:
 11347 ;;		On entry : 0/0
 11348 ;;		On exit  : 0/0
 11349 ;;		Unchanged: 0/0
 11350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11352 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11354 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11355 ;;Total ram usage:        1 bytes
 11356 ;; Hardware stack levels used:    1
 11357 ;; Hardware stack levels required when called:    8
 11358 ;; This function calls:
 11359 ;;		_writeData
 11360 ;; This function is called by:
 11361 ;;		_TM1650_init
 11362 ;;		_CONTROLLER_task
 11363 ;; This function uses a non-reentrant model
 11364 ;;
 11365                           
 11366                           
 11367                           ;psect for function _TM1650_enable
 11368  16C2                     _TM1650_enable:	
 11369                           
 11370                           ;incstack = 0
 11371                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11372                           ;TM1650_enable@enable stored from wreg
 11373  16C2  0140               	movlb	0	; select bank0
 11374  16C3  00B5               	movwf	TM1650_enable@enable
 11375                           
 11376                           ;tm1650.c: 113:     if(enable == 1){
 11377  16C4  0335               	decf	TM1650_enable@enable,w
 11378  16C5  1D03               	btfss	3,2
 11379  16C6  2ED0               	goto	l4971
 11380                           
 11381                           ;tm1650.c: 114:         writeData(0x24, 0x01);
 11382  16C7  01AE               	clrf	writeData@data
 11383  16C8  0AAE               	incf	writeData@data,f
 11384  16C9  3024               	movlw	36
 11385  16CA  3197  278C         	fcall	_writeData
 11386                           
 11387                           ;tm1650.c: 115:         displayState = 1;
 11388  16CC  0141               	movlb	1	; select bank1
 11389  16CD  01C0               	clrf	_displayState^(0+128)
 11390  16CE  0AC0               	incf	_displayState^(0+128),f
 11391                           
 11392                           ;tm1650.c: 116:     }else if(enable == 0){
 11393  16CF  0008               	return
 11394  16D0                     l4971:	
 11395  16D0  0835               	movf	TM1650_enable@enable,w
 11396  16D1  1D03               	btfss	3,2
 11397  16D2  0008               	return
 11398                           
 11399                           ;tm1650.c: 117:         writeData(0x24, 0x00);
 11400  16D3  01AE               	clrf	writeData@data
 11401  16D4  3024               	movlw	36
 11402  16D5  3197  278C         	fcall	_writeData
 11403                           
 11404                           ;tm1650.c: 118:         displayState = 0;
 11405  16D7  0141               	movlb	1	; select bank1
 11406  16D8  01C0               	clrf	_displayState^(0+128)
 11407  16D9  0008               	return
 11408  16DA                     __end_of_TM1650_enable:	
 11409                           
 11410                           	psect	text26
 11411  1616                     __ptext26:	
 11412 ;; *************** function _BUTTONS_isHeld *****************
 11413 ;; Defined at:
 11414 ;;		line 86 in file "buttons.c"
 11415 ;; Parameters:    Size  Location     Type
 11416 ;;  button          1    wreg     PTR struct .
 11417 ;;		 -> buttons(32), NULL(0), 
 11418 ;; Auto vars:     Size  Location     Type
 11419 ;;  button          1    0[BANK0 ] PTR struct .
 11420 ;;		 -> buttons(32), NULL(0), 
 11421 ;; Return value:  Size  Location     Type
 11422 ;;                  1    wreg      _Bool 
 11423 ;; Registers used:
 11424 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11425 ;; Tracked objects:
 11426 ;;		On entry : 0/0
 11427 ;;		On exit  : 0/0
 11428 ;;		Unchanged: 0/0
 11429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11431 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11433 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11434 ;;Total ram usage:        1 bytes
 11435 ;; Hardware stack levels used:    1
 11436 ;; Hardware stack levels required when called:    4
 11437 ;; This function calls:
 11438 ;;		Nothing
 11439 ;; This function is called by:
 11440 ;;		_CONTROLLER_task
 11441 ;; This function uses a non-reentrant model
 11442 ;;
 11443                           
 11444                           
 11445                           ;psect for function _BUTTONS_isHeld
 11446  1616                     _BUTTONS_isHeld:	
 11447                           
 11448                           ;incstack = 0
 11449                           ; Regs used in _BUTTONS_isHeld: [wreg+fsr1l+fsr1h+status,2+status,0]
 11450                           ;BUTTONS_isHeld@button stored from wreg
 11451  1616  0140               	movlb	0	; select bank0
 11452  1617  00A0               	movwf	BUTTONS_isHeld@button
 11453                           
 11454                           ;buttons.c: 87:     if(button->event == EVENT_HELD){
 11455  1618  0820               	movf	BUTTONS_isHeld@button,w
 11456  1619  3E05               	addlw	5
 11457  161A  0086               	movwf	6
 11458  161B  3001               	movlw	1	; select bank2/3
 11459  161C  0087               	movwf	7
 11460  161D  3002               	movlw	2
 11461  161E  0601               	xorwf	1,w
 11462  161F  1D03               	btfss	3,2
 11463  1620  2E23               	goto	l5007
 11464                           
 11465                           ;buttons.c: 89:         return 1;
 11466  1621  3001               	movlw	1
 11467  1622  0008               	return
 11468  1623                     l5007:	
 11469                           
 11470                           ;buttons.c: 91:     return 0;
 11471  1623  3000               	movlw	0
 11472  1624  0008               	return
 11473  1625                     __end_of_BUTTONS_isHeld:	
 11474                           
 11475                           	psect	text27
 11476  1667                     __ptext27:	
 11477 ;; *************** function _BUTTONS_isClicked *****************
 11478 ;; Defined at:
 11479 ;;		line 77 in file "buttons.c"
 11480 ;; Parameters:    Size  Location     Type
 11481 ;;  button          1    wreg     PTR struct .
 11482 ;;		 -> buttons(32), NULL(0), 
 11483 ;; Auto vars:     Size  Location     Type
 11484 ;;  button          1    0[BANK0 ] PTR struct .
 11485 ;;		 -> buttons(32), NULL(0), 
 11486 ;; Return value:  Size  Location     Type
 11487 ;;                  1    wreg      _Bool 
 11488 ;; Registers used:
 11489 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11490 ;; Tracked objects:
 11491 ;;		On entry : 0/0
 11492 ;;		On exit  : 0/0
 11493 ;;		Unchanged: 0/0
 11494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11496 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11498 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11499 ;;Total ram usage:        1 bytes
 11500 ;; Hardware stack levels used:    1
 11501 ;; Hardware stack levels required when called:    4
 11502 ;; This function calls:
 11503 ;;		Nothing
 11504 ;; This function is called by:
 11505 ;;		_CONTROLLER_task
 11506 ;; This function uses a non-reentrant model
 11507 ;;
 11508                           
 11509                           
 11510                           ;psect for function _BUTTONS_isClicked
 11511  1667                     _BUTTONS_isClicked:	
 11512                           
 11513                           ;incstack = 0
 11514                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 11515                           ;BUTTONS_isClicked@button stored from wreg
 11516  1667  0140               	movlb	0	; select bank0
 11517  1668  00A0               	movwf	BUTTONS_isClicked@button
 11518                           
 11519                           ;buttons.c: 78:     if (button->event == EVENT_PRESSED) {
 11520  1669  0820               	movf	BUTTONS_isClicked@button,w
 11521  166A  3E05               	addlw	5
 11522  166B  0086               	movwf	6
 11523  166C  3001               	movlw	1	; select bank2/3
 11524  166D  0087               	movwf	7
 11525  166E  0301               	decf	1,w
 11526  166F  1D03               	btfss	3,2
 11527  1670  2E79               	goto	l4997
 11528                           
 11529                           ;buttons.c: 79:         button->event = EVENT_IDLE;
 11530  1671  0820               	movf	BUTTONS_isClicked@button,w
 11531  1672  3E05               	addlw	5
 11532  1673  0086               	movwf	6
 11533  1674  3001               	movlw	1	; select bank2/3
 11534  1675  0087               	movwf	7
 11535  1676  0181               	clrf	1
 11536                           
 11537                           ;buttons.c: 80:         return 1;
 11538  1677  3001               	movlw	1
 11539  1678  0008               	return
 11540  1679                     l4997:	
 11541                           
 11542                           ;buttons.c: 83:     return 0;
 11543  1679  3000               	movlw	0
 11544  167A  0008               	return
 11545  167B                     __end_of_BUTTONS_isClicked:	
 11546                           
 11547                           	psect	text28
 11548  15F2                     __ptext28:	
 11549 ;; *************** function _CONTROLLER_init *****************
 11550 ;; Defined at:
 11551 ;;		line 13 in file "controller.c"
 11552 ;; Parameters:    Size  Location     Type
 11553 ;;		None
 11554 ;; Auto vars:     Size  Location     Type
 11555 ;;		None
 11556 ;; Return value:  Size  Location     Type
 11557 ;;                  1    wreg      void 
 11558 ;; Registers used:
 11559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11560 ;; Tracked objects:
 11561 ;;		On entry : 0/0
 11562 ;;		On exit  : 0/0
 11563 ;;		Unchanged: 0/0
 11564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11569 ;;Total ram usage:        0 bytes
 11570 ;; Hardware stack levels used:    1
 11571 ;; Hardware stack levels required when called:   10
 11572 ;; This function calls:
 11573 ;;		_TM1650_fastPrintNum
 11574 ;; This function is called by:
 11575 ;;		_main
 11576 ;; This function uses a non-reentrant model
 11577 ;;
 11578                           
 11579                           
 11580                           ;psect for function _CONTROLLER_init
 11581  15F2                     _CONTROLLER_init:	
 11582                           
 11583                           ;controller.c: 14:     TM1650_fastPrintNum(address);
 11584                           
 11585                           ;incstack = 0
 11586                           ; Regs used in _CONTROLLER_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11587  15F2  0141               	movlb	1	; select bank1
 11588  15F3  086B               	movf	(_address+1)^(0+128),w
 11589  15F4  0140               	movlb	0	; select bank0
 11590  15F5  00BC               	movwf	TM1650_fastPrintNum@num+1
 11591  15F6  0141               	movlb	1	; select bank1
 11592  15F7  086A               	movf	_address^(0+128),w
 11593  15F8  0140               	movlb	0	; select bank0
 11594  15F9  00BB               	movwf	TM1650_fastPrintNum@num
 11595  15FA  3180  2079         	fcall	_TM1650_fastPrintNum
 11596  15FC  0008               	return
 11597  15FD                     __end_of_CONTROLLER_init:	
 11598                           
 11599                           	psect	text29
 11600  0079                     __ptext29:	
 11601 ;; *************** function _TM1650_fastPrintNum *****************
 11602 ;; Defined at:
 11603 ;;		line 72 in file "tm1650.c"
 11604 ;; Parameters:    Size  Location     Type
 11605 ;;  num             2   27[BANK0 ] unsigned short 
 11606 ;; Auto vars:     Size  Location     Type
 11607 ;;  array           4   34[BANK0 ] unsigned char [4]
 11608 ;; Return value:  Size  Location     Type
 11609 ;;                  1    wreg      void 
 11610 ;; Registers used:
 11611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11612 ;; Tracked objects:
 11613 ;;		On entry : 0/0
 11614 ;;		On exit  : 0/0
 11615 ;;		Unchanged: 0/0
 11616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11617 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11618 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11619 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11620 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11621 ;;Total ram usage:       13 bytes
 11622 ;; Hardware stack levels used:    1
 11623 ;; Hardware stack levels required when called:    9
 11624 ;; This function calls:
 11625 ;;		_TM1650_setDigit
 11626 ;;		___lwdiv
 11627 ;;		___lwmod
 11628 ;; This function is called by:
 11629 ;;		_main
 11630 ;;		_CONTROLLER_init
 11631 ;;		_address_inc
 11632 ;;		_address_dec
 11633 ;; This function uses a non-reentrant model
 11634 ;;
 11635                           
 11636                           
 11637                           ;psect for function _TM1650_fastPrintNum
 11638  0079                     _TM1650_fastPrintNum:	
 11639                           
 11640                           ;tm1650.c: 73:     char array[4];;tm1650.c: 74:     if(num < 10){
 11641                           
 11642                           ;incstack = 0
 11643                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11644  0079  3000               	movlw	0
 11645  007A  0140               	movlb	0	; select bank0
 11646  007B  023C               	subwf	TM1650_fastPrintNum@num+1,w
 11647  007C  300A               	movlw	10
 11648  007D  1903               	skipnz
 11649  007E  023B               	subwf	TM1650_fastPrintNum@num,w
 11650  007F  1803               	skipnc
 11651  0080  28B9               	goto	l4761
 11652                           
 11653                           ;tm1650.c: 75:         array[0] = (num % 10) + 48;
 11654  0081  300A               	movlw	10
 11655  0082  00A0               	movwf	___lwmod@divisor
 11656  0083  3000               	movlw	0
 11657  0084  00A1               	movwf	___lwmod@divisor+1
 11658  0085  083C               	movf	TM1650_fastPrintNum@num+1,w
 11659  0086  00A3               	movwf	___lwmod@dividend+1
 11660  0087  083B               	movf	TM1650_fastPrintNum@num,w
 11661  0088  00A2               	movwf	___lwmod@dividend
 11662  0089  3197  27D3  3180   	fcall	___lwmod
 11663  008C  0140               	movlb	0	; select bank0
 11664  008D  0820               	movf	?___lwmod,w
 11665  008E  3E30               	addlw	48
 11666  008F  00BD               	movwf	??_TM1650_fastPrintNum
 11667  0090  083D               	movf	??_TM1650_fastPrintNum,w
 11668  0091  00C2               	movwf	TM1650_fastPrintNum@array
 11669                           
 11670                           ;tm1650.c: 76:         TM1650_setDigit(0,' ', 0);
 11671  0092  3020               	movlw	32
 11672  0093  00BD               	movwf	??_TM1650_fastPrintNum
 11673  0094  083D               	movf	??_TM1650_fastPrintNum,w
 11674  0095  00B5               	movwf	TM1650_setDigit@num
 11675  0096  01B6               	clrf	TM1650_setDigit@dp
 11676  0097  3000               	movlw	0
 11677  0098  3189  2172  3180   	fcall	_TM1650_setDigit
 11678                           
 11679                           ;tm1650.c: 77:         TM1650_setDigit(1,' ', 0);
 11680  009B  3020               	movlw	32
 11681  009C  0140               	movlb	0	; select bank0
 11682  009D  00BD               	movwf	??_TM1650_fastPrintNum
 11683  009E  083D               	movf	??_TM1650_fastPrintNum,w
 11684  009F  00B5               	movwf	TM1650_setDigit@num
 11685  00A0  01B6               	clrf	TM1650_setDigit@dp
 11686  00A1  3001               	movlw	1
 11687  00A2  3189  2172  3180   	fcall	_TM1650_setDigit
 11688                           
 11689                           ;tm1650.c: 78:         TM1650_setDigit(2,' ', 0);
 11690  00A5  3020               	movlw	32
 11691  00A6  0140               	movlb	0	; select bank0
 11692  00A7  00BD               	movwf	??_TM1650_fastPrintNum
 11693  00A8  083D               	movf	??_TM1650_fastPrintNum,w
 11694  00A9  00B5               	movwf	TM1650_setDigit@num
 11695  00AA  01B6               	clrf	TM1650_setDigit@dp
 11696  00AB  3002               	movlw	2
 11697  00AC  3189  2172  3180   	fcall	_TM1650_setDigit
 11698                           
 11699                           ;tm1650.c: 79:         TM1650_setDigit(3,array[0], 0);
 11700  00AF  0140               	movlb	0	; select bank0
 11701  00B0  0842               	movf	TM1650_fastPrintNum@array,w
 11702  00B1  00BD               	movwf	??_TM1650_fastPrintNum
 11703  00B2  083D               	movf	??_TM1650_fastPrintNum,w
 11704  00B3  00B5               	movwf	TM1650_setDigit@num
 11705  00B4  01B6               	clrf	TM1650_setDigit@dp
 11706  00B5  3003               	movlw	3
 11707  00B6  3189  2172         	fcall	_TM1650_setDigit
 11708                           
 11709                           ;tm1650.c: 80:     }else if(num < 100 && num >= 10){
 11710  00B8  0008               	return
 11711  00B9                     l4761:	
 11712  00B9  3000               	movlw	0
 11713  00BA  023C               	subwf	TM1650_fastPrintNum@num+1,w
 11714  00BB  3064               	movlw	100
 11715  00BC  1903               	skipnz
 11716  00BD  023B               	subwf	TM1650_fastPrintNum@num,w
 11717  00BE  1803               	skipnc
 11718  00BF  292E               	goto	l4775
 11719  00C0  3000               	movlw	0
 11720  00C1  023C               	subwf	TM1650_fastPrintNum@num+1,w
 11721  00C2  300A               	movlw	10
 11722  00C3  1903               	skipnz
 11723  00C4  023B               	subwf	TM1650_fastPrintNum@num,w
 11724  00C5  1C03               	skipc
 11725  00C6  292E               	goto	l4775
 11726                           
 11727                           ;tm1650.c: 81:         array[0] = (num % 10) + 48;
 11728  00C7  300A               	movlw	10
 11729  00C8  00A0               	movwf	___lwmod@divisor
 11730  00C9  3000               	movlw	0
 11731  00CA  00A1               	movwf	___lwmod@divisor+1
 11732  00CB  083C               	movf	TM1650_fastPrintNum@num+1,w
 11733  00CC  00A3               	movwf	___lwmod@dividend+1
 11734  00CD  083B               	movf	TM1650_fastPrintNum@num,w
 11735  00CE  00A2               	movwf	___lwmod@dividend
 11736  00CF  3197  27D3  3180   	fcall	___lwmod
 11737  00D2  0140               	movlb	0	; select bank0
 11738  00D3  0820               	movf	?___lwmod,w
 11739  00D4  3E30               	addlw	48
 11740  00D5  00BD               	movwf	??_TM1650_fastPrintNum
 11741  00D6  083D               	movf	??_TM1650_fastPrintNum,w
 11742  00D7  00C2               	movwf	TM1650_fastPrintNum@array
 11743                           
 11744                           ;tm1650.c: 82:         array[1] = (((num - (num % 10))/10) % 10) + 48;
 11745  00D8  300A               	movlw	10
 11746  00D9  00A6               	movwf	___lwdiv@divisor
 11747  00DA  3000               	movlw	0
 11748  00DB  00A7               	movwf	___lwdiv@divisor+1
 11749  00DC  300A               	movlw	10
 11750  00DD  00A0               	movwf	___lwmod@divisor
 11751  00DE  3000               	movlw	0
 11752  00DF  00A1               	movwf	___lwmod@divisor+1
 11753  00E0  083C               	movf	TM1650_fastPrintNum@num+1,w
 11754  00E1  00A3               	movwf	___lwmod@dividend+1
 11755  00E2  083B               	movf	TM1650_fastPrintNum@num,w
 11756  00E3  00A2               	movwf	___lwmod@dividend
 11757  00E4  3197  27D3  3180   	fcall	___lwmod
 11758  00E7  0140               	movlb	0	; select bank0
 11759  00E8  0820               	movf	?___lwmod,w
 11760  00E9  023B               	subwf	TM1650_fastPrintNum@num,w
 11761  00EA  00A8               	movwf	___lwdiv@dividend
 11762  00EB  0821               	movf	?___lwmod+1,w
 11763  00EC  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 11764  00ED  00A9               	movwf	___lwdiv@dividend+1
 11765  00EE  3188  20C2  3180   	fcall	___lwdiv
 11766  00F1  0140               	movlb	0	; select bank0
 11767  00F2  0827               	movf	?___lwdiv+1,w
 11768  00F3  00C7               	movwf	_TM1650_fastPrintNum$2839+1
 11769  00F4  0826               	movf	?___lwdiv,w
 11770  00F5  00C6               	movwf	_TM1650_fastPrintNum$2839
 11771                           
 11772                           ;tm1650.c: 82:         array[1] = (((num - (num % 10))/10) % 10) + 48;
 11773  00F6  300A               	movlw	10
 11774  00F7  00A0               	movwf	___lwmod@divisor
 11775  00F8  3000               	movlw	0
 11776  00F9  00A1               	movwf	___lwmod@divisor+1
 11777  00FA  0847               	movf	_TM1650_fastPrintNum$2839+1,w
 11778  00FB  00A3               	movwf	___lwmod@dividend+1
 11779  00FC  0846               	movf	_TM1650_fastPrintNum$2839,w
 11780  00FD  00A2               	movwf	___lwmod@dividend
 11781  00FE  3197  27D3  3180   	fcall	___lwmod
 11782  0101  0140               	movlb	0	; select bank0
 11783  0102  0820               	movf	?___lwmod,w
 11784  0103  3E30               	addlw	48
 11785  0104  00BD               	movwf	??_TM1650_fastPrintNum
 11786  0105  083D               	movf	??_TM1650_fastPrintNum,w
 11787  0106  00C3               	movwf	TM1650_fastPrintNum@array+1
 11788                           
 11789                           ;tm1650.c: 83:         TM1650_setDigit(0,' ', 0);
 11790  0107  3020               	movlw	32
 11791  0108  00BD               	movwf	??_TM1650_fastPrintNum
 11792  0109  083D               	movf	??_TM1650_fastPrintNum,w
 11793  010A  00B5               	movwf	TM1650_setDigit@num
 11794  010B  01B6               	clrf	TM1650_setDigit@dp
 11795  010C  3000               	movlw	0
 11796  010D  3189  2172  3180   	fcall	_TM1650_setDigit
 11797                           
 11798                           ;tm1650.c: 84:         TM1650_setDigit(1,' ', 0);
 11799  0110  3020               	movlw	32
 11800  0111  0140               	movlb	0	; select bank0
 11801  0112  00BD               	movwf	??_TM1650_fastPrintNum
 11802  0113  083D               	movf	??_TM1650_fastPrintNum,w
 11803  0114  00B5               	movwf	TM1650_setDigit@num
 11804  0115  01B6               	clrf	TM1650_setDigit@dp
 11805  0116  3001               	movlw	1
 11806  0117  3189  2172  3180   	fcall	_TM1650_setDigit
 11807                           
 11808                           ;tm1650.c: 85:         TM1650_setDigit(2,array[1], 0);
 11809  011A  0140               	movlb	0	; select bank0
 11810  011B  0843               	movf	TM1650_fastPrintNum@array+1,w
 11811  011C  00BD               	movwf	??_TM1650_fastPrintNum
 11812  011D  083D               	movf	??_TM1650_fastPrintNum,w
 11813  011E  00B5               	movwf	TM1650_setDigit@num
 11814  011F  01B6               	clrf	TM1650_setDigit@dp
 11815  0120  3002               	movlw	2
 11816  0121  3189  2172  3180   	fcall	_TM1650_setDigit
 11817                           
 11818                           ;tm1650.c: 86:         TM1650_setDigit(3,array[0], 0);
 11819  0124  0140               	movlb	0	; select bank0
 11820  0125  0842               	movf	TM1650_fastPrintNum@array,w
 11821  0126  00BD               	movwf	??_TM1650_fastPrintNum
 11822  0127  083D               	movf	??_TM1650_fastPrintNum,w
 11823  0128  00B5               	movwf	TM1650_setDigit@num
 11824  0129  01B6               	clrf	TM1650_setDigit@dp
 11825  012A  3003               	movlw	3
 11826  012B  3189  2172         	fcall	_TM1650_setDigit
 11827                           
 11828                           ;tm1650.c: 87:     }else if(num < 1000 && num >= 100){
 11829  012D  0008               	return
 11830  012E                     l4775:	
 11831  012E  3003               	movlw	3
 11832  012F  023C               	subwf	TM1650_fastPrintNum@num+1,w
 11833  0130  30E8               	movlw	232
 11834  0131  1903               	skipnz
 11835  0132  023B               	subwf	TM1650_fastPrintNum@num,w
 11836  0133  1803               	skipnc
 11837  0134  29F0               	goto	l4789
 11838  0135  3000               	movlw	0
 11839  0136  023C               	subwf	TM1650_fastPrintNum@num+1,w
 11840  0137  3064               	movlw	100
 11841  0138  1903               	skipnz
 11842  0139  023B               	subwf	TM1650_fastPrintNum@num,w
 11843  013A  1C03               	skipc
 11844  013B  29F0               	goto	l4789
 11845                           
 11846                           ;tm1650.c: 88:         array[0] = (num % 10) + 48;
 11847  013C  300A               	movlw	10
 11848  013D  00A0               	movwf	___lwmod@divisor
 11849  013E  3000               	movlw	0
 11850  013F  00A1               	movwf	___lwmod@divisor+1
 11851  0140  083C               	movf	TM1650_fastPrintNum@num+1,w
 11852  0141  00A3               	movwf	___lwmod@dividend+1
 11853  0142  083B               	movf	TM1650_fastPrintNum@num,w
 11854  0143  00A2               	movwf	___lwmod@dividend
 11855  0144  3197  27D3  3180   	fcall	___lwmod
 11856  0147  0140               	movlb	0	; select bank0
 11857  0148  0820               	movf	?___lwmod,w
 11858  0149  3E30               	addlw	48
 11859  014A  00BD               	movwf	??_TM1650_fastPrintNum
 11860  014B  083D               	movf	??_TM1650_fastPrintNum,w
 11861  014C  00C2               	movwf	TM1650_fastPrintNum@array
 11862                           
 11863                           ;tm1650.c: 89:         array[1] = ((num - (num % 10))/10) % 10 + 48;
 11864  014D  300A               	movlw	10
 11865  014E  00A6               	movwf	___lwdiv@divisor
 11866  014F  3000               	movlw	0
 11867  0150  00A7               	movwf	___lwdiv@divisor+1
 11868  0151  300A               	movlw	10
 11869  0152  00A0               	movwf	___lwmod@divisor
 11870  0153  3000               	movlw	0
 11871  0154  00A1               	movwf	___lwmod@divisor+1
 11872  0155  083C               	movf	TM1650_fastPrintNum@num+1,w
 11873  0156  00A3               	movwf	___lwmod@dividend+1
 11874  0157  083B               	movf	TM1650_fastPrintNum@num,w
 11875  0158  00A2               	movwf	___lwmod@dividend
 11876  0159  3197  27D3  3180   	fcall	___lwmod
 11877  015C  0140               	movlb	0	; select bank0
 11878  015D  0820               	movf	?___lwmod,w
 11879  015E  023B               	subwf	TM1650_fastPrintNum@num,w
 11880  015F  00A8               	movwf	___lwdiv@dividend
 11881  0160  0821               	movf	?___lwmod+1,w
 11882  0161  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 11883  0162  00A9               	movwf	___lwdiv@dividend+1
 11884  0163  3188  20C2  3180   	fcall	___lwdiv
 11885  0166  0140               	movlb	0	; select bank0
 11886  0167  0827               	movf	?___lwdiv+1,w
 11887  0168  00C7               	movwf	_TM1650_fastPrintNum$2839+1
 11888  0169  0826               	movf	?___lwdiv,w
 11889  016A  00C6               	movwf	_TM1650_fastPrintNum$2839
 11890                           
 11891                           ;tm1650.c: 89:         array[1] = ((num - (num % 10))/10) % 10 + 48;
 11892  016B  300A               	movlw	10
 11893  016C  00A0               	movwf	___lwmod@divisor
 11894  016D  3000               	movlw	0
 11895  016E  00A1               	movwf	___lwmod@divisor+1
 11896  016F  0847               	movf	_TM1650_fastPrintNum$2839+1,w
 11897  0170  00A3               	movwf	___lwmod@dividend+1
 11898  0171  0846               	movf	_TM1650_fastPrintNum$2839,w
 11899  0172  00A2               	movwf	___lwmod@dividend
 11900  0173  3197  27D3  3180   	fcall	___lwmod
 11901  0176  0140               	movlb	0	; select bank0
 11902  0177  0820               	movf	?___lwmod,w
 11903  0178  3E30               	addlw	48
 11904  0179  00BD               	movwf	??_TM1650_fastPrintNum
 11905  017A  083D               	movf	??_TM1650_fastPrintNum,w
 11906  017B  00C3               	movwf	TM1650_fastPrintNum@array+1
 11907                           
 11908                           ;tm1650.c: 90:         array[2] = ((num - (((num - (num % 10))/10) % 10))/100) %10 + 48;
 11909  017C  300A               	movlw	10
 11910  017D  00A6               	movwf	___lwdiv@divisor
 11911  017E  3000               	movlw	0
 11912  017F  00A7               	movwf	___lwdiv@divisor+1
 11913  0180  300A               	movlw	10
 11914  0181  00A0               	movwf	___lwmod@divisor
 11915  0182  3000               	movlw	0
 11916  0183  00A1               	movwf	___lwmod@divisor+1
 11917  0184  083C               	movf	TM1650_fastPrintNum@num+1,w
 11918  0185  00A3               	movwf	___lwmod@dividend+1
 11919  0186  083B               	movf	TM1650_fastPrintNum@num,w
 11920  0187  00A2               	movwf	___lwmod@dividend
 11921  0188  3197  27D3  3180   	fcall	___lwmod
 11922  018B  0140               	movlb	0	; select bank0
 11923  018C  0820               	movf	?___lwmod,w
 11924  018D  023B               	subwf	TM1650_fastPrintNum@num,w
 11925  018E  00A8               	movwf	___lwdiv@dividend
 11926  018F  0821               	movf	?___lwmod+1,w
 11927  0190  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 11928  0191  00A9               	movwf	___lwdiv@dividend+1
 11929  0192  3188  20C2  3180   	fcall	___lwdiv
 11930  0195  0140               	movlb	0	; select bank0
 11931  0196  0827               	movf	?___lwdiv+1,w
 11932  0197  00C7               	movwf	_TM1650_fastPrintNum$2839+1
 11933  0198  0826               	movf	?___lwdiv,w
 11934  0199  00C6               	movwf	_TM1650_fastPrintNum$2839
 11935                           
 11936                           ;tm1650.c: 90:         array[2] = ((num - (((num - (num % 10))/10) % 10))/100) %10 + 48;
 11937  019A  3064               	movlw	100
 11938  019B  00A6               	movwf	___lwdiv@divisor
 11939  019C  3000               	movlw	0
 11940  019D  00A7               	movwf	___lwdiv@divisor+1
 11941  019E  300A               	movlw	10
 11942  019F  00A0               	movwf	___lwmod@divisor
 11943  01A0  3000               	movlw	0
 11944  01A1  00A1               	movwf	___lwmod@divisor+1
 11945  01A2  0847               	movf	_TM1650_fastPrintNum$2839+1,w
 11946  01A3  00A3               	movwf	___lwmod@dividend+1
 11947  01A4  0846               	movf	_TM1650_fastPrintNum$2839,w
 11948  01A5  00A2               	movwf	___lwmod@dividend
 11949  01A6  3197  27D3  3180   	fcall	___lwmod
 11950  01A9  0140               	movlb	0	; select bank0
 11951  01AA  0820               	movf	?___lwmod,w
 11952  01AB  023B               	subwf	TM1650_fastPrintNum@num,w
 11953  01AC  00A8               	movwf	___lwdiv@dividend
 11954  01AD  0821               	movf	?___lwmod+1,w
 11955  01AE  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 11956  01AF  00A9               	movwf	___lwdiv@dividend+1
 11957  01B0  3188  20C2  3180   	fcall	___lwdiv
 11958  01B3  0140               	movlb	0	; select bank0
 11959  01B4  0827               	movf	?___lwdiv+1,w
 11960  01B5  00C1               	movwf	_TM1650_fastPrintNum$2840+1
 11961  01B6  0826               	movf	?___lwdiv,w
 11962  01B7  00C0               	movwf	_TM1650_fastPrintNum$2840
 11963                           
 11964                           ;tm1650.c: 90:         array[2] = ((num - (((num - (num % 10))/10) % 10))/100) %10 + 48;
 11965  01B8  300A               	movlw	10
 11966  01B9  00A0               	movwf	___lwmod@divisor
 11967  01BA  3000               	movlw	0
 11968  01BB  00A1               	movwf	___lwmod@divisor+1
 11969  01BC  0841               	movf	_TM1650_fastPrintNum$2840+1,w
 11970  01BD  00A3               	movwf	___lwmod@dividend+1
 11971  01BE  0840               	movf	_TM1650_fastPrintNum$2840,w
 11972  01BF  00A2               	movwf	___lwmod@dividend
 11973  01C0  3197  27D3  3180   	fcall	___lwmod
 11974  01C3  0140               	movlb	0	; select bank0
 11975  01C4  0820               	movf	?___lwmod,w
 11976  01C5  3E30               	addlw	48
 11977  01C6  00BD               	movwf	??_TM1650_fastPrintNum
 11978  01C7  083D               	movf	??_TM1650_fastPrintNum,w
 11979  01C8  00C4               	movwf	TM1650_fastPrintNum@array+2
 11980                           
 11981                           ;tm1650.c: 91:         TM1650_setDigit(0,' ', 0);
 11982  01C9  3020               	movlw	32
 11983  01CA  00BD               	movwf	??_TM1650_fastPrintNum
 11984  01CB  083D               	movf	??_TM1650_fastPrintNum,w
 11985  01CC  00B5               	movwf	TM1650_setDigit@num
 11986  01CD  01B6               	clrf	TM1650_setDigit@dp
 11987  01CE  3000               	movlw	0
 11988  01CF  3189  2172  3180   	fcall	_TM1650_setDigit
 11989                           
 11990                           ;tm1650.c: 92:         TM1650_setDigit(1, array[2], 0);
 11991  01D2  0140               	movlb	0	; select bank0
 11992  01D3  0844               	movf	TM1650_fastPrintNum@array+2,w
 11993  01D4  00BD               	movwf	??_TM1650_fastPrintNum
 11994  01D5  083D               	movf	??_TM1650_fastPrintNum,w
 11995  01D6  00B5               	movwf	TM1650_setDigit@num
 11996  01D7  01B6               	clrf	TM1650_setDigit@dp
 11997  01D8  3001               	movlw	1
 11998  01D9  3189  2172  3180   	fcall	_TM1650_setDigit
 11999                           
 12000                           ;tm1650.c: 93:         TM1650_setDigit(2, array[1], 0);
 12001  01DC  0140               	movlb	0	; select bank0
 12002  01DD  0843               	movf	TM1650_fastPrintNum@array+1,w
 12003  01DE  00BD               	movwf	??_TM1650_fastPrintNum
 12004  01DF  083D               	movf	??_TM1650_fastPrintNum,w
 12005  01E0  00B5               	movwf	TM1650_setDigit@num
 12006  01E1  01B6               	clrf	TM1650_setDigit@dp
 12007  01E2  3002               	movlw	2
 12008  01E3  3189  2172  3180   	fcall	_TM1650_setDigit
 12009                           
 12010                           ;tm1650.c: 94:         TM1650_setDigit(3, array[0], 0);
 12011  01E6  0140               	movlb	0	; select bank0
 12012  01E7  0842               	movf	TM1650_fastPrintNum@array,w
 12013  01E8  00BD               	movwf	??_TM1650_fastPrintNum
 12014  01E9  083D               	movf	??_TM1650_fastPrintNum,w
 12015  01EA  00B5               	movwf	TM1650_setDigit@num
 12016  01EB  01B6               	clrf	TM1650_setDigit@dp
 12017  01EC  3003               	movlw	3
 12018  01ED  3189  2172         	fcall	_TM1650_setDigit
 12019                           
 12020                           ;tm1650.c: 95:     }else if(num < 10000 && num >= 1000){
 12021  01EF  0008               	return
 12022  01F0                     l4789:	
 12023  01F0  3027               	movlw	39
 12024  01F1  023C               	subwf	TM1650_fastPrintNum@num+1,w
 12025  01F2  3010               	movlw	16
 12026  01F3  1903               	skipnz
 12027  01F4  023B               	subwf	TM1650_fastPrintNum@num,w
 12028  01F5  1803               	skipnc
 12029  01F6  2B1D               	goto	l4803
 12030  01F7  3003               	movlw	3
 12031  01F8  023C               	subwf	TM1650_fastPrintNum@num+1,w
 12032  01F9  30E8               	movlw	232
 12033  01FA  1903               	skipnz
 12034  01FB  023B               	subwf	TM1650_fastPrintNum@num,w
 12035  01FC  1C03               	skipc
 12036  01FD  2B1D               	goto	l4803
 12037                           
 12038                           ;tm1650.c: 96:         array[0] = (num % 10) + 48;
 12039  01FE  300A               	movlw	10
 12040  01FF  00A0               	movwf	___lwmod@divisor
 12041  0200  3000               	movlw	0
 12042  0201  00A1               	movwf	___lwmod@divisor+1
 12043  0202  083C               	movf	TM1650_fastPrintNum@num+1,w
 12044  0203  00A3               	movwf	___lwmod@dividend+1
 12045  0204  083B               	movf	TM1650_fastPrintNum@num,w
 12046  0205  00A2               	movwf	___lwmod@dividend
 12047  0206  3197  27D3  3180   	fcall	___lwmod
 12048  0209  0140               	movlb	0	; select bank0
 12049  020A  0820               	movf	?___lwmod,w
 12050  020B  3E30               	addlw	48
 12051  020C  00BD               	movwf	??_TM1650_fastPrintNum
 12052  020D  083D               	movf	??_TM1650_fastPrintNum,w
 12053  020E  00C2               	movwf	TM1650_fastPrintNum@array
 12054                           
 12055                           ;tm1650.c: 97:         array[1] = ((num - (num % 10))/10) % 10 + 48;
 12056  020F  300A               	movlw	10
 12057  0210  00A6               	movwf	___lwdiv@divisor
 12058  0211  3000               	movlw	0
 12059  0212  00A7               	movwf	___lwdiv@divisor+1
 12060  0213  300A               	movlw	10
 12061  0214  00A0               	movwf	___lwmod@divisor
 12062  0215  3000               	movlw	0
 12063  0216  00A1               	movwf	___lwmod@divisor+1
 12064  0217  083C               	movf	TM1650_fastPrintNum@num+1,w
 12065  0218  00A3               	movwf	___lwmod@dividend+1
 12066  0219  083B               	movf	TM1650_fastPrintNum@num,w
 12067  021A  00A2               	movwf	___lwmod@dividend
 12068  021B  3197  27D3  3180   	fcall	___lwmod
 12069  021E  0140               	movlb	0	; select bank0
 12070  021F  0820               	movf	?___lwmod,w
 12071  0220  023B               	subwf	TM1650_fastPrintNum@num,w
 12072  0221  00A8               	movwf	___lwdiv@dividend
 12073  0222  0821               	movf	?___lwmod+1,w
 12074  0223  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 12075  0224  00A9               	movwf	___lwdiv@dividend+1
 12076  0225  3188  20C2  3180   	fcall	___lwdiv
 12077  0228  0140               	movlb	0	; select bank0
 12078  0229  0827               	movf	?___lwdiv+1,w
 12079  022A  00C7               	movwf	_TM1650_fastPrintNum$2839+1
 12080  022B  0826               	movf	?___lwdiv,w
 12081  022C  00C6               	movwf	_TM1650_fastPrintNum$2839
 12082                           
 12083                           ;tm1650.c: 97:         array[1] = ((num - (num % 10))/10) % 10 + 48;
 12084  022D  300A               	movlw	10
 12085  022E  00A0               	movwf	___lwmod@divisor
 12086  022F  3000               	movlw	0
 12087  0230  00A1               	movwf	___lwmod@divisor+1
 12088  0231  0847               	movf	_TM1650_fastPrintNum$2839+1,w
 12089  0232  00A3               	movwf	___lwmod@dividend+1
 12090  0233  0846               	movf	_TM1650_fastPrintNum$2839,w
 12091  0234  00A2               	movwf	___lwmod@dividend
 12092  0235  3197  27D3  3180   	fcall	___lwmod
 12093  0238  0140               	movlb	0	; select bank0
 12094  0239  0820               	movf	?___lwmod,w
 12095  023A  3E30               	addlw	48
 12096  023B  00BD               	movwf	??_TM1650_fastPrintNum
 12097  023C  083D               	movf	??_TM1650_fastPrintNum,w
 12098  023D  00C3               	movwf	TM1650_fastPrintNum@array+1
 12099                           
 12100                           ;tm1650.c: 98:         array[2] = ((num - (((num - (num % 10))/10) % 10))/100) %10 + 48;
 12101  023E  300A               	movlw	10
 12102  023F  00A6               	movwf	___lwdiv@divisor
 12103  0240  3000               	movlw	0
 12104  0241  00A7               	movwf	___lwdiv@divisor+1
 12105  0242  300A               	movlw	10
 12106  0243  00A0               	movwf	___lwmod@divisor
 12107  0244  3000               	movlw	0
 12108  0245  00A1               	movwf	___lwmod@divisor+1
 12109  0246  083C               	movf	TM1650_fastPrintNum@num+1,w
 12110  0247  00A3               	movwf	___lwmod@dividend+1
 12111  0248  083B               	movf	TM1650_fastPrintNum@num,w
 12112  0249  00A2               	movwf	___lwmod@dividend
 12113  024A  3197  27D3  3180   	fcall	___lwmod
 12114  024D  0140               	movlb	0	; select bank0
 12115  024E  0820               	movf	?___lwmod,w
 12116  024F  023B               	subwf	TM1650_fastPrintNum@num,w
 12117  0250  00A8               	movwf	___lwdiv@dividend
 12118  0251  0821               	movf	?___lwmod+1,w
 12119  0252  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 12120  0253  00A9               	movwf	___lwdiv@dividend+1
 12121  0254  3188  20C2  3180   	fcall	___lwdiv
 12122  0257  0140               	movlb	0	; select bank0
 12123  0258  0827               	movf	?___lwdiv+1,w
 12124  0259  00C7               	movwf	_TM1650_fastPrintNum$2839+1
 12125  025A  0826               	movf	?___lwdiv,w
 12126  025B  00C6               	movwf	_TM1650_fastPrintNum$2839
 12127                           
 12128                           ;tm1650.c: 98:         array[2] = ((num - (((num - (num % 10))/10) % 10))/100) %10 + 48;
 12129  025C  3064               	movlw	100
 12130  025D  00A6               	movwf	___lwdiv@divisor
 12131  025E  3000               	movlw	0
 12132  025F  00A7               	movwf	___lwdiv@divisor+1
 12133  0260  300A               	movlw	10
 12134  0261  00A0               	movwf	___lwmod@divisor
 12135  0262  3000               	movlw	0
 12136  0263  00A1               	movwf	___lwmod@divisor+1
 12137  0264  0847               	movf	_TM1650_fastPrintNum$2839+1,w
 12138  0265  00A3               	movwf	___lwmod@dividend+1
 12139  0266  0846               	movf	_TM1650_fastPrintNum$2839,w
 12140  0267  00A2               	movwf	___lwmod@dividend
 12141  0268  3197  27D3  3180   	fcall	___lwmod
 12142  026B  0140               	movlb	0	; select bank0
 12143  026C  0820               	movf	?___lwmod,w
 12144  026D  023B               	subwf	TM1650_fastPrintNum@num,w
 12145  026E  00A8               	movwf	___lwdiv@dividend
 12146  026F  0821               	movf	?___lwmod+1,w
 12147  0270  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 12148  0271  00A9               	movwf	___lwdiv@dividend+1
 12149  0272  3188  20C2  3180   	fcall	___lwdiv
 12150  0275  0140               	movlb	0	; select bank0
 12151  0276  0827               	movf	?___lwdiv+1,w
 12152  0277  00C1               	movwf	_TM1650_fastPrintNum$2840+1
 12153  0278  0826               	movf	?___lwdiv,w
 12154  0279  00C0               	movwf	_TM1650_fastPrintNum$2840
 12155                           
 12156                           ;tm1650.c: 98:         array[2] = ((num - (((num - (num % 10))/10) % 10))/100) %10 + 48;
 12157  027A  300A               	movlw	10
 12158  027B  00A0               	movwf	___lwmod@divisor
 12159  027C  3000               	movlw	0
 12160  027D  00A1               	movwf	___lwmod@divisor+1
 12161  027E  0841               	movf	_TM1650_fastPrintNum$2840+1,w
 12162  027F  00A3               	movwf	___lwmod@dividend+1
 12163  0280  0840               	movf	_TM1650_fastPrintNum$2840,w
 12164  0281  00A2               	movwf	___lwmod@dividend
 12165  0282  3197  27D3  3180   	fcall	___lwmod
 12166  0285  0140               	movlb	0	; select bank0
 12167  0286  0820               	movf	?___lwmod,w
 12168  0287  3E30               	addlw	48
 12169  0288  00BD               	movwf	??_TM1650_fastPrintNum
 12170  0289  083D               	movf	??_TM1650_fastPrintNum,w
 12171  028A  00C4               	movwf	TM1650_fastPrintNum@array+2
 12172                           
 12173                           ;tm1650.c: 99:         array[3] = ((num - (((num - (((num - (num % 10))/10) % 10))/100) 
      +                          %10))/1000) % 10 + 48;
 12174  028B  300A               	movlw	10
 12175  028C  00A6               	movwf	___lwdiv@divisor
 12176  028D  3000               	movlw	0
 12177  028E  00A7               	movwf	___lwdiv@divisor+1
 12178  028F  300A               	movlw	10
 12179  0290  00A0               	movwf	___lwmod@divisor
 12180  0291  3000               	movlw	0
 12181  0292  00A1               	movwf	___lwmod@divisor+1
 12182  0293  083C               	movf	TM1650_fastPrintNum@num+1,w
 12183  0294  00A3               	movwf	___lwmod@dividend+1
 12184  0295  083B               	movf	TM1650_fastPrintNum@num,w
 12185  0296  00A2               	movwf	___lwmod@dividend
 12186  0297  3197  27D3  3180   	fcall	___lwmod
 12187  029A  0140               	movlb	0	; select bank0
 12188  029B  0820               	movf	?___lwmod,w
 12189  029C  023B               	subwf	TM1650_fastPrintNum@num,w
 12190  029D  00A8               	movwf	___lwdiv@dividend
 12191  029E  0821               	movf	?___lwmod+1,w
 12192  029F  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 12193  02A0  00A9               	movwf	___lwdiv@dividend+1
 12194  02A1  3188  20C2  3180   	fcall	___lwdiv
 12195  02A4  0140               	movlb	0	; select bank0
 12196  02A5  0827               	movf	?___lwdiv+1,w
 12197  02A6  00C7               	movwf	_TM1650_fastPrintNum$2839+1
 12198  02A7  0826               	movf	?___lwdiv,w
 12199  02A8  00C6               	movwf	_TM1650_fastPrintNum$2839
 12200                           
 12201                           ;tm1650.c: 99:         array[3] = ((num - (((num - (((num - (num % 10))/10) % 10))/100) 
      +                          %10))/1000) % 10 + 48;
 12202  02A9  3064               	movlw	100
 12203  02AA  00A6               	movwf	___lwdiv@divisor
 12204  02AB  3000               	movlw	0
 12205  02AC  00A7               	movwf	___lwdiv@divisor+1
 12206  02AD  300A               	movlw	10
 12207  02AE  00A0               	movwf	___lwmod@divisor
 12208  02AF  3000               	movlw	0
 12209  02B0  00A1               	movwf	___lwmod@divisor+1
 12210  02B1  0847               	movf	_TM1650_fastPrintNum$2839+1,w
 12211  02B2  00A3               	movwf	___lwmod@dividend+1
 12212  02B3  0846               	movf	_TM1650_fastPrintNum$2839,w
 12213  02B4  00A2               	movwf	___lwmod@dividend
 12214  02B5  3197  27D3  3180   	fcall	___lwmod
 12215  02B8  0140               	movlb	0	; select bank0
 12216  02B9  0820               	movf	?___lwmod,w
 12217  02BA  023B               	subwf	TM1650_fastPrintNum@num,w
 12218  02BB  00A8               	movwf	___lwdiv@dividend
 12219  02BC  0821               	movf	?___lwmod+1,w
 12220  02BD  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 12221  02BE  00A9               	movwf	___lwdiv@dividend+1
 12222  02BF  3188  20C2  3180   	fcall	___lwdiv
 12223  02C2  0140               	movlb	0	; select bank0
 12224  02C3  0827               	movf	?___lwdiv+1,w
 12225  02C4  00C1               	movwf	_TM1650_fastPrintNum$2840+1
 12226  02C5  0826               	movf	?___lwdiv,w
 12227  02C6  00C0               	movwf	_TM1650_fastPrintNum$2840
 12228                           
 12229                           ;tm1650.c: 99:         array[3] = ((num - (((num - (((num - (num % 10))/10) % 10))/100) 
      +                          %10))/1000) % 10 + 48;
 12230  02C7  30E8               	movlw	232
 12231  02C8  00A6               	movwf	___lwdiv@divisor
 12232  02C9  3003               	movlw	3
 12233  02CA  00A7               	movwf	___lwdiv@divisor+1
 12234  02CB  300A               	movlw	10
 12235  02CC  00A0               	movwf	___lwmod@divisor
 12236  02CD  3000               	movlw	0
 12237  02CE  00A1               	movwf	___lwmod@divisor+1
 12238  02CF  0841               	movf	_TM1650_fastPrintNum$2840+1,w
 12239  02D0  00A3               	movwf	___lwmod@dividend+1
 12240  02D1  0840               	movf	_TM1650_fastPrintNum$2840,w
 12241  02D2  00A2               	movwf	___lwmod@dividend
 12242  02D3  3197  27D3  3180   	fcall	___lwmod
 12243  02D6  0140               	movlb	0	; select bank0
 12244  02D7  0820               	movf	?___lwmod,w
 12245  02D8  023B               	subwf	TM1650_fastPrintNum@num,w
 12246  02D9  00A8               	movwf	___lwdiv@dividend
 12247  02DA  0821               	movf	?___lwmod+1,w
 12248  02DB  3B3C               	subwfb	TM1650_fastPrintNum@num+1,w
 12249  02DC  00A9               	movwf	___lwdiv@dividend+1
 12250  02DD  3188  20C2  3180   	fcall	___lwdiv
 12251  02E0  0140               	movlb	0	; select bank0
 12252  02E1  0827               	movf	?___lwdiv+1,w
 12253  02E2  00BF               	movwf	_TM1650_fastPrintNum$2841+1
 12254  02E3  0826               	movf	?___lwdiv,w
 12255  02E4  00BE               	movwf	_TM1650_fastPrintNum$2841
 12256                           
 12257                           ;tm1650.c: 99:         array[3] = ((num - (((num - (((num - (num % 10))/10) % 10))/100) 
      +                          %10))/1000) % 10 + 48;
 12258  02E5  300A               	movlw	10
 12259  02E6  00A0               	movwf	___lwmod@divisor
 12260  02E7  3000               	movlw	0
 12261  02E8  00A1               	movwf	___lwmod@divisor+1
 12262  02E9  083F               	movf	_TM1650_fastPrintNum$2841+1,w
 12263  02EA  00A3               	movwf	___lwmod@dividend+1
 12264  02EB  083E               	movf	_TM1650_fastPrintNum$2841,w
 12265  02EC  00A2               	movwf	___lwmod@dividend
 12266  02ED  3197  27D3  3180   	fcall	___lwmod
 12267  02F0  0140               	movlb	0	; select bank0
 12268  02F1  0820               	movf	?___lwmod,w
 12269  02F2  3E30               	addlw	48
 12270  02F3  00BD               	movwf	??_TM1650_fastPrintNum
 12271  02F4  083D               	movf	??_TM1650_fastPrintNum,w
 12272  02F5  00C5               	movwf	TM1650_fastPrintNum@array+3
 12273                           
 12274                           ;tm1650.c: 100:         TM1650_setDigit(0, array[3], 0);
 12275  02F6  0845               	movf	TM1650_fastPrintNum@array+3,w
 12276  02F7  00BD               	movwf	??_TM1650_fastPrintNum
 12277  02F8  083D               	movf	??_TM1650_fastPrintNum,w
 12278  02F9  00B5               	movwf	TM1650_setDigit@num
 12279  02FA  01B6               	clrf	TM1650_setDigit@dp
 12280  02FB  3000               	movlw	0
 12281  02FC  3189  2172  3180   	fcall	_TM1650_setDigit
 12282                           
 12283                           ;tm1650.c: 101:         TM1650_setDigit(1, array[2], 0);
 12284  02FF  0140               	movlb	0	; select bank0
 12285  0300  0844               	movf	TM1650_fastPrintNum@array+2,w
 12286  0301  00BD               	movwf	??_TM1650_fastPrintNum
 12287  0302  083D               	movf	??_TM1650_fastPrintNum,w
 12288  0303  00B5               	movwf	TM1650_setDigit@num
 12289  0304  01B6               	clrf	TM1650_setDigit@dp
 12290  0305  3001               	movlw	1
 12291  0306  3189  2172  3180   	fcall	_TM1650_setDigit
 12292                           
 12293                           ;tm1650.c: 102:         TM1650_setDigit(2, array[1], 0);
 12294  0309  0140               	movlb	0	; select bank0
 12295  030A  0843               	movf	TM1650_fastPrintNum@array+1,w
 12296  030B  00BD               	movwf	??_TM1650_fastPrintNum
 12297  030C  083D               	movf	??_TM1650_fastPrintNum,w
 12298  030D  00B5               	movwf	TM1650_setDigit@num
 12299  030E  01B6               	clrf	TM1650_setDigit@dp
 12300  030F  3002               	movlw	2
 12301  0310  3189  2172  3180   	fcall	_TM1650_setDigit
 12302                           
 12303                           ;tm1650.c: 103:         TM1650_setDigit(3, array[0], 0);
 12304  0313  0140               	movlb	0	; select bank0
 12305  0314  0842               	movf	TM1650_fastPrintNum@array,w
 12306  0315  00BD               	movwf	??_TM1650_fastPrintNum
 12307  0316  083D               	movf	??_TM1650_fastPrintNum,w
 12308  0317  00B5               	movwf	TM1650_setDigit@num
 12309  0318  01B6               	clrf	TM1650_setDigit@dp
 12310  0319  3003               	movlw	3
 12311  031A  3189  2172         	fcall	_TM1650_setDigit
 12312                           
 12313                           ;tm1650.c: 104:     }else{
 12314  031C  0008               	return
 12315  031D                     l4803:	
 12316                           
 12317                           ;tm1650.c: 105:         TM1650_setDigit(0, 'E', 0);
 12318  031D  3045               	movlw	69
 12319  031E  00BD               	movwf	??_TM1650_fastPrintNum
 12320  031F  083D               	movf	??_TM1650_fastPrintNum,w
 12321  0320  00B5               	movwf	TM1650_setDigit@num
 12322  0321  01B6               	clrf	TM1650_setDigit@dp
 12323  0322  3000               	movlw	0
 12324  0323  3189  2172  3180   	fcall	_TM1650_setDigit
 12325                           
 12326                           ;tm1650.c: 106:         TM1650_setDigit(1, 'E', 0);
 12327  0326  3045               	movlw	69
 12328  0327  0140               	movlb	0	; select bank0
 12329  0328  00BD               	movwf	??_TM1650_fastPrintNum
 12330  0329  083D               	movf	??_TM1650_fastPrintNum,w
 12331  032A  00B5               	movwf	TM1650_setDigit@num
 12332  032B  01B6               	clrf	TM1650_setDigit@dp
 12333  032C  3001               	movlw	1
 12334  032D  3189  2172  3180   	fcall	_TM1650_setDigit
 12335                           
 12336                           ;tm1650.c: 107:         TM1650_setDigit(2, 'E', 0);
 12337  0330  3045               	movlw	69
 12338  0331  0140               	movlb	0	; select bank0
 12339  0332  00BD               	movwf	??_TM1650_fastPrintNum
 12340  0333  083D               	movf	??_TM1650_fastPrintNum,w
 12341  0334  00B5               	movwf	TM1650_setDigit@num
 12342  0335  01B6               	clrf	TM1650_setDigit@dp
 12343  0336  3002               	movlw	2
 12344  0337  3189  2172  3180   	fcall	_TM1650_setDigit
 12345                           
 12346                           ;tm1650.c: 108:         TM1650_setDigit(3, 'E', 0);
 12347  033A  3045               	movlw	69
 12348  033B  0140               	movlb	0	; select bank0
 12349  033C  00BD               	movwf	??_TM1650_fastPrintNum
 12350  033D  083D               	movf	??_TM1650_fastPrintNum,w
 12351  033E  00B5               	movwf	TM1650_setDigit@num
 12352  033F  01B6               	clrf	TM1650_setDigit@dp
 12353  0340  3003               	movlw	3
 12354  0341  3189  2172         	fcall	_TM1650_setDigit
 12355  0343  0008               	return
 12356  0344                     __end_of_TM1650_fastPrintNum:	
 12357                           
 12358                           	psect	text30
 12359  17D3                     __ptext30:	
 12360 ;; *************** function ___lwmod *****************
 12361 ;; Defined at:
 12362 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
 12363 ;; Parameters:    Size  Location     Type
 12364 ;;  divisor         2    0[BANK0 ] unsigned int 
 12365 ;;  dividend        2    2[BANK0 ] unsigned int 
 12366 ;; Auto vars:     Size  Location     Type
 12367 ;;  counter         1    5[BANK0 ] unsigned char 
 12368 ;; Return value:  Size  Location     Type
 12369 ;;                  2    0[BANK0 ] unsigned int 
 12370 ;; Registers used:
 12371 ;;		wreg, status,2, status,0
 12372 ;; Tracked objects:
 12373 ;;		On entry : 0/0
 12374 ;;		On exit  : 0/0
 12375 ;;		Unchanged: 0/0
 12376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12377 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12378 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12379 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12380 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12381 ;;Total ram usage:        6 bytes
 12382 ;; Hardware stack levels used:    1
 12383 ;; Hardware stack levels required when called:    4
 12384 ;; This function calls:
 12385 ;;		Nothing
 12386 ;; This function is called by:
 12387 ;;		_TM1650_fastPrintNum
 12388 ;; This function uses a non-reentrant model
 12389 ;;
 12390                           
 12391                           
 12392                           ;psect for function ___lwmod
 12393  17D3                     ___lwmod:	
 12394                           
 12395                           ;incstack = 0
 12396                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 12397  17D3  0140               	movlb	0	; select bank0
 12398  17D4  0820               	movf	___lwmod@divisor,w
 12399  17D5  0421               	iorwf	___lwmod@divisor+1,w
 12400  17D6  1903               	btfsc	3,2
 12401  17D7  2FFB               	goto	l4723
 12402  17D8  01A5               	clrf	___lwmod@counter
 12403  17D9  0AA5               	incf	___lwmod@counter,f
 12404  17DA                     l4713:	
 12405  17DA  1BA1               	btfsc	___lwmod@divisor+1,7
 12406  17DB  2FE6               	goto	l4715
 12407  17DC  3001               	movlw	1
 12408  17DD                     u3995:	
 12409  17DD  35A0               	lslf	___lwmod@divisor,f
 12410  17DE  0DA1               	rlf	___lwmod@divisor+1,f
 12411  17DF  0B89               	decfsz	9,f
 12412  17E0  2FDD               	goto	u3995
 12413  17E1  3001               	movlw	1
 12414  17E2  00A4               	movwf	??___lwmod
 12415  17E3  0824               	movf	??___lwmod,w
 12416  17E4  07A5               	addwf	___lwmod@counter,f
 12417  17E5  2FDA               	goto	l4713
 12418  17E6                     l4715:	
 12419  17E6  0821               	movf	___lwmod@divisor+1,w
 12420  17E7  0223               	subwf	___lwmod@dividend+1,w
 12421  17E8  1D03               	skipz
 12422  17E9  2FEC               	goto	u4015
 12423  17EA  0820               	movf	___lwmod@divisor,w
 12424  17EB  0222               	subwf	___lwmod@dividend,w
 12425  17EC                     u4015:	
 12426  17EC  1C03               	skipc
 12427  17ED  2FF2               	goto	l4719
 12428  17EE  0820               	movf	___lwmod@divisor,w
 12429  17EF  02A2               	subwf	___lwmod@dividend,f
 12430  17F0  0821               	movf	___lwmod@divisor+1,w
 12431  17F1  3BA3               	subwfb	___lwmod@dividend+1,f
 12432  17F2                     l4719:	
 12433  17F2  3001               	movlw	1
 12434  17F3                     u4025:	
 12435  17F3  36A1               	lsrf	___lwmod@divisor+1,f
 12436  17F4  0CA0               	rrf	___lwmod@divisor,f
 12437  17F5  0B89               	decfsz	9,f
 12438  17F6  2FF3               	goto	u4025
 12439  17F7  3001               	movlw	1
 12440  17F8  02A5               	subwf	___lwmod@counter,f
 12441  17F9  1D03               	btfss	3,2
 12442  17FA  2FE6               	goto	l4715
 12443  17FB                     l4723:	
 12444  17FB  0823               	movf	___lwmod@dividend+1,w
 12445  17FC  00A1               	movwf	?___lwmod+1
 12446  17FD  0822               	movf	___lwmod@dividend,w
 12447  17FE  00A0               	movwf	?___lwmod
 12448  17FF  0008               	return
 12449  1800                     __end_of___lwmod:	
 12450                           
 12451                           	psect	text31
 12452  0972                     __ptext31:	
 12453 ;; *************** function _TM1650_setDigit *****************
 12454 ;; Defined at:
 12455 ;;		line 26 in file "tm1650.c"
 12456 ;; Parameters:    Size  Location     Type
 12457 ;;  digit           1    wreg     unsigned char 
 12458 ;;  num             1   21[BANK0 ] unsigned char 
 12459 ;;  dp              1   22[BANK0 ] _Bool 
 12460 ;; Auto vars:     Size  Location     Type
 12461 ;;  digit           1   25[BANK0 ] unsigned char 
 12462 ;;  data            1   26[BANK0 ] unsigned char 
 12463 ;; Return value:  Size  Location     Type
 12464 ;;                  1    wreg      void 
 12465 ;; Registers used:
 12466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12467 ;; Tracked objects:
 12468 ;;		On entry : 0/0
 12469 ;;		On exit  : 0/0
 12470 ;;		Unchanged: 0/0
 12471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12472 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12473 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12474 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12475 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12476 ;;Total ram usage:        6 bytes
 12477 ;; Hardware stack levels used:    1
 12478 ;; Hardware stack levels required when called:    8
 12479 ;; This function calls:
 12480 ;;		_writeData
 12481 ;; This function is called by:
 12482 ;;		_TM1650_fastPrintNum
 12483 ;;		_putch
 12484 ;; This function uses a non-reentrant model
 12485 ;;
 12486                           
 12487                           
 12488                           ;psect for function _TM1650_setDigit
 12489  0972                     _TM1650_setDigit:	
 12490                           
 12491                           ;incstack = 0
 12492                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12493                           ;TM1650_setDigit@digit stored from wreg
 12494  0972  0140               	movlb	0	; select bank0
 12495  0973  00B9               	movwf	TM1650_setDigit@digit
 12496                           
 12497                           ;tm1650.c: 27:     const uint8_t charTable[] =;tm1650.c: 36:     uint8_t data = charTabl
      +                          e[num-32];
 12498  0974  0835               	movf	TM1650_setDigit@num,w
 12499  0975  3EE0               	addlw	low ((TM1650_setDigit@charTable+65504)| (0+32768))
 12500  0976  0084               	movwf	4
 12501  0977  308F               	movlw	high ((TM1650_setDigit@charTable+65504)| (0+32768))
 12502  0978  1803               	skipnc
 12503  0979  3E01               	addlw	1
 12504  097A  0085               	movwf	5
 12505  097B  0800               	movf	0,w	;code access
 12506  097C  00B7               	movwf	??_TM1650_setDigit
 12507  097D  0837               	movf	??_TM1650_setDigit,w
 12508  097E  00BA               	movwf	TM1650_setDigit@data
 12509                           
 12510                           ;tm1650.c: 37:     if(dp == 1){
 12511  097F  0336               	decf	TM1650_setDigit@dp,w
 12512  0980  1D03               	btfss	3,2
 12513  0981  29A4               	goto	l4699
 12514                           
 12515                           ;tm1650.c: 38:         data |= 0b10000000;
 12516  0982  17BA               	bsf	TM1650_setDigit@data,7
 12517  0983  29A4               	goto	l4699
 12518  0984                     l4689:	
 12519                           
 12520                           ;tm1650.c: 43:                 writeData(0x34, data);
 12521  0984  083A               	movf	TM1650_setDigit@data,w
 12522  0985  00B7               	movwf	??_TM1650_setDigit
 12523  0986  0837               	movf	??_TM1650_setDigit,w
 12524  0987  00AE               	movwf	writeData@data
 12525  0988  3034               	movlw	52
 12526  0989  3197  278C         	fcall	_writeData
 12527                           
 12528                           ;tm1650.c: 44:                 break;
 12529  098B  0008               	return
 12530  098C                     l4691:	
 12531                           
 12532                           ;tm1650.c: 46:                 writeData(0x35, data);
 12533  098C  083A               	movf	TM1650_setDigit@data,w
 12534  098D  00B7               	movwf	??_TM1650_setDigit
 12535  098E  0837               	movf	??_TM1650_setDigit,w
 12536  098F  00AE               	movwf	writeData@data
 12537  0990  3035               	movlw	53
 12538  0991  3197  278C         	fcall	_writeData
 12539                           
 12540                           ;tm1650.c: 47:                 break;
 12541  0993  0008               	return
 12542  0994                     l4693:	
 12543                           
 12544                           ;tm1650.c: 49:                 writeData(0x36, data);
 12545  0994  083A               	movf	TM1650_setDigit@data,w
 12546  0995  00B7               	movwf	??_TM1650_setDigit
 12547  0996  0837               	movf	??_TM1650_setDigit,w
 12548  0997  00AE               	movwf	writeData@data
 12549  0998  3036               	movlw	54
 12550  0999  3197  278C         	fcall	_writeData
 12551                           
 12552                           ;tm1650.c: 50:                 break;
 12553  099B  0008               	return
 12554  099C                     l4695:	
 12555                           
 12556                           ;tm1650.c: 52:                 writeData(0x37, data);
 12557  099C  083A               	movf	TM1650_setDigit@data,w
 12558  099D  00B7               	movwf	??_TM1650_setDigit
 12559  099E  0837               	movf	??_TM1650_setDigit,w
 12560  099F  00AE               	movwf	writeData@data
 12561  09A0  3037               	movlw	55
 12562  09A1  3197  278C         	fcall	_writeData
 12563                           
 12564                           ;tm1650.c: 53:                 break;
 12565  09A3  0008               	return
 12566  09A4                     l4699:	
 12567  09A4  0839               	movf	TM1650_setDigit@digit,w
 12568  09A5  00B7               	movwf	??_TM1650_setDigit
 12569  09A6  01B8               	clrf	??_TM1650_setDigit+1
 12570                           
 12571                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12572                           ; Switch size 1, requested type "simple"
 12573                           ; Number of cases is 1, Range of values is 0 to 0
 12574                           ; switch strategies available:
 12575                           ; Name         Instructions Cycles
 12576                           ; simple_byte            4     3 (average)
 12577                           ; direct_byte            8     6 (fixed)
 12578                           ; jumptable            260     6 (fixed)
 12579                           ;	Chosen strategy is simple_byte
 12580  09A7  0838               	movf	??_TM1650_setDigit+1,w
 12581  09A8  3A00               	xorlw	0	; case 0
 12582  09A9  1903               	skipnz
 12583  09AA  29AC               	goto	l5777
 12584  09AB  29BA               	goto	l733
 12585  09AC                     l5777:	
 12586                           
 12587                           ; Switch size 1, requested type "simple"
 12588                           ; Number of cases is 4, Range of values is 0 to 3
 12589                           ; switch strategies available:
 12590                           ; Name         Instructions Cycles
 12591                           ; simple_byte           13     7 (average)
 12592                           ; direct_byte           14     6 (fixed)
 12593                           ; jumptable            260     6 (fixed)
 12594                           ;	Chosen strategy is simple_byte
 12595  09AC  0837               	movf	??_TM1650_setDigit,w
 12596  09AD  3A00               	xorlw	0	; case 0
 12597  09AE  1903               	skipnz
 12598  09AF  2984               	goto	l4689
 12599  09B0  3A01               	xorlw	1	; case 1
 12600  09B1  1903               	skipnz
 12601  09B2  298C               	goto	l4691
 12602  09B3  3A03               	xorlw	3	; case 2
 12603  09B4  1903               	skipnz
 12604  09B5  2994               	goto	l4693
 12605  09B6  3A01               	xorlw	1	; case 3
 12606  09B7  1903               	skipnz
 12607  09B8  299C               	goto	l4695
 12608  09B9  29BA               	goto	l733
 12609  09BA                     l733:	
 12610  09BA  0008               	return
 12611  09BB                     __end_of_TM1650_setDigit:	
 12612                           
 12613                           	psect	text32
 12614  178C                     __ptext32:	
 12615 ;; *************** function _writeData *****************
 12616 ;; Defined at:
 12617 ;;		line 19 in file "tm1650.c"
 12618 ;; Parameters:    Size  Location     Type
 12619 ;;  address         1    wreg     unsigned char 
 12620 ;;  data            1   14[BANK0 ] unsigned char 
 12621 ;; Auto vars:     Size  Location     Type
 12622 ;;  address         1   18[BANK0 ] unsigned char 
 12623 ;;  status          1   20[BANK0 ] enum E10868
 12624 ;;  dataToSend      1   19[BANK0 ] unsigned char 
 12625 ;; Return value:  Size  Location     Type
 12626 ;;                  1    wreg      void 
 12627 ;; Registers used:
 12628 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12629 ;; Tracked objects:
 12630 ;;		On entry : 0/0
 12631 ;;		On exit  : 0/0
 12632 ;;		Unchanged: 0/0
 12633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12634 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12635 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12636 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12637 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12638 ;;Total ram usage:        7 bytes
 12639 ;; Hardware stack levels used:    1
 12640 ;; Hardware stack levels required when called:    7
 12641 ;; This function calls:
 12642 ;;		_I2C1_MasterWrite
 12643 ;; This function is called by:
 12644 ;;		_TM1650_setDigit
 12645 ;;		_TM1650_enable
 12646 ;;		_putch
 12647 ;; This function uses a non-reentrant model
 12648 ;;
 12649                           
 12650                           
 12651                           ;psect for function _writeData
 12652  178C                     _writeData:	
 12653                           
 12654                           ;incstack = 0
 12655                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12656                           ;writeData@address stored from wreg
 12657  178C  0140               	movlb	0	; select bank0
 12658  178D  00B2               	movwf	writeData@address
 12659                           
 12660                           ;tm1650.c: 20:     I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 12661  178E  3002               	movlw	2
 12662  178F  00AF               	movwf	??_writeData
 12663  1790  082F               	movf	??_writeData,w
 12664  1791  00B4               	movwf	writeData@status
 12665                           
 12666                           ;tm1650.c: 21:     uint8_t dataToSend = data;
 12667  1792  082E               	movf	writeData@data,w
 12668  1793  00AF               	movwf	??_writeData
 12669  1794  082F               	movf	??_writeData,w
 12670  1795  00B3               	movwf	writeData@dataToSend
 12671                           
 12672                           ;tm1650.c: 22:     I2C1_MasterWrite(&dataToSend, 1, address, &status);
 12673  1796  01A7               	clrf	I2C1_MasterWrite@length
 12674  1797  0AA7               	incf	I2C1_MasterWrite@length,f
 12675  1798  0832               	movf	writeData@address,w
 12676  1799  00AF               	movwf	??_writeData
 12677  179A  01B0               	clrf	??_writeData+1
 12678  179B  082F               	movf	??_writeData,w
 12679  179C  00A8               	movwf	I2C1_MasterWrite@address
 12680  179D  0830               	movf	??_writeData+1,w
 12681  179E  00A9               	movwf	I2C1_MasterWrite@address+1
 12682  179F  3034               	movlw	(low (writeData@status| 0))& (0+255)
 12683  17A0  00B1               	movwf	??_writeData+2
 12684  17A1  0831               	movf	??_writeData+2,w
 12685  17A2  00AA               	movwf	I2C1_MasterWrite@pflag
 12686  17A3  3033               	movlw	(low (writeData@dataToSend| 0))& (0+255)
 12687  17A4  3188  2000  3197   	fcall	_I2C1_MasterWrite
 12688  17A7                     l4681:	
 12689                           ;tm1650.c: 23:     while( status == I2C1_MESSAGE_PENDING );
 12690                           
 12691  17A7  3002               	movlw	2
 12692  17A8  0140               	movlb	0	; select bank0
 12693  17A9  0634               	xorwf	writeData@status,w
 12694  17AA  1D03               	btfss	3,2
 12695  17AB  0008               	return
 12696  17AC  2FA7               	goto	l4681
 12697  17AD                     __end_of_writeData:	
 12698                           
 12699                           	psect	text33
 12700  0800                     __ptext33:	
 12701 ;; *************** function _I2C1_MasterWrite *****************
 12702 ;; Defined at:
 12703 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 12704 ;; Parameters:    Size  Location     Type
 12705 ;;  pdata           1    wreg     PTR unsigned char 
 12706 ;;		 -> writeData@dataToSend(1), 
 12707 ;;  length          1    7[BANK0 ] unsigned char 
 12708 ;;  address         2    8[BANK0 ] unsigned short 
 12709 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 12710 ;;		 -> writeData@status(1), 
 12711 ;; Auto vars:     Size  Location     Type
 12712 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 12713 ;;		 -> writeData@dataToSend(1), 
 12714 ;; Return value:  Size  Location     Type
 12715 ;;                  1    wreg      void 
 12716 ;; Registers used:
 12717 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12718 ;; Tracked objects:
 12719 ;;		On entry : 0/0
 12720 ;;		On exit  : 0/0
 12721 ;;		Unchanged: 0/0
 12722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12723 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12724 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12725 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12726 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12727 ;;Total ram usage:        7 bytes
 12728 ;; Hardware stack levels used:    1
 12729 ;; Hardware stack levels required when called:    6
 12730 ;; This function calls:
 12731 ;;		_I2C1_MasterTRBInsert
 12732 ;;		_I2C1_MasterWriteTRBBuild
 12733 ;; This function is called by:
 12734 ;;		_writeData
 12735 ;; This function uses a non-reentrant model
 12736 ;;
 12737                           
 12738                           
 12739                           ;psect for function _I2C1_MasterWrite
 12740  0800                     _I2C1_MasterWrite:	
 12741                           
 12742                           ;incstack = 0
 12743                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12744                           ;I2C1_MasterWrite@pdata stored from wreg
 12745  0800  0140               	movlb	0	; select bank0
 12746  0801  00AD               	movwf	I2C1_MasterWrite@pdata
 12747                           
 12748                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 12749  0802  0141               	movlb	1	; select bank1
 12750  0803  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 12751  0804  2823               	goto	l4675
 12752                           
 12753                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 12754  0805  0140               	movlb	0	; select bank0
 12755  0806  082D               	movf	I2C1_MasterWrite@pdata,w
 12756  0807  00AB               	movwf	??_I2C1_MasterWrite
 12757  0808  082B               	movf	??_I2C1_MasterWrite,w
 12758  0809  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 12759  080A  0827               	movf	I2C1_MasterWrite@length,w
 12760  080B  00AC               	movwf	??_I2C1_MasterWrite+1
 12761  080C  082C               	movf	??_I2C1_MasterWrite+1,w
 12762  080D  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 12763  080E  0829               	movf	I2C1_MasterWrite@address+1,w
 12764  080F  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 12765  0810  0828               	movf	I2C1_MasterWrite@address,w
 12766  0811  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 12767  0812  30C9               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
 12768  0813  3197  274C  3188   	fcall	_I2C1_MasterWriteTRBBuild
 12769                           
 12770                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 12771  0816  30C9               	movlw	low I2C1_MasterWrite@trBlock
 12772  0817  0140               	movlb	0	; select bank0
 12773  0818  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 12774  0819  3000               	movlw	high I2C1_MasterWrite@trBlock
 12775  081A  00A1               	movwf	I2C1_MasterTRBInsert@ptrb_list+1
 12776  081B  082A               	movf	I2C1_MasterWrite@pflag,w
 12777  081C  00AB               	movwf	??_I2C1_MasterWrite
 12778  081D  082B               	movf	??_I2C1_MasterWrite,w
 12779  081E  00A2               	movwf	I2C1_MasterTRBInsert@pflag
 12780  081F  3001               	movlw	1
 12781  0820  318A  2206         	fcall	_I2C1_MasterTRBInsert
 12782                           
 12783                           ;mcc_generated_files/i2c1.c: 613:     }
 12784  0822  0008               	return
 12785  0823                     l4675:	
 12786                           
 12787                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 12788  0823  0140               	movlb	0	; select bank0
 12789  0824  082A               	movf	I2C1_MasterWrite@pflag,w
 12790  0825  0086               	movwf	6
 12791  0826  0187               	clrf	7
 12792  0827  0181               	clrf	1
 12793  0828  0A81               	incf	1,f
 12794  0829  0008               	return
 12795  082A                     __end_of_I2C1_MasterWrite:	
 12796                           
 12797                           	psect	text34
 12798  174C                     __ptext34:	
 12799 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 12800 ;; Defined at:
 12801 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 12802 ;; Parameters:    Size  Location     Type
 12803 ;;  ptrb            1    wreg     PTR struct .
 12804 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 12805 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 12806 ;;		 -> writeData@dataToSend(1), 
 12807 ;;  length          1    1[BANK0 ] unsigned char 
 12808 ;;  address         2    2[BANK0 ] unsigned short 
 12809 ;; Auto vars:     Size  Location     Type
 12810 ;;  ptrb            1    6[BANK0 ] PTR struct .
 12811 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 12812 ;; Return value:  Size  Location     Type
 12813 ;;                  1    wreg      void 
 12814 ;; Registers used:
 12815 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12816 ;; Tracked objects:
 12817 ;;		On entry : 0/0
 12818 ;;		On exit  : 0/0
 12819 ;;		Unchanged: 0/0
 12820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12821 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12822 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12823 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12824 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12825 ;;Total ram usage:        7 bytes
 12826 ;; Hardware stack levels used:    1
 12827 ;; Hardware stack levels required when called:    4
 12828 ;; This function calls:
 12829 ;;		Nothing
 12830 ;; This function is called by:
 12831 ;;		_I2C1_MasterWrite
 12832 ;; This function uses a non-reentrant model
 12833 ;;
 12834                           
 12835                           
 12836                           ;psect for function _I2C1_MasterWriteTRBBuild
 12837  174C                     _I2C1_MasterWriteTRBBuild:	
 12838                           
 12839                           ;incstack = 0
 12840                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 12841                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 12842  174C  0140               	movlb	0	; select bank0
 12843  174D  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 12844                           
 12845                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 12846  174E  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 12847  174F  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 12848  1750  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 12849  1751  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 12850  1752  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 12851  1753  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 12852  1754  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 12853  1755  0086               	movwf	6
 12854  1756  0187               	clrf	7
 12855  1757  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 12856  1758  3FC0               	movwi [0]fsr1
 12857  1759  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 12858  175A  3FC1               	movwi [1]fsr1
 12859                           
 12860                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 12861  175B  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 12862  175C  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 12863  175D  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 12864  175E  3E02               	addlw	2
 12865  175F  0086               	movwf	6
 12866  1760  0187               	clrf	7
 12867  1761  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 12868  1762  0081               	movwf	1
 12869                           
 12870                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 12871  1763  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 12872  1764  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 12873  1765  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 12874  1766  3E03               	addlw	3
 12875  1767  0086               	movwf	6
 12876  1768  0187               	clrf	7
 12877  1769  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 12878  176A  0081               	movwf	1
 12879  176B  0008               	return
 12880  176C                     __end_of_I2C1_MasterWriteTRBBuild:	
 12881                           
 12882                           	psect	text35
 12883  0A06                     __ptext35:	
 12884 ;; *************** function _I2C1_MasterTRBInsert *****************
 12885 ;; Defined at:
 12886 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 12887 ;; Parameters:    Size  Location     Type
 12888 ;;  count           1    wreg     unsigned char 
 12889 ;;  ptrb_list       2    0[BANK0 ] PTR struct .
 12890 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 12891 ;;  pflag           1    2[BANK0 ] PTR enum E10866
 12892 ;;		 -> writeData@status(1), 
 12893 ;; Auto vars:     Size  Location     Type
 12894 ;;  count           1    4[BANK0 ] unsigned char 
 12895 ;; Return value:  Size  Location     Type
 12896 ;;                  1    wreg      void 
 12897 ;; Registers used:
 12898 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12899 ;; Tracked objects:
 12900 ;;		On entry : 0/0
 12901 ;;		On exit  : 0/0
 12902 ;;		Unchanged: 0/0
 12903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12904 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12906 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12907 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12908 ;;Total ram usage:        5 bytes
 12909 ;; Hardware stack levels used:    1
 12910 ;; Hardware stack levels required when called:    5
 12911 ;; This function calls:
 12912 ;;		_I2C1_WaitForLastPacketToComplete
 12913 ;; This function is called by:
 12914 ;;		_I2C1_MasterWrite
 12915 ;;		_I2C1_MasterRead
 12916 ;; This function uses a non-reentrant model
 12917 ;;
 12918                           
 12919                           
 12920                           ;psect for function _I2C1_MasterTRBInsert
 12921  0A06                     _I2C1_MasterTRBInsert:	
 12922                           
 12923                           ;incstack = 0
 12924                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12925                           ;I2C1_MasterTRBInsert@count stored from wreg
 12926  0A06  0140               	movlb	0	; select bank0
 12927  0A07  00A4               	movwf	I2C1_MasterTRBInsert@count
 12928                           
 12929                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 12930  0A08  0141               	movlb	1	; select bank1
 12931  0A09  1822               	btfsc	(_i2c1_object^(0+128)+2),0
 12932  0A0A  2A45               	goto	l4663
 12933                           
 12934                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 12935  0A0B  3002               	movlw	2
 12936  0A0C  0140               	movlb	0	; select bank0
 12937  0A0D  00A3               	movwf	??_I2C1_MasterTRBInsert
 12938  0A0E  0822               	movf	I2C1_MasterTRBInsert@pflag,w
 12939  0A0F  0086               	movwf	6
 12940  0A10  0187               	clrf	7
 12941  0A11  0823               	movf	??_I2C1_MasterTRBInsert,w
 12942  0A12  0081               	movwf	1
 12943                           
 12944                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 12945  0A13  0141               	movlb	1	; select bank1
 12946  0A14  0A20               	incf	_i2c1_object^(0+128),w
 12947  0A15  0086               	movwf	6
 12948  0A16  0187               	clrf	7
 12949  0A17  0140               	movlb	0	; select bank0
 12950  0A18  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 12951  0A19  3FC0               	movwi [0]fsr1
 12952  0A1A  0821               	movf	I2C1_MasterTRBInsert@ptrb_list+1,w
 12953  0A1B  3FC1               	movwi [1]fsr1
 12954                           
 12955                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 12956  0A1C  0824               	movf	I2C1_MasterTRBInsert@count,w
 12957  0A1D  00A3               	movwf	??_I2C1_MasterTRBInsert
 12958  0A1E  0141               	movlb	1	; select bank1
 12959  0A1F  0820               	movf	_i2c1_object^(0+128),w
 12960  0A20  0086               	movwf	6
 12961  0A21  0187               	clrf	7
 12962  0A22  0140               	movlb	0	; select bank0
 12963  0A23  0823               	movf	??_I2C1_MasterTRBInsert,w
 12964  0A24  0081               	movwf	1
 12965                           
 12966                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 12967  0A25  0822               	movf	I2C1_MasterTRBInsert@pflag,w
 12968  0A26  00A3               	movwf	??_I2C1_MasterTRBInsert
 12969  0A27  0141               	movlb	1	; select bank1
 12970  0A28  0820               	movf	_i2c1_object^(0+128),w
 12971  0A29  3E03               	addlw	3
 12972  0A2A  0086               	movwf	6
 12973  0A2B  0187               	clrf	7
 12974  0A2C  0140               	movlb	0	; select bank0
 12975  0A2D  0823               	movf	??_I2C1_MasterTRBInsert,w
 12976  0A2E  0081               	movwf	1
 12977                           
 12978                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 12979  0A2F  3004               	movlw	4
 12980  0A30  00A3               	movwf	??_I2C1_MasterTRBInsert
 12981  0A31  0823               	movf	??_I2C1_MasterTRBInsert,w
 12982  0A32  0141               	movlb	1	; select bank1
 12983  0A33  07A0               	addwf	_i2c1_object^(0+128),f
 12984                           
 12985                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 12986  0A34  0820               	movf	_i2c1_object^(0+128),w
 12987  0A35  3AD1               	xorlw	(low ((_i2c1_tr_queue| 0+4)))& (0+255)
 12988  0A36  1D03               	skipz
 12989  0A37  2A3E               	goto	l4659
 12990                           
 12991                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 12992  0A38  30CD               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 12993  0A39  0140               	movlb	0	; select bank0
 12994  0A3A  00A3               	movwf	??_I2C1_MasterTRBInsert
 12995  0A3B  0823               	movf	??_I2C1_MasterTRBInsert,w
 12996  0A3C  0141               	movlb	1	; select bank1
 12997  0A3D  00A0               	movwf	_i2c1_object^(0+128)
 12998  0A3E                     l4659:	
 12999                           
 13000                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 13001  0A3E  10A2               	bcf	(_i2c1_object^(0+128)+2),1
 13002                           
 13003                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 13004  0A3F  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 13005  0A40  0620               	xorwf	_i2c1_object^(0+128),w
 13006  0A41  1D03               	skipz
 13007  0A42  2A4B               	goto	l4665
 13008                           
 13009                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 13010  0A43  1422               	bsf	(_i2c1_object^(0+128)+2),0
 13011  0A44  2A4B               	goto	l4665
 13012  0A45                     l4663:	
 13013                           
 13014                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 13015  0A45  0140               	movlb	0	; select bank0
 13016  0A46  0822               	movf	I2C1_MasterTRBInsert@pflag,w
 13017  0A47  0086               	movwf	6
 13018  0A48  0187               	clrf	7
 13019  0A49  0181               	clrf	1
 13020  0A4A  0A81               	incf	1,f
 13021  0A4B                     l4665:	
 13022                           
 13023                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 13024  0A4B  0140               	movlb	0	; select bank0
 13025  0A4C  0822               	movf	I2C1_MasterTRBInsert@pflag,w
 13026  0A4D  0086               	movwf	6
 13027  0A4E  0187               	clrf	7
 13028  0A4F  3002               	movlw	2
 13029  0A50  0601               	xorwf	1,w
 13030  0A51  1D03               	btfss	3,2
 13031  0A52  0008               	return
 13032                           
 13033                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 13034  0A53  3195  2574         	fcall	_I2C1_WaitForLastPacketToComplete
 13035                           
 13036                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 13037  0A55  014E               	movlb	14	; select bank14
 13038  0A56  140F               	bsf	15,0	;volatile
 13039  0A57  0008               	return
 13040  0A58                     __end_of_I2C1_MasterTRBInsert:	
 13041                           
 13042                           	psect	text36
 13043  1574                     __ptext36:	
 13044 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 13045 ;; Defined at:
 13046 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 13047 ;; Parameters:    Size  Location     Type
 13048 ;;		None
 13049 ;; Auto vars:     Size  Location     Type
 13050 ;;		None
 13051 ;; Return value:  Size  Location     Type
 13052 ;;                  1    wreg      void 
 13053 ;; Registers used:
 13054 ;;		wreg, status,2, status,0
 13055 ;; Tracked objects:
 13056 ;;		On entry : 0/0
 13057 ;;		On exit  : 0/0
 13058 ;;		Unchanged: 0/0
 13059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13064 ;;Total ram usage:        0 bytes
 13065 ;; Hardware stack levels used:    1
 13066 ;; Hardware stack levels required when called:    4
 13067 ;; This function calls:
 13068 ;;		Nothing
 13069 ;; This function is called by:
 13070 ;;		_I2C1_MasterTRBInsert
 13071 ;; This function uses a non-reentrant model
 13072 ;;
 13073                           
 13074                           
 13075                           ;psect for function _I2C1_WaitForLastPacketToComplete
 13076  1574                     _I2C1_WaitForLastPacketToComplete:	
 13077  1574                     l4645:	
 13078                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 13079                           
 13080                           ;incstack = 0
 13081                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 13082                           
 13083                           
 13084                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 13085  1574  0141               	movlb	1	; select bank1
 13086  1575  0846               	movf	_i2c1_state^(0+128),w
 13087  1576  1903               	btfsc	3,2
 13088  1577  0008               	return
 13089  1578  2D74               	goto	l4645
 13090  1579                     __end_of_I2C1_WaitForLastPacketToComplete:	
 13091                           
 13092                           	psect	text37
 13093  1634                     __ptext37:	
 13094 ;; *************** function _CLOCK_init *****************
 13095 ;; Defined at:
 13096 ;;		line 18 in file "clock.c"
 13097 ;; Parameters:    Size  Location     Type
 13098 ;;		None
 13099 ;; Auto vars:     Size  Location     Type
 13100 ;;		None
 13101 ;; Return value:  Size  Location     Type
 13102 ;;                  1    wreg      void 
 13103 ;; Registers used:
 13104 ;;		wreg, status,2, status,0
 13105 ;; Tracked objects:
 13106 ;;		On entry : 0/0
 13107 ;;		On exit  : 0/0
 13108 ;;		Unchanged: 0/0
 13109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13114 ;;Total ram usage:        0 bytes
 13115 ;; Hardware stack levels used:    1
 13116 ;; Hardware stack levels required when called:    4
 13117 ;; This function calls:
 13118 ;;		Nothing
 13119 ;; This function is called by:
 13120 ;;		_main
 13121 ;; This function uses a non-reentrant model
 13122 ;;
 13123                           
 13124                           
 13125                           ;psect for function _CLOCK_init
 13126  1634                     _CLOCK_init:	
 13127                           
 13128                           ;clock.c: 25:     T0CON1bits.T0CS = 0b010;
 13129                           
 13130                           ;incstack = 0
 13131                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0]
 13132  1634  014B               	movlb	11	; select bank11
 13133  1635  081F               	movf	31,w	;volatile
 13134  1636  391F               	andlw	-225
 13135  1637  3840               	iorlw	64
 13136  1638  009F               	movwf	31	;volatile
 13137                           
 13138                           ;clock.c: 26:     T0CON1bits.CKPS = 0b0010;
 13139  1639  081F               	movf	31,w	;volatile
 13140  163A  39F0               	andlw	-16
 13141  163B  3802               	iorlw	2
 13142  163C  009F               	movwf	31	;volatile
 13143                           
 13144                           ;clock.c: 28:     TMR0H = 249;
 13145  163D  30F9               	movlw	249
 13146  163E  009D               	movwf	29	;volatile
 13147                           
 13148                           ;clock.c: 30:     PIE0bits.TMR0IE = 1;
 13149  163F  014E               	movlb	14	; select bank14
 13150  1640  1696               	bsf	22,5	;volatile
 13151                           
 13152                           ;clock.c: 33:     T0CON0bits.EN = 1;
 13153  1641  014B               	movlb	11	; select bank11
 13154  1642  179E               	bsf	30,7	;volatile
 13155  1643  0008               	return
 13156  1644                     __end_of_CLOCK_init:	
 13157                           
 13158                           	psect	text38
 13159  06EA                     __ptext38:	
 13160 ;; *************** function _BUTTONS_task *****************
 13161 ;; Defined at:
 13162 ;;		line 15 in file "buttons.c"
 13163 ;; Parameters:    Size  Location     Type
 13164 ;;		None
 13165 ;; Auto vars:     Size  Location     Type
 13166 ;;  btn             1    8[BANK0 ] PTR struct .
 13167 ;;		 -> buttons(32), 
 13168 ;;  i               1    5[BANK0 ] unsigned char 
 13169 ;;  time            2    6[BANK0 ] unsigned short 
 13170 ;; Return value:  Size  Location     Type
 13171 ;;                  1    wreg      void 
 13172 ;; Registers used:
 13173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13174 ;; Tracked objects:
 13175 ;;		On entry : 0/0
 13176 ;;		On exit  : 0/0
 13177 ;;		Unchanged: 0/0
 13178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13180 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13181 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13182 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13183 ;;Total ram usage:        7 bytes
 13184 ;; Hardware stack levels used:    1
 13185 ;; Hardware stack levels required when called:    5
 13186 ;; This function calls:
 13187 ;;		_CLOCK_getTime
 13188 ;; This function is called by:
 13189 ;;		_main
 13190 ;; This function uses a non-reentrant model
 13191 ;;
 13192                           
 13193                           
 13194                           ;psect for function _BUTTONS_task
 13195  06EA                     _BUTTONS_task:	
 13196                           
 13197                           ;buttons.c: 16:     time_t time = CLOCK_getTime();
 13198                           
 13199                           ;incstack = 0
 13200                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13201  06EA  3195  25A9  3186   	fcall	_CLOCK_getTime
 13202  06ED  0140               	movlb	0	; select bank0
 13203  06EE  0821               	movf	?_CLOCK_getTime+1,w
 13204  06EF  00A7               	movwf	BUTTONS_task@time+1
 13205  06F0  0820               	movf	?_CLOCK_getTime,w
 13206  06F1  00A6               	movwf	BUTTONS_task@time
 13207                           
 13208                           ;buttons.c: 19:     if (time - lastTime < 10)
 13209  06F2  0141               	movlb	1	; select bank1
 13210  06F3  082F               	movf	_lastTime^(0+128),w
 13211  06F4  0140               	movlb	0	; select bank0
 13212  06F5  0226               	subwf	BUTTONS_task@time,w
 13213  06F6  00A2               	movwf	??_BUTTONS_task
 13214  06F7  0141               	movlb	1	; select bank1
 13215  06F8  0830               	movf	(_lastTime+1)^(0+128),w
 13216  06F9  0140               	movlb	0	; select bank0
 13217  06FA  3B27               	subwfb	BUTTONS_task@time+1,w
 13218  06FB  00A3               	movwf	??_BUTTONS_task+1
 13219  06FC  3000               	movlw	0
 13220  06FD  0223               	subwf	??_BUTTONS_task+1,w
 13221  06FE  300A               	movlw	10
 13222  06FF  1903               	skipnz
 13223  0700  0222               	subwf	??_BUTTONS_task,w
 13224  0701  1C03               	btfss	3,0
 13225  0702  0008               	return
 13226                           
 13227                           ;buttons.c: 22:     lastTime = time;
 13228  0703  0827               	movf	BUTTONS_task@time+1,w
 13229  0704  0141               	movlb	1	; select bank1
 13230  0705  00B0               	movwf	(_lastTime+1)^(0+128)
 13231  0706  0140               	movlb	0	; select bank0
 13232  0707  0826               	movf	BUTTONS_task@time,w
 13233  0708  0141               	movlb	1	; select bank1
 13234  0709  00AF               	movwf	_lastTime^(0+128)
 13235                           
 13236                           ;buttons.c: 25:     for (uint8_t i = 0; i < 4; i++) {
 13237  070A  0140               	movlb	0	; select bank0
 13238  070B  01A5               	clrf	BUTTONS_task@i
 13239  070C                     l5459:	
 13240                           
 13241                           ;buttons.c: 26:         button_t* btn = buttons + i;
 13242  070C  0825               	movf	BUTTONS_task@i,w
 13243  070D  00A2               	movwf	??_BUTTONS_task
 13244  070E  3002               	movlw	2
 13245  070F                     u4705:	
 13246  070F  35A2               	lslf	??_BUTTONS_task,f
 13247  0710  3EFF               	addlw	-1
 13248  0711  1D03               	skipz
 13249  0712  2F0F               	goto	u4705
 13250  0713  3522               	lslf	??_BUTTONS_task,w
 13251  0714  3E38               	addlw	(low (_buttons| (0+256)))& (0+255)
 13252  0715  00A3               	movwf	??_BUTTONS_task+1
 13253  0716  0823               	movf	??_BUTTONS_task+1,w
 13254  0717  00A8               	movwf	BUTTONS_task@btn
 13255                           
 13256                           ;buttons.c: 29:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 13257  0718  0828               	movf	BUTTONS_task@btn,w
 13258  0719  0086               	movwf	6
 13259  071A  3001               	movlw	1	; select bank2/3
 13260  071B  0087               	movwf	7
 13261  071C  3F40               	moviw [0]fsr1
 13262  071D  00A2               	movwf	??_BUTTONS_task
 13263  071E  3F41               	moviw [1]fsr1
 13264  071F  00A3               	movwf	??_BUTTONS_task+1
 13265  0720  0822               	movf	??_BUTTONS_task,w
 13266  0721  0086               	movwf	6
 13267  0722  0823               	movf	??_BUTTONS_task+1,w
 13268  0723  0087               	movwf	7
 13269  0724  3001               	movlw	1
 13270  0725  00A4               	movwf	??_BUTTONS_task+2
 13271  0726  0828               	movf	BUTTONS_task@btn,w
 13272  0727  3E02               	addlw	2
 13273  0728  0084               	movwf	4
 13274  0729  3001               	movlw	1	; select bank2/3
 13275  072A  0085               	movwf	5
 13276  072B  0A00               	incf	0,w
 13277  072C  2F2E               	goto	u4714
 13278  072D                     u4715:	
 13279  072D  35A4               	lslf	??_BUTTONS_task+2,f
 13280  072E                     u4714:	
 13281  072E  0B89               	decfsz	9,f
 13282  072F  2F2D               	goto	u4715
 13283  0730  0824               	movf	??_BUTTONS_task+2,w
 13284  0731  0501               	andwf	1,w
 13285  0732  1D03               	btfss	3,2
 13286  0733  2F3C               	goto	l5465
 13287                           
 13288                           ;buttons.c: 30:             btn->state = STATE_PRESSED;
 13289  0734  0828               	movf	BUTTONS_task@btn,w
 13290  0735  3E03               	addlw	3
 13291  0736  0086               	movwf	6
 13292  0737  3001               	movlw	1	; select bank2/3
 13293  0738  0087               	movwf	7
 13294  0739  0181               	clrf	1
 13295  073A  0A81               	incf	1,f
 13296                           
 13297                           ;buttons.c: 31:         } else {
 13298  073B  2F42               	goto	l804
 13299  073C                     l5465:	
 13300                           
 13301                           ;buttons.c: 32:             btn->state = STATE_UNPRESSED;
 13302  073C  0828               	movf	BUTTONS_task@btn,w
 13303  073D  3E03               	addlw	3
 13304  073E  0086               	movwf	6
 13305  073F  3001               	movlw	1	; select bank2/3
 13306  0740  0087               	movwf	7
 13307  0741  0181               	clrf	1
 13308  0742                     l804:	
 13309                           ;buttons.c: 33:         }
 13310                           
 13311                           
 13312                           ;buttons.c: 35:         if(btn->state == STATE_PRESSED
 13313  0742  0828               	movf	BUTTONS_task@btn,w
 13314  0743  3E03               	addlw	3
 13315  0744  0086               	movwf	6
 13316  0745  3001               	movlw	1	; select bank2/3
 13317  0746  0087               	movwf	7
 13318  0747  0301               	decf	1,w
 13319  0748  1D03               	btfss	3,2
 13320  0749  2F5B               	goto	l805
 13321  074A  0828               	movf	BUTTONS_task@btn,w
 13322  074B  3E04               	addlw	4
 13323  074C  0086               	movwf	6
 13324  074D  3001               	movlw	1	; select bank2/3
 13325  074E  0087               	movwf	7
 13326  074F  0801               	movf	1,w
 13327  0750  1D03               	btfss	3,2
 13328  0751  2F5B               	goto	l805
 13329                           
 13330                           ;buttons.c: 36:             && btn->lastState == STATE_UNPRESSED){;buttons.c: 37:       
      +                                btn->time = time;
 13331  0752  0828               	movf	BUTTONS_task@btn,w
 13332  0753  3E06               	addlw	6
 13333  0754  0086               	movwf	6
 13334  0755  3001               	movlw	1	; select bank2/3
 13335  0756  0087               	movwf	7
 13336  0757  0826               	movf	BUTTONS_task@time,w
 13337  0758  3FC0               	movwi [0]fsr1
 13338  0759  0827               	movf	BUTTONS_task@time+1,w
 13339  075A  3FC1               	movwi [1]fsr1
 13340  075B                     l805:	
 13341                           ;buttons.c: 38:         }
 13342                           
 13343                           
 13344                           ;buttons.c: 39:         if (
 13345  075B  0828               	movf	BUTTONS_task@btn,w
 13346  075C  3E03               	addlw	3
 13347  075D  0086               	movwf	6
 13348  075E  3001               	movlw	1	; select bank2/3
 13349  075F  0087               	movwf	7
 13350  0760  0801               	movf	1,w
 13351  0761  1D03               	btfss	3,2
 13352  0762  2F84               	goto	l806
 13353  0763  0828               	movf	BUTTONS_task@btn,w
 13354  0764  3E04               	addlw	4
 13355  0765  0086               	movwf	6
 13356  0766  3001               	movlw	1	; select bank2/3
 13357  0767  0087               	movwf	7
 13358  0768  0301               	decf	1,w
 13359  0769  1D03               	btfss	3,2
 13360  076A  2F84               	goto	l806
 13361  076B  0828               	movf	BUTTONS_task@btn,w
 13362  076C  3E06               	addlw	6
 13363  076D  0086               	movwf	6
 13364  076E  3001               	movlw	1	; select bank2/3
 13365  076F  0087               	movwf	7
 13366  0770  3F40               	moviw [0]fsr1
 13367  0771  0226               	subwf	BUTTONS_task@time,w
 13368  0772  00A2               	movwf	??_BUTTONS_task
 13369  0773  3F41               	moviw [1]fsr1
 13370  0774  3B27               	subwfb	BUTTONS_task@time+1,w
 13371  0775  00A3               	movwf	??_BUTTONS_task+1
 13372  0776  3000               	movlw	0
 13373  0777  0223               	subwf	??_BUTTONS_task+1,w
 13374  0778  30FA               	movlw	250
 13375  0779  1903               	skipnz
 13376  077A  0222               	subwf	??_BUTTONS_task,w
 13377  077B  1803               	skipnc
 13378  077C  2F84               	goto	l806
 13379                           
 13380                           ;buttons.c: 42:             && (time-btn->time) < 250) {;buttons.c: 43:             btn-
      +                          >event = EVENT_PRESSED;
 13381  077D  0828               	movf	BUTTONS_task@btn,w
 13382  077E  3E05               	addlw	5
 13383  077F  0086               	movwf	6
 13384  0780  3001               	movlw	1	; select bank2/3
 13385  0781  0087               	movwf	7
 13386  0782  0181               	clrf	1
 13387  0783  0A81               	incf	1,f
 13388  0784                     l806:	
 13389                           ;buttons.c: 44:         }
 13390                           
 13391                           
 13392                           ;buttons.c: 45:         if (
 13393  0784  0828               	movf	BUTTONS_task@btn,w
 13394  0785  3E03               	addlw	3
 13395  0786  0086               	movwf	6
 13396  0787  3001               	movlw	1	; select bank2/3
 13397  0788  0087               	movwf	7
 13398  0789  0801               	movf	1,w
 13399  078A  1D03               	btfss	3,2
 13400  078B  2FAC               	goto	l807
 13401  078C  0828               	movf	BUTTONS_task@btn,w
 13402  078D  3E04               	addlw	4
 13403  078E  0086               	movwf	6
 13404  078F  3001               	movlw	1	; select bank2/3
 13405  0790  0087               	movwf	7
 13406  0791  0301               	decf	1,w
 13407  0792  1D03               	btfss	3,2
 13408  0793  2FAC               	goto	l807
 13409  0794  0828               	movf	BUTTONS_task@btn,w
 13410  0795  3E06               	addlw	6
 13411  0796  0086               	movwf	6
 13412  0797  3001               	movlw	1	; select bank2/3
 13413  0798  0087               	movwf	7
 13414  0799  3F40               	moviw [0]fsr1
 13415  079A  0226               	subwf	BUTTONS_task@time,w
 13416  079B  00A2               	movwf	??_BUTTONS_task
 13417  079C  3F41               	moviw [1]fsr1
 13418  079D  3B27               	subwfb	BUTTONS_task@time+1,w
 13419  079E  00A3               	movwf	??_BUTTONS_task+1
 13420  079F  3000               	movlw	0
 13421  07A0  0223               	subwf	??_BUTTONS_task+1,w
 13422  07A1  30FB               	movlw	251
 13423  07A2  1903               	skipnz
 13424  07A3  0222               	subwf	??_BUTTONS_task,w
 13425  07A4  1C03               	skipc
 13426  07A5  2FAC               	goto	l807
 13427                           
 13428                           ;buttons.c: 48:             && (time-btn->time) > 250){;buttons.c: 49:             btn->
      +                          event = EVENT_IDLE;
 13429  07A6  0828               	movf	BUTTONS_task@btn,w
 13430  07A7  3E05               	addlw	5
 13431  07A8  0086               	movwf	6
 13432  07A9  3001               	movlw	1	; select bank2/3
 13433  07AA  0087               	movwf	7
 13434  07AB  0181               	clrf	1
 13435  07AC                     l807:	
 13436                           ;buttons.c: 50:         }
 13437                           
 13438                           
 13439                           ;buttons.c: 51:         if(btn->state == STATE_PRESSED && (time-btn->time) > 250){
 13440  07AC  0828               	movf	BUTTONS_task@btn,w
 13441  07AD  3E03               	addlw	3
 13442  07AE  0086               	movwf	6
 13443  07AF  3001               	movlw	1	; select bank2/3
 13444  07B0  0087               	movwf	7
 13445  07B1  0301               	decf	1,w
 13446  07B2  1D03               	btfss	3,2
 13447  07B3  2FCF               	goto	l808
 13448  07B4  0828               	movf	BUTTONS_task@btn,w
 13449  07B5  3E06               	addlw	6
 13450  07B6  0086               	movwf	6
 13451  07B7  3001               	movlw	1	; select bank2/3
 13452  07B8  0087               	movwf	7
 13453  07B9  3F40               	moviw [0]fsr1
 13454  07BA  0226               	subwf	BUTTONS_task@time,w
 13455  07BB  00A2               	movwf	??_BUTTONS_task
 13456  07BC  3F41               	moviw [1]fsr1
 13457  07BD  3B27               	subwfb	BUTTONS_task@time+1,w
 13458  07BE  00A3               	movwf	??_BUTTONS_task+1
 13459  07BF  3000               	movlw	0
 13460  07C0  0223               	subwf	??_BUTTONS_task+1,w
 13461  07C1  30FB               	movlw	251
 13462  07C2  1903               	skipnz
 13463  07C3  0222               	subwf	??_BUTTONS_task,w
 13464  07C4  1C03               	skipc
 13465  07C5  2FCF               	goto	l808
 13466                           
 13467                           ;buttons.c: 52:             btn->event = EVENT_HELD;
 13468  07C6  3002               	movlw	2
 13469  07C7  00A2               	movwf	??_BUTTONS_task
 13470  07C8  0828               	movf	BUTTONS_task@btn,w
 13471  07C9  3E05               	addlw	5
 13472  07CA  0086               	movwf	6
 13473  07CB  3001               	movlw	1	; select bank2/3
 13474  07CC  0087               	movwf	7
 13475  07CD  0822               	movf	??_BUTTONS_task,w
 13476  07CE  0081               	movwf	1
 13477  07CF                     l808:	
 13478                           ;buttons.c: 53:         }
 13479                           
 13480                           
 13481                           ;buttons.c: 54:         btn->lastState = btn->state;
 13482  07CF  0828               	movf	BUTTONS_task@btn,w
 13483  07D0  3E03               	addlw	3
 13484  07D1  0086               	movwf	6
 13485  07D2  3001               	movlw	1	; select bank2/3
 13486  07D3  0087               	movwf	7
 13487  07D4  0801               	movf	1,w
 13488  07D5  00A2               	movwf	??_BUTTONS_task
 13489  07D6  0828               	movf	BUTTONS_task@btn,w
 13490  07D7  3E04               	addlw	4
 13491  07D8  0086               	movwf	6
 13492  07D9  3001               	movlw	1	; select bank2/3
 13493  07DA  0087               	movwf	7
 13494  07DB  0822               	movf	??_BUTTONS_task,w
 13495  07DC  0081               	movwf	1
 13496                           
 13497                           ;buttons.c: 55:     }
 13498  07DD  3001               	movlw	1
 13499  07DE  00A2               	movwf	??_BUTTONS_task
 13500  07DF  0822               	movf	??_BUTTONS_task,w
 13501  07E0  07A5               	addwf	BUTTONS_task@i,f
 13502  07E1  3004               	movlw	4
 13503  07E2  0225               	subwf	BUTTONS_task@i,w
 13504  07E3  1803               	btfsc	3,0
 13505  07E4  0008               	return
 13506  07E5  2F0C               	goto	l5459
 13507  07E6                     __end_of_BUTTONS_task:	
 13508                           
 13509                           	psect	text39
 13510  09BB                     __ptext39:	
 13511 ;; *************** function _BUTTONS_init *****************
 13512 ;; Defined at:
 13513 ;;		line 65 in file "buttons.c"
 13514 ;; Parameters:    Size  Location     Type
 13515 ;;		None
 13516 ;; Auto vars:     Size  Location     Type
 13517 ;;		None
 13518 ;; Return value:  Size  Location     Type
 13519 ;;                  1    wreg      void 
 13520 ;; Registers used:
 13521 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13522 ;; Tracked objects:
 13523 ;;		On entry : 0/0
 13524 ;;		On exit  : 0/0
 13525 ;;		Unchanged: 0/0
 13526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13529 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13530 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13531 ;;Total ram usage:        1 bytes
 13532 ;; Hardware stack levels used:    1
 13533 ;; Hardware stack levels required when called:    5
 13534 ;; This function calls:
 13535 ;;		_init
 13536 ;; This function is called by:
 13537 ;;		_main
 13538 ;; This function uses a non-reentrant model
 13539 ;;
 13540                           
 13541                           
 13542                           ;psect for function _BUTTONS_init
 13543  09BB                     _BUTTONS_init:	
 13544                           
 13545                           ;buttons.c: 66:     menu = &buttons[0];
 13546                           
 13547                           ;incstack = 0
 13548                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13549  09BB  3038               	movlw	(low (_buttons| (0+256)))& (0+255)
 13550  09BC  0140               	movlb	0	; select bank0
 13551  09BD  00A5               	movwf	??_BUTTONS_init
 13552  09BE  0825               	movf	??_BUTTONS_init,w
 13553  09BF  0141               	movlb	1	; select bank1
 13554  09C0  00BC               	movwf	_menu^(0+128)
 13555                           
 13556                           ;buttons.c: 67:     up = &buttons[1];
 13557  09C1  3040               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 13558  09C2  0140               	movlb	0	; select bank0
 13559  09C3  00A5               	movwf	??_BUTTONS_init
 13560  09C4  0825               	movf	??_BUTTONS_init,w
 13561  09C5  0141               	movlb	1	; select bank1
 13562  09C6  00BF               	movwf	_up^(0+128)
 13563                           
 13564                           ;buttons.c: 68:     down = &buttons[2];
 13565  09C7  3048               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 13566  09C8  0140               	movlb	0	; select bank0
 13567  09C9  00A5               	movwf	??_BUTTONS_init
 13568  09CA  0825               	movf	??_BUTTONS_init,w
 13569  09CB  0141               	movlb	1	; select bank1
 13570  09CC  00BE               	movwf	_down^(0+128)
 13571                           
 13572                           ;buttons.c: 69:     enter = &buttons[3];
 13573  09CD  3050               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 13574  09CE  0140               	movlb	0	; select bank0
 13575  09CF  00A5               	movwf	??_BUTTONS_init
 13576  09D0  0825               	movf	??_BUTTONS_init,w
 13577  09D1  0141               	movlb	1	; select bank1
 13578  09D2  00BD               	movwf	_enter^(0+128)
 13579                           
 13580                           ;buttons.c: 71:     init(menu, &PORTC, 2);
 13581  09D3  300E               	movlw	14
 13582  09D4  0140               	movlb	0	; select bank0
 13583  09D5  00A0               	movwf	init@port
 13584  09D6  3000               	movlw	0
 13585  09D7  00A1               	movwf	init@port+1
 13586  09D8  3002               	movlw	2
 13587  09D9  00A5               	movwf	??_BUTTONS_init
 13588  09DA  0825               	movf	??_BUTTONS_init,w
 13589  09DB  00A2               	movwf	init@pin
 13590  09DC  0141               	movlb	1	; select bank1
 13591  09DD  083C               	movf	_menu^(0+128),w
 13592  09DE  3197  272C  3189   	fcall	_init
 13593                           
 13594                           ;buttons.c: 72:     init(enter, &PORTA, 2);
 13595  09E1  300C               	movlw	12
 13596  09E2  0140               	movlb	0	; select bank0
 13597  09E3  00A0               	movwf	init@port
 13598  09E4  3000               	movlw	0
 13599  09E5  00A1               	movwf	init@port+1
 13600  09E6  3002               	movlw	2
 13601  09E7  00A5               	movwf	??_BUTTONS_init
 13602  09E8  0825               	movf	??_BUTTONS_init,w
 13603  09E9  00A2               	movwf	init@pin
 13604  09EA  0141               	movlb	1	; select bank1
 13605  09EB  083D               	movf	_enter^(0+128),w
 13606  09EC  3197  272C  3189   	fcall	_init
 13607                           
 13608                           ;buttons.c: 73:     init(down, &PORTC, 0);
 13609  09EF  300E               	movlw	14
 13610  09F0  0140               	movlb	0	; select bank0
 13611  09F1  00A0               	movwf	init@port
 13612  09F2  3000               	movlw	0
 13613  09F3  00A1               	movwf	init@port+1
 13614  09F4  01A2               	clrf	init@pin
 13615  09F5  0141               	movlb	1	; select bank1
 13616  09F6  083E               	movf	_down^(0+128),w
 13617  09F7  3197  272C  3189   	fcall	_init
 13618                           
 13619                           ;buttons.c: 74:     init(up, &PORTC, 1);
 13620  09FA  300E               	movlw	14
 13621  09FB  0140               	movlb	0	; select bank0
 13622  09FC  00A0               	movwf	init@port
 13623  09FD  3000               	movlw	0
 13624  09FE  00A1               	movwf	init@port+1
 13625  09FF  01A2               	clrf	init@pin
 13626  0A00  0AA2               	incf	init@pin,f
 13627  0A01  0141               	movlb	1	; select bank1
 13628  0A02  083F               	movf	_up^(0+128),w
 13629  0A03  3197  272C         	fcall	_init
 13630  0A05  0008               	return
 13631  0A06                     __end_of_BUTTONS_init:	
 13632                           
 13633                           	psect	text40
 13634  172C                     __ptext40:	
 13635 ;; *************** function _init *****************
 13636 ;; Defined at:
 13637 ;;		line 58 in file "buttons.c"
 13638 ;; Parameters:    Size  Location     Type
 13639 ;;  btn             1    wreg     PTR struct .
 13640 ;;		 -> buttons(32), NULL(0), 
 13641 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 13642 ;;		 -> PORTA(1), PORTC(1), 
 13643 ;;  pin             1    2[BANK0 ] unsigned char 
 13644 ;; Auto vars:     Size  Location     Type
 13645 ;;  btn             1    4[BANK0 ] PTR struct .
 13646 ;;		 -> buttons(32), NULL(0), 
 13647 ;; Return value:  Size  Location     Type
 13648 ;;                  1    wreg      void 
 13649 ;; Registers used:
 13650 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13651 ;; Tracked objects:
 13652 ;;		On entry : 0/0
 13653 ;;		On exit  : 0/0
 13654 ;;		Unchanged: 0/0
 13655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13656 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13657 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13658 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13659 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13660 ;;Total ram usage:        5 bytes
 13661 ;; Hardware stack levels used:    1
 13662 ;; Hardware stack levels required when called:    4
 13663 ;; This function calls:
 13664 ;;		Nothing
 13665 ;; This function is called by:
 13666 ;;		_BUTTONS_init
 13667 ;; This function uses a non-reentrant model
 13668 ;;
 13669                           
 13670                           
 13671                           ;psect for function _init
 13672  172C                     _init:	
 13673                           
 13674                           ;incstack = 0
 13675                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 13676                           ;init@btn stored from wreg
 13677  172C  0140               	movlb	0	; select bank0
 13678  172D  00A4               	movwf	init@btn
 13679                           
 13680                           ;buttons.c: 59:     btn->port = port;
 13681  172E  0824               	movf	init@btn,w
 13682  172F  0086               	movwf	6
 13683  1730  3001               	movlw	1	; select bank2/3
 13684  1731  0087               	movwf	7
 13685  1732  0820               	movf	init@port,w
 13686  1733  3FC0               	movwi [0]fsr1
 13687  1734  0821               	movf	init@port+1,w
 13688  1735  3FC1               	movwi [1]fsr1
 13689                           
 13690                           ;buttons.c: 60:     btn->pin = pin;
 13691  1736  0822               	movf	init@pin,w
 13692  1737  00A3               	movwf	??_init
 13693  1738  0824               	movf	init@btn,w
 13694  1739  3E02               	addlw	2
 13695  173A  0086               	movwf	6
 13696  173B  3001               	movlw	1	; select bank2/3
 13697  173C  0087               	movwf	7
 13698  173D  0823               	movf	??_init,w
 13699  173E  0081               	movwf	1
 13700                           
 13701                           ;buttons.c: 61:     btn->state = STATE_UNPRESSED;
 13702  173F  0824               	movf	init@btn,w
 13703  1740  3E03               	addlw	3
 13704  1741  0086               	movwf	6
 13705  1742  3001               	movlw	1	; select bank2/3
 13706  1743  0087               	movwf	7
 13707  1744  0181               	clrf	1
 13708                           
 13709                           ;buttons.c: 62:     btn->event = EVENT_IDLE;
 13710  1745  0824               	movf	init@btn,w
 13711  1746  3E05               	addlw	5
 13712  1747  0086               	movwf	6
 13713  1748  3001               	movlw	1	; select bank2/3
 13714  1749  0087               	movwf	7
 13715  174A  0181               	clrf	1
 13716  174B  0008               	return
 13717  174C                     __end_of_init:	
 13718                           
 13719                           	psect	text41
 13720  0C75                     __ptext41:	
 13721 ;; *************** function _BEAT_task *****************
 13722 ;; Defined at:
 13723 ;;		line 63 in file "beat.c"
 13724 ;; Parameters:    Size  Location     Type
 13725 ;;		None
 13726 ;; Auto vars:     Size  Location     Type
 13727 ;;  offset          2   16[BANK0 ] unsigned short 
 13728 ;; Return value:  Size  Location     Type
 13729 ;;                  1    wreg      void 
 13730 ;; Registers used:
 13731 ;;		wreg, status,2, status,0, pclath, cstack
 13732 ;; Tracked objects:
 13733 ;;		On entry : 0/0
 13734 ;;		On exit  : 0/0
 13735 ;;		Unchanged: 0/0
 13736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13738 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13739 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13740 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13741 ;;Total ram usage:        4 bytes
 13742 ;; Hardware stack levels used:    1
 13743 ;; Hardware stack levels required when called:    5
 13744 ;; This function calls:
 13745 ;;		_ADCC_SetUpperThreshold
 13746 ;;		_CLOCK_getTime
 13747 ;;		_TM1650_isEnabled
 13748 ;;		___lwdiv
 13749 ;; This function is called by:
 13750 ;;		_main
 13751 ;; This function uses a non-reentrant model
 13752 ;;
 13753                           
 13754                           
 13755                           ;psect for function _BEAT_task
 13756  0C75                     _BEAT_task:	
 13757                           
 13758                           ;beat.c: 65:     if (TM1650_isEnabled())
 13759                           
 13760                           ;incstack = 0
 13761                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 13762  0C75  3195  2569  318C   	fcall	_TM1650_isEnabled
 13763  0C78  3A00               	xorlw	0
 13764  0C79  1D03               	btfss	3,2
 13765  0C7A  0008               	return
 13766                           
 13767                           ;beat.c: 68:     if (CLOCK_getTime() - lastRun < delay)
 13768  0C7B  3195  25A9  318C   	fcall	_CLOCK_getTime
 13769  0C7E  0141               	movlb	1	; select bank1
 13770  0C7F  0829               	movf	_lastRun^(0+128),w
 13771  0C80  0140               	movlb	0	; select bank0
 13772  0C81  0220               	subwf	?_CLOCK_getTime,w
 13773  0C82  00AE               	movwf	??_BEAT_task
 13774  0C83  0141               	movlb	1	; select bank1
 13775  0C84  082A               	movf	(_lastRun+1)^(0+128),w
 13776  0C85  0140               	movlb	0	; select bank0
 13777  0C86  3B21               	subwfb	?_CLOCK_getTime+1,w
 13778  0C87  00AF               	movwf	??_BEAT_task+1
 13779  0C88  0141               	movlb	1	; select bank1
 13780  0C89  0867               	movf	(_delay+1)^(0+128),w
 13781  0C8A  0140               	movlb	0	; select bank0
 13782  0C8B  022F               	subwf	??_BEAT_task+1,w
 13783  0C8C  1D03               	skipz
 13784  0C8D  2C92               	goto	u4915
 13785  0C8E  0141               	movlb	1	; select bank1
 13786  0C8F  0866               	movf	_delay^(0+128),w
 13787  0C90  0140               	movlb	0	; select bank0
 13788  0C91  022E               	subwf	??_BEAT_task,w
 13789  0C92                     u4915:	
 13790  0C92  1C03               	btfss	3,0
 13791  0C93  0008               	return
 13792                           
 13793                           ;beat.c: 71:     lastRun = CLOCK_getTime();
 13794  0C94  3195  25A9  318C   	fcall	_CLOCK_getTime
 13795  0C97  0140               	movlb	0	; select bank0
 13796  0C98  0821               	movf	?_CLOCK_getTime+1,w
 13797  0C99  0141               	movlb	1	; select bank1
 13798  0C9A  00AA               	movwf	(_lastRun+1)^(0+128)
 13799  0C9B  0140               	movlb	0	; select bank0
 13800  0C9C  0820               	movf	?_CLOCK_getTime,w
 13801  0C9D  0141               	movlb	1	; select bank1
 13802  0C9E  00A9               	movwf	_lastRun^(0+128)
 13803                           
 13804                           ;beat.c: 73:     if (thresholdExceeded == 1) {
 13805  0C9F  033A               	decf	_thresholdExceeded^(0+128),w
 13806  0CA0  1D03               	btfss	3,2
 13807  0CA1  2CA7               	goto	l5537
 13808                           
 13809                           ;beat.c: 77:         thresholdCount++;
 13810  0CA2  3001               	movlw	1
 13811  0CA3  07A7               	addwf	_thresholdCount^(0+128),f
 13812  0CA4  3000               	movlw	0
 13813  0CA5  3DA8               	addwfc	(_thresholdCount+1)^(0+128),f
 13814                           
 13815                           ;beat.c: 78:     } else {
 13816  0CA6  2CAD               	goto	l5541
 13817  0CA7                     l5537:	
 13818                           
 13819                           ;beat.c: 80:         thresholdCount = 0;
 13820  0CA7  01A7               	clrf	_thresholdCount^(0+128)
 13821  0CA8  01A8               	clrf	(_thresholdCount+1)^(0+128)
 13822                           
 13823                           ;beat.c: 81:         delay = 20;
 13824  0CA9  3014               	movlw	20
 13825  0CAA  00E6               	movwf	_delay^(0+128)
 13826  0CAB  3000               	movlw	0
 13827  0CAC  00E7               	movwf	(_delay^(0+128)+1)
 13828  0CAD                     l5541:	
 13829                           
 13830                           ;beat.c: 87:     if (thresholdExceeded == 1 && lastDetected == 0) {
 13831  0CAD  033A               	decf	_thresholdExceeded^(0+128),w
 13832  0CAE  1D03               	btfss	3,2
 13833  0CAF  2CF2               	goto	l5559
 13834  0CB0  0839               	movf	_lastDetected^(0+128),w
 13835  0CB1  1D03               	btfss	3,2
 13836  0CB2  2CF2               	goto	l5559
 13837                           
 13838                           ;beat.c: 89:         detected = 1;
 13839  0CB3  01BB               	clrf	_detected^(0+128)
 13840  0CB4  0ABB               	incf	_detected^(0+128),f
 13841                           
 13842                           ;beat.c: 92:         delay = 100;
 13843  0CB5  3064               	movlw	100
 13844  0CB6  00E6               	movwf	_delay^(0+128)
 13845  0CB7  3000               	movlw	0
 13846  0CB8  00E7               	movwf	(_delay^(0+128)+1)
 13847                           
 13848                           ;beat.c: 95:         time_t offset = CLOCK_getTime() - lastBeat;
 13849  0CB9  3195  25A9  318C   	fcall	_CLOCK_getTime
 13850  0CBC  0141               	movlb	1	; select bank1
 13851  0CBD  082D               	movf	_lastBeat^(0+128),w
 13852  0CBE  0140               	movlb	0	; select bank0
 13853  0CBF  0220               	subwf	?_CLOCK_getTime,w
 13854  0CC0  00B0               	movwf	BEAT_task@offset
 13855  0CC1  0141               	movlb	1	; select bank1
 13856  0CC2  082E               	movf	(_lastBeat+1)^(0+128),w
 13857  0CC3  0140               	movlb	0	; select bank0
 13858  0CC4  3B21               	subwfb	?_CLOCK_getTime+1,w
 13859  0CC5  00B1               	movwf	BEAT_task@offset+1
 13860                           
 13861                           ;beat.c: 97:         lastBeat = CLOCK_getTime();
 13862  0CC6  3195  25A9  318C   	fcall	_CLOCK_getTime
 13863  0CC9  0140               	movlb	0	; select bank0
 13864  0CCA  0821               	movf	?_CLOCK_getTime+1,w
 13865  0CCB  0141               	movlb	1	; select bank1
 13866  0CCC  00AE               	movwf	(_lastBeat+1)^(0+128)
 13867  0CCD  0140               	movlb	0	; select bank0
 13868  0CCE  0820               	movf	?_CLOCK_getTime,w
 13869  0CCF  0141               	movlb	1	; select bank1
 13870  0CD0  00AD               	movwf	_lastBeat^(0+128)
 13871                           
 13872                           ;beat.c: 99:         if (offset < 150)
 13873  0CD1  3000               	movlw	0
 13874  0CD2  0140               	movlb	0	; select bank0
 13875  0CD3  0231               	subwf	BEAT_task@offset+1,w
 13876  0CD4  3096               	movlw	150
 13877  0CD5  1903               	skipnz
 13878  0CD6  0230               	subwf	BEAT_task@offset,w
 13879  0CD7  1803               	skipnc
 13880  0CD8  2CDF               	goto	l5557
 13881                           
 13882                           ;beat.c: 100:             bpm = 400;
 13883  0CD9  3090               	movlw	144
 13884  0CDA  0141               	movlb	1	; select bank1
 13885  0CDB  00AB               	movwf	_bpm^(0+128)
 13886  0CDC  3001               	movlw	1
 13887  0CDD  00AC               	movwf	(_bpm^(0+128)+1)
 13888  0CDE  2CF2               	goto	l5559
 13889  0CDF                     l5557:	
 13890                           
 13891                           ;beat.c: 102:             bpm = 60 * 1000 / offset;
 13892  0CDF  0831               	movf	BEAT_task@offset+1,w
 13893  0CE0  00A7               	movwf	___lwdiv@divisor+1
 13894  0CE1  0830               	movf	BEAT_task@offset,w
 13895  0CE2  00A6               	movwf	___lwdiv@divisor
 13896  0CE3  3060               	movlw	96
 13897  0CE4  00A8               	movwf	___lwdiv@dividend
 13898  0CE5  30EA               	movlw	234
 13899  0CE6  00A9               	movwf	___lwdiv@dividend+1
 13900  0CE7  3188  20C2  318C   	fcall	___lwdiv
 13901  0CEA  0140               	movlb	0	; select bank0
 13902  0CEB  0827               	movf	?___lwdiv+1,w
 13903  0CEC  0141               	movlb	1	; select bank1
 13904  0CED  00AC               	movwf	(_bpm+1)^(0+128)
 13905  0CEE  0140               	movlb	0	; select bank0
 13906  0CEF  0826               	movf	?___lwdiv,w
 13907  0CF0  0141               	movlb	1	; select bank1
 13908  0CF1  00AB               	movwf	_bpm^(0+128)
 13909  0CF2                     l5559:	
 13910                           
 13911                           ;beat.c: 108:     lastDetected = thresholdExceeded;
 13912  0CF2  083A               	movf	_thresholdExceeded^(0+128),w
 13913  0CF3  0140               	movlb	0	; select bank0
 13914  0CF4  00AE               	movwf	??_BEAT_task
 13915  0CF5  082E               	movf	??_BEAT_task,w
 13916  0CF6  0141               	movlb	1	; select bank1
 13917  0CF7  00B9               	movwf	_lastDetected^(0+128)
 13918                           
 13919                           ;beat.c: 109:     thresholdExceeded = 0;
 13920  0CF8  01BA               	clrf	_thresholdExceeded^(0+128)
 13921                           
 13922                           ;beat.c: 111:     if (thresholdCount > 3) {
 13923  0CF9  0828               	movf	(_thresholdCount+1)^(0+128),w
 13924  0CFA  3A80               	xorlw	128
 13925  0CFB  0140               	movlb	0	; select bank0
 13926  0CFC  00AE               	movwf	??_BEAT_task
 13927  0CFD  3080               	movlw	128
 13928  0CFE  022E               	subwf	??_BEAT_task,w
 13929  0CFF  1D03               	skipz
 13930  0D00  2D04               	goto	u4965
 13931  0D01  3004               	movlw	4
 13932  0D02  0141               	movlb	1	; select bank1
 13933  0D03  0227               	subwf	_thresholdCount^(0+128),w
 13934  0D04                     u4965:	
 13935  0D04  1C03               	skipc
 13936  0D05  2D23               	goto	l5573
 13937                           
 13938                           ;beat.c: 112:         threshold += 1;
 13939  0D06  3001               	movlw	1
 13940  0D07  0141               	movlb	1	; select bank1
 13941  0D08  07E8               	addwf	_threshold^(0+128),f
 13942  0D09  3000               	movlw	0
 13943  0D0A  3DE9               	addwfc	(_threshold+1)^(0+128),f
 13944                           
 13945                           ;beat.c: 113:         ADCC_SetUpperThreshold(threshold);
 13946  0D0B  0869               	movf	(_threshold+1)^(0+128),w
 13947  0D0C  0140               	movlb	0	; select bank0
 13948  0D0D  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 13949  0D0E  0141               	movlb	1	; select bank1
 13950  0D0F  0868               	movf	_threshold^(0+128),w
 13951  0D10  0140               	movlb	0	; select bank0
 13952  0D11  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 13953  0D12  3195  2597  318C   	fcall	_ADCC_SetUpperThreshold
 13954                           
 13955                           ;beat.c: 114:         thresholdCount = 0;
 13956  0D15  0141               	movlb	1	; select bank1
 13957  0D16  01A7               	clrf	_thresholdCount^(0+128)
 13958  0D17  01A8               	clrf	(_thresholdCount+1)^(0+128)
 13959                           
 13960                           ;beat.c: 117:         lastBeat = CLOCK_getTime();
 13961  0D18  3195  25A9         	fcall	_CLOCK_getTime
 13962  0D1A  0140               	movlb	0	; select bank0
 13963  0D1B  0821               	movf	?_CLOCK_getTime+1,w
 13964  0D1C  0141               	movlb	1	; select bank1
 13965  0D1D  00AE               	movwf	(_lastBeat+1)^(0+128)
 13966  0D1E  0140               	movlb	0	; select bank0
 13967  0D1F  0820               	movf	?_CLOCK_getTime,w
 13968  0D20  0141               	movlb	1	; select bank1
 13969  0D21  00AD               	movwf	_lastBeat^(0+128)
 13970                           
 13971                           ;beat.c: 118:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 13972  0D22  0008               	return
 13973  0D23                     l5573:	
 13974  0D23  3195  25A9  318C   	fcall	_CLOCK_getTime
 13975  0D26  0141               	movlb	1	; select bank1
 13976  0D27  082D               	movf	_lastBeat^(0+128),w
 13977  0D28  0140               	movlb	0	; select bank0
 13978  0D29  0220               	subwf	?_CLOCK_getTime,w
 13979  0D2A  00AE               	movwf	??_BEAT_task
 13980  0D2B  0141               	movlb	1	; select bank1
 13981  0D2C  082E               	movf	(_lastBeat+1)^(0+128),w
 13982  0D2D  0140               	movlb	0	; select bank0
 13983  0D2E  3B21               	subwfb	?_CLOCK_getTime+1,w
 13984  0D2F  00AF               	movwf	??_BEAT_task+1
 13985  0D30  3003               	movlw	3
 13986  0D31  022F               	subwf	??_BEAT_task+1,w
 13987  0D32  30E9               	movlw	233
 13988  0D33  1903               	skipnz
 13989  0D34  022E               	subwf	??_BEAT_task,w
 13990  0D35  1C03               	skipc
 13991  0D36  0008               	return
 13992                           
 13993                           ;beat.c: 119:         threshold -= 1;
 13994  0D37  3001               	movlw	1
 13995  0D38  0141               	movlb	1	; select bank1
 13996  0D39  02E8               	subwf	_threshold^(0+128),f
 13997  0D3A  3000               	movlw	0
 13998  0D3B  3BE9               	subwfb	(_threshold+1)^(0+128),f
 13999                           
 14000                           ;beat.c: 120:         ADCC_SetUpperThreshold(threshold);
 14001  0D3C  0869               	movf	(_threshold+1)^(0+128),w
 14002  0D3D  0140               	movlb	0	; select bank0
 14003  0D3E  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 14004  0D3F  0141               	movlb	1	; select bank1
 14005  0D40  0868               	movf	_threshold^(0+128),w
 14006  0D41  0140               	movlb	0	; select bank0
 14007  0D42  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 14008  0D43  3195  2597         	fcall	_ADCC_SetUpperThreshold
 14009  0D45  0008               	return
 14010  0D46                     __end_of_BEAT_task:	
 14011                           
 14012                           	psect	text42
 14013  08C2                     __ptext42:	
 14014 ;; *************** function ___lwdiv *****************
 14015 ;; Defined at:
 14016 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
 14017 ;; Parameters:    Size  Location     Type
 14018 ;;  divisor         2    6[BANK0 ] unsigned int 
 14019 ;;  dividend        2    8[BANK0 ] unsigned int 
 14020 ;; Auto vars:     Size  Location     Type
 14021 ;;  quotient        2   11[BANK0 ] unsigned int 
 14022 ;;  counter         1   13[BANK0 ] unsigned char 
 14023 ;; Return value:  Size  Location     Type
 14024 ;;                  2    6[BANK0 ] unsigned int 
 14025 ;; Registers used:
 14026 ;;		wreg, status,2, status,0
 14027 ;; Tracked objects:
 14028 ;;		On entry : 0/0
 14029 ;;		On exit  : 0/0
 14030 ;;		Unchanged: 0/0
 14031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14032 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14033 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14034 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14035 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14036 ;;Total ram usage:        8 bytes
 14037 ;; Hardware stack levels used:    1
 14038 ;; Hardware stack levels required when called:    4
 14039 ;; This function calls:
 14040 ;;		Nothing
 14041 ;; This function is called by:
 14042 ;;		_TM1650_fastPrintNum
 14043 ;;		_BEAT_task
 14044 ;; This function uses a non-reentrant model
 14045 ;;
 14046                           
 14047                           
 14048                           ;psect for function ___lwdiv
 14049  08C2                     ___lwdiv:	
 14050                           
 14051                           ;incstack = 0
 14052                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 14053  08C2  0140               	movlb	0	; select bank0
 14054  08C3  01AB               	clrf	___lwdiv@quotient
 14055  08C4  01AC               	clrf	___lwdiv@quotient+1
 14056  08C5  0826               	movf	___lwdiv@divisor,w
 14057  08C6  0427               	iorwf	___lwdiv@divisor+1,w
 14058  08C7  1903               	btfsc	3,2
 14059  08C8  28F2               	goto	l3277
 14060  08C9  01AD               	clrf	___lwdiv@counter
 14061  08CA  0AAD               	incf	___lwdiv@counter,f
 14062  08CB                     l3265:	
 14063  08CB  1BA7               	btfsc	___lwdiv@divisor+1,7
 14064  08CC  28D7               	goto	l3267
 14065  08CD  3001               	movlw	1
 14066  08CE                     u2055:	
 14067  08CE  35A6               	lslf	___lwdiv@divisor,f
 14068  08CF  0DA7               	rlf	___lwdiv@divisor+1,f
 14069  08D0  0B89               	decfsz	9,f
 14070  08D1  28CE               	goto	u2055
 14071  08D2  3001               	movlw	1
 14072  08D3  00AA               	movwf	??___lwdiv
 14073  08D4  082A               	movf	??___lwdiv,w
 14074  08D5  07AD               	addwf	___lwdiv@counter,f
 14075  08D6  28CB               	goto	l3265
 14076  08D7                     l3267:	
 14077  08D7  3001               	movlw	1
 14078  08D8                     u2075:	
 14079  08D8  35AB               	lslf	___lwdiv@quotient,f
 14080  08D9  0DAC               	rlf	___lwdiv@quotient+1,f
 14081  08DA  0B89               	decfsz	9,f
 14082  08DB  28D8               	goto	u2075
 14083  08DC  0827               	movf	___lwdiv@divisor+1,w
 14084  08DD  0229               	subwf	___lwdiv@dividend+1,w
 14085  08DE  1D03               	skipz
 14086  08DF  28E2               	goto	u2085
 14087  08E0  0826               	movf	___lwdiv@divisor,w
 14088  08E1  0228               	subwf	___lwdiv@dividend,w
 14089  08E2                     u2085:	
 14090  08E2  1C03               	skipc
 14091  08E3  28E9               	goto	l3273
 14092  08E4  0826               	movf	___lwdiv@divisor,w
 14093  08E5  02A8               	subwf	___lwdiv@dividend,f
 14094  08E6  0827               	movf	___lwdiv@divisor+1,w
 14095  08E7  3BA9               	subwfb	___lwdiv@dividend+1,f
 14096  08E8  142B               	bsf	___lwdiv@quotient,0
 14097  08E9                     l3273:	
 14098  08E9  3001               	movlw	1
 14099  08EA                     u2095:	
 14100  08EA  36A7               	lsrf	___lwdiv@divisor+1,f
 14101  08EB  0CA6               	rrf	___lwdiv@divisor,f
 14102  08EC  0B89               	decfsz	9,f
 14103  08ED  28EA               	goto	u2095
 14104  08EE  3001               	movlw	1
 14105  08EF  02AD               	subwf	___lwdiv@counter,f
 14106  08F0  1D03               	btfss	3,2
 14107  08F1  28D7               	goto	l3267
 14108  08F2                     l3277:	
 14109  08F2  082C               	movf	___lwdiv@quotient+1,w
 14110  08F3  00A7               	movwf	?___lwdiv+1
 14111  08F4  082B               	movf	___lwdiv@quotient,w
 14112  08F5  00A6               	movwf	?___lwdiv
 14113  08F6  0008               	return
 14114  08F7                     __end_of___lwdiv:	
 14115                           
 14116                           	psect	text43
 14117  1569                     __ptext43:	
 14118 ;; *************** function _TM1650_isEnabled *****************
 14119 ;; Defined at:
 14120 ;;		line 122 in file "tm1650.c"
 14121 ;; Parameters:    Size  Location     Type
 14122 ;;		None
 14123 ;; Auto vars:     Size  Location     Type
 14124 ;;		None
 14125 ;; Return value:  Size  Location     Type
 14126 ;;                  1    wreg      _Bool 
 14127 ;; Registers used:
 14128 ;;		wreg
 14129 ;; Tracked objects:
 14130 ;;		On entry : 0/0
 14131 ;;		On exit  : 0/0
 14132 ;;		Unchanged: 0/0
 14133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14138 ;;Total ram usage:        0 bytes
 14139 ;; Hardware stack levels used:    1
 14140 ;; Hardware stack levels required when called:    4
 14141 ;; This function calls:
 14142 ;;		Nothing
 14143 ;; This function is called by:
 14144 ;;		_BEAT_task
 14145 ;; This function uses a non-reentrant model
 14146 ;;
 14147                           
 14148                           
 14149                           ;psect for function _TM1650_isEnabled
 14150  1569                     _TM1650_isEnabled:	
 14151                           
 14152                           ;tm1650.c: 123:     return displayState;
 14153                           
 14154                           ;incstack = 0
 14155                           ; Regs used in _TM1650_isEnabled: [wreg]
 14156  1569  0141               	movlb	1	; select bank1
 14157  156A  0840               	movf	_displayState^(0+128),w
 14158  156B  0008               	return
 14159  156C                     __end_of_TM1650_isEnabled:	
 14160                           
 14161                           	psect	text44
 14162  15A9                     __ptext44:	
 14163 ;; *************** function _CLOCK_getTime *****************
 14164 ;; Defined at:
 14165 ;;		line 36 in file "clock.c"
 14166 ;; Parameters:    Size  Location     Type
 14167 ;;		None
 14168 ;; Auto vars:     Size  Location     Type
 14169 ;;		None
 14170 ;; Return value:  Size  Location     Type
 14171 ;;                  2    0[BANK0 ] unsigned short 
 14172 ;; Registers used:
 14173 ;;		wreg
 14174 ;; Tracked objects:
 14175 ;;		On entry : 0/0
 14176 ;;		On exit  : 0/0
 14177 ;;		Unchanged: 0/0
 14178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14179 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14182 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14183 ;;Total ram usage:        2 bytes
 14184 ;; Hardware stack levels used:    1
 14185 ;; Hardware stack levels required when called:    4
 14186 ;; This function calls:
 14187 ;;		Nothing
 14188 ;; This function is called by:
 14189 ;;		_main
 14190 ;;		_BUTTONS_task
 14191 ;;		_CONTROLLER_task
 14192 ;;		_BEAT_task
 14193 ;; This function uses a non-reentrant model
 14194 ;;
 14195                           
 14196                           
 14197                           ;psect for function _CLOCK_getTime
 14198  15A9                     _CLOCK_getTime:	
 14199                           
 14200                           ;clock.c: 37:     return ClockCurrentTime;
 14201                           
 14202                           ;incstack = 0
 14203                           ; Regs used in _CLOCK_getTime: [wreg]
 14204  15A9  0141               	movlb	1	; select bank1
 14205  15AA  0838               	movf	(_ClockCurrentTime+1)^(0+128),w
 14206  15AB  0140               	movlb	0	; select bank0
 14207  15AC  00A1               	movwf	?_CLOCK_getTime+1
 14208  15AD  0141               	movlb	1	; select bank1
 14209  15AE  0837               	movf	_ClockCurrentTime^(0+128),w
 14210  15AF  0140               	movlb	0	; select bank0
 14211  15B0  00A0               	movwf	?_CLOCK_getTime
 14212  15B1  0008               	return
 14213  15B2                     __end_of_CLOCK_getTime:	
 14214                           
 14215                           	psect	text45
 14216  167B                     __ptext45:	
 14217 ;; *************** function _BEAT_init *****************
 14218 ;; Defined at:
 14219 ;;		line 36 in file "beat.c"
 14220 ;; Parameters:    Size  Location     Type
 14221 ;;		None
 14222 ;; Auto vars:     Size  Location     Type
 14223 ;;		None
 14224 ;; Return value:  Size  Location     Type
 14225 ;;                  1    wreg      void 
 14226 ;; Registers used:
 14227 ;;		wreg, status,2, status,0, pclath, cstack
 14228 ;; Tracked objects:
 14229 ;;		On entry : 0/0
 14230 ;;		On exit  : 0/0
 14231 ;;		Unchanged: 0/0
 14232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14237 ;;Total ram usage:        0 bytes
 14238 ;; Hardware stack levels used:    1
 14239 ;; Hardware stack levels required when called:    5
 14240 ;; This function calls:
 14241 ;;		_ADCC_SetADTIInterruptHandler
 14242 ;;		_ADCC_SetUpperThreshold
 14243 ;;		_ADCC_StartConversion
 14244 ;; This function is called by:
 14245 ;;		_main
 14246 ;; This function uses a non-reentrant model
 14247 ;;
 14248                           
 14249                           
 14250                           ;psect for function _BEAT_init
 14251  167B                     _BEAT_init:	
 14252                           
 14253                           ;beat.c: 37:     ADCC_SetUpperThreshold(threshold);
 14254                           
 14255                           ;incstack = 0
 14256                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 14257  167B  0141               	movlb	1	; select bank1
 14258  167C  0869               	movf	(_threshold+1)^(0+128),w
 14259  167D  0140               	movlb	0	; select bank0
 14260  167E  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 14261  167F  0141               	movlb	1	; select bank1
 14262  1680  0868               	movf	_threshold^(0+128),w
 14263  1681  0140               	movlb	0	; select bank0
 14264  1682  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 14265  1683  3195  2597  3196   	fcall	_ADCC_SetUpperThreshold
 14266                           
 14267                           ;beat.c: 38:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 14268  1686  306C               	movlw	low _adcThresholdHandler
 14269  1687  0140               	movlb	0	; select bank0
 14270  1688  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 14271  1689  3015               	movlw	high _adcThresholdHandler
 14272  168A  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 14273  168B  3195  258E  3196   	fcall	_ADCC_SetADTIInterruptHandler
 14274                           
 14275                           ;beat.c: 39:     ADCC_StartConversion(0x0F);
 14276  168E  300F               	movlw	15
 14277  168F  3195  25A0         	fcall	_ADCC_StartConversion
 14278  1691  0008               	return
 14279  1692                     __end_of_BEAT_init:	
 14280                           
 14281                           	psect	text46
 14282  15A0                     __ptext46:	
 14283 ;; *************** function _ADCC_StartConversion *****************
 14284 ;; Defined at:
 14285 ;;		line 121 in file "mcc_generated_files/adcc.c"
 14286 ;; Parameters:    Size  Location     Type
 14287 ;;  channel         1    wreg     enum E10867
 14288 ;; Auto vars:     Size  Location     Type
 14289 ;;  channel         1    0[BANK0 ] enum E10867
 14290 ;; Return value:  Size  Location     Type
 14291 ;;                  1    wreg      void 
 14292 ;; Registers used:
 14293 ;;		wreg
 14294 ;; Tracked objects:
 14295 ;;		On entry : 0/0
 14296 ;;		On exit  : 0/0
 14297 ;;		Unchanged: 0/0
 14298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14300 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14302 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14303 ;;Total ram usage:        1 bytes
 14304 ;; Hardware stack levels used:    1
 14305 ;; Hardware stack levels required when called:    4
 14306 ;; This function calls:
 14307 ;;		Nothing
 14308 ;; This function is called by:
 14309 ;;		_BEAT_init
 14310 ;; This function uses a non-reentrant model
 14311 ;;
 14312                           
 14313                           
 14314                           ;psect for function _ADCC_StartConversion
 14315  15A0                     _ADCC_StartConversion:	
 14316                           
 14317                           ;incstack = 0
 14318                           ; Regs used in _ADCC_StartConversion: [wreg]
 14319                           ;ADCC_StartConversion@channel stored from wreg
 14320  15A0  0140               	movlb	0	; select bank0
 14321  15A1  00A0               	movwf	ADCC_StartConversion@channel
 14322                           
 14323                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 14324  15A2  0820               	movf	ADCC_StartConversion@channel,w
 14325  15A3  0141               	movlb	1	; select bank1
 14326  15A4  009F               	movwf	31	;volatile
 14327                           
 14328                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 14329  15A5  0142               	movlb	2	; select bank2
 14330  15A6  1791               	bsf	17,7	;volatile
 14331                           
 14332                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 14333  15A7  1411               	bsf	17,0	;volatile
 14334  15A8  0008               	return
 14335  15A9                     __end_of_ADCC_StartConversion:	
 14336                           
 14337                           	psect	text47
 14338  1597                     __ptext47:	
 14339 ;; *************** function _ADCC_SetUpperThreshold *****************
 14340 ;; Defined at:
 14341 ;;		line 251 in file "mcc_generated_files/adcc.c"
 14342 ;; Parameters:    Size  Location     Type
 14343 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 14344 ;; Auto vars:     Size  Location     Type
 14345 ;;		None
 14346 ;; Return value:  Size  Location     Type
 14347 ;;                  1    wreg      void 
 14348 ;; Registers used:
 14349 ;;		wreg, status,2
 14350 ;; Tracked objects:
 14351 ;;		On entry : 0/0
 14352 ;;		On exit  : 0/0
 14353 ;;		Unchanged: 0/0
 14354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14355 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14358 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14359 ;;Total ram usage:        2 bytes
 14360 ;; Hardware stack levels used:    1
 14361 ;; Hardware stack levels required when called:    4
 14362 ;; This function calls:
 14363 ;;		Nothing
 14364 ;; This function is called by:
 14365 ;;		_BEAT_init
 14366 ;;		_BEAT_task
 14367 ;; This function uses a non-reentrant model
 14368 ;;
 14369                           
 14370                           
 14371                           ;psect for function _ADCC_SetUpperThreshold
 14372  1597                     _ADCC_SetUpperThreshold:	
 14373                           
 14374                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 14375                           
 14376                           ;incstack = 0
 14377                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 14378  1597  0140               	movlb	0	; select bank0
 14379  1598  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 14380  1599  0141               	movlb	1	; select bank1
 14381  159A  008F               	movwf	15	;volatile
 14382                           
 14383                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 14384  159B  0140               	movlb	0	; select bank0
 14385  159C  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 14386  159D  0141               	movlb	1	; select bank1
 14387  159E  008E               	movwf	14	;volatile
 14388  159F  0008               	return
 14389  15A0                     __end_of_ADCC_SetUpperThreshold:	
 14390                           
 14391                           	psect	text48
 14392  158E                     __ptext48:	
 14393 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 14394 ;; Defined at:
 14395 ;;		line 317 in file "mcc_generated_files/adcc.c"
 14396 ;; Parameters:    Size  Location     Type
 14397 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 14398 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 14399 ;; Auto vars:     Size  Location     Type
 14400 ;;		None
 14401 ;; Return value:  Size  Location     Type
 14402 ;;                  1    wreg      void 
 14403 ;; Registers used:
 14404 ;;		wreg
 14405 ;; Tracked objects:
 14406 ;;		On entry : 0/0
 14407 ;;		On exit  : 0/0
 14408 ;;		Unchanged: 0/0
 14409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14410 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14413 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14414 ;;Total ram usage:        2 bytes
 14415 ;; Hardware stack levels used:    1
 14416 ;; Hardware stack levels required when called:    4
 14417 ;; This function calls:
 14418 ;;		Nothing
 14419 ;; This function is called by:
 14420 ;;		_ADCC_Initialize
 14421 ;;		_BEAT_init
 14422 ;; This function uses a non-reentrant model
 14423 ;;
 14424                           
 14425                           
 14426                           ;psect for function _ADCC_SetADTIInterruptHandler
 14427  158E                     _ADCC_SetADTIInterruptHandler:	
 14428                           
 14429                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 14430                           
 14431                           ;incstack = 0
 14432                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 14433  158E  0140               	movlb	0	; select bank0
 14434  158F  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 14435  1590  0141               	movlb	1	; select bank1
 14436  1591  00ED               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+128)
 14437  1592  0140               	movlb	0	; select bank0
 14438  1593  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 14439  1594  0141               	movlb	1	; select bank1
 14440  1595  00EC               	movwf	_ADCC_ADTI_InterruptHandler^(0+128)
 14441  1596  0008               	return
 14442  1597                     __end_of_ADCC_SetADTIInterruptHandler:	
 14443                           
 14444                           	psect	text49
 14445  1585                     __ptext49:	
 14446 ;; *************** function _BEAT_detected *****************
 14447 ;; Defined at:
 14448 ;;		line 46 in file "beat.c"
 14449 ;; Parameters:    Size  Location     Type
 14450 ;;		None
 14451 ;; Auto vars:     Size  Location     Type
 14452 ;;		None
 14453 ;; Return value:  Size  Location     Type
 14454 ;;                  1    wreg      _Bool 
 14455 ;; Registers used:
 14456 ;;		wreg, status,2, status,0
 14457 ;; Tracked objects:
 14458 ;;		On entry : 0/0
 14459 ;;		On exit  : 0/0
 14460 ;;		Unchanged: 0/0
 14461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14466 ;;Total ram usage:        0 bytes
 14467 ;; Hardware stack levels used:    1
 14468 ;; Hardware stack levels required when called:    4
 14469 ;; This function calls:
 14470 ;;		Nothing
 14471 ;; This function is called by:
 14472 ;;		_main
 14473 ;; This function uses a non-reentrant model
 14474 ;;
 14475                           
 14476                           
 14477                           ;psect for function _BEAT_detected
 14478  1585                     _BEAT_detected:	
 14479                           
 14480                           ;beat.c: 47:     if (detected) {
 14481                           
 14482                           ;incstack = 0
 14483                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 14484  1585  0141               	movlb	1	; select bank1
 14485  1586  083B               	movf	_detected^(0+128),w
 14486  1587  1903               	btfsc	3,2
 14487  1588  2D8C               	goto	l5605
 14488                           
 14489                           ;beat.c: 48:         detected = 0;
 14490  1589  01BB               	clrf	_detected^(0+128)
 14491                           
 14492                           ;beat.c: 49:         return 1;
 14493  158A  3001               	movlw	1
 14494  158B  0008               	return
 14495  158C                     l5605:	
 14496                           
 14497                           ;beat.c: 52:     return 0;
 14498  158C  3000               	movlw	0
 14499  158D  0008               	return
 14500  158E                     __end_of_BEAT_detected:	
 14501                           
 14502                           	psect	intentry
 14503  0004                     __pintentry:	
 14504 ;; *************** function _INTERRUPT_InterruptManager *****************
 14505 ;; Defined at:
 14506 ;;		line 54 in file "mcc_generated_files/interrupt_manager.c"
 14507 ;; Parameters:    Size  Location     Type
 14508 ;;		None
 14509 ;; Auto vars:     Size  Location     Type
 14510 ;;		None
 14511 ;; Return value:  Size  Location     Type
 14512 ;;                  1    wreg      void 
 14513 ;; Registers used:
 14514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14515 ;; Tracked objects:
 14516 ;;		On entry : 0/0
 14517 ;;		On exit  : 0/0
 14518 ;;		Unchanged: 0/0
 14519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14524 ;;Total ram usage:        0 bytes
 14525 ;; Hardware stack levels used:    1
 14526 ;; Hardware stack levels required when called:    3
 14527 ;; This function calls:
 14528 ;;		Absolute function
 14529 ;;		_ADCC_ThresholdISR
 14530 ;;		_EUSART1_Receive_ISR
 14531 ;;		_EUSART1_Transmit_ISR
 14532 ;;		_I2C1_BusCollisionISR
 14533 ;;		_I2C1_ISR
 14534 ;;		_handler
 14535 ;; This function is called by:
 14536 ;;		Interrupt level 1
 14537 ;; This function uses a non-reentrant model
 14538 ;;
 14539                           
 14540  0004                     _INTERRUPT_InterruptManager:	
 14541                           
 14542                           ;incstack = 0
 14543  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 14544                           
 14545                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14546  0005  3180               	pagesel	$
 14547                           
 14548                           ;mcc_generated_files/interrupt_manager.c: 57:     if(INTCONbits.PEIE == 1)
 14549  0006  1F0B               	btfss	11,6	;volatile
 14550  0007  283A               	goto	i1l187
 14551                           
 14552                           ;mcc_generated_files/interrupt_manager.c: 58:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 59:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 14553  0008  014E               	movlb	14	; select bank14
 14554  0009  1899               	btfsc	25,1	;volatile
 14555  000A  1C8F               	btfss	15,1	;volatile
 14556  000B  2810               	goto	i1l174
 14557                           
 14558                           ;mcc_generated_files/interrupt_manager.c: 60:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 61:             I2C1_BusCollisionISR();
 14559  000C  3195  2566  3180   	fcall	_I2C1_BusCollisionISR
 14560                           
 14561                           ;mcc_generated_files/interrupt_manager.c: 62:         }
 14562  000F  283A               	goto	i1l187
 14563  0010                     i1l174:	
 14564                           ;mcc_generated_files/interrupt_manager.c: 63:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 14565                           
 14566  0010  1819               	btfsc	25,0	;volatile
 14567  0011  1C0F               	btfss	15,0	;volatile
 14568  0012  2817               	goto	i1l176
 14569                           
 14570                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             I2C1_ISR();
 14571  0013  318D  2546  3180   	fcall	_I2C1_ISR
 14572                           
 14573                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 14574  0016  283A               	goto	i1l187
 14575  0017                     i1l176:	
 14576                           ;mcc_generated_files/interrupt_manager.c: 67:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 14577                           
 14578  0017  1A19               	btfsc	25,4	;volatile
 14579  0018  1E0F               	btfss	15,4	;volatile
 14580  0019  2821               	goto	i1l178
 14581                           
 14582                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 14583  001A  0142               	movlb	2	; select bank2
 14584  001B  0865               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 14585  001C  008A               	movwf	10
 14586  001D  0864               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 14587  001E  000A               	callw
 14588  001F  3180               	pagesel	$
 14589                           
 14590                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 14591  0020  283A               	goto	i1l187
 14592  0021                     i1l178:	
 14593                           ;mcc_generated_files/interrupt_manager.c: 71:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 14594                           
 14595  0021  1A99               	btfsc	25,5	;volatile
 14596  0022  1E8F               	btfss	15,5	;volatile
 14597  0023  282B               	goto	i1l180
 14598                           
 14599                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 14600  0024  0142               	movlb	2	; select bank2
 14601  0025  0863               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 14602  0026  008A               	movwf	10
 14603  0027  0862               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 14604  0028  000A               	callw
 14605  0029  3180               	pagesel	$
 14606                           
 14607                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 14608  002A  283A               	goto	i1l187
 14609  002B                     i1l180:	
 14610                           ;mcc_generated_files/interrupt_manager.c: 75:         else if(PIR0bits.TMR0IF == 1){
 14611                           
 14612  002B  1E8C               	btfss	12,5	;volatile
 14613  002C  2835               	goto	i1l182
 14614                           
 14615                           ;mcc_generated_files/interrupt_manager.c: 77:             ClockCurrentTime++;
 14616  002D  3001               	movlw	1
 14617  002E  0141               	movlb	1	; select bank1
 14618  002F  07B7               	addwf	_ClockCurrentTime^(0+128),f
 14619  0030  3000               	movlw	0
 14620  0031  3DB8               	addwfc	(_ClockCurrentTime+1)^(0+128),f
 14621                           
 14622                           ;mcc_generated_files/interrupt_manager.c: 78:             PIR0bits.TMR0IF = 0;
 14623  0032  014E               	movlb	14	; select bank14
 14624  0033  128C               	bcf	12,5	;volatile
 14625                           
 14626                           ;mcc_generated_files/interrupt_manager.c: 79:         }else if(PIE1bits.ADTIE == 1 && PI
      +                          R1bits.ADTIF == 1)
 14627  0034  283A               	goto	i1l187
 14628  0035                     i1l182:	
 14629  0035  1897               	btfsc	23,1	;volatile
 14630  0036  1C8D               	btfss	13,1	;volatile
 14631  0037  283A               	goto	i1l187
 14632                           
 14633                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             ADCC_ThresholdISR();
 14634  0038  3196  2609         	fcall	_ADCC_ThresholdISR
 14635  003A                     i1l187:	
 14636                           ;mcc_generated_files/interrupt_manager.c: 82:         }
 14637                           
 14638  003A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 14639  003B  0009               	retfie
 14640  003C                     __end_of_INTERRUPT_InterruptManager:	
 14641                           
 14642                           	psect	text51
 14643  0859                     __ptext51:	
 14644 ;; *************** function _EUSART1_Receive_ISR *****************
 14645 ;; Defined at:
 14646 ;;		line 213 in file "mcc_generated_files/eusart1.c"
 14647 ;; Parameters:    Size  Location     Type
 14648 ;;		None
 14649 ;; Auto vars:     Size  Location     Type
 14650 ;;		None
 14651 ;; Return value:  Size  Location     Type
 14652 ;;                  1    wreg      void 
 14653 ;; Registers used:
 14654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14655 ;; Tracked objects:
 14656 ;;		On entry : 0/0
 14657 ;;		On exit  : 0/0
 14658 ;;		Unchanged: 0/0
 14659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14664 ;;Total ram usage:        0 bytes
 14665 ;; Hardware stack levels used:    1
 14666 ;; Hardware stack levels required when called:    2
 14667 ;; This function calls:
 14668 ;;		Absolute function
 14669 ;;		_EUSART1_DefaultErrorHandler
 14670 ;;		_EUSART1_DefaultFramingErrorHandler
 14671 ;;		_EUSART1_DefaultOverrunErrorHandler
 14672 ;;		_EUSART1_RxDataHandler
 14673 ;; This function is called by:
 14674 ;;		_EUSART1_Initialize
 14675 ;;		_INTERRUPT_InterruptManager
 14676 ;; This function uses a non-reentrant model
 14677 ;;
 14678                           
 14679                           
 14680                           ;psect for function _EUSART1_Receive_ISR
 14681  0859                     _EUSART1_Receive_ISR:	
 14682                           
 14683                           ;mcc_generated_files/eusart1.c: 216:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 14684                           
 14685                           ;incstack = 0
 14686                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14687  0859  0871               	movf	_eusart1RxHead,w	;volatile
 14688  085A  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 14689  085B  0086               	movwf	6
 14690  085C  3001               	movlw	1	; select bank2/3
 14691  085D  0087               	movwf	7
 14692  085E  0181               	clrf	1
 14693                           
 14694                           ;mcc_generated_files/eusart1.c: 218:     if(RC1STAbits.FERR){
 14695  085F  0142               	movlb	2	; select bank2
 14696  0860  1D1D               	btfss	29,2	;volatile
 14697  0861  286D               	goto	i1l5189
 14698                           
 14699                           ;mcc_generated_files/eusart1.c: 219:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 14700  0862  0871               	movf	_eusart1RxHead,w	;volatile
 14701  0863  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 14702  0864  0086               	movwf	6
 14703  0865  3001               	movlw	1	; select bank2/3
 14704  0866  0087               	movwf	7
 14705  0867  1481               	bsf	1,1
 14706                           
 14707                           ;mcc_generated_files/eusart1.c: 220:         EUSART1_FramingErrorHandler();
 14708  0868  0861               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 14709  0869  008A               	movwf	10
 14710  086A  0860               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 14711  086B  000A               	callw
 14712  086C  3188               	pagesel	$
 14713  086D                     i1l5189:	
 14714                           
 14715                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.OERR){
 14716  086D  0142               	movlb	2	; select bank2
 14717  086E  1C9D               	btfss	29,1	;volatile
 14718  086F  287B               	goto	i1l5195
 14719                           
 14720                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 14721  0870  0871               	movf	_eusart1RxHead,w	;volatile
 14722  0871  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 14723  0872  0086               	movwf	6
 14724  0873  3001               	movlw	1	; select bank2/3
 14725  0874  0087               	movwf	7
 14726  0875  1501               	bsf	1,2
 14727                           
 14728                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_OverrunErrorHandler();
 14729  0876  085F               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+256),w
 14730  0877  008A               	movwf	10
 14731  0878  085E               	movf	_EUSART1_OverrunErrorHandler^(0+256),w
 14732  0879  000A               	callw
 14733  087A  3188               	pagesel	$
 14734  087B                     i1l5195:	
 14735                           
 14736                           ;mcc_generated_files/eusart1.c: 228:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 14737  087B  0871               	movf	_eusart1RxHead,w	;volatile
 14738  087C  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 14739  087D  0086               	movwf	6
 14740  087E  3001               	movlw	1	; select bank2/3
 14741  087F  0087               	movwf	7
 14742  0880  0801               	movf	1,w
 14743  0881  1903               	btfsc	3,2
 14744  0882  288A               	goto	i1l5199
 14745                           
 14746                           ;mcc_generated_files/eusart1.c: 229:         EUSART1_ErrorHandler();
 14747  0883  0142               	movlb	2	; select bank2
 14748  0884  085D               	movf	(_EUSART1_ErrorHandler+1)^(0+256),w
 14749  0885  008A               	movwf	10
 14750  0886  085C               	movf	_EUSART1_ErrorHandler^(0+256),w
 14751  0887  000A               	callw
 14752  0888  3188               	pagesel	$
 14753                           
 14754                           ;mcc_generated_files/eusart1.c: 230:     } else {
 14755  0889  0008               	return
 14756  088A                     i1l5199:	
 14757                           
 14758                           ;mcc_generated_files/eusart1.c: 231:         EUSART1_RxDataHandler();
 14759  088A  3196  2692         	fcall	_EUSART1_RxDataHandler
 14760  088C  0008               	return
 14761  088D                     __end_of_EUSART1_Receive_ISR:	
 14762                           
 14763                           	psect	text52
 14764  088D                     __ptext52:	
 14765 ;; *************** function _handler *****************
 14766 ;; Defined at:
 14767 ;;		line 16 in file "dmx.c"
 14768 ;; Parameters:    Size  Location     Type
 14769 ;;		None
 14770 ;; Auto vars:     Size  Location     Type
 14771 ;;  dataIn          1    4[COMMON] unsigned char 
 14772 ;; Return value:  Size  Location     Type
 14773 ;;                  1    wreg      void 
 14774 ;; Registers used:
 14775 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14776 ;; Tracked objects:
 14777 ;;		On entry : 0/0
 14778 ;;		On exit  : 0/0
 14779 ;;		Unchanged: 0/0
 14780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14783 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14784 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14785 ;;Total ram usage:        5 bytes
 14786 ;; Hardware stack levels used:    1
 14787 ;; This function calls:
 14788 ;;		Nothing
 14789 ;; This function is called by:
 14790 ;;		_DMX_init
 14791 ;;		_INTERRUPT_InterruptManager
 14792 ;; This function uses a non-reentrant model
 14793 ;;
 14794                           
 14795                           
 14796                           ;psect for function _handler
 14797  088D                     _handler:	
 14798                           
 14799                           ;dmx.c: 17:     LATC5 = 1;
 14800                           
 14801                           ;incstack = 0
 14802                           ; Regs used in _handler: [wreg+fsr1l+fsr1h+status,2+status,0]
 14803  088D  0140               	movlb	0	; select bank0
 14804  088E  169A               	bsf	26,5	;volatile
 14805                           
 14806                           ;dmx.c: 18:     if(RC1STAbits.OERR == 1){
 14807  088F  0142               	movlb	2	; select bank2
 14808  0890  1C9D               	btfss	29,1	;volatile
 14809  0891  2894               	goto	i1l5613
 14810                           
 14811                           ;dmx.c: 19:                 RC1STAbits.CREN = 0;
 14812  0892  121D               	bcf	29,4	;volatile
 14813                           
 14814                           ;dmx.c: 20:                 RC1STAbits.CREN = 1;
 14815  0893  161D               	bsf	29,4	;volatile
 14816  0894                     i1l5613:	
 14817                           
 14818                           ;dmx.c: 22:             uint8_t dataIn = RC1REG;
 14819  0894  0819               	movf	25,w	;volatile
 14820  0895  00F6               	movwf	??_handler
 14821  0896  0876               	movf	??_handler,w
 14822  0897  00FA               	movwf	handler@dataIn
 14823                           
 14824                           ;dmx.c: 23:             if(RC1STAbits.FERR == 1){
 14825  0898  1D1D               	btfss	29,2	;volatile
 14826  0899  289E               	goto	i1l5619
 14827                           
 14828                           ;dmx.c: 24:                 point = 0;
 14829  089A  0141               	movlb	1	; select bank1
 14830  089B  01A5               	clrf	_point^(0+128)
 14831  089C  01A6               	clrf	(_point+1)^(0+128)
 14832                           
 14833                           ;dmx.c: 25:             }else if(point > 513){
 14834  089D  28BF               	goto	i1l5627
 14835  089E                     i1l5619:	
 14836  089E  0141               	movlb	1	; select bank1
 14837  089F  0826               	movf	(_point+1)^(0+128),w
 14838  08A0  3A80               	xorlw	128
 14839  08A1  00F6               	movwf	??_handler
 14840  08A2  3082               	movlw	130
 14841  08A3  0276               	subwf	??_handler,w
 14842  08A4  1D03               	skipz
 14843  08A5  28A8               	goto	u501_25
 14844  08A6  3002               	movlw	2
 14845  08A7  0225               	subwf	_point^(0+128),w
 14846  08A8                     u501_25:	
 14847  08A8  1803               	btfsc	3,0
 14848  08A9  28BF               	goto	i1l5627
 14849                           
 14850                           ;dmx.c: 28:                 input[point] = dataIn;
 14851  08AA  30EF               	movlw	239
 14852  08AB  00F6               	movwf	??_handler
 14853  08AC  3025               	movlw	37
 14854  08AD  00F7               	movwf	??_handler+1
 14855  08AE  0141               	movlb	1	; select bank1
 14856  08AF  0825               	movf	_point^(0+128),w
 14857  08B0  0776               	addwf	??_handler,w
 14858  08B1  00F8               	movwf	??_handler+2
 14859  08B2  0826               	movf	(_point+1)^(0+128),w
 14860  08B3  3D77               	addwfc	??_handler+1,w
 14861  08B4  00F9               	movwf	??_handler+3
 14862  08B5  0878               	movf	??_handler+2,w
 14863  08B6  0086               	movwf	6
 14864  08B7  0879               	movf	??_handler+3,w
 14865  08B8  0087               	movwf	7
 14866  08B9  087A               	movf	handler@dataIn,w
 14867  08BA  0081               	movwf	1
 14868                           
 14869                           ;dmx.c: 29:                 point++;
 14870  08BB  3001               	movlw	1
 14871  08BC  07A5               	addwf	_point^(0+128),f
 14872  08BD  3000               	movlw	0
 14873  08BE  3DA6               	addwfc	(_point+1)^(0+128),f
 14874  08BF                     i1l5627:	
 14875                           
 14876                           ;dmx.c: 31:     LATC5 = 0;
 14877  08BF  0140               	movlb	0	; select bank0
 14878  08C0  129A               	bcf	26,5	;volatile
 14879  08C1  0008               	return
 14880  08C2                     __end_of_handler:	
 14881                           
 14882                           	psect	text53
 14883  0D46                     __ptext53:	
 14884 ;; *************** function _I2C1_ISR *****************
 14885 ;; Defined at:
 14886 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 14887 ;; Parameters:    Size  Location     Type
 14888 ;;		None
 14889 ;; Auto vars:     Size  Location     Type
 14890 ;;		None
 14891 ;; Return value:  Size  Location     Type
 14892 ;;                  1    wreg      void 
 14893 ;; Registers used:
 14894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14895 ;; Tracked objects:
 14896 ;;		On entry : 0/0
 14897 ;;		On exit  : 0/0
 14898 ;;		Unchanged: 0/0
 14899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14902 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14903 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14904 ;;Total ram usage:        4 bytes
 14905 ;; Hardware stack levels used:    1
 14906 ;; Hardware stack levels required when called:    1
 14907 ;; This function calls:
 14908 ;;		_I2C1_FunctionComplete
 14909 ;;		_I2C1_Stop
 14910 ;; This function is called by:
 14911 ;;		_INTERRUPT_InterruptManager
 14912 ;; This function uses a non-reentrant model
 14913 ;;
 14914                           
 14915                           
 14916                           ;psect for function _I2C1_ISR
 14917  0D46                     _I2C1_ISR:	
 14918                           
 14919                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 14920                           
 14921                           ;incstack = 0
 14922                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14923  0D46  014E               	movlb	14	; select bank14
 14924  0D47  100F               	bcf	15,0	;volatile
 14925                           
 14926                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 14927  0D48  0143               	movlb	3	; select bank3
 14928  0D49  1F90               	btfss	16,7	;volatile
 14929  0D4A  2E6D               	goto	i1l5339
 14930                           
 14931                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 14932  0D4B  1390               	bcf	16,7	;volatile
 14933                           
 14934                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 14935  0D4C  0141               	movlb	1	; select bank1
 14936  0D4D  01C6               	clrf	_i2c1_state^(0+128)
 14937                           
 14938                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 14939  0D4E  0844               	movf	_p_i2c1_current^(0+128),w
 14940  0D4F  3E03               	addlw	3
 14941  0D50  0086               	movwf	6
 14942  0D51  0187               	clrf	7
 14943  0D52  0801               	movf	1,w
 14944  0D53  0086               	movwf	6
 14945  0D54  0187               	clrf	7
 14946  0D55  0181               	clrf	1
 14947  0D56  0A81               	incf	1,f
 14948                           
 14949                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 14950  0D57  01C4               	clrf	_p_i2c1_current^(0+128)
 14951  0D58  0008               	return
 14952  0D59                     i1l298:	
 14953                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 14954                           
 14955                           
 14956                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 14957  0D59  18A2               	btfsc	(_i2c1_object^(0+128)+2),1
 14958  0D5A  0008               	return
 14959                           
 14960                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 14961  0D5B  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 14962  0D5C  00F8               	movwf	??_I2C1_ISR
 14963  0D5D  0878               	movf	??_I2C1_ISR,w
 14964  0D5E  00C4               	movwf	_p_i2c1_current^(0+128)
 14965                           
 14966                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 14967  0D5F  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 14968  0D60  0086               	movwf	6
 14969  0D61  0187               	clrf	7
 14970  0D62  0801               	movf	1,w
 14971  0D63  00F8               	movwf	??_I2C1_ISR
 14972  0D64  0878               	movf	??_I2C1_ISR,w
 14973  0D65  00C5               	movwf	_i2c1_trb_count^(0+128)
 14974                           
 14975                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 14976  0D66  0A21               	incf	(low ((_i2c1_object| 0+1)))^(0+128),w
 14977  0D67  0086               	movwf	6
 14978  0D68  0187               	clrf	7
 14979  0D69  3F40               	moviw [0]fsr1
 14980  0D6A  00B5               	movwf	_p_i2c1_trb_current^(0+128)
 14981  0D6B  3F41               	moviw [1]fsr1
 14982  0D6C  00B6               	movwf	(_p_i2c1_trb_current+1)^(0+128)
 14983                           
 14984                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 14985  0D6D  3004               	movlw	4
 14986  0D6E  00F8               	movwf	??_I2C1_ISR
 14987  0D6F  0878               	movf	??_I2C1_ISR,w
 14988  0D70  07A1               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
 14989                           
 14990                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 14991  0D71  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 14992  0D72  3AD1               	xorlw	(low ((_i2c1_tr_queue| 0+4)))& (0+255)
 14993  0D73  1D03               	skipz
 14994  0D74  2D79               	goto	i1l5225
 14995                           
 14996                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 14997  0D75  30CD               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 14998  0D76  00F8               	movwf	??_I2C1_ISR
 14999  0D77  0878               	movf	??_I2C1_ISR,w
 15000  0D78  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
 15001  0D79                     i1l5225:	
 15002                           
 15003                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 15004  0D79  1022               	bcf	(_i2c1_object^(0+128)+2),0
 15005                           
 15006                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 15007  0D7A  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
 15008  0D7B  0620               	xorwf	_i2c1_object^(0+128),w
 15009  0D7C  1903               	btfsc	3,2
 15010                           
 15011                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 15012  0D7D  14A2               	bsf	(_i2c1_object^(0+128)+2),1
 15013                           
 15014                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 15015                           
 15016                           ;mcc_generated_files/i2c1.c: 290:                 }
 15017  0D7E  0143               	movlb	3	; select bank3
 15018  0D7F  1411               	bsf	17,0	;volatile
 15019  0D80                     i1l5229:	
 15020                           
 15021                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 15022  0D80  3002               	movlw	2
 15023  0D81  00F8               	movwf	??_I2C1_ISR
 15024  0D82  0878               	movf	??_I2C1_ISR,w
 15025  0D83  0141               	movlb	1	; select bank1
 15026  0D84  00C6               	movwf	_i2c1_state^(0+128)
 15027  0D85  0008               	return
 15028  0D86                     i1l303:	
 15029                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 15030                           
 15031  0D86  2E16               	goto	i1l324
 15032  0D87                     i1l304:	
 15033                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 15034                           
 15035                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 15036                           
 15037                           
 15038                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 15039  0D87  0143               	movlb	3	; select bank3
 15040  0D88  1F11               	btfss	17,6	;volatile
 15041  0D89  2D93               	goto	i1l5237
 15042                           
 15043                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 15044  0D8A  3001               	movlw	1
 15045  0D8B  00F8               	movwf	??_I2C1_ISR
 15046  0D8C  0878               	movf	??_I2C1_ISR,w
 15047  0D8D  0141               	movlb	1	; select bank1
 15048  0D8E  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 15049                           
 15050                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 15051  0D8F  3004               	movlw	4
 15052  0D90  3196  26AA         	fcall	_I2C1_Stop
 15053                           
 15054                           ;mcc_generated_files/i2c1.c: 319:             }
 15055  0D92  0008               	return
 15056  0D93                     i1l5237:	
 15057                           
 15058                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 15059  0D93  0875               	movf	I2C1_ISR@i2c_address+1,w
 15060  0D94  00F9               	movwf	??_I2C1_ISR+1
 15061  0D95  0874               	movf	I2C1_ISR@i2c_address,w
 15062  0D96  00F8               	movwf	??_I2C1_ISR
 15063  0D97  36F9               	lsrf	??_I2C1_ISR+1,f
 15064  0D98  0CF8               	rrf	??_I2C1_ISR,f
 15065  0D99  0878               	movf	??_I2C1_ISR,w
 15066  0D9A  008C               	movwf	12	;volatile
 15067                           
 15068                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 15069  0D9B  1C74               	btfss	I2C1_ISR@i2c_address,0
 15070  0D9C  2DA3               	goto	i1l5243
 15071                           
 15072                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 15073  0D9D  300B               	movlw	11
 15074  0D9E  00F8               	movwf	??_I2C1_ISR
 15075  0D9F  0878               	movf	??_I2C1_ISR,w
 15076  0DA0  0141               	movlb	1	; select bank1
 15077  0DA1  00C6               	movwf	_i2c1_state^(0+128)
 15078                           
 15079                           ;mcc_generated_files/i2c1.c: 331:                 }
 15080  0DA2  0008               	return
 15081  0DA3                     i1l5243:	
 15082                           
 15083                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 15084  0DA3  3003               	movlw	3
 15085  0DA4  00F8               	movwf	??_I2C1_ISR
 15086  0DA5  0878               	movf	??_I2C1_ISR,w
 15087  0DA6  0141               	movlb	1	; select bank1
 15088  0DA7  00C6               	movwf	_i2c1_state^(0+128)
 15089  0DA8  0008               	return
 15090  0DA9                     i1l309:	
 15091                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 15092                           
 15093                           
 15094                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 15095  0DA9  0143               	movlb	3	; select bank3
 15096  0DAA  1F11               	btfss	17,6	;volatile
 15097  0DAB  2DB5               	goto	i1l310
 15098                           
 15099                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 15100  0DAC  3001               	movlw	1
 15101  0DAD  00F8               	movwf	??_I2C1_ISR
 15102  0DAE  0878               	movf	??_I2C1_ISR,w
 15103  0DAF  0141               	movlb	1	; select bank1
 15104  0DB0  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 15105                           
 15106                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 15107  0DB1  3004               	movlw	4
 15108  0DB2  3196  26AA         	fcall	_I2C1_Stop
 15109                           
 15110                           ;mcc_generated_files/i2c1.c: 347:             }
 15111  0DB4  0008               	return
 15112  0DB5                     i1l310:	
 15113                           ;mcc_generated_files/i2c1.c: 348:             else
 15114                           
 15115                           
 15116                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 15117  0DB5  1491               	bsf	17,1	;volatile
 15118                           
 15119                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 15120  0DB6  0875               	movf	I2C1_ISR@i2c_address+1,w
 15121  0DB7  00F9               	movwf	??_I2C1_ISR+1
 15122  0DB8  0874               	movf	I2C1_ISR@i2c_address,w
 15123  0DB9  00F8               	movwf	??_I2C1_ISR
 15124  0DBA  0879               	movf	??_I2C1_ISR+1,w
 15125  0DBB  00F8               	movwf	??_I2C1_ISR
 15126  0DBC  01F9               	clrf	??_I2C1_ISR+1
 15127  0DBD  3006               	movlw	6
 15128  0DBE  0578               	andwf	??_I2C1_ISR,w
 15129  0DBF  00FA               	movwf	??_I2C1_ISR+2
 15130  0DC0  3000               	movlw	0
 15131  0DC1  0579               	andwf	??_I2C1_ISR+1,w
 15132  0DC2  00FB               	movwf	??_I2C1_ISR+3
 15133  0DC3  30F0               	movlw	240
 15134  0DC4  047A               	iorwf	??_I2C1_ISR+2,w
 15135  0DC5  00F4               	movwf	I2C1_ISR@i2c_address
 15136  0DC6  3000               	movlw	0
 15137  0DC7  047B               	iorwf	??_I2C1_ISR+3,w
 15138  0DC8  00F5               	movwf	I2C1_ISR@i2c_address+1
 15139                           
 15140                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 15141  0DC9  1474               	bsf	I2C1_ISR@i2c_address,0
 15142                           
 15143                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 15144  0DCA  0141               	movlb	1	; select bank1
 15145  0DCB  01C1               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+128)
 15146  0DCC  0AC1               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+128),f
 15147  0DCD  2D80               	goto	i1l5229
 15148  0DCE                     i1l5257:	
 15149                           
 15150                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 15151  0DCE  0341               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+128),w
 15152  0DCF  1903               	btfsc	3,2
 15153  0DD0  2DEB               	goto	i1l5277
 15154                           
 15155                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 15156  0DD1  0835               	movf	_p_i2c1_trb_current^(0+128),w
 15157  0DD2  0086               	movwf	6
 15158  0DD3  0836               	movf	(_p_i2c1_trb_current+1)^(0+128),w
 15159  0DD4  0087               	movwf	7
 15160  0DD5  3F40               	moviw [0]fsr1
 15161  0DD6  00F4               	movwf	I2C1_ISR@i2c_address
 15162  0DD7  3F41               	moviw [1]fsr1
 15163  0DD8  00F5               	movwf	I2C1_ISR@i2c_address+1
 15164                           
 15165                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 15166  0DD9  0835               	movf	_p_i2c1_trb_current^(0+128),w
 15167  0DDA  0086               	movwf	6
 15168  0DDB  0836               	movf	(_p_i2c1_trb_current+1)^(0+128),w
 15169  0DDC  0087               	movwf	7
 15170  0DDD  3143               	addfsr 1,3
 15171  0DDE  0801               	movf	1,w
 15172  0DDF  00F8               	movwf	??_I2C1_ISR
 15173  0DE0  0878               	movf	??_I2C1_ISR,w
 15174  0DE1  00C3               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+128)
 15175                           
 15176                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 15177  0DE2  0835               	movf	_p_i2c1_trb_current^(0+128),w
 15178  0DE3  0086               	movwf	6
 15179  0DE4  0836               	movf	(_p_i2c1_trb_current+1)^(0+128),w
 15180  0DE5  0087               	movwf	7
 15181  0DE6  3142               	addfsr 1,2
 15182  0DE7  0801               	movf	1,w
 15183  0DE8  00F8               	movwf	??_I2C1_ISR
 15184  0DE9  0878               	movf	??_I2C1_ISR,w
 15185  0DEA  00C2               	movwf	I2C1_ISR@i2c_bytes_left^(0+128)
 15186  0DEB                     i1l5277:	
 15187                           
 15188                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 15189  0DEB  0874               	movf	I2C1_ISR@i2c_address,w
 15190  0DEC  0143               	movlb	3	; select bank3
 15191  0DED  008C               	movwf	12	;volatile
 15192                           
 15193                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 15194  0DEE  1C74               	btfss	I2C1_ISR@i2c_address,0
 15195  0DEF  2DA3               	goto	i1l5243
 15196                           
 15197                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 15198  0DF0  3005               	movlw	5
 15199  0DF1  00F8               	movwf	??_I2C1_ISR
 15200  0DF2  0878               	movf	??_I2C1_ISR,w
 15201  0DF3  0141               	movlb	1	; select bank1
 15202  0DF4  00C6               	movwf	_i2c1_state^(0+128)
 15203                           
 15204                           ;mcc_generated_files/i2c1.c: 419:                 }
 15205  0DF5  0008               	return
 15206  0DF6                     i1l320:	
 15207                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 15208                           
 15209                           
 15210                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 15211  0DF6  0143               	movlb	3	; select bank3
 15212  0DF7  1F11               	btfss	17,6	;volatile
 15213  0DF8  2E04               	goto	i1l5291
 15214                           
 15215                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 15216  0DF9  3001               	movlw	1
 15217  0DFA  00F8               	movwf	??_I2C1_ISR
 15218  0DFB  0878               	movf	??_I2C1_ISR,w
 15219  0DFC  0141               	movlb	1	; select bank1
 15220  0DFD  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 15221                           
 15222                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 15223  0DFE  0143               	movlb	3	; select bank3
 15224  0DFF  1311               	bcf	17,6	;volatile
 15225                           
 15226                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 15227  0E00  3005               	movlw	5
 15228  0E01  3196  26AA         	fcall	_I2C1_Stop
 15229                           
 15230                           ;mcc_generated_files/i2c1.c: 442:             }
 15231  0E03  0008               	return
 15232  0E04                     i1l5291:	
 15233                           
 15234                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 15235  0E04  3001               	movlw	1
 15236  0E05  0141               	movlb	1	; select bank1
 15237  0E06  02C2               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 15238  0E07  0A42               	incf	I2C1_ISR@i2c_bytes_left^(0+128),w
 15239  0E08  1D03               	btfss	3,2
 15240  0E09  2E19               	goto	i1l5301
 15241                           
 15242                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 15243  0E0A  3004               	movlw	4
 15244  0E0B  07B5               	addwf	_p_i2c1_trb_current^(0+128),f
 15245  0E0C  3000               	movlw	0
 15246  0E0D  3DB6               	addwfc	(_p_i2c1_trb_current+1)^(0+128),f
 15247                           
 15248                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 15249  0E0E  3001               	movlw	1
 15250  0E0F  02C5               	subwf	_i2c1_trb_count^(0+128),f
 15251  0E10  1D03               	btfss	3,2
 15252  0E11  2E16               	goto	i1l324
 15253                           
 15254                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 15255  0E12  3000               	movlw	0
 15256  0E13  3196  26AA         	fcall	_I2C1_Stop
 15257                           
 15258                           ;mcc_generated_files/i2c1.c: 457:                     }
 15259  0E15  0008               	return
 15260  0E16                     i1l324:	
 15261                           ;mcc_generated_files/i2c1.c: 458:                     else
 15262                           
 15263                           
 15264                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 15265  0E16  0143               	movlb	3	; select bank3
 15266  0E17  1491               	bsf	17,1	;volatile
 15267  0E18  2D80               	goto	i1l5229
 15268  0E19                     i1l5301:	
 15269                           
 15270                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 15271  0E19  0843               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 15272  0E1A  0086               	movwf	6
 15273  0E1B  0187               	clrf	7
 15274  0E1C  0801               	movf	1,w
 15275  0E1D  0143               	movlb	3	; select bank3
 15276  0E1E  008C               	movwf	12	;volatile
 15277  0E1F  3001               	movlw	1
 15278  0E20  00F8               	movwf	??_I2C1_ISR
 15279  0E21  0878               	movf	??_I2C1_ISR,w
 15280  0E22  0141               	movlb	1	; select bank1
 15281  0E23  07C3               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 15282  0E24  0008               	return
 15283  0E25                     i1l327:	
 15284                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 15285                           
 15286                           
 15287                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 15288  0E25  0143               	movlb	3	; select bank3
 15289  0E26  1F11               	btfss	17,6	;volatile
 15290  0E27  2E33               	goto	i1l328
 15291                           
 15292                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 15293  0E28  3001               	movlw	1
 15294  0E29  00F8               	movwf	??_I2C1_ISR
 15295  0E2A  0878               	movf	??_I2C1_ISR,w
 15296  0E2B  0141               	movlb	1	; select bank1
 15297  0E2C  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 15298                           
 15299                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 15300  0E2D  3004               	movlw	4
 15301  0E2E  3196  26AA         	fcall	_I2C1_Stop
 15302                           
 15303                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 15304  0E30  0143               	movlb	3	; select bank3
 15305  0E31  1311               	bcf	17,6	;volatile
 15306                           
 15307                           ;mcc_generated_files/i2c1.c: 495:             }
 15308  0E32  0008               	return
 15309  0E33                     i1l328:	
 15310                           ;mcc_generated_files/i2c1.c: 496:             else
 15311                           
 15312                           
 15313                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 15314  0E33  1591               	bsf	17,3	;volatile
 15315                           
 15316                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 15317  0E34  3008               	movlw	8
 15318  0E35  00F8               	movwf	??_I2C1_ISR
 15319  0E36  0878               	movf	??_I2C1_ISR,w
 15320  0E37  0141               	movlb	1	; select bank1
 15321  0E38  00C6               	movwf	_i2c1_state^(0+128)
 15322  0E39  0008               	return
 15323  0E3A                     i1l5313:	
 15324                           
 15325                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 15326  0E3A  3008               	movlw	8
 15327  0E3B  00F8               	movwf	??_I2C1_ISR
 15328  0E3C  0878               	movf	??_I2C1_ISR,w
 15329  0E3D  00C6               	movwf	_i2c1_state^(0+128)
 15330                           
 15331                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 15332  0E3E  0143               	movlb	3	; select bank3
 15333  0E3F  1591               	bsf	17,3	;volatile
 15334                           
 15335                           ;mcc_generated_files/i2c1.c: 513:             break;
 15336  0E40  0008               	return
 15337  0E41                     i1l5317:	
 15338                           
 15339                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 15340  0E41  0143               	movlb	3	; select bank3
 15341  0E42  080C               	movf	12,w	;volatile
 15342  0E43  00F8               	movwf	??_I2C1_ISR
 15343  0E44  0141               	movlb	1	; select bank1
 15344  0E45  0843               	movf	I2C1_ISR@pi2c_buf_ptr^(0+128),w
 15345  0E46  0086               	movwf	6
 15346  0E47  0187               	clrf	7
 15347  0E48  0878               	movf	??_I2C1_ISR,w
 15348  0E49  0081               	movwf	1
 15349  0E4A  3001               	movlw	1
 15350  0E4B  00F8               	movwf	??_I2C1_ISR
 15351  0E4C  0878               	movf	??_I2C1_ISR,w
 15352  0E4D  07C3               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+128),f
 15353                           
 15354                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 15355  0E4E  3001               	movlw	1
 15356  0E4F  02C2               	subwf	I2C1_ISR@i2c_bytes_left^(0+128),f
 15357  0E50  1903               	btfsc	3,2
 15358  0E51  2E5A               	goto	i1l332
 15359                           
 15360                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 15361  0E52  0143               	movlb	3	; select bank3
 15362  0E53  1291               	bcf	17,5	;volatile
 15363                           
 15364                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 15365  0E54  3006               	movlw	6
 15366  0E55  00F8               	movwf	??_I2C1_ISR
 15367  0E56  0878               	movf	??_I2C1_ISR,w
 15368  0E57  0141               	movlb	1	; select bank1
 15369  0E58  00C6               	movwf	_i2c1_state^(0+128)
 15370                           
 15371                           ;mcc_generated_files/i2c1.c: 532:             }
 15372  0E59  2E5E               	goto	i1l5329
 15373  0E5A                     i1l332:	
 15374                           ;mcc_generated_files/i2c1.c: 533:             else
 15375                           
 15376                           
 15377                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 15378  0E5A  0143               	movlb	3	; select bank3
 15379  0E5B  1691               	bsf	17,5	;volatile
 15380                           
 15381                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 15382  0E5C  3196  2644         	fcall	_I2C1_FunctionComplete
 15383  0E5E                     i1l5329:	
 15384                           
 15385                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 15386  0E5E  0143               	movlb	3	; select bank3
 15387  0E5F  1611               	bsf	17,4	;volatile
 15388                           
 15389                           ;mcc_generated_files/i2c1.c: 545:             break;
 15390  0E60  0008               	return
 15391  0E61                     i1l5331:	
 15392                           
 15393                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 15394  0E61  3000               	movlw	0
 15395  0E62  3196  26AA         	fcall	_I2C1_Stop
 15396                           
 15397                           ;mcc_generated_files/i2c1.c: 552:             break;
 15398  0E64  0008               	return
 15399  0E65                     i1l5333:	
 15400                           
 15401                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 15402  0E65  3001               	movlw	1
 15403  0E66  00F8               	movwf	??_I2C1_ISR
 15404  0E67  0878               	movf	??_I2C1_ISR,w
 15405  0E68  07A4               	addwf	(_i2c1_object^(0+128)+4),f
 15406                           
 15407                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 15408  0E69  3006               	movlw	6
 15409  0E6A  3196  26AA         	fcall	_I2C1_Stop
 15410                           
 15411                           ;mcc_generated_files/i2c1.c: 560:             break;
 15412  0E6C  0008               	return
 15413  0E6D                     i1l5339:	
 15414  0E6D  0141               	movlb	1	; select bank1
 15415  0E6E  0846               	movf	_i2c1_state^(0+128),w
 15416  0E6F  00F8               	movwf	??_I2C1_ISR
 15417  0E70  01F9               	clrf	??_I2C1_ISR+1
 15418                           
 15419                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15420                           ; Switch size 1, requested type "simple"
 15421                           ; Number of cases is 1, Range of values is 0 to 0
 15422                           ; switch strategies available:
 15423                           ; Name         Instructions Cycles
 15424                           ; simple_byte            4     3 (average)
 15425                           ; direct_byte            8     6 (fixed)
 15426                           ; jumptable            260     6 (fixed)
 15427                           ;	Chosen strategy is simple_byte
 15428  0E71  0879               	movf	??_I2C1_ISR+1,w
 15429  0E72  3A00               	xorlw	0	; case 0
 15430  0E73  1903               	skipnz
 15431  0E74  2E76               	goto	i1l5779
 15432  0E75  2E65               	goto	i1l5333
 15433  0E76                     i1l5779:	
 15434                           
 15435                           ; Switch size 1, requested type "simple"
 15436                           ; Number of cases is 11, Range of values is 0 to 11
 15437                           ; switch strategies available:
 15438                           ; Name         Instructions Cycles
 15439                           ; direct_byte           30     6 (fixed)
 15440                           ; simple_byte           34    18 (average)
 15441                           ; jumptable            260     6 (fixed)
 15442                           ;	Chosen strategy is simple_byte
 15443  0E76  0878               	movf	??_I2C1_ISR,w
 15444  0E77  3A00               	xorlw	0	; case 0
 15445  0E78  1903               	skipnz
 15446  0E79  2D59               	goto	i1l298
 15447  0E7A  3A01               	xorlw	1	; case 1
 15448  0E7B  1903               	skipnz
 15449  0E7C  2D86               	goto	i1l303
 15450  0E7D  3A03               	xorlw	3	; case 2
 15451  0E7E  1903               	skipnz
 15452  0E7F  2DCE               	goto	i1l5257
 15453  0E80  3A01               	xorlw	1	; case 3
 15454  0E81  1903               	skipnz
 15455  0E82  2DF6               	goto	i1l320
 15456  0E83  3A07               	xorlw	7	; case 4
 15457  0E84  1903               	skipnz
 15458  0E85  2E61               	goto	i1l5331
 15459  0E86  3A01               	xorlw	1	; case 5
 15460  0E87  1903               	skipnz
 15461  0E88  2E25               	goto	i1l327
 15462  0E89  3A03               	xorlw	3	; case 6
 15463  0E8A  1903               	skipnz
 15464  0E8B  2E3A               	goto	i1l5313
 15465  0E8C  3A01               	xorlw	1	; case 7
 15466  0E8D  1903               	skipnz
 15467  0E8E  2E61               	goto	i1l5331
 15468  0E8F  3A0F               	xorlw	15	; case 8
 15469  0E90  1903               	skipnz
 15470  0E91  2E41               	goto	i1l5317
 15471  0E92  3A02               	xorlw	2	; case 10
 15472  0E93  1903               	skipnz
 15473  0E94  2D87               	goto	i1l304
 15474  0E95  3A01               	xorlw	1	; case 11
 15475  0E96  1903               	skipnz
 15476  0E97  2DA9               	goto	i1l309
 15477  0E98  2E65               	goto	i1l5333
 15478  0E99  0008               	return
 15479  0E9A                     __end_of_I2C1_ISR:	
 15480                           
 15481                           	psect	text54
 15482  16AA                     __ptext54:	
 15483 ;; *************** function _I2C1_Stop *****************
 15484 ;; Defined at:
 15485 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 15486 ;; Parameters:    Size  Location     Type
 15487 ;;  completion_c    1    wreg     enum E10866
 15488 ;; Auto vars:     Size  Location     Type
 15489 ;;  completion_c    1    1[COMMON] enum E10866
 15490 ;; Return value:  Size  Location     Type
 15491 ;;                  1    wreg      void 
 15492 ;; Registers used:
 15493 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15494 ;; Tracked objects:
 15495 ;;		On entry : 0/0
 15496 ;;		On exit  : 0/0
 15497 ;;		Unchanged: 0/0
 15498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15501 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15502 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15503 ;;Total ram usage:        2 bytes
 15504 ;; Hardware stack levels used:    1
 15505 ;; This function calls:
 15506 ;;		Nothing
 15507 ;; This function is called by:
 15508 ;;		_I2C1_ISR
 15509 ;; This function uses a non-reentrant model
 15510 ;;
 15511                           
 15512                           
 15513                           ;psect for function _I2C1_Stop
 15514  16AA                     _I2C1_Stop:	
 15515                           
 15516                           ;incstack = 0
 15517                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 15518                           ;I2C1_Stop@completion_code stored from wreg
 15519  16AA  00F7               	movwf	I2C1_Stop@completion_code
 15520                           
 15521                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 15522  16AB  0143               	movlb	3	; select bank3
 15523  16AC  1511               	bsf	17,2	;volatile
 15524                           
 15525                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 15526  16AD  0141               	movlb	1	; select bank1
 15527  16AE  0844               	movf	_p_i2c1_current^(0+128),w
 15528  16AF  3E03               	addlw	3
 15529  16B0  0086               	movwf	6
 15530  16B1  0187               	clrf	7
 15531  16B2  0801               	movf	1,w
 15532  16B3  1903               	btfsc	3,2
 15533  16B4  2EC0               	goto	i1l4943
 15534                           
 15535                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 15536  16B5  0877               	movf	I2C1_Stop@completion_code,w
 15537  16B6  00F6               	movwf	??_I2C1_Stop
 15538  16B7  0844               	movf	_p_i2c1_current^(0+128),w
 15539  16B8  3E03               	addlw	3
 15540  16B9  0086               	movwf	6
 15541  16BA  0187               	clrf	7
 15542  16BB  0801               	movf	1,w
 15543  16BC  0086               	movwf	6
 15544  16BD  0187               	clrf	7
 15545  16BE  0876               	movf	??_I2C1_Stop,w
 15546  16BF  0081               	movwf	1
 15547  16C0                     i1l4943:	
 15548                           
 15549                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 15550  16C0  01C6               	clrf	_i2c1_state^(0+128)
 15551  16C1  0008               	return
 15552  16C2                     __end_of_I2C1_Stop:	
 15553                           
 15554                           	psect	text55
 15555  1644                     __ptext55:	
 15556 ;; *************** function _I2C1_FunctionComplete *****************
 15557 ;; Defined at:
 15558 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 15559 ;; Parameters:    Size  Location     Type
 15560 ;;		None
 15561 ;; Auto vars:     Size  Location     Type
 15562 ;;		None
 15563 ;; Return value:  Size  Location     Type
 15564 ;;                  1    wreg      void 
 15565 ;; Registers used:
 15566 ;;		wreg, status,2, status,0
 15567 ;; Tracked objects:
 15568 ;;		On entry : 0/0
 15569 ;;		On exit  : 0/0
 15570 ;;		Unchanged: 0/0
 15571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15574 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15575 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15576 ;;Total ram usage:        1 bytes
 15577 ;; Hardware stack levels used:    1
 15578 ;; This function calls:
 15579 ;;		Nothing
 15580 ;; This function is called by:
 15581 ;;		_I2C1_ISR
 15582 ;; This function uses a non-reentrant model
 15583 ;;
 15584                           
 15585                           
 15586                           ;psect for function _I2C1_FunctionComplete
 15587  1644                     _I2C1_FunctionComplete:	
 15588                           
 15589                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 15590                           
 15591                           ;incstack = 0
 15592                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 15593  1644  3004               	movlw	4
 15594  1645  0141               	movlb	1	; select bank1
 15595  1646  07B5               	addwf	_p_i2c1_trb_current^(0+128),f
 15596  1647  3000               	movlw	0
 15597  1648  3DB6               	addwfc	(_p_i2c1_trb_current+1)^(0+128),f
 15598                           
 15599                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 15600  1649  3001               	movlw	1
 15601  164A  02C5               	subwf	_i2c1_trb_count^(0+128),f
 15602  164B  1D03               	btfss	3,2
 15603  164C  2E52               	goto	i1l339
 15604                           
 15605                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 15606  164D  3004               	movlw	4
 15607  164E  00F6               	movwf	??_I2C1_FunctionComplete
 15608  164F  0876               	movf	??_I2C1_FunctionComplete,w
 15609  1650  00C6               	movwf	_i2c1_state^(0+128)
 15610                           
 15611                           ;mcc_generated_files/i2c1.c: 575:     }
 15612  1651  0008               	return
 15613  1652                     i1l339:	
 15614                           ;mcc_generated_files/i2c1.c: 576:     else
 15615                           
 15616                           
 15617                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 15618  1652  01C6               	clrf	_i2c1_state^(0+128)
 15619  1653  0AC6               	incf	_i2c1_state^(0+128),f
 15620  1654  0008               	return
 15621  1655                     __end_of_I2C1_FunctionComplete:	
 15622                           
 15623                           	psect	text56
 15624  1566                     __ptext56:	
 15625 ;; *************** function _I2C1_BusCollisionISR *****************
 15626 ;; Defined at:
 15627 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 15628 ;; Parameters:    Size  Location     Type
 15629 ;;		None
 15630 ;; Auto vars:     Size  Location     Type
 15631 ;;		None
 15632 ;; Return value:  Size  Location     Type
 15633 ;;                  1    wreg      void 
 15634 ;; Registers used:
 15635 ;;		None
 15636 ;; Tracked objects:
 15637 ;;		On entry : 0/0
 15638 ;;		On exit  : 0/0
 15639 ;;		Unchanged: 0/0
 15640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15645 ;;Total ram usage:        0 bytes
 15646 ;; Hardware stack levels used:    1
 15647 ;; This function calls:
 15648 ;;		Nothing
 15649 ;; This function is called by:
 15650 ;;		_INTERRUPT_InterruptManager
 15651 ;; This function uses a non-reentrant model
 15652 ;;
 15653                           
 15654                           
 15655                           ;psect for function _I2C1_BusCollisionISR
 15656  1566                     _I2C1_BusCollisionISR:	
 15657                           
 15658                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 15659                           
 15660                           ;incstack = 0
 15661                           ; Regs used in _I2C1_BusCollisionISR: []
 15662  1566  014E               	movlb	14	; select bank14
 15663  1567  108F               	bcf	15,1	;volatile
 15664  1568  0008               	return
 15665  1569                     __end_of_I2C1_BusCollisionISR:	
 15666                           
 15667                           	psect	text57
 15668  170E                     __ptext57:	
 15669 ;; *************** function _EUSART1_Transmit_ISR *****************
 15670 ;; Defined at:
 15671 ;;		line 194 in file "mcc_generated_files/eusart1.c"
 15672 ;; Parameters:    Size  Location     Type
 15673 ;;		None
 15674 ;; Auto vars:     Size  Location     Type
 15675 ;;		None
 15676 ;; Return value:  Size  Location     Type
 15677 ;;                  1    wreg      void 
 15678 ;; Registers used:
 15679 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15680 ;; Tracked objects:
 15681 ;;		On entry : 0/0
 15682 ;;		On exit  : 0/0
 15683 ;;		Unchanged: 0/0
 15684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15687 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15689 ;;Total ram usage:        1 bytes
 15690 ;; Hardware stack levels used:    1
 15691 ;; This function calls:
 15692 ;;		Nothing
 15693 ;; This function is called by:
 15694 ;;		_EUSART1_Initialize
 15695 ;;		_INTERRUPT_InterruptManager
 15696 ;; This function uses a non-reentrant model
 15697 ;;
 15698                           
 15699                           
 15700                           ;psect for function _EUSART1_Transmit_ISR
 15701  170E                     _EUSART1_Transmit_ISR:	
 15702                           
 15703                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 15704                           
 15705                           ;incstack = 0
 15706                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 15707  170E  3008               	movlw	8
 15708  170F  0141               	movlb	1	; select bank1
 15709  1710  026E               	subwf	_eusart1TxBufferRemaining^(0+128),w	;volatile
 15710  1711  1803               	skipnc
 15711  1712  2F29               	goto	i1l106
 15712                           
 15713                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 15714  1713  0872               	movf	_eusart1TxTail,w
 15715  1714  3E30               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 15716  1715  0086               	movwf	6
 15717  1716  3001               	movlw	1	; select bank2/3
 15718  1717  0087               	movwf	7
 15719  1718  0801               	movf	1,w
 15720  1719  0142               	movlb	2	; select bank2
 15721  171A  009A               	movwf	26	;volatile
 15722  171B  3001               	movlw	1
 15723  171C  00F6               	movwf	??_EUSART1_Transmit_ISR
 15724  171D  0876               	movf	??_EUSART1_Transmit_ISR,w
 15725  171E  07F2               	addwf	_eusart1TxTail,f	;volatile
 15726                           
 15727                           ;mcc_generated_files/eusart1.c: 201:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 15728  171F  3008               	movlw	8
 15729  1720  0272               	subwf	_eusart1TxTail,w	;volatile
 15730  1721  1803               	btfsc	3,0
 15731                           
 15732                           ;mcc_generated_files/eusart1.c: 202:         {;mcc_generated_files/eusart1.c: 203:      
      +                                 eusart1TxTail = 0;
 15733  1722  01F2               	clrf	_eusart1TxTail	;volatile
 15734                           
 15735                           ;mcc_generated_files/eusart1.c: 205:         eusart1TxBufferRemaining++;
 15736  1723  3001               	movlw	1
 15737  1724  00F6               	movwf	??_EUSART1_Transmit_ISR
 15738  1725  0876               	movf	??_EUSART1_Transmit_ISR,w
 15739  1726  0141               	movlb	1	; select bank1
 15740  1727  07EE               	addwf	_eusart1TxBufferRemaining^(0+128),f	;volatile
 15741                           
 15742                           ;mcc_generated_files/eusart1.c: 206:     }
 15743  1728  0008               	return
 15744  1729                     i1l106:	
 15745                           ;mcc_generated_files/eusart1.c: 207:     else
 15746                           
 15747                           
 15748                           ;mcc_generated_files/eusart1.c: 208:     {;mcc_generated_files/eusart1.c: 209:         P
      +                          IE3bits.TX1IE = 0;
 15749  1729  014E               	movlb	14	; select bank14
 15750  172A  1219               	bcf	25,4	;volatile
 15751  172B  0008               	return
 15752  172C                     __end_of_EUSART1_Transmit_ISR:	
 15753                           
 15754                           	psect	text58
 15755  1570                     __ptext58:	
 15756 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 15757 ;; Defined at:
 15758 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 15759 ;; Parameters:    Size  Location     Type
 15760 ;;		None
 15761 ;; Auto vars:     Size  Location     Type
 15762 ;;		None
 15763 ;; Return value:  Size  Location     Type
 15764 ;;                  1    wreg      void 
 15765 ;; Registers used:
 15766 ;;		None
 15767 ;; Tracked objects:
 15768 ;;		On entry : 0/0
 15769 ;;		On exit  : 0/0
 15770 ;;		Unchanged: 0/0
 15771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15776 ;;Total ram usage:        0 bytes
 15777 ;; Hardware stack levels used:    1
 15778 ;; This function calls:
 15779 ;;		Nothing
 15780 ;; This function is called by:
 15781 ;;		_EUSART1_Initialize
 15782 ;;		_EUSART1_Receive_ISR
 15783 ;; This function uses a non-reentrant model
 15784 ;;
 15785                           
 15786                           
 15787                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 15788  1570                     _EUSART1_DefaultOverrunErrorHandler:	
 15789                           
 15790                           ;mcc_generated_files/eusart1.c: 252:     RC1STAbits.CREN = 0;
 15791                           
 15792                           ;incstack = 0
 15793                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 15794  1570  0142               	movlb	2	; select bank2
 15795  1571  121D               	bcf	29,4	;volatile
 15796                           
 15797                           ;mcc_generated_files/eusart1.c: 253:     RC1STAbits.CREN = 1;
 15798  1572  161D               	bsf	29,4	;volatile
 15799  1573  0008               	return
 15800  1574                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 15801                           
 15802                           	psect	text59
 15803  07FF                     __ptext59:	
 15804 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 15805 ;; Defined at:
 15806 ;;		line 247 in file "mcc_generated_files/eusart1.c"
 15807 ;; Parameters:    Size  Location     Type
 15808 ;;		None
 15809 ;; Auto vars:     Size  Location     Type
 15810 ;;		None
 15811 ;; Return value:  Size  Location     Type
 15812 ;;                  1    wreg      void 
 15813 ;; Registers used:
 15814 ;;		None
 15815 ;; Tracked objects:
 15816 ;;		On entry : 0/0
 15817 ;;		On exit  : 0/0
 15818 ;;		Unchanged: 0/0
 15819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15824 ;;Total ram usage:        0 bytes
 15825 ;; Hardware stack levels used:    1
 15826 ;; This function calls:
 15827 ;;		Nothing
 15828 ;; This function is called by:
 15829 ;;		_EUSART1_Initialize
 15830 ;;		_EUSART1_Receive_ISR
 15831 ;; This function uses a non-reentrant model
 15832 ;;
 15833                           
 15834                           
 15835                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 15836  07FF                     _EUSART1_DefaultFramingErrorHandler:	
 15837                           
 15838                           ;incstack = 0
 15839                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 15840  07FF  0008               	return
 15841  0800                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 15842                           
 15843                           	psect	text60
 15844  1563                     __ptext60:	
 15845 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 15846 ;; Defined at:
 15847 ;;		line 257 in file "mcc_generated_files/eusart1.c"
 15848 ;; Parameters:    Size  Location     Type
 15849 ;;		None
 15850 ;; Auto vars:     Size  Location     Type
 15851 ;;		None
 15852 ;; Return value:  Size  Location     Type
 15853 ;;                  1    wreg      void 
 15854 ;; Registers used:
 15855 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15856 ;; Tracked objects:
 15857 ;;		On entry : 0/0
 15858 ;;		On exit  : 0/0
 15859 ;;		Unchanged: 0/0
 15860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15865 ;;Total ram usage:        0 bytes
 15866 ;; Hardware stack levels used:    1
 15867 ;; Hardware stack levels required when called:    1
 15868 ;; This function calls:
 15869 ;;		_EUSART1_RxDataHandler
 15870 ;; This function is called by:
 15871 ;;		_EUSART1_Initialize
 15872 ;;		_EUSART1_Receive_ISR
 15873 ;; This function uses a non-reentrant model
 15874 ;;
 15875                           
 15876                           
 15877                           ;psect for function _EUSART1_DefaultErrorHandler
 15878  1563                     _EUSART1_DefaultErrorHandler:	
 15879                           
 15880                           ;mcc_generated_files/eusart1.c: 258:     EUSART1_RxDataHandler();
 15881                           
 15882                           ;incstack = 0
 15883                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 15884  1563  3196  2692         	fcall	_EUSART1_RxDataHandler
 15885  1565  0008               	return
 15886  1566                     __end_of_EUSART1_DefaultErrorHandler:	
 15887                           
 15888                           	psect	text61
 15889  1692                     __ptext61:	
 15890 ;; *************** function _EUSART1_RxDataHandler *****************
 15891 ;; Defined at:
 15892 ;;		line 237 in file "mcc_generated_files/eusart1.c"
 15893 ;; Parameters:    Size  Location     Type
 15894 ;;		None
 15895 ;; Auto vars:     Size  Location     Type
 15896 ;;		None
 15897 ;; Return value:  Size  Location     Type
 15898 ;;                  1    wreg      void 
 15899 ;; Registers used:
 15900 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15901 ;; Tracked objects:
 15902 ;;		On entry : 0/0
 15903 ;;		On exit  : 0/0
 15904 ;;		Unchanged: 0/0
 15905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15909 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15910 ;;Total ram usage:        1 bytes
 15911 ;; Hardware stack levels used:    1
 15912 ;; This function calls:
 15913 ;;		Nothing
 15914 ;; This function is called by:
 15915 ;;		_EUSART1_Receive_ISR
 15916 ;;		_EUSART1_DefaultErrorHandler
 15917 ;; This function uses a non-reentrant model
 15918 ;;
 15919                           
 15920                           
 15921                           ;psect for function _EUSART1_RxDataHandler
 15922  1692                     _EUSART1_RxDataHandler:	
 15923                           
 15924                           ;mcc_generated_files/eusart1.c: 239:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 15925                           
 15926                           ;incstack = 0
 15927                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 15928  1692  0142               	movlb	2	; select bank2
 15929  1693  0819               	movf	25,w	;volatile
 15930  1694  00F6               	movwf	??_EUSART1_RxDataHandler
 15931  1695  0871               	movf	_eusart1RxHead,w
 15932  1696  3E28               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 15933  1697  0086               	movwf	6
 15934  1698  3001               	movlw	1	; select bank2/3
 15935  1699  0087               	movwf	7
 15936  169A  0876               	movf	??_EUSART1_RxDataHandler,w
 15937  169B  0081               	movwf	1
 15938  169C  3001               	movlw	1
 15939  169D  00F6               	movwf	??_EUSART1_RxDataHandler
 15940  169E  0876               	movf	??_EUSART1_RxDataHandler,w
 15941  169F  07F1               	addwf	_eusart1RxHead,f	;volatile
 15942                           
 15943                           ;mcc_generated_files/eusart1.c: 240:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 15944  16A0  3008               	movlw	8
 15945  16A1  0271               	subwf	_eusart1RxHead,w	;volatile
 15946  16A2  1803               	btfsc	3,0
 15947                           
 15948                           ;mcc_generated_files/eusart1.c: 241:     {;mcc_generated_files/eusart1.c: 242:         e
      +                          usart1RxHead = 0;
 15949  16A3  01F1               	clrf	_eusart1RxHead	;volatile
 15950                           
 15951                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxCount++;
 15952  16A4  3001               	movlw	1
 15953  16A5  00F6               	movwf	??_EUSART1_RxDataHandler
 15954  16A6  0876               	movf	??_EUSART1_RxDataHandler,w
 15955  16A7  0141               	movlb	1	; select bank1
 15956  16A8  07C8               	addwf	_eusart1RxCount^(0+128),f	;volatile
 15957  16A9  0008               	return
 15958  16AA                     __end_of_EUSART1_RxDataHandler:	
 15959                           
 15960                           	psect	text62
 15961  1609                     __ptext62:	
 15962 ;; *************** function _ADCC_ThresholdISR *****************
 15963 ;; Defined at:
 15964 ;;		line 308 in file "mcc_generated_files/adcc.c"
 15965 ;; Parameters:    Size  Location     Type
 15966 ;;		None
 15967 ;; Auto vars:     Size  Location     Type
 15968 ;;		None
 15969 ;; Return value:  Size  Location     Type
 15970 ;;                  1    wreg      void 
 15971 ;; Registers used:
 15972 ;;		wreg, status,2, status,0, pclath, cstack
 15973 ;; Tracked objects:
 15974 ;;		On entry : 0/0
 15975 ;;		On exit  : 0/0
 15976 ;;		Unchanged: 0/0
 15977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15982 ;;Total ram usage:        0 bytes
 15983 ;; Hardware stack levels used:    1
 15984 ;; Hardware stack levels required when called:    1
 15985 ;; This function calls:
 15986 ;;		Absolute function
 15987 ;;		_ADCC_DefaultInterruptHandler
 15988 ;;		_adcThresholdHandler
 15989 ;; This function is called by:
 15990 ;;		_INTERRUPT_InterruptManager
 15991 ;; This function uses a non-reentrant model
 15992 ;;
 15993                           
 15994                           
 15995                           ;psect for function _ADCC_ThresholdISR
 15996  1609                     _ADCC_ThresholdISR:	
 15997                           
 15998                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 15999                           
 16000                           ;incstack = 0
 16001                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 16002  1609  014E               	movlb	14	; select bank14
 16003  160A  108D               	bcf	13,1	;volatile
 16004                           
 16005                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 16006  160B  0141               	movlb	1	; select bank1
 16007  160C  086C               	movf	_ADCC_ADTI_InterruptHandler^(0+128),w
 16008  160D  046D               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+128),w
 16009  160E  1903               	btfsc	3,2
 16010  160F  0008               	return
 16011                           
 16012                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 16013  1610  086D               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+128),w
 16014  1611  008A               	movwf	10
 16015  1612  086C               	movf	_ADCC_ADTI_InterruptHandler^(0+128),w
 16016  1613  000A               	callw
 16017  1614  3196               	pagesel	$
 16018  1615  0008               	return
 16019  1616                     __end_of_ADCC_ThresholdISR:	
 16020                           
 16021                           	psect	text63
 16022  0003                     __ptext63:	
 16023 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 16024 ;; Defined at:
 16025 ;;		line 320 in file "mcc_generated_files/adcc.c"
 16026 ;; Parameters:    Size  Location     Type
 16027 ;;		None
 16028 ;; Auto vars:     Size  Location     Type
 16029 ;;		None
 16030 ;; Return value:  Size  Location     Type
 16031 ;;                  1    wreg      void 
 16032 ;; Registers used:
 16033 ;;		None
 16034 ;; Tracked objects:
 16035 ;;		On entry : 0/0
 16036 ;;		On exit  : 0/0
 16037 ;;		Unchanged: 0/0
 16038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16043 ;;Total ram usage:        0 bytes
 16044 ;; Hardware stack levels used:    1
 16045 ;; This function calls:
 16046 ;;		Nothing
 16047 ;; This function is called by:
 16048 ;;		_ADCC_Initialize
 16049 ;;		_ADCC_ThresholdISR
 16050 ;; This function uses a non-reentrant model
 16051 ;;
 16052                           
 16053                           
 16054                           ;psect for function _ADCC_DefaultInterruptHandler
 16055  0003                     _ADCC_DefaultInterruptHandler:	
 16056                           
 16057                           ;incstack = 0
 16058                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 16059  0003  0008               	return
 16060  0004                     __end_of_ADCC_DefaultInterruptHandler:	
 16061                           
 16062                           	psect	text64
 16063  156C                     __ptext64:	
 16064 ;; *************** function _adcThresholdHandler *****************
 16065 ;; Defined at:
 16066 ;;		line 32 in file "beat.c"
 16067 ;; Parameters:    Size  Location     Type
 16068 ;;		None
 16069 ;; Auto vars:     Size  Location     Type
 16070 ;;		None
 16071 ;; Return value:  Size  Location     Type
 16072 ;;                  1    wreg      void 
 16073 ;; Registers used:
 16074 ;;		None
 16075 ;; Tracked objects:
 16076 ;;		On entry : 0/0
 16077 ;;		On exit  : 0/0
 16078 ;;		Unchanged: 0/0
 16079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16084 ;;Total ram usage:        0 bytes
 16085 ;; Hardware stack levels used:    1
 16086 ;; This function calls:
 16087 ;;		Nothing
 16088 ;; This function is called by:
 16089 ;;		_BEAT_init
 16090 ;;		_ADCC_ThresholdISR
 16091 ;; This function uses a non-reentrant model
 16092 ;;
 16093                           
 16094                           
 16095                           ;psect for function _adcThresholdHandler
 16096  156C                     _adcThresholdHandler:	
 16097                           
 16098                           ;beat.c: 33:     thresholdExceeded = 1;
 16099                           
 16100                           ;incstack = 0
 16101                           ; Regs used in _adcThresholdHandler: []
 16102  156C  0141               	movlb	1	; select bank1
 16103  156D  01BA               	clrf	_thresholdExceeded^(0+128)
 16104  156E  0ABA               	incf	_thresholdExceeded^(0+128),f
 16105  156F  0008               	return
 16106  1570                     __end_of_adcThresholdHandler:	
 16107  007E                     btemp	set	126	;btemp
 16108  007E                     int$flags	set	126
 16109  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    96
    Data        6
    BSS         115
    Persistent  45
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     80      80
    BANK1            80     21      79
    BANK2            80      0      70
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           79      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    BUTTONS_isHeld@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isHeld@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    S1233$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), Absolute function(), ADCC_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK1[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    S413$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    S425$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@dataToSend(BANK0[1]), writeData@status(BANK0[1]), 

    S425$ptrb_list	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[4]), NULL(NULL[0]), 

    S436$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[4]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[4]), 

    S436$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[4]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[4]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_LED_setColor
    _TM1650_init->_TM1650_enable
    _SYSTEM_Initialize->_EUSART1_Initialize
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_setColor->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _DMX_init->_EUSART1_SetRxInterruptHandler
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_enable->_writeData
    _CONTROLLER_init->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _writeData->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    ___lwdiv->___lwmod
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LED_setColor

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   77528
                                              6 BANK1     15    15      0
                      _BEAT_detected
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                      _CLOCK_getTime
                         _CLOCK_init
                    _CONTROLLER_init
                    _CONTROLLER_task
                           _DMX_init
                           _LED_init
                       _LED_setColor
                  _SYSTEM_Initialize
                _TM1650_fastPrintNum
                        _TM1650_init
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0    2685
                      _TM1650_enable
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     906
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     695
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_setColor                                         9     6      3    8335
                                             77 BANK0      3     0      3
                                              0 BANK1      6     6      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     702
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     609
                                             66 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    4073
                                             40 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1881
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_init                                             0     0      0     211
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      3     3      0   31741
                                             40 BANK0      3     3      0
                  _BUTTONS_isClicked
                     _BUTTONS_isHeld
                      _CLOCK_getTime
                      _TM1650_enable
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (2) _address_inc                                          0     0      0   14391
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _address_dec                                          0     0      0   14391
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    2685
                                             21 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isHeld                                       1     1      0     103
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    1     1      0     134
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_init                                      0     0      0   14391
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (1) _TM1650_fastPrintNum                                 13    11      2   14391
                                             27 BANK0     13    11      2
                    _TM1650_setDigit
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    3832
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _TM1650_setDigit                                      6     4      2    6626
                                             21 BANK0      6     4      2
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _writeData                                            7     6      1    2623
                                             14 BANK0      7     6      1
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     7     3      4    1499
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                             7     3      4     492
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 5     2      3     546
                                              0 BANK0      5     2      3
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (6) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     911
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0    1050
                                              5 BANK0      1     1      0
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3    1050
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0    2231
                                             14 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                   _TM1650_isEnabled
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1834
                                              6 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _TM1650_isEnabled                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0      65
                   Absolute function *
                  _ADCC_ThresholdISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                            _handler *
 ---------------------------------------------------------------------------------
 (10) _handler                                             5     5      0      34
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ISR                                            4     4      0      31
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (11) _I2C1_Stop                                           2     2      0      31
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (11) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_detected
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     _TM1650_isEnabled
     ___lwdiv
       ___lwmod (ARG)
   _BUTTONS_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_getTime
   _CLOCK_init
   _CONTROLLER_init
     _TM1650_fastPrintNum
       _TM1650_setDigit
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
   _CONTROLLER_task
     _BUTTONS_isClicked
     _BUTTONS_isHeld
     _CLOCK_getTime
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _address_dec
       _TM1650_fastPrintNum
         _TM1650_setDigit
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     _address_inc
       _TM1650_fastPrintNum
         _TM1650_setDigit
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
   _DMX_init
     _EUSART1_SetRxInterruptHandler
   _LED_init
   _LED_setColor
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _TM1650_fastPrintNum
     _TM1650_setDigit
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _handler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      F1       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     15      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      46      10       87.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              4F      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0      F1      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Apr 26 19:18:44 2019

                      _eusart1TxBufferRemaining 00EE                                    ___fldiv@aexp 0047  
                                  ___fldiv@bexp 0046                        ??_ADCC_SetUpperThreshold 0022  
                                  ___fldiv@sign 003F                                    ?_TM1650_init 0076  
                                            _up 00BF                              __size_of_BEAT_init 0017  
                            __size_of_BEAT_task 00D1                             __Umul8_16@word_mpld 0026  
                           _adcThresholdHandler 156C                                             l804 0742  
                                           l805 075B                                             l733 09BA  
                                           l806 0784                                             l807 07AC  
                                           l808 07CF                                             _bpm 00AB  
                       __size_of_PMD_Initialize 000A                                             wreg 0009  
                                  ___flmul@aexp 0056                                    ___flmul@bexp 005B  
                                  ___flmul@sign 0055                                    ___flmul@temp 0060  
                                  ___flmul@prod 005C                                    _BAUD1CONbits 011F  
                              __end_of_I2C1_ISR 0E9A                                    ___fltol@exp1 006C  
                                          l1600 0563                                            l1392 0B07  
                                          l1640 0B95                                            l1632 0B77  
                                          l1570 06D8                                            l1626 0B41  
                                          l1572 06E5                                            l1548 05B9  
                                          l1645 177D                                            l5007 1623  
                                          l5023 16E4                                            l5015 07F1  
                                          l1639 0B8B                                            l3273 08E9  
                                          l3265 08CB                                            l5025 16E8  
                                          l5017 07F5                                            l1569 06C0  
                                          l3267 08D7                                            l5043 035E  
                                          l3611 0AD0                                            l3277 08F2  
                                          l5133 04F9                                            l5125 04CB  
                                          l5061 0381                                            l5045 0360  
                          _ADCC_StartConversion 15A0                                            l5151 0539  
                                          l5127 04E2                                            l5063 0383  
                                          l5047 0368                                            l3607 0AC7  
                                          l3721 0644                                            l5137 04FB  
                                          l5073 0399                                            l5065 038B  
                                          l3715 062B                                            l3723 060D  
                                          l5147 0524                                            l3627 0AF5  
                                          l3741 0666                                            l3725 0649  
                                          l3661 0595                                            l5157 0550  
                                          l3637 0B14                                            l3629 0B03  
                                          l5503 0A77                                            l5511 0A85  
                                          l3751 067F                                            l3655 058A  
                                          l4713 17DA                                            l5505 0A7B  
                                          l3761 06A8                                            l4715 17E6  
                                          l4723 17FB                                            l4803 031D  
                                          l3747 067D                                            l3739 064F  
                                          l3675 05AE                                            l3659 058D  
                                          l5605 158C                                            l5541 0CAD  
                                          l4645 1574                                            l5517 0A98  
                                          l3933 0B50                                            l4663 0A45  
                                          l4719 17F2                                            l3775 06E1  
                                          l3695 05E4                                            l3679 05B1  
                                          l3927 0B39                                            l5537 0CA7  
                                          l5465 073C                                            l4665 0A4B  
                                          l4681 17A7                                            l4761 00B9  
                                          l3689 05D8                                            l4809 1777  
                                          l3961 0BB0                                            l3937 0B54  
                                          l5705 0BE4                                            l5459 070C  
                                          l4659 0A3E                                            l4675 0823  
                                          l4691 098C                                            l3947 0B89  
                                          l3939 0B64                                            l5573 0D23  
                                          l5557 0CDF                                            l4693 0994  
                                          l3949 0B7C                                            l5559 0CF2  
                                          l4695 099C                                            l4775 012E  
                                          l5495 0A63                                            l4689 0984  
                                          l5497 0A67                                            l4699 09A4  
                                          l4971 16D0                                            l4789 01F0  
                                          l5685 0BFA                                            l5777 09AC  
                                          l4997 1679                                  ?_TM1650_enable 0076  
                                          _LATA 0018                                            _LATB 0019  
                                          u2055 08CE                                            _LATC 001A  
                                          u2075 08D8                                            u2085 08E2  
                                          u2405 0AF6                                            u3125 0B9D  
                                          u3045 0B5D                                            u2095 08EA  
                                          u4015 17EC                                            u4025 17F3  
                                          u3065 0B71                                            u2435 0B0B  
                                          u3085 0B83                                            u4135 177E  
                                          u2375 0AD9                                            u2625 0652  
                                          u2715 0696                                            u2555 0615  
                                          u4315 040F                                            u2725 06B1  
                                          u2645 065B                                            u2565 061C  
                                          u4325 043E                                            u2735 06CA  
                                          u4335 0494                                            u2585 0625  
                                          u4345 04AB                                            u2595 0639  
                                          u4355 04BA                                            _PMD0 0796  
                                          u4365 04CE                                            _PMD1 0797  
                                          _PMD2 0798                                            u4455 0512  
                                          _PMD3 0799                                            _PMD4 079A  
                                          u4705 070F                                            u4465 052D  
                                          u4385 04D7                                            _PMD5 079B  
                                          u4714 072E                                            _PMD6 079C  
                                          u4715 072D                                            u4475 0543  
                                          _PMD7 079D                                            u5197 0BC2  
                                          u4915 0C92                                            u3995 17DD  
                                          u4965 0D04                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                                 ?_BUTTONS_init 0076                                   ?_BUTTONS_task 0076  
                          ?_adcThresholdHandler 0076                                            _main 0BB9  
                                          _down 00BE                                            _init 172C  
                                          _menu 00BC                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                          ??_I2C1_MasterTRBInsert 0023  
                                          btemp 007E                                            start 003C  
                               ___fldiv@new_exp 0040                         __end_of_TM1650_setDigit 09BB  
                           __size_of_CLOCK_init 0010                            __size_of_address_dec 0018  
                          __size_of_address_inc 0019                  I2C1_MasterWriteTRBBuild@length 0021  
                                _BUTTONS_isHeld 1616                                      _i2c1_state 00C6  
                __size_of_OSCILLATOR_Initialize 0009                       I2C1_MasterTRBInsert@count 0024  
                 __end_of_OSCILLATOR_Initialize 15E8                        __end_of_TM1650_isEnabled 156C  
                     I2C1_MasterTRBInsert@pflag 0022                           _eusart1RxStatusBuffer 0120  
                              __end_of_LED_init 092D                                   ___fltol@sign1 006B  
                                         _ADCAP 010E                                           _ADACT 0117  
                                         ?_main 0076                                           _ADCLK 0118  
                                         _ADCNT 0099                                           ?_init 0020  
                                         _ADPCH 009F                                 __end_of___fldiv 06EA  
                                         _ADREF 0116                               __end_of_I2C1_Stop 16C2  
                                 __CFG_WDTE$OFF 0000                                __end_of_DMX_init 1634  
                                         _ADRPT 009A                                 __end_of___flmul 0570  
                               __end_of___fltol 0B23                                           _LATC5 00D5  
                               __end_of___lwdiv 08F7                      _ADCC_ADTI_InterruptHandler 00EC  
                                         i1l106 1729                                           i1l310 0DB5  
                                         i1l303 0D86                                           i1l320 0DF6  
                                         i1l304 0D87                                           i1l332 0E5A  
                                         i1l324 0E16                                           i1l180 002B  
                                         i1l309 0DA9                                           i1l182 0035  
                                         i1l174 0010                                           i1l327 0E25  
                                         i1l328 0E33                                           i1l176 0017  
                               __end_of___lwmod 1800                                           i1l178 0021  
                                         i1l339 1652                                           i1l187 003A  
                                         i1l298 0D59                                    main@lastTime 00E2  
                                         _OSCEN 0891                                           _TMR0H 059D  
                                         _PORTA 000C                                           _PORTC 000E  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014                    __end_of_I2C1_BusCollisionISR 1569  
                          _EUSART1_Transmit_ISR 170E                                 __end_of_handler 08C2  
                             ??_I2C1_Initialize 0020                                           _delay 00E6  
                                         _enter 00BD                                           _count 00B3  
                         ?_ADCC_StartConversion 0076                                           _input 25EF  
                                         _point 00A5                                           pclath 000A  
                                ??_BUTTONS_init 0025                                  ??_BUTTONS_task 0022  
                         ??_adcThresholdHandler 0076                               __end_of_BEAT_init 1692  
                             __end_of_BEAT_task 0D46                                           status 0003  
                                         wtemp0 007E      __end_of_EUSART1_DefaultFramingErrorHandler 0800  
   __size_of_EUSART1_DefaultFramingErrorHandler 0001            ??_EUSART1_DefaultFramingErrorHandler 0076  
           ?_EUSART1_DefaultFramingErrorHandler 0076              _EUSART1_DefaultFramingErrorHandler 07FF  
               I2C1_MasterWriteTRBBuild@address 0022                          __end_of_BUTTONS_isHeld 1625  
                               __initialization 003E                            TM1650_setDigit@digit 0039  
                         I2C1_MasterWrite@pdata 002D                           I2C1_MasterWrite@pflag 002A  
                    __end_of_EUSART1_Initialize 0972                                    __end_of_main 0C75  
                                  __end_of_init 174C                                 _CONTROLLER_init 15F2  
                               _CONTROLLER_task 0A58                                   ?_LED_setColor 006D  
               __size_of_ADCC_SetUpperThreshold 0009                           __end_of_CLOCK_getTime 15B2  
                   ?_INTERRUPT_InterruptManager 0076                        TM1650_setDigit@charTable 1000  
                                   _i2c1_object 00A0                                          ??_main 00D7  
                                        ??_init 0023                           ?_EUSART1_Transmit_ISR 0076  
                               ??_TM1650_enable 0035                                          _ADACCH 0097  
                                        _ADACCL 0096                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        _ADCON0 0111                                          _ADCON1 0112  
                                        _ADCON2 0113                                          _ADCON3 0114  
                                        _ADERRH 0091                                          _ADERRL 0090  
                                        _ADLTHH 008D                                          _ADLTHL 008C  
                                        _ADRESH 009E                                          _ADRESL 009D  
                                        _ADPREH 0110                                          _ADPREL 010F  
                                        _CCPR1H 030D                                          _CCPR2H 0311  
                                        _CCPR1L 030C                                          _CCPR3H 0315  
                                        _CCPR2L 0310                                          _CCPR4H 0319  
                                        _CCPR3L 0314                                          _CCPR4L 0318  
                                        _ADSTAT 0115                                          _ADUTHH 008F  
                                        _ADUTHL 008E                                          _ANSELA 1F38  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                                        _RC1REG 0119                                          _RA4PPS 1F14  
                                        _RA5PPS 1F15                                          _RC1STA 011D  
                                        _RC3PPS 1F23                                          _RB6PPS 1F1E  
                                        _RC4PPS 1F24                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _RC7PPS 1F27  
                                        i1l5301 0E19                                          i1l5313 0E3A  
                                        i1l5225 0D79                                          i1l5331 0E61  
                                        i1l5243 0DA3                                          i1l5333 0E65  
                                        i1l5317 0E41                                          i1l5237 0D93  
                                        i1l5229 0D80                                          i1l5329 0E5E  
                                        i1l5257 0DCE                                          i1l5291 0E04  
                                        i1l5339 0E6D                                          i1l5195 087B  
                                        i1l5277 0DEB                                          i1l5613 0894  
                                        i1l5189 086D                                          i1l5199 088A  
                                        i1l5627 08BF                                          i1l5619 089E  
                                        i1l4943 16C0                                          i1l5779 0E76  
                                        u501_25 08A8                                          _SP1BRG 011B  
                                        _OSCFRQ 0893                                          _RX1PPS 1ECB  
                                        _TX1REG 011A                                          _TX1STA 011E  
                                        _TRISB4 009C                                          _TRISC3 00A3  
                                        _TRISC4 00A4                                          _TRISC5 00A5  
                                        _TRISC6 00A6                                          _TRISC7 00A7  
                              __end_of___xxtofl 0BB9                               ?_I2C1_MasterWrite 0027  
                              ?_TM1650_setDigit 0035                                 ?_BUTTONS_isHeld 0076  
                            ??_I2C1_MasterWrite 002B                                  _p_i2c1_current 00C4  
                                ??_LED_setColor 00D1                     __end_of_TM1650_fastPrintNum 0344  
                             _ADCC_ThresholdISR 1609                                       ??___fldiv 0036  
                                     ??___flmul 0050                                       ??___fltol 0066  
                                     ??___lwdiv 002A                                       ??___lwmod 0024  
                      ?_EUSART1_SetErrorHandler 0020                      ??_I2C1_MasterWriteTRBBuild 0024  
                            ?_ADCC_ThresholdISR 0076                                       ?_I2C1_ISR 0076  
                        __size_of_BEAT_detected 0009                                       ??_handler 0076  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                _lastActiveTime 00B1                            __size_of_TM1650_init 0006  
                               _ADCC_Initialize 17AD                                  _PMD_Initialize 15E8  
                                  ??_CLOCK_init 0020                              __size_of__Umul8_16 0020  
                           ??_ADCC_ThresholdISR 0076                          ??_ADCC_StartConversion 0020  
          ADCC_SetUpperThreshold@upperThreshold 0020    ADCC_SetADTIInterruptHandler@InterruptHandler 0020  
                        _ADCC_SetUpperThreshold 1597                   I2C1_MasterWriteTRBBuild@pdata 0020  
                               _eusart1RxBuffer 0128                                 _eusart1TxBuffer 0130  
                                  ___xxtofl@arg 002A                                    ___xxtofl@exp 0029  
                             _SYSTEM_Initialize 1655                                    ___xxtofl@val 0020  
                       __end_of__initialization 0075                         __end_of_CONTROLLER_init 15FD  
                       __end_of_CONTROLLER_task 0ABD                              ?_SYSTEM_Initialize 0076  
                                     ?_LED_init 0076                                      ___fltol@f1 0062  
                                     ?_DMX_init 0076                                  _i2c1_trb_count 00C5  
                __size_of_EUSART1_RxDataHandler 0018                       __end_of_ADCC_ThresholdISR 1616  
                 __end_of_EUSART1_RxDataHandler 16AA                           _I2C1_FunctionComplete 1644  
                          _I2C1_BusCollisionISR 1566                                  __pcstackCOMMON 0076  
                            __end_of_CLOCK_init 1644                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK1 157F                             ??_SYSTEM_Initialize 0023  
                                    ??_I2C1_ISR 0078                            __end_of_BUTTONS_init 0A06  
                        __end_of_PMD_Initialize 15F2                            __end_of_BUTTONS_task 07E6  
                      _TM1650_fastPrintNum$2840 0040                        _TM1650_fastPrintNum$2841 003E  
                      _TM1650_fastPrintNum$2839 0046                          ??_EUSART1_Transmit_ISR 0076  
                   __end_of_EUSART1_Receive_ISR 088D                               _thresholdExceeded 00BA  
                   ADCC_StartConversion@channel 0020                       __end_of_SYSTEM_Initialize 1667  
                                 _eusart1RxHead 0071                                   _eusart1TxHead 0073  
                                 _eusart1RxTail 0070                                      __pbssBANK1 00A0  
                                    __pbssBANK2 0120                                   _eusart1TxTail 0072  
             _EUSART1_TxDefaultInterruptHandler 0164                 ??_EUSART1_SetRxInterruptHandler 0022  
                                 _BEAT_detected 1585                                      ??_LED_init 0020  
                                    ??_DMX_init 0022                               __end_of__Umul8_16 178C  
                         ?_I2C1_BusCollisionISR 0076                 __end_of_EUSART1_SetErrorHandler 15C4  
                                    __pmaintext 0BB9                                writeData@address 0032  
                       __end_of_ADCC_Initialize 17D3                                      __pintentry 0004  
                               _I2C1_Initialize 16F2                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                         _ADPREVH 009C  
                                       _ADPREVL 009B                                   BUTTONS_task@i 0025  
          __end_of_ADCC_SetADTIInterruptHandler 1597           __size_of_ADCC_SetADTIInterruptHandler 0009  
                  _ADCC_SetADTIInterruptHandler 158E                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                 ?_PMD_Initialize 0076  
                             ?_TM1650_isEnabled 0076          __end_of_EUSART1_SetFramingErrorHandler 15CD  
       __size_of_EUSART1_SetFramingErrorHandler 0009                  _EUSART1_SetFramingErrorHandler 15C4  
                                     ?___xxtofl 0020                              ??_TM1650_isEnabled 0020  
                  ?_EUSART1_DefaultErrorHandler 0076                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                       _I2C1_Stop 16AA  
                                       _OSCTUNE 0892                                         _SSP1ADD 018D  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                         _SSP1BUF 018C  
                          __end_of_LED_setColor 1000                                  ?_BEAT_detected 0076  
                 I2C1_MasterTRBInsert@ptrb_list 0020                              __size_of_writeData 0021  
                                 ??_address_dec 0048                                ?_CONTROLLER_init 0076  
                                 ??_address_inc 0048                                ?_CONTROLLER_task 0076  
                               BUTTONS_task@btn 0028                          ?_I2C1_FunctionComplete 0076  
                                     _BEAT_init 167B                   __size_of_I2C1_MasterTRBInsert 0052  
                                     _BEAT_task 0C75                      __size_of_ADCC_ThresholdISR 000D  
                            _p_i2c1_trb_current 00B5                                         ___fldiv 0570  
                                       ___flmul 0344                                         ___fltol 0ABD  
                                       ___lwdiv 08C2                                         ___lwmod 17D3  
                                       _address 00EA                                         _handler 088D  
                                       __ptext1 1579                                         __ptext2 1655  
                                       __ptext3 15E8                                         __ptext4 082A  
                                       __ptext5 15DF                                         __ptext6 16F2  
                                       __ptext7 092D                                         __ptext8 15D6  
                                       __ptext9 15CD                   ?_ADCC_SetADTIInterruptHandler 0020  
                                       _lastRun 00A9                           _OSCILLATOR_Initialize 15DF  
                                     _T2CONbits 028E                                         _buttons 0138  
                                    ??___xxtofl 0024                              _EUSART1_Initialize 092D  
                      ??_PIN_MANAGER_Initialize 0020                                      ?_I2C1_Stop 0076  
                   __end_of_adcThresholdHandler 1570                   ??_EUSART1_DefaultErrorHandler 0077  
                    __size_of_SYSTEM_Initialize 0012                            I2C1_ISR@pi2c_buf_ptr 00C3  
                                       clrloop0 15FE                            end_of_initialization 0075  
                           ?_EUSART1_Initialize 0076                                         init@btn 0024  
                                       init@pin 0022                                ??_BUTTONS_isHeld 0020  
                   _EUSART1_OverrunErrorHandler 015E                          ??_I2C1_BusCollisionISR 0076  
                       __end_of_I2C1_Initialize 170E           __end_of_EUSART1_SetRxInterruptHandler 15BB  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 15B2  
                                    ?_BEAT_init 0076                                      ?_BEAT_task 0076  
                         __size_of_BUTTONS_init 004B                           __size_of_BUTTONS_task 00FC  
                           __end_of_address_dec 16F2                             __end_of_address_inc 07FF  
                              ?_ADCC_Initialize 0076                            ??_EUSART1_Initialize 0022  
                     __size_of_I2C1_MasterWrite 002A                                    _displayState 00C0  
                             __size_of_I2C1_ISR 0154                               __end_of_writeData 17AD  
                       ?_ADCC_SetUpperThreshold 0020                                   ___xxtofl@sign 0028  
                                   ___fldiv@grs 0042                                     ___fldiv@rem 003B  
                               ??_BEAT_detected 0020                __size_of_EUSART1_SetErrorHandler 0009  
                              __CFG_FEXTOSC$OFF 0000                           __end_of_TM1650_enable 16DA  
             I2C1_ISR@i2c_10bit_address_restart 00C1                          __size_of_CLOCK_getTime 0009  
                                   ___flmul@grs 0057                                    _BUTTONS_init 09BB  
                                  _BUTTONS_task 06EA                                     _CCP1CONbits 030E  
                                   _CCP2CONbits 0312                                     _CCP3CONbits 0316  
                                   _CCP4CONbits 031A                         I2C1_MasterWrite@address 0028  
          __size_of_EUSART1_DefaultErrorHandler 0003                               __size_of_LED_init 0036  
                             __size_of_DMX_init 000F                  ??_ADCC_DefaultInterruptHandler 0076  
                                 ??_TM1650_init 0036                         I2C1_MasterWrite@trBlock 00C9  
                      I2C1_Stop@completion_code 0077                        __size_of_TM1650_setDigit 0049  
                        ?_OSCILLATOR_Initialize 0076                  __end_of_ADCC_SetUpperThreshold 15A0  
                  __size_of_TM1650_fastPrintNum 02CB                           __size_of_LED_setColor 0166  
                                  _lastDetected 00B9                             start_initialization 003E  
                                   ??_I2C1_Stop 0076                 __size_of_PIN_MANAGER_Initialize 002F  
                           TM1650_setDigit@data 003A   EUSART1_SetRxInterruptHandler@interruptHandler 0020  
 EUSART1_SetTxInterruptHandler@interruptHandler 0020                   __size_of_ADCC_StartConversion 0009  
             __size_of_I2C1_MasterWriteTRBBuild 0020                       ?_I2C1_MasterWriteTRBBuild 0020  
                             _BUTTONS_isClicked 1667                              ?_BUTTONS_isClicked 0076  
                                   _address_dec 16DA                                     _address_inc 07E6  
                                   ??_BEAT_init 0022                                ?_I2C1_Initialize 0076  
                                   ??_BEAT_task 002E                             ??_BUTTONS_isClicked 0020  
                              ??_PMD_Initialize 0020                           _EUSART1_RxDataHandler 1692  
                                  _LED_setColor 0E9A                  ?_EUSART1_SetRxInterruptHandler 0020  
                                     __Umul8_16 176C                                     __pdataBANK1 00E6  
                                 _CLOCK_getTime 15A9                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 00C8                                       ___fldiv@a 002E  
                                     ___fldiv@b 0032                                     __pbssBIGRAM 25EF  
                           __end_of_TM1650_init 157F                                       ___flmul@a 004C  
                                     ___flmul@b 0048                                     __pbssCOMMON 0070  
             _EUSART1_RxDefaultInterruptHandler 0162                                       ___latbits 0003  
                 __size_of_EUSART1_Transmit_ISR 001E                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00D1                                   _i2c1_tr_queue 00CD  
                             __size_of___xxtofl 0096                       __end_of_BUTTONS_isClicked 167B  
               ??_EUSART1_SetTxInterruptHandler 0022                ??_EUSART1_SetFramingErrorHandler 0022  
               ?_EUSART1_SetFramingErrorHandler 0020                         ??_I2C1_FunctionComplete 0076  
                     __size_of_TM1650_isEnabled 0003                    __size_of_EUSART1_Receive_ISR 0034  
                                     __pnvBANK1 00EC                                       __pnvBANK2 015C  
                              ___lwdiv@dividend 0028                          _PIN_MANAGER_Initialize 082A  
                                      ?___fldiv 002E                                        ?___flmul 0048  
                                      ?___fltol 0062                                      ?__Umul8_16 0020  
                                      ?___lwdiv 0026                                        ?___lwmod 0020  
                                ?_CLOCK_getTime 0020                                        _I2C1_ISR 0D46  
                  ??_INTERRUPT_InterruptManager 007C                                 writeData@status 0034  
                                      ?_handler 0076                                _I2C1_MasterWrite 0800  
                                      _BAUD1CON 011F                    __end_of_I2C1_MasterTRBInsert 0A58  
    __end_of_EUSART1_DefaultOverrunErrorHandler 1574     __size_of_EUSART1_DefaultOverrunErrorHandler 0004  
          ??_EUSART1_DefaultOverrunErrorHandler 0076             ?_EUSART1_DefaultOverrunErrorHandler 0076  
            _EUSART1_DefaultOverrunErrorHandler 1570                            _EUSART1_ErrorHandler 015C  
                       _EUSART1_SetErrorHandler 15BB                               ??_TM1650_setDigit 0037  
                              ___lwdiv@quotient 002B                                   LED_setColor@B 006E  
                                 LED_setColor@G 006D                                   LED_setColor@R 00D6  
                                 LED_setColor@W 006F                                        _T2CLKCON 0290  
      __end_of_I2C1_WaitForLastPacketToComplete 1579       __size_of_I2C1_WaitForLastPacketToComplete 0005  
            ??_I2C1_WaitForLastPacketToComplete 0020               ?_I2C1_WaitForLastPacketToComplete 0076  
              _I2C1_WaitForLastPacketToComplete 1574                          I2C1_MasterRead@trBlock 0158  
       EUSART1_SetErrorHandler@interruptHandler 0020                         BUTTONS_isClicked@button 0020  
                                     clear_ram0 15FD                                        _PIE0bits 0716  
                                      _LED_init 08F7                                        _PIE1bits 0717  
                                      _PIE3bits 0719                                        _DMX_init 1625  
           __size_of_INTERRUPT_InterruptManager 0038                                        _PIR0bits 070C  
                                      _PIR1bits 070D                                        _PIR3bits 070F  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0076  
                      TM1650_fastPrintNum@array 0042                                        _SSP1CON1 0190  
                                      _SSP1CON3 0192                                        _SSP1STAT 018F  
                           writeData@dataToSend 0033                        __size_of_CONTROLLER_init 000B  
                      __size_of_CONTROLLER_task 0065                                     _TM1650_init 1579  
                                     _threshold 00E8                                      _ADCON0bits 0111  
                                    _ADCON1bits 0112                                      _ADCON2bits 0113  
                                    _ADCON3bits 0114                                       _writeData 178C  
                    __size_of_BUTTONS_isClicked 0014                              TM1650_setDigit@num 0035  
                  __size_of_adcThresholdHandler 0004                                BUTTONS_task@time 0026  
                           _TM1650_fastPrintNum 0079                                      _ADSTATbits 0115  
         __end_of_EUSART1_SetTxInterruptHandler 15DF          __size_of_EUSART1_SetTxInterruptHandler 0009  
                 _EUSART1_SetTxInterruptHandler 15D6                   __size_of_I2C1_BusCollisionISR 0003  
                               ??_CLOCK_getTime 0022                          I2C1_ISR@i2c_bytes_left 00C2  
                       ??_OSCILLATOR_Initialize 0020                                     ??__Umul8_16 0022  
                              __size_of___fldiv 017A                                __size_of___flmul 022C  
                              __size_of___fltol 0066                     __size_of_EUSART1_Initialize 0045  
                              __size_of___lwdiv 0035                                __size_of___lwmod 002D  
              __end_of_I2C1_MasterWriteTRBBuild 176C                            ?_TM1650_fastPrintNum 003B  
                              __size_of_handler 0035                       ??_EUSART1_SetErrorHandler 0022  
                               BEAT_task@offset 0030                                   handler@dataIn 007A  
                           TM1650_enable@enable 0035             __end_of_EUSART1_DefaultErrorHandler 1566  
                   _EUSART1_DefaultErrorHandler 1563                                      _CLOCK_init 1634  
                                      ___xxtofl 0B23                                      _T0CON0bits 059E  
                                    _T0CON1bits 059F                        __size_of_ADCC_Initialize 0026  
                               ___lwdiv@divisor 0026                             I2C1_ISR@i2c_address 0074  
                               ___lwdiv@counter 002D                                        _detected 00BB  
                                    ?_writeData 002E                                        __ptext10 15C4  
                                      __ptext11 15BB                                        __ptext20 1625  
                                      __ptext12 17AD                                        __ptext21 15B2  
                                      __ptext13 0E9A                                        __ptext30 17D3  
                                      __ptext22 0A58                                        __ptext14 0B23  
                                      __ptext31 0972                                        __ptext23 07E6  
                                      __ptext15 0ABD                                        __ptext40 172C  
                                      __ptext32 178C                                        __ptext24 16DA  
                                      __ptext16 0344                                        __ptext41 0C75  
                                      __ptext33 0800                                        __ptext25 16C2  
                                      __ptext17 176C                                        __ptext42 08C2  
                                      __ptext34 174C                                        __ptext26 1616  
                                      __ptext18 0570                                        __ptext51 0859  
                                      __ptext43 1569                                        __ptext35 0A06  
                                      __ptext27 1667                                        __ptext19 08F7  
                                      __ptext60 1563                                        __ptext52 088D  
                                      __ptext44 15A9                                        __ptext36 1574  
                                      __ptext28 15F2                                        __ptext61 1692  
                                      __ptext53 0D46                                        __ptext45 167B  
                                      __ptext37 1634                                        __ptext29 0079  
                                      __ptext62 1609                                        __ptext54 16AA  
                                      __ptext46 15A0                                        __ptext38 06EA  
                                      __ptext63 0003                                        __ptext55 1644  
                                      __ptext47 1597                                        __ptext39 09BB  
                                      __ptext64 156C                                        __ptext56 1566  
                                      __ptext48 158E                                        __ptext57 170E  
                                      __ptext49 1585                                        __ptext58 1570  
                                      __ptext59 07FF                                    _SSP1CON1bits 0190  
                                  _SSP1CON2bits 0191                            BUTTONS_isHeld@button 0020  
                         __end_of_BEAT_detected 158E                                        _lastBeat 00AD  
                                      _lastTime 00AF                                _TM1650_isEnabled 1569  
                                 __size_of_main 00BC                                   __size_of_init 0020  
                                  ?_address_dec 0076                                    ?_address_inc 0076  
                          _I2C1_MasterTRBInsert 0A06                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                    __end_of_ADCC_StartConversion 15A9  
                                      int$flags 007E                         __size_of_BUTTONS_isHeld 000F  
            __end_of_INTERRUPT_InterruptManager 003C                      _INTERRUPT_InterruptManager 0004  
                                      main@time 00E4                          __size_of_TM1650_enable 0018  
                   _EUSART1_FramingErrorHandler 0160                             _EUSART1_Receive_ISR 0859  
                         ??_TM1650_fastPrintNum 003D                                _ClockCurrentTime 00B7  
                             TM1650_setDigit@dp 0036                                      _INTCONbits 000B  
                             ??_CONTROLLER_init 0048                               ??_CONTROLLER_task 0048  
                                      init@port 0020            __end_of_ADCC_DefaultInterruptHandler 0004  
         __size_of_ADCC_DefaultInterruptHandler 0001                    _ADCC_DefaultInterruptHandler 0003  
                                      intlevel1 0000                                  _thresholdCount 00A7  
                          ?_EUSART1_Receive_ISR 0076                                   writeData@data 002E  
                              ___lwmod@dividend 0022                         ?_PIN_MANAGER_Initialize 0076  
                      __end_of_I2C1_MasterWrite 082A                  __size_of_I2C1_FunctionComplete 0011  
        __end_of_EUSART1_SetOverrunErrorHandler 15D6         __size_of_EUSART1_SetOverrunErrorHandler 0009  
                _EUSART1_SetOverrunErrorHandler 15CD                   __end_of_I2C1_FunctionComplete 1655  
                         ?_I2C1_MasterTRBInsert 0020                    __end_of_EUSART1_Transmit_ISR 172C  
                         CONTROLLER_task@active 004A                          TM1650_fastPrintNum@num 003B  
EUSART1_SetFramingErrorHandler@interruptHandler 0020                  ?_EUSART1_SetTxInterruptHandler 0020  
                               _TM1650_setDigit 0972                        __size_of_I2C1_Initialize 001C  
                            _eusart1RxLastError 00C7                                   __pstringtext1 1000  
                        __Umul8_16@multiplicand 0020                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                 ___lwmod@divisor 0020  
                                   ?_CLOCK_init 0076                                 ___lwmod@counter 0025  
                      _I2C1_MasterWriteTRBBuild 174C                                     ??_writeData 002F  
                                    _TX1STAbits 011E                  ??_ADCC_SetADTIInterruptHandler 0022  
                         ??_EUSART1_Receive_ISR 0077                  __end_of_PIN_MANAGER_Initialize 0859  
                             ??_ADCC_Initialize 0022                                   _TM1650_enable 16C2  
                            __size_of_I2C1_Stop 0018                   ?_ADCC_DefaultInterruptHandler 0076  
                          __Umul8_16@multiplier 0028                         ??_EUSART1_RxDataHandler 0076  
                             __Umul8_16@product 0024                __end_ofTM1650_setDigit@charTable 1060  
